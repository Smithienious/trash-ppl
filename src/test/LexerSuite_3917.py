import unittest
from TestUtils import TestLexer


class LexerSuite(unittest.TestCase):
    def test_0(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (b_5_,Q,r,g,_8,_,_,_,qP:String ){Return ;}Constructor (_:_6){} }Class _{Constructor (){} }''',
                '''Class,__,{,Constructor,(,b_5_,,,Q,,,r,,,g,,,_8,,,_,,,_,,,_,,,qP,:,String,),{,Return,;,},Constructor,(,_,:,_6,),{,},},Class,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r5_:f{Destructor (){Var Nj6z0,_8j6,_,_,_:Array [String ,0B1010111];}Constructor (){} }Class _u3{Destructor (){} }''',
                '''Class,r5_,:,f,{,Destructor,(,),{,Var,Nj6z0,,,_8j6,,,_,,,_,,,_,:,Array,[,String,,,0B1010111,],;,},Constructor,(,),{,},},Class,_u3,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:_M{}Class _49f{Var $EFX:String ;Destructor (){}__7(__:Array [Array [Float ,9],0x7];i1e:Boolean ;_8O:Array [Array [Boolean ,0225],041];e:String ;_4z:Array [Array [Array [Array [Boolean ,42],0B1],041],42];bW___:Int ;I8:Array [Int ,041]){Break ;} }Class f{}''',
                '''Class,r,:,_M,{,},Class,_49f,{,Var,$EFX,:,String,;,Destructor,(,),{,},__7,(,__,:,Array,[,Array,[,Float,,,9,],,,0x7,],;,i1e,:,Boolean,;,_8O,:,Array,[,Array,[,Boolean,,,0225,],,,041,],;,e,:,String,;,_4z,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,42,],,,0B1,],,,041,],,,42,],;,bW___,:,Int,;,I8,:,Array,[,Int,,,041,],),{,Break,;,},},Class,f,{,},<EOF>''',
                101
            )
        )

    def test_3(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P40{Constructor (___:_91;P,_4,_,_3V,_76,E9,F4ru3:F){}Constructor (_,_,Ck_,L:Array [Array [Boolean ,076],0X6]){}$Eh(_,C,__,gp:__){} }''',
                '''Class,P40,{,Constructor,(,___,:,_91,;,P,,,_4,,,_,,,_3V,,,_76,,,E9,,,F4ru3,:,F,),{,},Constructor,(,_,,,_,,,Ck_,,,L,:,Array,[,Array,[,Boolean,,,076,],,,0X6,],),{,},$Eh,(,_,,,C,,,__,,,gp,:,__,),{,},},<EOF>''',
                101
            )
        )

    def test_4(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$Fn2(e:Int ;Rp,_5:Array [Array [Array [String ,0X20],024_3],077];M:l;_:Array [Int ,0B11101]){} }Class W_:_{}Class _:_B{}''',
                '''Class,_,:,_,{,$Fn2,(,e,:,Int,;,Rp,,,_5,:,Array,[,Array,[,Array,[,String,,,0X20,],,,0243,],,,077,],;,M,:,l,;,_,:,Array,[,Int,,,0B11101,],),{,},},Class,W_,:,_,{,},Class,_,:,_B,{,},<EOF>''',
                101
            )
        )

    def test_5(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:_9_{Val _T_:Boolean ;Val _:_;}Class __:H_{Constructor (){}Val $7xw21vs,$6,_:Array [Array [Float ,0X3F],6];}''',
                '''Class,o,:,_9_,{,Val,_T_,:,Boolean,;,Val,_,:,_,;,},Class,__,:,H_,{,Constructor,(,),{,},Val,$7xw21vs,,,$6,,,_,:,Array,[,Array,[,Float,,,0X3F,],,,6,],;,},<EOF>''',
                101
            )
        )

    def test_6(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _93{Constructor (e_:q;U1,_,d:Array [Array [Float ,76],0B1010110];_1E:Array [Array [Array [String ,76],0xD_A_8],03]){} }Class _O4_{}Class _{Lx(){} }Class __{Val $_:_;Val $__T__,g,_,E__c7:Boolean ;}Class _:kU_{}Class __:_0{Var $6,$p_S,$_C:Float ;}''',
                '''Class,_93,{,Constructor,(,e_,:,q,;,U1,,,_,,,d,:,Array,[,Array,[,Float,,,76,],,,0B1010110,],;,_1E,:,Array,[,Array,[,Array,[,String,,,76,],,,0xDA8,],,,03,],),{,},},Class,_O4_,{,},Class,_,{,Lx,(,),{,},},Class,__,{,Val,$_,:,_,;,Val,$__T__,,,g,,,_,,,E__c7,:,Boolean,;,},Class,_,:,kU_,{,},Class,__,:,_0,{,Var,$6,,,$p_S,,,$_C,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_7(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_:_e_t9{$__O4_(){_Jr_::$3e__();} }Class _:q{Val $3dR,LPp_,$7:Array [Array [Array [Array [Int ,0b111111],0B1000000],0b111111],28];}''',
                '''Class,_1_,:,_e_t9,{,$__O4_,(,),{,_Jr_,::,$3e__,(,),;,},},Class,_,:,q,{,Val,$3dR,,,LPp_,,,$7,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b111111,],,,0B1000000,],,,0b111111,],,,28,],;,},<EOF>''',
                101
            )
        )

    def test_8(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O2__a:_{Constructor (){} }Class Y:_{Constructor (PO,_,Ib,jm,osAIS_y_,__z9:j;_Q,W,__,M8,dO00_,L_4E:Float ){} }''',
                '''Class,O2__a,:,_,{,Constructor,(,),{,},},Class,Y,:,_,{,Constructor,(,PO,,,_,,,Ib,,,jm,,,osAIS_y_,,,__z9,:,j,;,_Q,,,W,,,__,,,M8,,,dO00_,,,L_4E,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_9(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:__{}Class _:_{}Class E:k{Var $__:Array [Float ,0B1];Val _,$Svc,$5,$1_,_:Boolean ;}Class _:G_{}Class _:__{}''',
                '''Class,__,:,__,{,},Class,_,:,_,{,},Class,E,:,k,{,Var,$__,:,Array,[,Float,,,0B1,],;,Val,_,,,$Svc,,,$5,,,$1_,,,_,:,Boolean,;,},Class,_,:,G_,{,},Class,_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_10(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j{Constructor (_2_,W:Array [Int ,0X2_6_D_F];_:Array [Array [Array [Array [Float ,0X1F],077],0B1_1],1_3]){} }Class _:__2_{}''',
                '''Class,j,{,Constructor,(,_2_,,,W,:,Array,[,Int,,,0X26DF,],;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X1F,],,,077,],,,0B11,],,,13,],),{,},},Class,_,:,__2_,{,},<EOF>''',
                101
            )
        )

    def test_11(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S__{}Class _f{Constructor (){}Constructor (_K_,__:Boolean ){Break ;}Var ZsB,$3,_2o_:String ;Val $_h,__D:__;Val _:_Z54;}Class z{}Class J{}''',
                '''Class,S__,{,},Class,_f,{,Constructor,(,),{,},Constructor,(,_K_,,,__,:,Boolean,),{,Break,;,},Var,ZsB,,,$3,,,_2o_,:,String,;,Val,$_h,,,__D,:,__,;,Val,_,:,_Z54,;,},Class,z,{,},Class,J,{,},<EOF>''',
                101
            )
        )

    def test_12(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I43{Var _2,_X__R,J_,$p0q_L_:Array [Int ,4];$3(A7:Array [String ,0X4_9];vT,_Q4l98:Float ){}w0(J:t){}Var $9125,$9,$9,$Xp:_kK;}''',
                '''Class,I43,{,Var,_2,,,_X__R,,,J_,,,$p0q_L_,:,Array,[,Int,,,4,],;,$3,(,A7,:,Array,[,String,,,0X49,],;,vT,,,_Q4l98,:,Float,),{,},w0,(,J,:,t,),{,},Var,$9125,,,$9,,,$9,,,$Xp,:,_kK,;,},<EOF>''',
                101
            )
        )

    def test_13(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $_,$64_5_,_7,D,$87:Array [Array [Boolean ,0142],0b1];Var $4z,$1:Array [Array [Int ,0X5_E_F],0x10_D];}''',
                '''Class,_,:,_,{,Var,$_,,,$64_5_,,,_7,,,D,,,$87,:,Array,[,Array,[,Boolean,,,0142,],,,0b1,],;,Var,$4z,,,$1,:,Array,[,Array,[,Int,,,0X5EF,],,,0x10D,],;,},<EOF>''',
                101
            )
        )

    def test_14(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:k{}Class Q{}Class _{Var l4,$0_,f,_8_,$W,pA,$_,b09,$_W:Array [Array [Array [Boolean ,0X9],0xE],04];}Class O19M:e8{$_H(uXQ_a,tM_:Array [String ,0X7]){} }Class q:_{Var $_:Array [Int ,37];}''',
                '''Class,Y,:,k,{,},Class,Q,{,},Class,_,{,Var,l4,,,$0_,,,f,,,_8_,,,$W,,,pA,,,$_,,,b09,,,$_W,:,Array,[,Array,[,Array,[,Boolean,,,0X9,],,,0xE,],,,04,],;,},Class,O19M,:,e8,{,$_H,(,uXQ_a,,,tM_,:,Array,[,String,,,0X7,],),{,},},Class,q,:,_,{,Var,$_,:,Array,[,Int,,,37,],;,},<EOF>''',
                101
            )
        )

    def test_15(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d5r:_{}Class J{Val $_3kJZ09:String ;Val _:Array [String ,0b1];Var _3H,_,$Y:Array [Array [Array [Array [Int ,1],0B110001],055],0x1_EA];}''',
                '''Class,d5r,:,_,{,},Class,J,{,Val,$_3kJZ09,:,String,;,Val,_,:,Array,[,String,,,0b1,],;,Var,_3H,,,_,,,$Y,:,Array,[,Array,[,Array,[,Array,[,Int,,,1,],,,0B110001,],,,055,],,,0x1EA,],;,},<EOF>''',
                101
            )
        )

    def test_16(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k4:_{Destructor (){}Var g2,w__0:_;}Class _8e3_xG7Ii{Val $W:_;}Class _{Val $1:_7;Var $_8:Array [String ,4];Constructor (g,M,_m6_:Float ){Val l_:Float ;} }''',
                '''Class,_k4,:,_,{,Destructor,(,),{,},Var,g2,,,w__0,:,_,;,},Class,_8e3_xG7Ii,{,Val,$W,:,_,;,},Class,_,{,Val,$1,:,_7,;,Var,$_8,:,Array,[,String,,,4,],;,Constructor,(,g,,,M,,,_m6_,:,Float,),{,Val,l_,:,Float,;,},},<EOF>''',
                101
            )
        )

    def test_17(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{Constructor (_,n:Array [Array [Boolean ,0120],0b1001000];X_,_,P_:__d;_sY,c:Y6;_,_,T:_){}Constructor (_L:String ;_g:_){} }''',
                '''Class,s,{,Constructor,(,_,,,n,:,Array,[,Array,[,Boolean,,,0120,],,,0b1001000,],;,X_,,,_,,,P_,:,__d,;,_sY,,,c,:,Y6,;,_,,,_,,,T,:,_,),{,},Constructor,(,_L,:,String,;,_g,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_18(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:_{Constructor (_0,__,_,BxS:_;V:Array [Array [Boolean ,0X3],0x60];_,l,__A,v,_v_1_:String ;B3:_){} }Class j{}Class __1:_1{}''',
                '''Class,m,:,_,{,Constructor,(,_0,,,__,,,_,,,BxS,:,_,;,V,:,Array,[,Array,[,Boolean,,,0X3,],,,0x60,],;,_,,,l,,,__A,,,v,,,_v_1_,:,String,;,B3,:,_,),{,},},Class,j,{,},Class,__1,:,_1,{,},<EOF>''',
                101
            )
        )

    def test_19(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{Val $0:Float ;Constructor (k,d:_;__7:P;m:Float ;V:String ;_:Float ){}Val $5:Float ;}Class _s:wlz{}Class bE3_{}''',
                '''Class,m,{,Val,$0,:,Float,;,Constructor,(,k,,,d,:,_,;,__7,:,P,;,m,:,Float,;,V,:,String,;,_,:,Float,),{,},Val,$5,:,Float,;,},Class,_s,:,wlz,{,},Class,bE3_,{,},<EOF>''',
                101
            )
        )

    def test_20(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P:A{Val _T:QM;Constructor (_l:Boolean ;HD46,__8:Array [Boolean ,0140];_l,vv:v;E:Float ){Break ;}Destructor (){} }''',
                '''Class,_P,:,A,{,Val,_T,:,QM,;,Constructor,(,_l,:,Boolean,;,HD46,,,__8,:,Array,[,Boolean,,,0140,],;,_l,,,vv,:,v,;,E,:,Float,),{,Break,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_21(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_33{Var $76H2_,$_TA,_M_58:Array [String ,0B1];Constructor (__:Array [Boolean ,2_158_2_9]){}Destructor (){}Val $05:Array [Boolean ,0xB2];}Class w{}''',
                '''Class,_,:,_33,{,Var,$76H2_,,,$_TA,,,_M_58,:,Array,[,String,,,0B1,],;,Constructor,(,__,:,Array,[,Boolean,,,215829,],),{,},Destructor,(,),{,},Val,$05,:,Array,[,Boolean,,,0xB2,],;,},Class,w,{,},<EOF>''',
                101
            )
        )

    def test_22(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _0_8c:__{}Class S{}Class A{}Class _9:_{}Class _g:_{}Class _O{}Class _:r{Val $r2__6f_p8,$a:String ;}''',
                '''Class,_,{,},Class,_0_8c,:,__,{,},Class,S,{,},Class,A,{,},Class,_9,:,_,{,},Class,_g,:,_,{,},Class,_O,{,},Class,_,:,r,{,Val,$r2__6f_p8,,,$a,:,String,;,},<EOF>''',
                101
            )
        )

    def test_23(self):
        self.assertTrue(
            TestLexer.test(
                '''Class UVM:__{}Class _:_R{}Class _{Destructor (){ {{} }}Destructor (){} }Class P{}Class _9:I_1_{}Class __:_{$_(_:String ){}Destructor (){} }''',
                '''Class,UVM,:,__,{,},Class,_,:,_R,{,},Class,_,{,Destructor,(,),{,{,{,},},},Destructor,(,),{,},},Class,P,{,},Class,_9,:,I_1_,{,},Class,__,:,_,{,$_,(,_,:,String,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_24(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var __:_8;Val _,U_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,020],020],6_4],3],1],066],62],0xA];}Class s_{}''',
                '''Class,_,:,_,{,Var,__,:,_8,;,Val,_,,,U_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,020,],,,020,],,,64,],,,3,],,,1,],,,066,],,,62,],,,0xA,],;,},Class,s_,{,},<EOF>''',
                101
            )
        )

    def test_25(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:F{Var $__,p:Array [Int ,9_5];Destructor (){}Val G:Float ;$m7(){}Val $__,$0_:_1;Val $__a:Float ;}Class _3dc{}Class _{Constructor (_,Zj,ph:_K){} }''',
                '''Class,_,:,F,{,Var,$__,,,p,:,Array,[,Int,,,95,],;,Destructor,(,),{,},Val,G,:,Float,;,$m7,(,),{,},Val,$__,,,$0_,:,_1,;,Val,$__a,:,Float,;,},Class,_3dc,{,},Class,_,{,Constructor,(,_,,,Zj,,,ph,:,_K,),{,},},<EOF>''',
                101
            )
        )

    def test_26(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{Constructor (_:Array [Array [Array [Array [Array [Array [Boolean ,0x3],06],02_5],0b111],80],0X5]){Break ;} }''',
                '''Class,m,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3,],,,06,],,,025,],,,0b111,],,,80,],,,0X5,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_27(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__i{Constructor (){}_(_,_:Array [Array [Array [Int ,0420_54],0X2],03];C_,EG6j,_27,_9__:Array [Array [Array [Float ,03_7],0B10_0],96];N:_88_){} }Class _:__{}''',
                '''Class,_,:,__i,{,Constructor,(,),{,},_,(,_,,,_,:,Array,[,Array,[,Array,[,Int,,,042054,],,,0X2,],,,03,],;,C_,,,EG6j,,,_27,,,_9__,:,Array,[,Array,[,Array,[,Float,,,037,],,,0B100,],,,96,],;,N,:,_88_,),{,},},Class,_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_28(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9:_5{Val $_6,$I,w:Array [Array [Array [Array [Array [Array [Array [String ,031],0x2_18],9_4],0b11111],031],62],0xD_7C];}''',
                '''Class,_9,:,_5,{,Val,$_6,,,$I,,,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,031,],,,0x218,],,,94,],,,0b11111,],,,031,],,,62,],,,0xD7C,],;,},<EOF>''',
                101
            )
        )

    def test_29(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class b{Var $5:Array [Array [Boolean ,0b1010001],010];$_tu_(dD48,_gJ:G){} }Class _{}Class _b_{}Class _a9:b6_{}''',
                '''Class,__,{,},Class,b,{,Var,$5,:,Array,[,Array,[,Boolean,,,0b1010001,],,,010,],;,$_tu_,(,dD48,,,_gJ,:,G,),{,},},Class,_,{,},Class,_b_,{,},Class,_a9,:,b6_,{,},<EOF>''',
                101
            )
        )

    def test_30(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A____{}Class p{}Class _4{}Class l:N_{}Class _:_{Constructor (){}Constructor (){}Val $_,_:Array [Float ,0X9];}''',
                '''Class,A____,{,},Class,p,{,},Class,_4,{,},Class,l,:,N_,{,},Class,_,:,_,{,Constructor,(,),{,},Constructor,(,),{,},Val,$_,,,_,:,Array,[,Float,,,0X9,],;,},<EOF>''',
                101
            )
        )

    def test_31(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m9:_C1_E{}Class J_:_L1d{C98(_72,xN2RBgG:Int ;_t,_,_J:Array [Array [Boolean ,0x1A],87];_lzO,_87:Int ){Return ;} }Class _:_{Val $i:_;Destructor (){} }''',
                '''Class,m9,:,_C1_E,{,},Class,J_,:,_L1d,{,C98,(,_72,,,xN2RBgG,:,Int,;,_t,,,_,,,_J,:,Array,[,Array,[,Boolean,,,0x1A,],,,87,],;,_lzO,,,_87,:,Int,),{,Return,;,},},Class,_,:,_,{,Val,$i,:,_,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_32(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:P{$s(n7dy1:Int ;_8,_f__,_,_:_){Continue ;If (_t_1_::$_()._()._.O()){} }}Class _O{Val r7,A:_;}Class _:_{}Class Z:_{}''',
                '''Class,_,:,P,{,$s,(,n7dy1,:,Int,;,_8,,,_f__,,,_,,,_,:,_,),{,Continue,;,If,(,_t_1_,::,$_,(,),.,_,(,),.,_,.,O,(,),),{,},},},Class,_O,{,Val,r7,,,A,:,_,;,},Class,_,:,_,{,},Class,Z,:,_,{,},<EOF>''',
                101
            )
        )

    def test_33(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __o:_n{}Class y:H_S9W6{Constructor (a5:Int ;w1,P,v___,_:Boolean ;S29E,_,e,J,_w:Array [Array [Array [Float ,0xD_E],0X6],0107]){Var z,___:F;} }Class os8{_(YA__t,_0:k;_W:Array [String ,0107];__,_,_B,_3,u:Array [Int ,03_5_2]){Continue ;}Destructor (){} }''',
                '''Class,__o,:,_n,{,},Class,y,:,H_S9W6,{,Constructor,(,a5,:,Int,;,w1,,,P,,,v___,,,_,:,Boolean,;,S29E,,,_,,,e,,,J,,,_w,:,Array,[,Array,[,Array,[,Float,,,0xDE,],,,0X6,],,,0107,],),{,Var,z,,,___,:,F,;,},},Class,os8,{,_,(,YA__t,,,_0,:,k,;,_W,:,Array,[,String,,,0107,],;,__,,,_,,,_B,,,_3,,,u,:,Array,[,Int,,,0352,],),{,Continue,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_34(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w{$_(__:Array [Array [Array [Array [Int ,0b11_11],0b1011101],0x5],98];Xe:String ){} }Class c8:n{w6D(){Break ;}Destructor (){} }Class t{}''',
                '''Class,w,{,$_,(,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1111,],,,0b1011101,],,,0x5,],,,98,],;,Xe,:,String,),{,},},Class,c8,:,n,{,w6D,(,),{,Break,;,},Destructor,(,),{,},},Class,t,{,},<EOF>''',
                101
            )
        )

    def test_35(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4klWwE:_{Destructor (){}Constructor (){Return ;}Constructor (W:String ;_,_,X_5_:Array [Array [Array [Array [Boolean ,05],0XC],022],022];_:String ;_FN,_a_s,__:Float ;_2,Nu:__z;_,R__,_7:W){} }''',
                '''Class,_4klWwE,:,_,{,Destructor,(,),{,},Constructor,(,),{,Return,;,},Constructor,(,W,:,String,;,_,,,_,,,X_5_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,05,],,,0XC,],,,022,],,,022,],;,_,:,String,;,_FN,,,_a_s,,,__,:,Float,;,_2,,,Nu,:,__z,;,_,,,R__,,,_7,:,W,),{,},},<EOF>''',
                101
            )
        )

    def test_36(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_{Constructor (L_1,_5:Array [Array [Array [Array [Array [Float ,0b1],28],28],28],0B1];k:Array [Boolean ,1];xI_FBB5:Boolean ){Break ;}Val _,$97,$68_3,f2_,$_,$_,$R5:_;Var tWt,$4_:Boolean ;}Class _{_8t(Y,_:_ao){}_(){} }Class _:_8q{}''',
                '''Class,z,:,_,{,Constructor,(,L_1,,,_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,28,],,,28,],,,28,],,,0B1,],;,k,:,Array,[,Boolean,,,1,],;,xI_FBB5,:,Boolean,),{,Break,;,},Val,_,,,$97,,,$68_3,,,f2_,,,$_,,,$_,,,$R5,:,_,;,Var,tWt,,,$4_,:,Boolean,;,},Class,_,{,_8t,(,Y,,,_,:,_ao,),{,},_,(,),{,},},Class,_,:,_8q,{,},<EOF>''',
                101
            )
        )

    def test_37(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3{}Class _{Var $2:Array [Array [Array [Int ,73],021],04];Destructor (){} }Class _:_{Var dk,$__,_556g:Float ;Constructor (_:String ;D__,J2,_:_5k){} }''',
                '''Class,_3,{,},Class,_,{,Var,$2,:,Array,[,Array,[,Array,[,Int,,,73,],,,021,],,,04,],;,Destructor,(,),{,},},Class,_,:,_,{,Var,dk,,,$__,,,_556g,:,Float,;,Constructor,(,_,:,String,;,D__,,,J2,,,_,:,_5k,),{,},},<EOF>''',
                101
            )
        )

    def test_38(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:_{}Class _:W_{Var __:Array [Array [Array [Array [Boolean ,0B1000],0xC],013],0X28];}Class _{Constructor (){} }''',
                '''Class,w,:,_,{,},Class,_,:,W_,{,Var,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1000,],,,0xC,],,,013,],,,0X28,],;,},Class,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_39(self):
        self.assertTrue(
            TestLexer.test(
                '''Class os{}Class _:__75__{Destructor (){} }Class gJ:f__{Val $88_,o34R_:_0p;Destructor (){}Destructor (){} }Class ___D_{Val $t_,$_2,$_,$65,$4,$2:V_;_(){ {} }}''',
                '''Class,os,{,},Class,_,:,__75__,{,Destructor,(,),{,},},Class,gJ,:,f__,{,Val,$88_,,,o34R_,:,_0p,;,Destructor,(,),{,},Destructor,(,),{,},},Class,___D_,{,Val,$t_,,,$_2,,,$_,,,$65,,,$4,,,$2,:,V_,;,_,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_40(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X8{Gu0(___:Array [Array [Array [Array [Array [Array [Int ,027],1],2_557_4],0B100101],027],73];_,_438:Array [String ,2];_:Float ){} }''',
                '''Class,X8,{,Gu0,(,___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,027,],,,1,],,,25574,],,,0B100101,],,,027,],,,73,],;,_,,,_438,:,Array,[,String,,,2,],;,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_41(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Y{Constructor (_:Array [Array [Boolean ,6],0b100110]){ {} }pC(x:_5;_a,s_1,_:Boolean ){Continue ;Return ;}Constructor (){} }''',
                '''Class,_Y,{,Constructor,(,_,:,Array,[,Array,[,Boolean,,,6,],,,0b100110,],),{,{,},},pC,(,x,:,_5,;,_a,,,s_1,,,_,:,Boolean,),{,Continue,;,Return,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_42(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y__:oA{}Class q{Destructor (){} }Class U{}Class _6:B{Constructor (_:_Kzpp__9;a:Array [Int ,0b1011111];q:String ;_,F:Int ;qo,H_,G:Array [Array [Boolean ,07],0B1_110];_,i_W:String ;J_a,tB,_0,y_,_,_L9,_:String ;_:String ;R:Float ){} }''',
                '''Class,Y__,:,oA,{,},Class,q,{,Destructor,(,),{,},},Class,U,{,},Class,_6,:,B,{,Constructor,(,_,:,_Kzpp__9,;,a,:,Array,[,Int,,,0b1011111,],;,q,:,String,;,_,,,F,:,Int,;,qo,,,H_,,,G,:,Array,[,Array,[,Boolean,,,07,],,,0B1110,],;,_,,,i_W,:,String,;,J_a,,,tB,,,_0,,,y_,,,_,,,_L9,,,_,:,String,;,_,:,String,;,R,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_43(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _7:W{Val _9,e,$5,T,T,$W,$h:Array [Array [Array [Float ,01],97],0B1000101];Val O3__773,$a8Z:N_;Destructor (){}Destructor (){}Constructor (){} }''',
                '''Class,_,{,},Class,_7,:,W,{,Val,_9,,,e,,,$5,,,T,,,T,,,$W,,,$h,:,Array,[,Array,[,Array,[,Float,,,01,],,,97,],,,0B1000101,],;,Val,O3__773,,,$a8Z,:,N_,;,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_44(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:E{Val __1,x:Array [Float ,0x21];Val $_u:k;}Class _a:i_{$I(_:Array [Boolean ,0B1];_:Boolean ;V:Array [Array [Float ,02],0B1_1];r:r){} }''',
                '''Class,_,:,E,{,Val,__1,,,x,:,Array,[,Float,,,0x21,],;,Val,$_u,:,k,;,},Class,_a,:,i_,{,$I,(,_,:,Array,[,Boolean,,,0B1,],;,_,:,Boolean,;,V,:,Array,[,Array,[,Float,,,02,],,,0B11,],;,r,:,r,),{,},},<EOF>''',
                101
            )
        )

    def test_45(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C_{Val $U_:Array [Array [Float ,67],0B1001000];}Class V{}Class S{Val y__,_,$W0:Array [Array [Array [Int ,0x7D],0X44D],0xB_D5B];}''',
                '''Class,C_,{,Val,$U_,:,Array,[,Array,[,Float,,,67,],,,0B1001000,],;,},Class,V,{,},Class,S,{,Val,y__,,,_,,,$W0,:,Array,[,Array,[,Array,[,Int,,,0x7D,],,,0X44D,],,,0xBD5B,],;,},<EOF>''',
                101
            )
        )

    def test_46(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:_{}Class r{Destructor (){}Constructor (__x,n_:_k;c__05,_n2:Float ;_,I,t_:__;_6,_,j:____){} }Class _J:J{Constructor (){} }''',
                '''Class,Q,:,_,{,},Class,r,{,Destructor,(,),{,},Constructor,(,__x,,,n_,:,_k,;,c__05,,,_n2,:,Float,;,_,,,I,,,t_,:,__,;,_6,,,_,,,j,:,____,),{,},},Class,_J,:,J,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_47(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val U:String ;i(_:Array [Int ,064_61507450_4];__Y_95_lc_Z4,_:String ;A_:Boolean ;K,SnX:_7){} }Class __:_{}''',
                '''Class,_,{,Val,U,:,String,;,i,(,_,:,Array,[,Int,,,064615074504,],;,__Y_95_lc_Z4,,,_,:,String,;,A_,:,Boolean,;,K,,,SnX,:,_7,),{,},},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_48(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__:Int ){}Constructor (){}$z0(_J:Array [Int ,43];_M:Boolean ;_,L7kG3K:Array [Array [Array [Boolean ,0x2],9],0x8];bc:e_3_;_,P3,_,_9,p,_1,a:String ;_:Array [Boolean ,0x8];_,_:_){Break ;} }Class _n{Val _4_,$_5,$c,C_:R;}Class _:t6{_(){} }Class L{Constructor (_9_:Int ;_H_,_:_6;_:J){}z(){} }''',
                '''Class,_,{,Constructor,(,__,:,Int,),{,},Constructor,(,),{,},$z0,(,_J,:,Array,[,Int,,,43,],;,_M,:,Boolean,;,_,,,L7kG3K,:,Array,[,Array,[,Array,[,Boolean,,,0x2,],,,9,],,,0x8,],;,bc,:,e_3_,;,_,,,P3,,,_,,,_9,,,p,,,_1,,,a,:,String,;,_,:,Array,[,Boolean,,,0x8,],;,_,,,_,:,_,),{,Break,;,},},Class,_n,{,Val,_4_,,,$_5,,,$c,,,C_,:,R,;,},Class,_,:,t6,{,_,(,),{,},},Class,L,{,Constructor,(,_9_,:,Int,;,_H_,,,_,:,_6,;,_,:,J,),{,},z,(,),{,},},<EOF>''',
                101
            )
        )

    def test_49(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$_(){}Destructor (){}Wq_(_u2N:_;p4,w_:Float ;d,_7,xK,_h:Array [Boolean ,02];__9,K,x_:Float ;O5x:U){} }Class C:G{}''',
                '''Class,_,{,$_,(,),{,},Destructor,(,),{,},Wq_,(,_u2N,:,_,;,p4,,,w_,:,Float,;,d,,,_7,,,xK,,,_h,:,Array,[,Boolean,,,02,],;,__9,,,K,,,x_,:,Float,;,O5x,:,U,),{,},},Class,C,:,G,{,},<EOF>''',
                101
            )
        )

    def test_50(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q6:fO{Val Rc_,$____3,g,_36:Array [Array [Array [Boolean ,0x2E],0X4_5],06_7];$w_L2(__h:Array [Float ,0X3];_:Array [Array [String ,8_4],52];x2,a,oV,__:Float ){}Var $__7_,w,$N,r,H:X0;}''',
                '''Class,Q6,:,fO,{,Val,Rc_,,,$____3,,,g,,,_36,:,Array,[,Array,[,Array,[,Boolean,,,0x2E,],,,0X45,],,,067,],;,$w_L2,(,__h,:,Array,[,Float,,,0X3,],;,_,:,Array,[,Array,[,String,,,84,],,,52,],;,x2,,,a,,,oV,,,__,:,Float,),{,},Var,$__7_,,,w,,,$N,,,r,,,H,:,X0,;,},<EOF>''',
                101
            )
        )

    def test_51(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j7{_5(_y,V,_1,K9:E_){}Constructor (){}Constructor (_,e7_g:Boolean ){Return R::$_();}Constructor (){Continue ;} }''',
                '''Class,j7,{,_5,(,_y,,,V,,,_1,,,K9,:,E_,),{,},Constructor,(,),{,},Constructor,(,_,,,e7_g,:,Boolean,),{,Return,R,::,$_,(,),;,},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_52(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (E_J7:Array [Array [Boolean ,0XA],3_30];_,_,_o:Array [Array [Float ,0x26],052_6]){Var _,r__:Y7;}Constructor (){} }Class _{}''',
                '''Class,_,{,Constructor,(,E_J7,:,Array,[,Array,[,Boolean,,,0XA,],,,330,],;,_,,,_,,,_o,:,Array,[,Array,[,Float,,,0x26,],,,0526,],),{,Var,_,,,r__,:,Y7,;,},Constructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_53(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class f:_{$2_(i:Float ;_,C:Fk;__,_:_7_T;_:v4;_B:f___;r:Boolean ;b_,u:_U;_,l:Int ;oZs_:Zy){}Destructor (){f::$_();} }''',
                '''Class,_,{,},Class,f,:,_,{,$2_,(,i,:,Float,;,_,,,C,:,Fk,;,__,,,_,:,_7_T,;,_,:,v4,;,_B,:,f___,;,r,:,Boolean,;,b_,,,u,:,_U,;,_,,,l,:,Int,;,oZs_,:,Zy,),{,},Destructor,(,),{,f,::,$_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_54(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,m,n,_G,_:Float ){} }Class _:d{Constructor (_,E,_,_,AUZ:_W5m){} }Class __:_C{Constructor (){}Constructor (_,_2z__63,_0,__,_8:Boolean ){}Val _,$1_7d5A:Array [Array [Array [Array [String ,44],0X96],07_3],071];Constructor (){}Constructor (){Break ;_::$C();} }''',
                '''Class,_,{,Constructor,(,_,,,m,,,n,,,_G,,,_,:,Float,),{,},},Class,_,:,d,{,Constructor,(,_,,,E,,,_,,,_,,,AUZ,:,_W5m,),{,},},Class,__,:,_C,{,Constructor,(,),{,},Constructor,(,_,,,_2z__63,,,_0,,,__,,,_8,:,Boolean,),{,},Val,_,,,$1_7d5A,:,Array,[,Array,[,Array,[,Array,[,String,,,44,],,,0X96,],,,073,],,,071,],;,Constructor,(,),{,},Constructor,(,),{,Break,;,_,::,$C,(,),;,},},<EOF>''',
                101
            )
        )

    def test_55(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:i_62{$7_ae(fe:Array [Array [Array [Array [Array [Array [Array [String ,0XF],05],0B1_0_0],0X4],0B111110],0X1],0x1E];J_:Array [Array [Array [Boolean ,02],0b10],040];_:Array [Int ,0b111];_,_:W_){} }''',
                '''Class,A,:,i_62,{,$7_ae,(,fe,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XF,],,,05,],,,0B100,],,,0X4,],,,0B111110,],,,0X1,],,,0x1E,],;,J_,:,Array,[,Array,[,Array,[,Boolean,,,02,],,,0b10,],,,040,],;,_,:,Array,[,Int,,,0b111,],;,_,,,_,:,W_,),{,},},<EOF>''',
                101
            )
        )

    def test_56(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W_7NJG5:_{Destructor (){}Destructor (){}Constructor (n,__65:Array [Array [Int ,0b10010],0B10];_:Float ){Break ;} }Class B_:z{}''',
                '''Class,W_7NJG5,:,_,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,n,,,__65,:,Array,[,Array,[,Int,,,0b10010,],,,0B10,],;,_,:,Float,),{,Break,;,},},Class,B_,:,z,{,},<EOF>''',
                101
            )
        )

    def test_57(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:_9{Constructor (_1_o,_1W:_l;Fb,e,_:Array [Array [Array [Array [Array [Float ,23],0x13],7],23],0xB5]){Var _,W_,__:Float ;} }''',
                '''Class,b,:,_9,{,Constructor,(,_1_o,,,_1W,:,_l,;,Fb,,,e,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,23,],,,0x13,],,,7,],,,23,],,,0xB5,],),{,Var,_,,,W_,,,__,:,Float,;,},},<EOF>''',
                101
            )
        )

    def test_58(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:F{}Class _:l{Var r:Array [Array [Array [Boolean ,0xE],62],62];}Class _9:U{Val n:Boolean ;Constructor (){Break ;}Constructor (){} }''',
                '''Class,d,:,F,{,},Class,_,:,l,{,Var,r,:,Array,[,Array,[,Array,[,Boolean,,,0xE,],,,62,],,,62,],;,},Class,_9,:,U,{,Val,n,:,Boolean,;,Constructor,(,),{,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_59(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:iV{Var _,$kGA__:Array [Boolean ,0x43];}Class _ac_:_{Val _nY,_:_V;Var $G,$_:Array [Array [Array [Array [Array [String ,0X54],86_9_9],15],0x6_9_5],6_0_15_5];}''',
                '''Class,__,:,iV,{,Var,_,,,$kGA__,:,Array,[,Boolean,,,0x43,],;,},Class,_ac_,:,_,{,Val,_nY,,,_,:,_V,;,Var,$G,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X54,],,,8699,],,,15,],,,0x695,],,,60155,],;,},<EOF>''',
                101
            )
        )

    def test_60(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Array [Int ,0B100000];_5,a,CdOi:Array [Array [Array [Float ,0446],0b111010],0B1_1]){}Destructor (){}Val $_:Array [Boolean ,0XD1];}''',
                '''Class,_,{,Constructor,(,_,:,Array,[,Int,,,0B100000,],;,_5,,,a,,,CdOi,:,Array,[,Array,[,Array,[,Float,,,0446,],,,0b111010,],,,0B11,],),{,},Destructor,(,),{,},Val,$_,:,Array,[,Boolean,,,0XD1,],;,},<EOF>''',
                101
            )
        )

    def test_61(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _:Array [Int ,0b101001];Var $5,$_:Array [Array [Array [Array [Array [Array [String ,0X50],8],0B1_0],070],01],0X87_2];$6D(Lu,eD__:Array [Float ,68]){} }''',
                '''Class,_,{,Var,_,:,Array,[,Int,,,0b101001,],;,Var,$5,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X50,],,,8,],,,0B10,],,,070,],,,01,],,,0X872,],;,$6D,(,Lu,,,eD__,:,Array,[,Float,,,68,],),{,},},<EOF>''',
                101
            )
        )

    def test_62(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _252{Constructor (){}Val $4,_,_:String ;$U(_8_,Y,m6Q1,_,_5,_n,_,W:Float ;_,_:_8){}Destructor (){}_9n_07_a(){Continue ;} }''',
                '''Class,_252,{,Constructor,(,),{,},Val,$4,,,_,,,_,:,String,;,$U,(,_8_,,,Y,,,m6Q1,,,_,,,_5,,,_n,,,_,,,W,:,Float,;,_,,,_,:,_8,),{,},Destructor,(,),{,},_9n_07_a,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_63(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class G_0:s{Val $____,_:Array [Array [Boolean ,0b10],0B1];}Class _d2__Yo_F{}Class i_{}Class D{Var $h,$_f:Int ;}''',
                '''Class,_,:,_,{,},Class,G_0,:,s,{,Val,$____,,,_,:,Array,[,Array,[,Boolean,,,0b10,],,,0B1,],;,},Class,_d2__Yo_F,{,},Class,i_,{,},Class,D,{,Var,$h,,,$_f,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_64(self):
        self.assertTrue(
            TestLexer.test(
                '''Class He_:_{}Class Rq_:S{}Class _61o:_UJ{}Class c{Constructor (yc:Boolean ){Return ;}Destructor (){} }Class __d73:_{}Class _:d__{}''',
                '''Class,He_,:,_,{,},Class,Rq_,:,S,{,},Class,_61o,:,_UJ,{,},Class,c,{,Constructor,(,yc,:,Boolean,),{,Return,;,},Destructor,(,),{,},},Class,__d73,:,_,{,},Class,_,:,d__,{,},<EOF>''',
                101
            )
        )

    def test_65(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_8{}Class O_{Val _,$j,$8w,$8,$_:String ;d(){}Var __:x_;Constructor (_,_:Array [Int ,2_7]){} }Class _G:l{}Class jMU:_{}''',
                '''Class,M_8,{,},Class,O_,{,Val,_,,,$j,,,$8w,,,$8,,,$_,:,String,;,d,(,),{,},Var,__,:,x_,;,Constructor,(,_,,,_,:,Array,[,Int,,,27,],),{,},},Class,_G,:,l,{,},Class,jMU,:,_,{,},<EOF>''',
                101
            )
        )

    def test_66(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{n_(__,g,_:Array [Int ,0b1010101];zp,E:Int ;C:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0107],0b1010101],0X3E],0X6],2],03_4],0x3B],96]){}Var $_,_,_2:Array [Array [String ,0x3B],0X9E];}''',
                '''Class,J,{,n_,(,__,,,g,,,_,:,Array,[,Int,,,0b1010101,],;,zp,,,E,:,Int,;,C,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0107,],,,0b1010101,],,,0X3E,],,,0X6,],,,2,],,,034,],,,0x3B,],,,96,],),{,},Var,$_,,,_,,,_2,:,Array,[,Array,[,String,,,0x3B,],,,0X9E,],;,},<EOF>''',
                101
            )
        )

    def test_67(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class x:oS{Val R__3XN,$29,_5UtbR_:Array [Array [Array [Array [Array [Boolean ,064],0B1010111],03_0_6_5],13],13];}''',
                '''Class,_,{,},Class,x,:,oS,{,Val,R__3XN,,,$29,,,_5UtbR_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,064,],,,0B1010111,],,,03065,],,,13,],,,13,],;,},<EOF>''',
                101
            )
        )

    def test_68(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:K{Var f:Boolean ;}Class _6{$Z_(__5:Boolean ){}Var $_:Array [Array [Int ,0b1000],52];}Class yK1:_6{}Class X{Constructor (){}$00(){} }''',
                '''Class,c,:,K,{,Var,f,:,Boolean,;,},Class,_6,{,$Z_,(,__5,:,Boolean,),{,},Var,$_,:,Array,[,Array,[,Int,,,0b1000,],,,52,],;,},Class,yK1,:,_6,{,},Class,X,{,Constructor,(,),{,},$00,(,),{,},},<EOF>''',
                101
            )
        )

    def test_69(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class R{Var kOx_2,_7:Array [Array [Float ,2_2],0B1001011];Constructor (){} }Class L3:_{}Class E:_{Val $R:String ;}''',
                '''Class,_,{,Constructor,(,),{,},},Class,R,{,Var,kOx_2,,,_7,:,Array,[,Array,[,Float,,,22,],,,0B1001011,],;,Constructor,(,),{,},},Class,L3,:,_,{,},Class,E,:,_,{,Val,$R,:,String,;,},<EOF>''',
                101
            )
        )

    def test_70(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (p,k:Array [Int ,86]){}oP6(_:Float ;_3:Array [Int ,86];_d4:Boolean ;k_,h2:Array [Array [Array [Array [Array [Int ,26_5],07],0B10],0105],0105]){} }''',
                '''Class,__,{,Constructor,(,p,,,k,:,Array,[,Int,,,86,],),{,},oP6,(,_,:,Float,;,_3,:,Array,[,Int,,,86,],;,_d4,:,Boolean,;,k_,,,h2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,265,],,,07,],,,0B10,],,,0105,],,,0105,],),{,},},<EOF>''',
                101
            )
        )

    def test_71(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{}Class P{}Class _14v{Var a4,_:Float ;}Class a:q61V6{Var _6:Array [String ,0b11010];Constructor (){} }''',
                '''Class,_,{,},Class,_,{,},Class,P,{,},Class,_14v,{,Var,a4,,,_,:,Float,;,},Class,a,:,q61V6,{,Var,_6,:,Array,[,String,,,0b11010,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_72(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:n_{}Class _:z{Val $_,$_:__;Constructor (){} }Class _{Destructor (){Z_::$coy__().L();Continue ;Continue ;} }''',
                '''Class,v,:,n_,{,},Class,_,:,z,{,Val,$_,,,$_,:,__,;,Constructor,(,),{,},},Class,_,{,Destructor,(,),{,Z_,::,$coy__,(,),.,L,(,),;,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_73(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{Rw(){} }Class _{}Class Ox:_0{Destructor (){}l(L,_:Array [Array [Float ,0x64],0B1010111];x:Array [String ,056]){} }''',
                '''Class,_8,{,Rw,(,),{,},},Class,_,{,},Class,Ox,:,_0,{,Destructor,(,),{,},l,(,L,,,_,:,Array,[,Array,[,Float,,,0x64,],,,0B1010111,],;,x,:,Array,[,String,,,056,],),{,},},<EOF>''',
                101
            )
        )

    def test_74(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _70{Destructor (){}Destructor (){} }Class B{Val $h,$_,$KY:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1001000],77_0],0B1001000],17],022],17],0B1],01_2],03_4];}Class _{}''',
                '''Class,_70,{,Destructor,(,),{,},Destructor,(,),{,},},Class,B,{,Val,$h,,,$_,,,$KY,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1001000,],,,770,],,,0B1001000,],,,17,],,,022,],,,17,],,,0B1,],,,012,],,,034,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_75(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g_{}Class E_L{Var $9,_,$96:Int ;Constructor (){Val v,_,rpy__a_46:Int ;} }Class T__8{}Class b{}Class __0E29:a1{}''',
                '''Class,g_,{,},Class,E_L,{,Var,$9,,,_,,,$96,:,Int,;,Constructor,(,),{,Val,v,,,_,,,rpy__a_46,:,Int,;,},},Class,T__8,{,},Class,b,{,},Class,__0E29,:,a1,{,},<EOF>''',
                101
            )
        )

    def test_76(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Constructor (){}__gw(c_:Int ){Continue ;}Val $K,$5:Array [Array [Array [Array [Array [Array [Array [Int ,46],0110],052],07],0110],0b100000],46];}''',
                '''Class,d,{,Constructor,(,),{,},__gw,(,c_,:,Int,),{,Continue,;,},Val,$K,,,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,46,],,,0110,],,,052,],,,07,],,,0110,],,,0b100000,],,,46,],;,},<EOF>''',
                101
            )
        )

    def test_77(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P{Var $F,_:Array [Array [Array [Array [Array [Array [String ,0B11101],1],0100],03_7_1_2_5],77],0B11101];Destructor (){} }''',
                '''Class,P,{,Var,$F,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B11101,],,,1,],,,0100,],,,037125,],,,77,],,,0B11101,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_78(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:F5_0{Destructor (){}Var y0x:Array [Array [Array [Array [Array [Array [Array [Boolean ,05],0x9],0116],0B110111],06],62],0b1];}Class Zv_{}''',
                '''Class,_,:,F5_0,{,Destructor,(,),{,},Var,y0x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,05,],,,0x9,],,,0116,],,,0B110111,],,,06,],,,62,],,,0b1,],;,},Class,Zv_,{,},<EOF>''',
                101
            )
        )

    def test_79(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:_6{Destructor (){} }Class _2{}Class J_:_c{Val _F,$m_X0,A_:Int ;}Class fp:_67R{}Class Z:m__{$P(fC__,_:Array [Boolean ,0x5D];_75:Boolean ){}Var l,M,b2,$_:Boolean ;}''',
                '''Class,w,:,_6,{,Destructor,(,),{,},},Class,_2,{,},Class,J_,:,_c,{,Val,_F,,,$m_X0,,,A_,:,Int,;,},Class,fp,:,_67R,{,},Class,Z,:,m__,{,$P,(,fC__,,,_,:,Array,[,Boolean,,,0x5D,],;,_75,:,Boolean,),{,},Var,l,,,M,,,b2,,,$_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_80(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6_7{}Class __U:_36{Constructor (_8_:_;_u:W4;_8_:Boolean ){}Var $_P_,G8:Array [Array [Array [Float ,0x38],58],0XB];}''',
                '''Class,_6_7,{,},Class,__U,:,_36,{,Constructor,(,_8_,:,_,;,_u,:,W4,;,_8_,:,Boolean,),{,},Var,$_P_,,,G8,:,Array,[,Array,[,Array,[,Float,,,0x38,],,,58,],,,0XB,],;,},<EOF>''',
                101
            )
        )

    def test_81(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__1XKY_{Val $r__2,X:Array [Boolean ,0B1];}Class _{$U(_:Array [Array [Array [Array [Float ,05_70_0],0x7],0XCE_1_7_8],0b1000101];G:Boolean ;_8:sJ;_x,FE,_:Array [Array [Array [Array [Int ,0B101001],0b11_0],05711_6],07_7_7_5_4];_2_,P:_;_H:Array [Array [Int ,8],054]){} }''',
                '''Class,_,:,__1XKY_,{,Val,$r__2,,,X,:,Array,[,Boolean,,,0B1,],;,},Class,_,{,$U,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,05700,],,,0x7,],,,0XCE178,],,,0b1000101,],;,G,:,Boolean,;,_8,:,sJ,;,_x,,,FE,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B101001,],,,0b110,],,,057116,],,,077754,],;,_2_,,,P,:,_,;,_H,:,Array,[,Array,[,Int,,,8,],,,054,],),{,},},<EOF>''',
                101
            )
        )

    def test_82(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V:i_{Destructor (){Continue ;Break ;Var _:P_1_;} }Class _{Constructor (Gi2,PLq:Array [Int ,03];w,M_:Array [Array [Array [Array [Int ,0x44],056],0B11000],6]){} }Class _{_(____:v_){} }''',
                '''Class,V,:,i_,{,Destructor,(,),{,Continue,;,Break,;,Var,_,:,P_1_,;,},},Class,_,{,Constructor,(,Gi2,,,PLq,:,Array,[,Int,,,03,],;,w,,,M_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x44,],,,056,],,,0B11000,],,,6,],),{,},},Class,_,{,_,(,____,:,v_,),{,},},<EOF>''',
                101
            )
        )

    def test_83(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$__NI7(_:Array [Boolean ,0xE];_,K_3,P,X:Int ;_,__w:Array [Array [Array [Array [Array [Array [String ,011],3],03],011],054_7],0B100010]){} }''',
                '''Class,_,{,$__NI7,(,_,:,Array,[,Boolean,,,0xE,],;,_,,,K_3,,,P,,,X,:,Int,;,_,,,__w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,011,],,,3,],,,03,],,,011,],,,0547,],,,0B100010,],),{,},},<EOF>''',
                101
            )
        )

    def test_84(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:k___{Val d:Int ;Var m:Array [Array [Array [Array [Array [Array [Int ,011],0B110110],011],3_7],07_5],6];}Class _87{}Class _{}''',
                '''Class,L,:,k___,{,Val,d,:,Int,;,Var,m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,011,],,,0B110110,],,,011,],,,37,],,,075,],,,6,],;,},Class,_87,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_85(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:D{}Class h{Destructor (){}$_(_,__:Array [Array [Int ,0b11100],0x42]){Continue ;} }Class _:V{Var O,_,$Q:Array [Array [Array [Array [Array [String ,0b1],0b11100],0x42],4_5],0106];Val $4S,$GN_w,$4:Array [String ,0B1_00];}''',
                '''Class,_,:,D,{,},Class,h,{,Destructor,(,),{,},$_,(,_,,,__,:,Array,[,Array,[,Int,,,0b11100,],,,0x42,],),{,Continue,;,},},Class,_,:,V,{,Var,O,,,_,,,$Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0b11100,],,,0x42,],,,45,],,,0106,],;,Val,$4S,,,$GN_w,,,$4,:,Array,[,String,,,0B100,],;,},<EOF>''',
                101
            )
        )

    def test_86(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class h63_{}Class _{Constructor (_,_:Array [Array [Float ,0X2A],404_3_5_2]){} }Class _{Var V_:F;Constructor (G_:Array [String ,034];oz,_:Int ;_7N,L5:Array [Int ,0x4]){} }''',
                '''Class,_,{,},Class,h63_,{,},Class,_,{,Constructor,(,_,,,_,:,Array,[,Array,[,Float,,,0X2A,],,,404352,],),{,},},Class,_,{,Var,V_,:,F,;,Constructor,(,G_,:,Array,[,String,,,034,],;,oz,,,_,:,Int,;,_7N,,,L5,:,Array,[,Int,,,0x4,],),{,},},<EOF>''',
                101
            )
        )

    def test_87(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Tl5__{}Class q{Destructor (){} }Class R_:W_{Destructor (){Val _:Boolean ;Return ;} }Class d1M:_{}Class a4_:K{}Class W:m{}''',
                '''Class,Tl5__,{,},Class,q,{,Destructor,(,),{,},},Class,R_,:,W_,{,Destructor,(,),{,Val,_,:,Boolean,;,Return,;,},},Class,d1M,:,_,{,},Class,a4_,:,K,{,},Class,W,:,m,{,},<EOF>''',
                101
            )
        )

    def test_88(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Constructor (_,_,Z_30_:__;__,_7,I__Z,_:Array [Array [Array [Float ,0X92],0X5F_C_70],0XE_EB]){} }Class n2_:_{}''',
                '''Class,_,{,Constructor,(,),{,},Constructor,(,_,,,_,,,Z_30_,:,__,;,__,,,_7,,,I__Z,,,_,:,Array,[,Array,[,Array,[,Float,,,0X92,],,,0X5FC70,],,,0XEEB,],),{,},},Class,n2_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_89(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,xT:Float ){}_(_1,_z__9:Float ;w,X,Q1:Array [Float ,02];z,DA,g_:Array [String ,06];_,_:String ;_:String ;__G:Array [Array [Array [Int ,037],06_1],0x34]){} }Class _:_X{}''',
                '''Class,_,{,Constructor,(,_,,,xT,:,Float,),{,},_,(,_1,,,_z__9,:,Float,;,w,,,X,,,Q1,:,Array,[,Float,,,02,],;,z,,,DA,,,g_,:,Array,[,String,,,06,],;,_,,,_,:,String,;,_,:,String,;,__G,:,Array,[,Array,[,Array,[,Int,,,037,],,,061,],,,0x34,],),{,},},Class,_,:,_X,{,},<EOF>''',
                101
            )
        )

    def test_90(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_j{}Class r_byvy{Val N4:K;Constructor (){}Constructor (k,_:Float ;_:String ;_5,_,n,__:Float ;_7o,o6:Float ;_:Int ;z,_,w2:Float ;K9y:Boolean ;e_,a,_w,w7:Int ){} }''',
                '''Class,_,:,_j,{,},Class,r_byvy,{,Val,N4,:,K,;,Constructor,(,),{,},Constructor,(,k,,,_,:,Float,;,_,:,String,;,_5,,,_,,,n,,,__,:,Float,;,_7o,,,o6,:,Float,;,_,:,Int,;,z,,,_,,,w2,:,Float,;,K9y,:,Boolean,;,e_,,,a,,,_w,,,w7,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_91(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{Constructor (e,_o,d,n0,_,_:Array [Int ,0xA];E5F,p:gkO;_b_,lX:Array [Int ,4];_3,C1,BL6,Q1:Int ){} }Class _{}Class _:__{}''',
                '''Class,O,{,Constructor,(,e,,,_o,,,d,,,n0,,,_,,,_,:,Array,[,Int,,,0xA,],;,E5F,,,p,:,gkO,;,_b_,,,lX,:,Array,[,Int,,,4,],;,_3,,,C1,,,BL6,,,Q1,:,Int,),{,},},Class,_,{,},Class,_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_92(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ZU_9:_{_(F:Boolean ;_5__9,_i_:p9;r,___:String ;c,rG,J6X,_M_:Array [Array [String ,0X2F],21];_,_,_o,k5zp44:Float ){} }Class ___6:_{}''',
                '''Class,ZU_9,:,_,{,_,(,F,:,Boolean,;,_5__9,,,_i_,:,p9,;,r,,,___,:,String,;,c,,,rG,,,J6X,,,_M_,:,Array,[,Array,[,String,,,0X2F,],,,21,],;,_,,,_,,,_o,,,k5zp44,:,Float,),{,},},Class,___6,:,_,{,},<EOF>''',
                101
            )
        )

    def test_93(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y_5{}Class y:y{Constructor (k,C,Y,_:H;R,W,N__8_2G___J:_37){} }Class _4J:DX4{}Class _v{Constructor (){} }''',
                '''Class,y_5,{,},Class,y,:,y,{,Constructor,(,k,,,C,,,Y,,,_,:,H,;,R,,,W,,,N__8_2G___J,:,_37,),{,},},Class,_4J,:,DX4,{,},Class,_v,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_94(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ib_:_N{}Class _849:y{$R(__:Array [Array [Array [Float ,75],074],0b1];G,_:Array [String ,7];_,M,_:Array [Array [String ,074],0xE]){} }''',
                '''Class,ib_,:,_N,{,},Class,_849,:,y,{,$R,(,__,:,Array,[,Array,[,Array,[,Float,,,75,],,,074,],,,0b1,],;,G,,,_,:,Array,[,String,,,7,],;,_,,,M,,,_,:,Array,[,Array,[,String,,,074,],,,0xE,],),{,},},<EOF>''',
                101
            )
        )

    def test_95(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _51_:l{}Class _K:No{}Class Uz:__{_(_:Array [Array [Array [Int ,0b101100],0x5],03];_04,vs9,_2__,__:Float ;_,C_:Array [Array [Boolean ,29],0x4_D_2]){} }''',
                '''Class,_51_,:,l,{,},Class,_K,:,No,{,},Class,Uz,:,__,{,_,(,_,:,Array,[,Array,[,Array,[,Int,,,0b101100,],,,0x5,],,,03,],;,_04,,,vs9,,,_2__,,,__,:,Float,;,_,,,C_,:,Array,[,Array,[,Boolean,,,29,],,,0x4D2,],),{,},},<EOF>''',
                101
            )
        )

    def test_96(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class _:_{Constructor (M3:Array [Array [Int ,33_042_9],5];pFXM6_6,_l20:Array [Boolean ,0b100110];_:Array [Array [Float ,6],0X7_61_9];P,__,n,_lk,a,_rD6:Array [Array [String ,0b11_0],0B1];T,r7_:Int ;_9:Array [Array [Int ,0X33],02];_:f___;l_:_4;_n,c:String ;__:_f_){ {}Return ;Return ;} }''',
                '''Class,_,{,Destructor,(,),{,},},Class,_,:,_,{,Constructor,(,M3,:,Array,[,Array,[,Int,,,330429,],,,5,],;,pFXM6_6,,,_l20,:,Array,[,Boolean,,,0b100110,],;,_,:,Array,[,Array,[,Float,,,6,],,,0X7619,],;,P,,,__,,,n,,,_lk,,,a,,,_rD6,:,Array,[,Array,[,String,,,0b110,],,,0B1,],;,T,,,r7_,:,Int,;,_9,:,Array,[,Array,[,Int,,,0X33,],,,02,],;,_,:,f___,;,l_,:,_4,;,_n,,,c,:,String,;,__,:,_f_,),{,{,},Return,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_97(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __4_:_e4{Val _8,_39:I8;}Class J_{Destructor (){}Var $X_,$21,$Q:Array [String ,05_4_414_03];_yr(){} }Class _:b{}''',
                '''Class,__4_,:,_e4,{,Val,_8,,,_39,:,I8,;,},Class,J_,{,Destructor,(,),{,},Var,$X_,,,$21,,,$Q,:,Array,[,String,,,05441403,],;,_yr,(,),{,},},Class,_,:,b,{,},<EOF>''',
                101
            )
        )

    def test_98(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $D6R,qn2:UY;$u(){ {} }Val B:Array [Array [Array [Boolean ,43],43],07];N(v:_){}Constructor (m,Q7__:Float ;_T:_;J_yh:X;_2:String ){} }''',
                '''Class,_,{,Val,$D6R,,,qn2,:,UY,;,$u,(,),{,{,},},Val,B,:,Array,[,Array,[,Array,[,Boolean,,,43,],,,43,],,,07,],;,N,(,v,:,_,),{,},Constructor,(,m,,,Q7__,:,Float,;,_T,:,_,;,J_yh,:,X,;,_2,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_99(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{yx(){Continue ;}Var $_:String ;Val i_:Int ;Var $1,a:Array [Array [Array [String ,0B1000000],07],0x7B];}Class QY_1:c{}Class _F{}Class _:_r7{}Class _:O{}''',
                '''Class,_,{,yx,(,),{,Continue,;,},Var,$_,:,String,;,Val,i_,:,Int,;,Var,$1,,,a,:,Array,[,Array,[,Array,[,String,,,0B1000000,],,,07,],,,0x7B,],;,},Class,QY_1,:,c,{,},Class,_F,{,},Class,_,:,_r7,{,},Class,_,:,O,{,},<EOF>''',
                101
            )
        )

    def test_100(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __H{Val W,_:F;}Class _s_{$_(Nw7:Array [Array [Array [Array [Array [Int ,37],37],0X8_1],0x4],37];_:Array [Float ,017]){} }''',
                '''Class,__H,{,Val,W,,,_,:,F,;,},Class,_s_,{,$_,(,Nw7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,37,],,,37,],,,0X81,],,,0x4,],,,37,],;,_,:,Array,[,Float,,,017,],),{,},},<EOF>''',
                101
            )
        )

    def test_101(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Constructor (B1,_2Yg:Array [Array [Float ,8_2],0x9_78];_z_0wT,c_o:w4;s,_t:Array [Array [String ,73],0B1]){}It(){} }Class Y{}Class _{}''',
                '''Class,a,{,Constructor,(,B1,,,_2Yg,:,Array,[,Array,[,Float,,,82,],,,0x978,],;,_z_0wT,,,c_o,:,w4,;,s,,,_t,:,Array,[,Array,[,String,,,73,],,,0B1,],),{,},It,(,),{,},},Class,Y,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_102(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class W:_{Var p:Array [Array [String ,1],0B1_1];Destructor (){} }Class J{Destructor (){Return ;} }Class R5Sn__:_3{}''',
                '''Class,_,{,},Class,W,:,_,{,Var,p,:,Array,[,Array,[,String,,,1,],,,0B11,],;,Destructor,(,),{,},},Class,J,{,Destructor,(,),{,Return,;,},},Class,R5Sn__,:,_3,{,},<EOF>''',
                101
            )
        )

    def test_103(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i_:___L{Val j,$F_:Array [Float ,016];}Class uv6_{}Class G7:G{Val F,s_8,$1Ro:Float ;Val $4___k__,$_,_,$Z_1o9iC:Array [Float ,0x2_D_C];}''',
                '''Class,i_,:,___L,{,Val,j,,,$F_,:,Array,[,Float,,,016,],;,},Class,uv6_,{,},Class,G7,:,G,{,Val,F,,,s_8,,,$1Ro,:,Float,;,Val,$4___k__,,,$_,,,_,,,$Z_1o9iC,:,Array,[,Float,,,0x2DC,],;,},<EOF>''',
                101
            )
        )

    def test_104(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class _{}Class _85X{Val $7,$8:String ;_(z:Int ){}__(_j,dch7e7,Z2v,t:Boolean ;_,a_8_,y:Array [String ,0b1]){} }Class lR4{}''',
                '''Class,_,{,Constructor,(,),{,},},Class,_,{,},Class,_85X,{,Val,$7,,,$8,:,String,;,_,(,z,:,Int,),{,},__,(,_j,,,dch7e7,,,Z2v,,,t,:,Boolean,;,_,,,a_8_,,,y,:,Array,[,String,,,0b1,],),{,},},Class,lR4,{,},<EOF>''',
                101
            )
        )

    def test_105(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _5_:FB_J_87{}Class _9E8:E{Var $_:Array [Array [Array [Boolean ,0x3E],0x3E],0X4];}Class r:ii20_{_J(){} }''',
                '''Class,__,{,},Class,_5_,:,FB_J_87,{,},Class,_9E8,:,E,{,Var,$_,:,Array,[,Array,[,Array,[,Boolean,,,0x3E,],,,0x3E,],,,0X4,],;,},Class,r,:,ii20_,{,_J,(,),{,},},<EOF>''',
                101
            )
        )

    def test_106(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_0:_{Val db6_:Array [Array [Array [Array [Array [Array [Float ,046],0b1011101],64],0x8],64],71];__(_,_ki:Boolean ;O4:Boolean ){}Constructor (__g:Boolean ){} }''',
                '''Class,_0_0,:,_,{,Val,db6_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,046,],,,0b1011101,],,,64,],,,0x8,],,,64,],,,71,],;,__,(,_,,,_ki,:,Boolean,;,O4,:,Boolean,),{,},Constructor,(,__g,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_107(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{Var $3_:Array [Array [Array [Array [Array [Array [Array [Float ,8],01],25],0X5],05],25],06];Var FKKH_,j_,$1,$_3dp:Float ;}''',
                '''Class,q,{,Var,$3_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,8,],,,01,],,,25,],,,0X5,],,,05,],,,25,],,,06,],;,Var,FKKH_,,,j_,,,$1,,,$_3dp,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_108(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (__:Array [Array [Array [Float ,86_9],0B1],80]){}Constructor (T_7,__:Array [Int ,024];V,s_5:Int ;_:Float ;ad,_,_:Array [Boolean ,01];_k,OZ:Boolean ){} }Class A4{Val C,M9_1,$U,b:V62;Var $eQ:Um3;}''',
                '''Class,__,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Float,,,869,],,,0B1,],,,80,],),{,},Constructor,(,T_7,,,__,:,Array,[,Int,,,024,],;,V,,,s_5,:,Int,;,_,:,Float,;,ad,,,_,,,_,:,Array,[,Boolean,,,01,],;,_k,,,OZ,:,Boolean,),{,},},Class,A4,{,Val,C,,,M9_1,,,$U,,,b,:,V62,;,Var,$eQ,:,Um3,;,},<EOF>''',
                101
            )
        )

    def test_109(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t6_3:_{Constructor (_N:Array [Float ,0X9_3];F:a;n_j:p;_:String ){Break ;} }Class _2:_{}Class _:J_8{}Class _:_NHP{Val $_,_M4:U_;Var $_9_6_8,_k,$_:Array [Array [Array [Float ,2_3_1],023],04_50_6];Constructor (q,_,v,_:String ){Continue ;} }Class _{Constructor (){Continue ;}Constructor (P1:q_v5__;O,C:Array [Int ,0x1]){}Constructor (){}Var __,$_77:Q;}''',
                '''Class,t6_3,:,_,{,Constructor,(,_N,:,Array,[,Float,,,0X93,],;,F,:,a,;,n_j,:,p,;,_,:,String,),{,Break,;,},},Class,_2,:,_,{,},Class,_,:,J_8,{,},Class,_,:,_NHP,{,Val,$_,,,_M4,:,U_,;,Var,$_9_6_8,,,_k,,,$_,:,Array,[,Array,[,Array,[,Float,,,231,],,,023,],,,04506,],;,Constructor,(,q,,,_,,,v,,,_,:,String,),{,Continue,;,},},Class,_,{,Constructor,(,),{,Continue,;,},Constructor,(,P1,:,q_v5__,;,O,,,C,:,Array,[,Int,,,0x1,],),{,},Constructor,(,),{,},Var,__,,,$_77,:,Q,;,},<EOF>''',
                101
            )
        )

    def test_110(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3{Destructor (){}Destructor (){}_(_8h:Array [Boolean ,0XE];_0J,_2:Boolean ;S,O5:Array [Int ,85]){} }Class d:C{Constructor (){} }''',
                '''Class,_3,{,Destructor,(,),{,},Destructor,(,),{,},_,(,_8h,:,Array,[,Boolean,,,0XE,],;,_0J,,,_2,:,Boolean,;,S,,,O5,:,Array,[,Int,,,85,],),{,},},Class,d,:,C,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_111(self):
        self.assertTrue(
            TestLexer.test(
                '''Class EG_1:u7_0IB{Constructor (){}Var ____,_:V;Destructor (){}Var _,$_,$_H:String ;Var _:e1;}Class A{Val _,_LO:Array [Int ,02];}''',
                '''Class,EG_1,:,u7_0IB,{,Constructor,(,),{,},Var,____,,,_,:,V,;,Destructor,(,),{,},Var,_,,,$_,,,$_H,:,String,;,Var,_,:,e1,;,},Class,A,{,Val,_,,,_LO,:,Array,[,Int,,,02,],;,},<EOF>''',
                101
            )
        )

    def test_112(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D{}Class c{}Class QH{Constructor (Kq,_,PM,__,_:Array [Float ,7];JD:Boolean ){}Val __e,$s_,$_7:Array [Float ,02];}Class XM8{$_(Q,_:z){}Val j,C:Int ;Val e:Float ;}Class _:_{}Class ux{}''',
                '''Class,D,{,},Class,c,{,},Class,QH,{,Constructor,(,Kq,,,_,,,PM,,,__,,,_,:,Array,[,Float,,,7,],;,JD,:,Boolean,),{,},Val,__e,,,$s_,,,$_7,:,Array,[,Float,,,02,],;,},Class,XM8,{,$_,(,Q,,,_,:,z,),{,},Val,j,,,C,:,Int,;,Val,e,:,Float,;,},Class,_,:,_,{,},Class,ux,{,},<EOF>''',
                101
            )
        )

    def test_113(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5{Constructor (_x_,H_:Array [Array [String ,0xB],0x27];K6_,N:_){Continue ;} }Class _YxC_:_t{}Class _:y_4Z_61_9{}Class jNqc2t{Val _,y,$h:Array [Array [Array [Array [Array [Array [Array [String ,0X9],0x6_CF],054],4],6],0X4_2],0B1000101];}''',
                '''Class,_5,{,Constructor,(,_x_,,,H_,:,Array,[,Array,[,String,,,0xB,],,,0x27,],;,K6_,,,N,:,_,),{,Continue,;,},},Class,_YxC_,:,_t,{,},Class,_,:,y_4Z_61_9,{,},Class,jNqc2t,{,Val,_,,,y,,,$h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X9,],,,0x6CF,],,,054,],,,4,],,,6,],,,0X42,],,,0B1000101,],;,},<EOF>''',
                101
            )
        )

    def test_114(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R_{Constructor (){}Destructor (){}Var _,$_8p,_iL_:Boolean ;}Class __4{}Class i{Constructor (l:Boolean ;h7,_,X,N_,_6,_7,_,__8_:Array [Float ,0B111101]){}Constructor (_4,___n,__o:H;s:Float ;_:Array [Array [Array [Int ,0XC_BD_031],020],0X32];F,_:R71__){F::$1.vS.z();}Val _1,$_:QU;}Class __:n{}''',
                '''Class,R_,{,Constructor,(,),{,},Destructor,(,),{,},Var,_,,,$_8p,,,_iL_,:,Boolean,;,},Class,__4,{,},Class,i,{,Constructor,(,l,:,Boolean,;,h7,,,_,,,X,,,N_,,,_6,,,_7,,,_,,,__8_,:,Array,[,Float,,,0B111101,],),{,},Constructor,(,_4,,,___n,,,__o,:,H,;,s,:,Float,;,_,:,Array,[,Array,[,Array,[,Int,,,0XCBD031,],,,020,],,,0X32,],;,F,,,_,:,R71__,),{,F,::,$1,.,vS,.,z,(,),;,},Val,_1,,,$_,:,QU,;,},Class,__,:,n,{,},<EOF>''',
                101
            )
        )

    def test_115(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{Constructor (a_,xu:Array [Float ,76]){}Destructor (){}Var $vZ:Rin6__;}Class _:F_{}Class o{Constructor (_0_1_:u;X,JA,r8:Array [Array [Array [Float ,032],0B1],01_7_2];_:Array [Array [Boolean ,032],04];Mb:Array [Boolean ,0xEAB]){}$L(u9cSa,_R:e2w____2;w_2,_,y_,q_,_,_,_,U:_;t:Boolean ){} }''',
                '''Class,_1,{,Constructor,(,a_,,,xu,:,Array,[,Float,,,76,],),{,},Destructor,(,),{,},Var,$vZ,:,Rin6__,;,},Class,_,:,F_,{,},Class,o,{,Constructor,(,_0_1_,:,u,;,X,,,JA,,,r8,:,Array,[,Array,[,Array,[,Float,,,032,],,,0B1,],,,0172,],;,_,:,Array,[,Array,[,Boolean,,,032,],,,04,],;,Mb,:,Array,[,Boolean,,,0xEAB,],),{,},$L,(,u9cSa,,,_R,:,e2w____2,;,w_2,,,_,,,y_,,,q_,,,_,,,_,,,_,,,U,:,_,;,t,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_116(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _{Destructor (){}Constructor (_,i,VV23:String ;c,_,LV,u,F,H:_W4w;M:Array [Array [Array [Array [Float ,0B1_0],0B1],21],0B1];A6:_;u:String ;E:Int ;B:Array [Int ,0B1_11_1]){} }Class _qYo{}Class w1K:Fa6{}''',
                '''Class,_,:,_,{,},Class,_,{,Destructor,(,),{,},Constructor,(,_,,,i,,,VV23,:,String,;,c,,,_,,,LV,,,u,,,F,,,H,:,_W4w,;,M,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B10,],,,0B1,],,,21,],,,0B1,],;,A6,:,_,;,u,:,String,;,E,:,Int,;,B,:,Array,[,Int,,,0B1111,],),{,},},Class,_qYo,{,},Class,w1K,:,Fa6,{,},<EOF>''',
                101
            )
        )

    def test_117(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4:_H{}Class d5_V0{Constructor (g:_59A_D1_a;zO883_3:Float ){ {}Val P,H:Array [Int ,0X11];Val _,x,zu,_p:Float ;} }Class m:d{}''',
                '''Class,_4,:,_H,{,},Class,d5_V0,{,Constructor,(,g,:,_59A_D1_a,;,zO883_3,:,Float,),{,{,},Val,P,,,H,:,Array,[,Int,,,0X11,],;,Val,_,,,x,,,zu,,,_p,:,Float,;,},},Class,m,:,d,{,},<EOF>''',
                101
            )
        )

    def test_118(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __9{Constructor (Bf_49:Array [Array [Int ,7],41]){} }Class ____04{}Class _:_{Constructor (){} }Class _0:_{}''',
                '''Class,__9,{,Constructor,(,Bf_49,:,Array,[,Array,[,Int,,,7,],,,41,],),{,},},Class,____04,{,},Class,_,:,_,{,Constructor,(,),{,},},Class,_0,:,_,{,},<EOF>''',
                101
            )
        )

    def test_119(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:c{}Class __7{Destructor (){}Var $Z3,$b_:Array [Array [Array [Array [Array [Float ,6],0B1],0XFF],0B1_1],8_9];}Class W_{Destructor (){Val G:Array [Boolean ,0b110111];}Val $3,YsK:N;Constructor (){} }''',
                '''Class,s,:,c,{,},Class,__7,{,Destructor,(,),{,},Var,$Z3,,,$b_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,6,],,,0B1,],,,0XFF,],,,0B11,],,,89,],;,},Class,W_,{,Destructor,(,),{,Val,G,:,Array,[,Boolean,,,0b110111,],;,},Val,$3,,,YsK,:,N,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_120(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $D:Array [Boolean ,0b1000010];Constructor (_,c_,P,_:I){Tdw::$1();Break ;Var a_,p7:_;}Constructor (_Gj_,_:ABNd4){} }Class _:_1C05_{}Class _k:I_{}Class _:_{}''',
                '''Class,_,{,Var,$D,:,Array,[,Boolean,,,0b1000010,],;,Constructor,(,_,,,c_,,,P,,,_,:,I,),{,Tdw,::,$1,(,),;,Break,;,Var,a_,,,p7,:,_,;,},Constructor,(,_Gj_,,,_,:,ABNd4,),{,},},Class,_,:,_1C05_,{,},Class,_k,:,I_,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_121(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_n:Array [Array [Array [Array [Array [Array [Int ,51],07],0B11000],0b11],0B1],0B11000]){}$_fsML(){Break ;Continue ;}Constructor (){Break ;_::$_();}Destructor (){} }Class U:_j{$5__(){} }''',
                '''Class,_,{,Constructor,(,_n,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,51,],,,07,],,,0B11000,],,,0b11,],,,0B1,],,,0B11000,],),{,},$_fsML,(,),{,Break,;,Continue,;,},Constructor,(,),{,Break,;,_,::,$_,(,),;,},Destructor,(,),{,},},Class,U,:,_j,{,$5__,(,),{,},},<EOF>''',
                101
            )
        )

    def test_122(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:_7{Destructor (){} }Class _{R(_:String ;_:Array [Array [Array [Float ,0B10],0b1],938];_JQ:Array [Array [String ,0XD],0113];_D,H:Array [Array [Array [String ,0B1_10],0113],0x27];t:Float ){} }''',
                '''Class,b,:,_7,{,Destructor,(,),{,},},Class,_,{,R,(,_,:,String,;,_,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,0b1,],,,938,],;,_JQ,:,Array,[,Array,[,String,,,0XD,],,,0113,],;,_D,,,H,:,Array,[,Array,[,Array,[,String,,,0B110,],,,0113,],,,0x27,],;,t,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_123(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{}Class C:_{Var _:Array [Array [Array [Float ,0b1011101],8],2_5];Var $6:String ;Constructor (){Break ;} }Class P:Z{Destructor (){} }''',
                '''Class,_8,{,},Class,C,:,_,{,Var,_,:,Array,[,Array,[,Array,[,Float,,,0b1011101,],,,8,],,,25,],;,Var,$6,:,String,;,Constructor,(,),{,Break,;,},},Class,P,:,Z,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_124(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j3B{Constructor (P_,TOy:B9;__:Array [Float ,0b101_10_0_1];_,_8:Array [Array [Float ,5],81]){Continue ;} }''',
                '''Class,j3B,{,Constructor,(,P_,,,TOy,:,B9,;,__,:,Array,[,Float,,,0b1011001,],;,_,,,_8,:,Array,[,Array,[,Float,,,5,],,,81,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_125(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G:A7{}Class _{}Class jCt:_5_{}Class _{_(){} }Class _P{Constructor (){}Destructor (){ {{} }} }Class M:b{}Class Q5:_qV{}Class O{}''',
                '''Class,G,:,A7,{,},Class,_,{,},Class,jCt,:,_5_,{,},Class,_,{,_,(,),{,},},Class,_P,{,Constructor,(,),{,},Destructor,(,),{,{,{,},},},},Class,M,:,b,{,},Class,Q5,:,_qV,{,},Class,O,{,},<EOF>''',
                101
            )
        )

    def test_126(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p:_{$84r(_,oL7s,_,_Ta:Array [Array [Int ,06],17]){}a(){Val __,X_r_w_55Q_3E:String ;}Var _:String ;Var _5,__:Array [Int ,286];}''',
                '''Class,p,:,_,{,$84r,(,_,,,oL7s,,,_,,,_Ta,:,Array,[,Array,[,Int,,,06,],,,17,],),{,},a,(,),{,Val,__,,,X_r_w_55Q_3E,:,String,;,},Var,_,:,String,;,Var,_5,,,__,:,Array,[,Int,,,286,],;,},<EOF>''',
                101
            )
        )

    def test_127(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_2_xt(ci,_:Array [Array [Array [Array [Array [Float ,0X26],88],9_1],0131],0b100];___,s,i_:he_Q_){Break ;{}Break ;Var _,_n,QC_P_:_lk;Break ;}Constructor (){} }''',
                '''Class,_,{,_2_xt,(,ci,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X26,],,,88,],,,91,],,,0131,],,,0b100,],;,___,,,s,,,i_,:,he_Q_,),{,Break,;,{,},Break,;,Var,_,,,_n,,,QC_P_,:,_lk,;,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_128(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_0{Constructor (u:D;_,d_8_n,V1_Ys_:_;I,reP,Vu:Array [Array [Array [Array [Array [Int ,0B1],5],21],061],21]){ {} }}''',
                '''Class,_,:,_0,{,Constructor,(,u,:,D,;,_,,,d_8_n,,,V1_Ys_,:,_,;,I,,,reP,,,Vu,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,5,],,,21,],,,061,],,,21,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_129(self):
        self.assertTrue(
            TestLexer.test(
                '''Class zp:i_{Constructor (O1l:Array [Float ,0X23];_,Q,_b:I){Return ;} }Class Z{Val $1w_1_6:String ;Constructor (){Continue ;}Destructor (){}Constructor (){} }''',
                '''Class,zp,:,i_,{,Constructor,(,O1l,:,Array,[,Float,,,0X23,],;,_,,,Q,,,_b,:,I,),{,Return,;,},},Class,Z,{,Val,$1w_1_6,:,String,;,Constructor,(,),{,Continue,;,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_130(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{}Class M:__5_h{Constructor (__K69Q7_0__,PA:Array [Array [Array [String ,066],2],23];_:Float ;r_s,_:C2;_6_,_D:Boolean ){}__(){Continue ;} }''',
                '''Class,F,{,},Class,M,:,__5_h,{,Constructor,(,__K69Q7_0__,,,PA,:,Array,[,Array,[,Array,[,String,,,066,],,,2,],,,23,],;,_,:,Float,;,r_s,,,_,:,C2,;,_6_,,,_D,:,Boolean,),{,},__,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_131(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Destructor (){__6_P::$j._();}Val _,$w_:S;}Class W:_{Destructor (){Continue ;Var b95___:Int ;} }Class _Z:W{}''',
                '''Class,d,{,Destructor,(,),{,__6_P,::,$j,.,_,(,),;,},Val,_,,,$w_,:,S,;,},Class,W,:,_,{,Destructor,(,),{,Continue,;,Var,b95___,:,Int,;,},},Class,_Z,:,W,{,},<EOF>''',
                101
            )
        )

    def test_132(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N9_:_6{}Class T{}Class __59Y:k_{$_(V,lw:Array [Array [Float ,0133],0133];__0,_,_:Float ;_62,_5_,_i,yB,_8__,_,_,_,_j,f,_M:Array [Array [Int ,0B1011111],0x9_8BB]){Var __y_B51:_3;Continue ;} }''',
                '''Class,N9_,:,_6,{,},Class,T,{,},Class,__59Y,:,k_,{,$_,(,V,,,lw,:,Array,[,Array,[,Float,,,0133,],,,0133,],;,__0,,,_,,,_,:,Float,;,_62,,,_5_,,,_i,,,yB,,,_8__,,,_,,,_,,,_,,,_j,,,f,,,_M,:,Array,[,Array,[,Int,,,0B1011111,],,,0x98BB,],),{,Var,__y_B51,:,_3,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_133(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O_8{Val $_,$q:Float ;Val $r:String ;Constructor (_:Array [Array [Array [Int ,0xE7],56],0X26]){} }Class v:_1{}''',
                '''Class,O_8,{,Val,$_,,,$q,:,Float,;,Val,$r,:,String,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,0xE7,],,,56,],,,0X26,],),{,},},Class,v,:,_1,{,},<EOF>''',
                101
            )
        )

    def test_134(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:_3{$22Y(__:k1_;_,_,s4r:Array [Array [Float ,0b10],06];LM,F,n3_2l,_,N,_,_,X,_,_,_,G9,x:c){Break ;} }''',
                '''Class,k,:,_3,{,$22Y,(,__,:,k1_,;,_,,,_,,,s4r,:,Array,[,Array,[,Float,,,0b10,],,,06,],;,LM,,,F,,,n3_2l,,,_,,,N,,,_,,,_,,,X,,,_,,,_,,,_,,,G9,,,x,:,c,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_135(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j{}Class _jT1:m{$__(V:Array [Array [Boolean ,48],0X18]){ {}Return ;}Val $k_p:Array [Array [Array [String ,48],56_9],06];}Class _{}''',
                '''Class,_j,{,},Class,_jT1,:,m,{,$__,(,V,:,Array,[,Array,[,Boolean,,,48,],,,0X18,],),{,{,},Return,;,},Val,$k_p,:,Array,[,Array,[,Array,[,String,,,48,],,,569,],,,06,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_136(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:y2_{Constructor (__04dv:String ){Continue ;}Constructor (){} }Class _{}Class _:_{}Class __:_{}Class uk0{}''',
                '''Class,_,:,y2_,{,Constructor,(,__04dv,:,String,),{,Continue,;,},Constructor,(,),{,},},Class,_,{,},Class,_,:,_,{,},Class,__,:,_,{,},Class,uk0,{,},<EOF>''',
                101
            )
        )

    # def test_137(self):
    # self.assertTrue(TestLexer.test('''Class pL{Constructor (l_:String ;J6L_Z:Array [Int ,0XC803]){ {} }Var $m_9:Boolean =--"\n\\'"".Z()<!-Q7::$S1c._*!New _t()._U__z8f;}''','''Class,pL,{,Constructor,(,l_,:,String,;,J6L_Z,:,Array,[,Int,,,0XC803,],),{,{,},},Var,$m_9,:,Boolean,=,-,-,\n\\'",.,Z,(,),<,!,-,Q7,::,$S1c,.,_,*,!,New,_t,(,),.,_U__z8f,;,},<EOF>''',101))

    def test_138(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9_:_l4_{}Class M_:_{Constructor (z5_:i_;_8,S,_:Array [Boolean ,86];p_:Array [String ,0B1_1_0];__:GjW){} }''',
                '''Class,_9_,:,_l4_,{,},Class,M_,:,_,{,Constructor,(,z5_,:,i_,;,_8,,,S,,,_,:,Array,[,Boolean,,,86,],;,p_,:,Array,[,String,,,0B110,],;,__,:,GjW,),{,},},<EOF>''',
                101
            )
        )

    def test_139(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l5:_{Val $4,__:f;_(_t,_,_:Int ;w93:Array [Array [Array [Array [Array [Array [Array [Int ,96],04463],960],0b100_1],014],1],0x16]){}Var $5_3M__4H:Float ;Var $0_:Array [Array [Array [Array [Boolean ,05],0X5B],0b1],0X5B];$8_(_,_,o:_){Break ;} }Class _:_{Constructor (t,U:Array [Int ,2_3];S_:Array [Float ,0X5B]){} }''',
                '''Class,l5,:,_,{,Val,$4,,,__,:,f,;,_,(,_t,,,_,,,_,:,Int,;,w93,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,96,],,,04463,],,,960,],,,0b1001,],,,014,],,,1,],,,0x16,],),{,},Var,$5_3M__4H,:,Float,;,Var,$0_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,05,],,,0X5B,],,,0b1,],,,0X5B,],;,$8_,(,_,,,_,,,o,:,_,),{,Break,;,},},Class,_,:,_,{,Constructor,(,t,,,U,:,Array,[,Int,,,23,],;,S_,:,Array,[,Float,,,0X5B,],),{,},},<EOF>''',
                101
            )
        )

    def test_140(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __V{Var a:Array [Boolean ,0XA0];}Class k:_p{Var o,$_,$0,_:Array [Boolean ,0b1_00_0];Constructor (){} }Class F2{}''',
                '''Class,__V,{,Var,a,:,Array,[,Boolean,,,0XA0,],;,},Class,k,:,_p,{,Var,o,,,$_,,,$0,,,_,:,Array,[,Boolean,,,0b1000,],;,Constructor,(,),{,},},Class,F2,{,},<EOF>''',
                101
            )
        )

    def test_141(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gv:_{$4z(R,A,__q_,o,H,o_,w_,__,I:Array [String ,0b1];_1l_:_R__;__X,m:Z;_,U,_:Int ;_c_J74:Boolean ){} }Class _:B13Y{_(_,X:_;x:Array [Array [Boolean ,0x37],0b1_0]){} }''',
                '''Class,gv,:,_,{,$4z,(,R,,,A,,,__q_,,,o,,,H,,,o_,,,w_,,,__,,,I,:,Array,[,String,,,0b1,],;,_1l_,:,_R__,;,__X,,,m,:,Z,;,_,,,U,,,_,:,Int,;,_c_J74,:,Boolean,),{,},},Class,_,:,B13Y,{,_,(,_,,,X,:,_,;,x,:,Array,[,Array,[,Boolean,,,0x37,],,,0b10,],),{,},},<EOF>''',
                101
            )
        )

    def test_142(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class __:_T{}Class hU{Destructor (){}Constructor (l,x:Array [Array [String ,0121],47]){} }Class B:X9Y{}''',
                '''Class,__,{,},Class,__,:,_T,{,},Class,hU,{,Destructor,(,),{,},Constructor,(,l,,,x,:,Array,[,Array,[,String,,,0121,],,,47,],),{,},},Class,B,:,X9Y,{,},<EOF>''',
                101
            )
        )

    def test_143(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:D_{Constructor (g,_e,__6,i,m952I:Int ;dS7,_NPQ,_at_0:Float ;l:R_n0;Gy,_,i:Float ;_8_,C,D_,r__,d,_,_2_:String ;U:__5){}Var P_:Array [Array [Float ,8],0b111111];}''',
                '''Class,l,:,D_,{,Constructor,(,g,,,_e,,,__6,,,i,,,m952I,:,Int,;,dS7,,,_NPQ,,,_at_0,:,Float,;,l,:,R_n0,;,Gy,,,_,,,i,:,Float,;,_8_,,,C,,,D_,,,r__,,,d,,,_,,,_2_,:,String,;,U,:,__5,),{,},Var,P_,:,Array,[,Array,[,Float,,,8,],,,0b111111,],;,},<EOF>''',
                101
            )
        )

    def test_144(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _bi0:M{}Class EZ:_7{Var $u:__;Val $_8f,PC,$2,$a_o,$Q:T_2;Var _,l4k:Int ;Constructor (c:Boolean ;_:gS9){} }''',
                '''Class,_bi0,:,M,{,},Class,EZ,:,_7,{,Var,$u,:,__,;,Val,$_8f,,,PC,,,$2,,,$a_o,,,$Q,:,T_2,;,Var,_,,,l4k,:,Int,;,Constructor,(,c,:,Boolean,;,_,:,gS9,),{,},},<EOF>''',
                101
            )
        )

    def test_145(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{k(){Continue ;} }Class _2__{Val _,_:Array [Array [Array [Array [Array [Boolean ,07],0X5],04],0b1_1_0],0121];Destructor (){} }''',
                '''Class,_,{,k,(,),{,Continue,;,},},Class,_2__,{,Val,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,07,],,,0X5,],,,04,],,,0b110,],,,0121,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_146(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y_6D:n_{J53(){}Val $4,$v:Boolean ;}Class K6:E_{Destructor (){}Val _E,$_:String ;}Class _{}Class p{}Class __{Val _:o;}''',
                '''Class,y_6D,:,n_,{,J53,(,),{,},Val,$4,,,$v,:,Boolean,;,},Class,K6,:,E_,{,Destructor,(,),{,},Val,_E,,,$_,:,String,;,},Class,_,{,},Class,p,{,},Class,__,{,Val,_,:,o,;,},<EOF>''',
                101
            )
        )

    def test_147(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B6:V{$q(_,C__:c__R1){Continue ;}Var $_:Array [Array [Array [Array [Array [Boolean ,0B1],0B1],15],071],9];}''',
                '''Class,B6,:,V,{,$q,(,_,,,C__,:,c__R1,),{,Continue,;,},Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0B1,],,,15,],,,071,],,,9,],;,},<EOF>''',
                101
            )
        )

    def test_148(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class r:E{}Class S_{_(_,v5_,_:N_){} }Class _{$1(F,__VP:Array [Array [Array [Int ,0B1100100],0x9],40];_:Boolean ){} }''',
                '''Class,_,{,},Class,r,:,E,{,},Class,S_,{,_,(,_,,,v5_,,,_,:,N_,),{,},},Class,_,{,$1,(,F,,,__VP,:,Array,[,Array,[,Array,[,Int,,,0B1100100,],,,0x9,],,,40,],;,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_149(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O_:_9{Destructor (){}Var _D,$1A:Float ;Val $6b:a2_n5;}Class V_{Val L:Array [Array [String ,032],032]=---d5::$__--Array (Array (Array (Array (),Array ())));Var _:Array [Float ,0B111110];Destructor (){} }''',
                '''Class,O_,:,_9,{,Destructor,(,),{,},Var,_D,,,$1A,:,Float,;,Val,$6b,:,a2_n5,;,},Class,V_,{,Val,L,:,Array,[,Array,[,String,,,032,],,,032,],=,-,-,-,d5,::,$__,-,-,Array,(,Array,(,Array,(,Array,(,),,,Array,(,),),),),;,Var,_,:,Array,[,Float,,,0B111110,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_150(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B_{Val $_8:mn;Constructor (m:__){_::$_ro();} }Class _{Constructor (_1,_2:Array [String ,57];_:_;_M_1G,_,oQ,_:q;H9:Array [Int ,0X9_EA_D_B445];__:String ;Y:Array [Array [String ,0xC],04]){} }Class _:_{}''',
                '''Class,B_,{,Val,$_8,:,mn,;,Constructor,(,m,:,__,),{,_,::,$_ro,(,),;,},},Class,_,{,Constructor,(,_1,,,_2,:,Array,[,String,,,57,],;,_,:,_,;,_M_1G,,,_,,,oQ,,,_,:,q,;,H9,:,Array,[,Int,,,0X9EADB445,],;,__,:,String,;,Y,:,Array,[,Array,[,String,,,0xC,],,,04,],),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_151(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{Destructor (){Continue ;} }Class O{}Class C{Var $Z_W56_,$_Y:String ;}Class k_:B5{}Class _:__{$7(____,z__:_){} }Class b__9{_(_:Array [Int ,66];c_:Array [Boolean ,0x2]){}Destructor (){} }''',
                '''Class,X,{,Destructor,(,),{,Continue,;,},},Class,O,{,},Class,C,{,Var,$Z_W56_,,,$_Y,:,String,;,},Class,k_,:,B5,{,},Class,_,:,__,{,$7,(,____,,,z__,:,_,),{,},},Class,b__9,{,_,(,_,:,Array,[,Int,,,66,],;,c_,:,Array,[,Boolean,,,0x2,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_152(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class y{Val $_B,$7_oV_:Array [Array [String ,0114],7_4];}Class D{}Class p:q{Var $_g_G2_H3:Array [Int ,0X54];}''',
                '''Class,_,{,Constructor,(,),{,},},Class,y,{,Val,$_B,,,$7_oV_,:,Array,[,Array,[,String,,,0114,],,,74,],;,},Class,D,{,},Class,p,:,q,{,Var,$_g_G2_H3,:,Array,[,Int,,,0X54,],;,},<EOF>''',
                101
            )
        )

    def test_153(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J2:_{Val _,$g4____,$8pY,$_,$0y:Array [Boolean ,0B110101];Val $AN0AJ:Array [Float ,0XE];Var $o:Float ;}Class U:_{}Class s:RV2{}''',
                '''Class,J2,:,_,{,Val,_,,,$g4____,,,$8pY,,,$_,,,$0y,:,Array,[,Boolean,,,0B110101,],;,Val,$AN0AJ,:,Array,[,Float,,,0XE,],;,Var,$o,:,Float,;,},Class,U,:,_,{,},Class,s,:,RV2,{,},<EOF>''',
                101
            )
        )

    def test_154(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g__:S{Var __,x:Array [Float ,06_7];}Class B__:Zr{Destructor (){} }Class __4:w_{}Class G:Q6{Var _,_:_Y;}Class _1{}''',
                '''Class,g__,:,S,{,Var,__,,,x,:,Array,[,Float,,,067,],;,},Class,B__,:,Zr,{,Destructor,(,),{,},},Class,__4,:,w_,{,},Class,G,:,Q6,{,Var,_,,,_,:,_Y,;,},Class,_1,{,},<EOF>''',
                101
            )
        )

    def test_155(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P{Val _4:Boolean ;}Class Z:__{}Class _:v{$d(__t,m,_6_,Z:Array [Int ,0X2C];V:Int ){}$j(_4:Boolean ){Var r:_o;} }''',
                '''Class,P,{,Val,_4,:,Boolean,;,},Class,Z,:,__,{,},Class,_,:,v,{,$d,(,__t,,,m,,,_6_,,,Z,:,Array,[,Int,,,0X2C,],;,V,:,Int,),{,},$j,(,_4,:,Boolean,),{,Var,r,:,_o,;,},},<EOF>''',
                101
            )
        )

    def test_156(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{}Class J2{Var $115,$l1:Int ;$R_U2_(x:_;I,v,_9Tu_:Array [Boolean ,1]){}$_6n(){}Destructor (){} }Class l_q58D{}Class _{Val ZR,$_I:Array [Array [Int ,0B1],06];}''',
                '''Class,r,{,},Class,J2,{,Var,$115,,,$l1,:,Int,;,$R_U2_,(,x,:,_,;,I,,,v,,,_9Tu_,:,Array,[,Boolean,,,1,],),{,},$_6n,(,),{,},Destructor,(,),{,},},Class,l_q58D,{,},Class,_,{,Val,ZR,,,$_I,:,Array,[,Array,[,Int,,,0B1,],,,06,],;,},<EOF>''',
                101
            )
        )

    def test_157(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Q_(F_U,_n3:Array [Array [Array [Int ,6],0b11010],0b11010];x0,w76j:E__;qC,_3__5:Boolean ){} }Class N{}Class _:g{Var _S,G:_;}Class p_{Val $_:Float ;}Class f:_96__{Destructor (){} }''',
                '''Class,_,{,Q_,(,F_U,,,_n3,:,Array,[,Array,[,Array,[,Int,,,6,],,,0b11010,],,,0b11010,],;,x0,,,w76j,:,E__,;,qC,,,_3__5,:,Boolean,),{,},},Class,N,{,},Class,_,:,g,{,Var,_S,,,G,:,_,;,},Class,p_,{,Val,$_,:,Float,;,},Class,f,:,_96__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_158(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N{}Class _2:W{Constructor (_8e_,_:Array [Array [Array [Array [Array [Float ,0B100011],01],0B10],0B1],0x5]){_4n::$__O8z_h8.a.__M._.y_()._();} }Class f2__t6:Q1{Constructor (){Continue ;} }''',
                '''Class,N,{,},Class,_2,:,W,{,Constructor,(,_8e_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B100011,],,,01,],,,0B10,],,,0B1,],,,0x5,],),{,_4n,::,$__O8z_h8,.,a,.,__M,.,_,.,y_,(,),.,_,(,),;,},},Class,f2__t6,:,Q1,{,Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_159(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var Q5:Int ;Val $b7:Array [Float ,044];}Class r_{Constructor (i6S,_:Array [Array [Boolean ,0b100001],0B1]){} }Class N:_{Val a,D,X:__;Var _:Array [Array [Boolean ,0B1_11_1],03];}''',
                '''Class,_,{,Var,Q5,:,Int,;,Val,$b7,:,Array,[,Float,,,044,],;,},Class,r_,{,Constructor,(,i6S,,,_,:,Array,[,Array,[,Boolean,,,0b100001,],,,0B1,],),{,},},Class,N,:,_,{,Val,a,,,D,,,X,:,__,;,Var,_,:,Array,[,Array,[,Boolean,,,0B1111,],,,03,],;,},<EOF>''',
                101
            )
        )

    def test_160(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val O7,_,__,$0,_,Jn:String ;Constructor (E:String ;c,V,D:wh){}Constructor (){}Val $4,$O:Boolean ;}Class b:_{}Class _:Qpu{}Class l__h_:__O_{Constructor (){Continue ;}$7(){} }''',
                '''Class,_,{,Val,O7,,,_,,,__,,,$0,,,_,,,Jn,:,String,;,Constructor,(,E,:,String,;,c,,,V,,,D,:,wh,),{,},Constructor,(,),{,},Val,$4,,,$O,:,Boolean,;,},Class,b,:,_,{,},Class,_,:,Qpu,{,},Class,l__h_,:,__O_,{,Constructor,(,),{,Continue,;,},$7,(,),{,},},<EOF>''',
                101
            )
        )

    def test_161(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:X{}Class _18:a{Var _L:Array [Boolean ,3];_(_N4gi:Y;_:v__;wE:_107_T;_:String ;w60M878:_;_f__,K,A,_5:Boolean ){} }''',
                '''Class,_1,:,X,{,},Class,_18,:,a,{,Var,_L,:,Array,[,Boolean,,,3,],;,_,(,_N4gi,:,Y,;,_,:,v__,;,wE,:,_107_T,;,_,:,String,;,w60M878,:,_,;,_f__,,,K,,,A,,,_5,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_162(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_g9{Var $_0,$E_,_:Boolean ;$_(_:TY;w__:Array [Array [Array [Float ,4_2_3_1_36_9_8_49],0xF],02]){Continue ;}Constructor (){}Constructor (L:_){} }''',
                '''Class,_,:,_g9,{,Var,$_0,,,$E_,,,_,:,Boolean,;,$_,(,_,:,TY,;,w__,:,Array,[,Array,[,Array,[,Float,,,4231369849,],,,0xF,],,,02,],),{,Continue,;,},Constructor,(,),{,},Constructor,(,L,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_163(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _n{Var $1,_,K,$__k,$83:_;$9O(__,_,_G,y:_7;_,zIh:Array [Array [Array [Array [Array [Int ,076],5],0B1010111],0x3F],0B1010111]){} }Class _18KI:_{}''',
                '''Class,_n,{,Var,$1,,,_,,,K,,,$__k,,,$83,:,_,;,$9O,(,__,,,_,,,_G,,,y,:,_7,;,_,,,zIh,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,076,],,,5,],,,0B1010111,],,,0x3F,],,,0B1010111,],),{,},},Class,_18KI,:,_,{,},<EOF>''',
                101
            )
        )

    def test_164(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:M{Val $_:Array [Array [Array [String ,0x8F],0x42],0B1];$N(r9:_){} }Class __:__A{Var y:Boolean ;Var _,$j,$_,$0NLU_u,_:d;}''',
                '''Class,v,:,M,{,Val,$_,:,Array,[,Array,[,Array,[,String,,,0x8F,],,,0x42,],,,0B1,],;,$N,(,r9,:,_,),{,},},Class,__,:,__A,{,Var,y,:,Boolean,;,Var,_,,,$j,,,$_,,,$0NLU_u,,,_,:,d,;,},<EOF>''',
                101
            )
        )

    def test_165(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{$7(){}Var nt:_od;}Class _{}Class e{Constructor (){} }Class d{Var $_,_030:Array [Array [Int ,75_34],0B100011];}''',
                '''Class,O,{,$7,(,),{,},Var,nt,:,_od,;,},Class,_,{,},Class,e,{,Constructor,(,),{,},},Class,d,{,Var,$_,,,_030,:,Array,[,Array,[,Int,,,7534,],,,0B100011,],;,},<EOF>''',
                101
            )
        )

    def test_166(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Q5{Destructor (){}Val W,$9,_,T_,_,_,k_,$w9:_;Destructor (){New R().Qk69();} }Class __4{}Class _{Destructor (){} }Class V:B_{}Class _{}Class BN:_n{Constructor (E:Int ;b_5,xB:Array [Int ,0X1];L:String ){Continue ;}Var F,_7_:Array [Array [Array [Float ,67],0x6],0X63];Var $K,_3:Int ;}''',
                '''Class,_Q5,{,Destructor,(,),{,},Val,W,,,$9,,,_,,,T_,,,_,,,_,,,k_,,,$w9,:,_,;,Destructor,(,),{,New,R,(,),.,Qk69,(,),;,},},Class,__4,{,},Class,_,{,Destructor,(,),{,},},Class,V,:,B_,{,},Class,_,{,},Class,BN,:,_n,{,Constructor,(,E,:,Int,;,b_5,,,xB,:,Array,[,Int,,,0X1,],;,L,:,String,),{,Continue,;,},Var,F,,,_7_,:,Array,[,Array,[,Array,[,Float,,,67,],,,0x6,],,,0X63,],;,Var,$K,,,_3,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_167(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_L_O:hu{Val a__,$_:Int ;Var _,$7_y5u6:Array [Array [Array [Array [Float ,0136],0B1],0B1010010],0B10];}Class D5:r{}Class V7:_Q__wT_5_{Constructor (){} }Class E_{}''',
                '''Class,I_L_O,:,hu,{,Val,a__,,,$_,:,Int,;,Var,_,,,$7_y5u6,:,Array,[,Array,[,Array,[,Array,[,Float,,,0136,],,,0B1,],,,0B1010010,],,,0B10,],;,},Class,D5,:,r,{,},Class,V7,:,_Q__wT_5_,{,Constructor,(,),{,},},Class,E_,{,},<EOF>''',
                101
            )
        )

    def test_168(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n__3:yZ{Var $XA:_;}Class K_{Val $_U,_,__:Array [Array [Array [Array [Float ,0b101010],0x2F],0b1],0x3];}Class _{}''',
                '''Class,n__3,:,yZ,{,Var,$XA,:,_,;,},Class,K_,{,Val,$_U,,,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b101010,],,,0x2F,],,,0b1,],,,0x3,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_169(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:PC_{Destructor (){Val k:_;}Destructor (){} }Class x:_{Constructor (X_33:F){Continue ;Continue ;}$_J(_g:Int ;l2:Array [Array [String ,03_6],0xED_4];eIX__4,_X:Array [Boolean ,0b1011010];U,b:String ){}Var _,Y_1_,_:c8_5;}Class _{$l(t:Float ){} }''',
                '''Class,_,{,},Class,_,:,PC_,{,Destructor,(,),{,Val,k,:,_,;,},Destructor,(,),{,},},Class,x,:,_,{,Constructor,(,X_33,:,F,),{,Continue,;,Continue,;,},$_J,(,_g,:,Int,;,l2,:,Array,[,Array,[,String,,,036,],,,0xED4,],;,eIX__4,,,_X,:,Array,[,Boolean,,,0b1011010,],;,U,,,b,:,String,),{,},Var,_,,,Y_1_,,,_,:,c8_5,;,},Class,_,{,$l,(,t,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_170(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _N{Val _CC:Float =_::$_;Destructor (){}Destructor (){_RR_::$7S=!--e2::$Sk()._u.Q9().S_().s_().f._W_.y().S().b_()._y5;{}Return ;Break ;Continue ;Continue ;} }''',
                '''Class,_N,{,Val,_CC,:,Float,=,_,::,$_,;,Destructor,(,),{,},Destructor,(,),{,_RR_,::,$7S,=,!,-,-,e2,::,$Sk,(,),.,_u,.,Q9,(,),.,S_,(,),.,s_,(,),.,f,.,_W_,.,y,(,),.,S,(,),.,b_,(,),.,_y5,;,{,},Return,;,Break,;,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_171(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$l_(_g,h,x:_;_2,_sL,_:Boolean ;pu_b:Hp_2;s:Array [Array [Array [Array [Array [Int ,56],017],0b1100010],100],7];r_:Array [Int ,04_0_66]){Break ;{ {} }}Var $C,_:Array [Array [Float ,017],0B1010100];}Class F:_{Val _5:_5;}''',
                '''Class,_,:,_,{,$l_,(,_g,,,h,,,x,:,_,;,_2,,,_sL,,,_,:,Boolean,;,pu_b,:,Hp_2,;,s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,56,],,,017,],,,0b1100010,],,,100,],,,7,],;,r_,:,Array,[,Int,,,04066,],),{,Break,;,{,{,},},},Var,$C,,,_,:,Array,[,Array,[,Float,,,017,],,,0B1010100,],;,},Class,F,:,_,{,Val,_5,:,_5,;,},<EOF>''',
                101
            )
        )

    def test_172(self):
        self.assertTrue(
            TestLexer.test(
                '''Class lB{}Class _:__e{}Class v_9:_{N(){}Destructor (){}Var _,p:Array [Array [Array [String ,0b1000111],07_61],0b1000111];Var $8:String ;}''',
                '''Class,lB,{,},Class,_,:,__e,{,},Class,v_9,:,_,{,N,(,),{,},Destructor,(,),{,},Var,_,,,p,:,Array,[,Array,[,Array,[,String,,,0b1000111,],,,0761,],,,0b1000111,],;,Var,$8,:,String,;,},<EOF>''',
                101
            )
        )

    def test_173(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_3{$W3__Z(T0,t__3:Float ;vyg,_,_,_7:Array [Array [Array [Array [Int ,0100],7_1],0100],0x7];_:Float ){Continue ;} }''',
                '''Class,N,:,_3,{,$W3__Z,(,T0,,,t__3,:,Float,;,vyg,,,_,,,_,,,_7,:,Array,[,Array,[,Array,[,Array,[,Int,,,0100,],,,71,],,,0100,],,,0x7,],;,_,:,Float,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_174(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z{_j(){} }Class c:_3{Var a3,$_5,$__3:__2;}Class Z6:Z19{}Class _:_{}Class j{Var $l,d:Int ;___FT(){Continue ;} }''',
                '''Class,z,{,_j,(,),{,},},Class,c,:,_3,{,Var,a3,,,$_5,,,$__3,:,__2,;,},Class,Z6,:,Z19,{,},Class,_,:,_,{,},Class,j,{,Var,$l,,,d,:,Int,;,___FT,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_175(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R:_{}Class _Y{Var _,$9___0,L:Int ;Destructor (){} }Class _O:_{Destructor (){Val _7l,_,i_,_J,_:Boolean ;_GPt::$9K2();}Destructor (){} }''',
                '''Class,R,:,_,{,},Class,_Y,{,Var,_,,,$9___0,,,L,:,Int,;,Destructor,(,),{,},},Class,_O,:,_,{,Destructor,(,),{,Val,_7l,,,_,,,i_,,,_J,,,_,:,Boolean,;,_GPt,::,$9K2,(,),;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_176(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _X{Constructor (s:Array [Array [Array [Array [Array [Array [Float ,023],0b1],0x31],0xA2_E],0b1010101],0B110100];_:Array [Array [String ,5],0b1]){} }Class FE_{Constructor (_:Boolean ){} }''',
                '''Class,_X,{,Constructor,(,s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,023,],,,0b1,],,,0x31,],,,0xA2E,],,,0b1010101,],,,0B110100,],;,_,:,Array,[,Array,[,String,,,5,],,,0b1,],),{,},},Class,FE_,{,Constructor,(,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_177(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:___{}Class _:K{Constructor (_04:String ;_e_,gNv:Float ;F,_,AV,w,h:d;_lwx_,_,o___2:Boolean ;Q:Array [String ,58];U,_:Boolean ){} }''',
                '''Class,f,:,___,{,},Class,_,:,K,{,Constructor,(,_04,:,String,;,_e_,,,gNv,:,Float,;,F,,,_,,,AV,,,w,,,h,:,d,;,_lwx_,,,_,,,o___2,:,Boolean,;,Q,:,Array,[,String,,,58,],;,U,,,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_178(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _36sD7:f{_8(_3,oA,_46:Float ;K,_7,m8E,_:Array [Array [Array [Float ,0b1],0X36],03]){ {}{}{Return ;Val B_M:_lz;Continue ;} }}Class g_{}''',
                '''Class,_,{,},Class,_36sD7,:,f,{,_8,(,_3,,,oA,,,_46,:,Float,;,K,,,_7,,,m8E,,,_,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,0X36,],,,03,],),{,{,},{,},{,Return,;,Val,B_M,:,_lz,;,Continue,;,},},},Class,g_,{,},<EOF>''',
                101
            )
        )

    def test_179(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:u{}Class _1:R3278{$__2_(j:Boolean ;_n,m:Int ;_,w9,_:Array [Array [Array [Boolean ,0x5F],30],0X4B];EY_,WhJ,H,_7:Dn){} }''',
                '''Class,_,:,u,{,},Class,_1,:,R3278,{,$__2_,(,j,:,Boolean,;,_n,,,m,:,Int,;,_,,,w9,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0x5F,],,,30,],,,0X4B,],;,EY_,,,WhJ,,,H,,,_7,:,Dn,),{,},},<EOF>''',
                101
            )
        )

    def test_180(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v62Z:_{Var _,f_A_:Float ;Val _,E,EP,$_y:Array [Array [String ,0X9],0xA91];Constructor (){}Destructor (){}Constructor (){} }Class z_:g{}''',
                '''Class,_v62Z,:,_,{,Var,_,,,f_A_,:,Float,;,Val,_,,,E,,,EP,,,$_y,:,Array,[,Array,[,String,,,0X9,],,,0xA91,],;,Constructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},Class,z_,:,g,{,},<EOF>''',
                101
            )
        )

    def test_181(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p:_a_{_G_G(__,GB,k:_;__4,_5cC3:String ){} }Class _{Constructor (W:Array [Boolean ,0X59];S__:Boolean ;_,Z_Y,_,___:Int ){}Constructor (){Self ._();} }Class __G_4:_Z6{r(a4:Array [Array [Float ,040],0b1];B,b,_:Int ){} }''',
                '''Class,p,:,_a_,{,_G_G,(,__,,,GB,,,k,:,_,;,__4,,,_5cC3,:,String,),{,},},Class,_,{,Constructor,(,W,:,Array,[,Boolean,,,0X59,],;,S__,:,Boolean,;,_,,,Z_Y,,,_,,,___,:,Int,),{,},Constructor,(,),{,Self,.,_,(,),;,},},Class,__G_4,:,_Z6,{,r,(,a4,:,Array,[,Array,[,Float,,,040,],,,0b1,],;,B,,,b,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_182(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:R_bBc{Destructor (){}Y(__5,_Y:Float ;_:i;T5K7V_9g7:Array [String ,1]){}Val __,_,_:Array [Array [Array [Array [Array [String ,060],060],060],68],06];}''',
                '''Class,_,:,R_bBc,{,Destructor,(,),{,},Y,(,__5,,,_Y,:,Float,;,_,:,i,;,T5K7V_9g7,:,Array,[,String,,,1,],),{,},Val,__,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,060,],,,060,],,,060,],,,68,],,,06,],;,},<EOF>''',
                101
            )
        )

    def test_183(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_4_{Destructor (){} }Class pAP{}Class l:_2_{}Class U:_{Var $4_,_:s;Var _5_:_;}Class j:__{Val rS,$_:Array [Boolean ,0X62];}''',
                '''Class,_1_4_,{,Destructor,(,),{,},},Class,pAP,{,},Class,l,:,_2_,{,},Class,U,:,_,{,Var,$4_,,,_,:,s,;,Var,_5_,:,_,;,},Class,j,:,__,{,Val,rS,,,$_,:,Array,[,Boolean,,,0X62,],;,},<EOF>''',
                101
            )
        )

    def test_184(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class B:__{}Class Vb3y:_{_(_:Boolean ;_:_h5__;pE,l89:_;_96:Int ){ {} }Constructor (d:Array [Array [Array [Boolean ,0x8],0x5C],0B11_1_0]){} }Class b_T_{}Class _G_9_a9:_{}''',
                '''Class,_,{,},Class,B,:,__,{,},Class,Vb3y,:,_,{,_,(,_,:,Boolean,;,_,:,_h5__,;,pE,,,l89,:,_,;,_96,:,Int,),{,{,},},Constructor,(,d,:,Array,[,Array,[,Array,[,Boolean,,,0x8,],,,0x5C,],,,0B1110,],),{,},},Class,b_T_,{,},Class,_G_9_a9,:,_,{,},<EOF>''',
                101
            )
        )

    def test_185(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_6__,_:____;o8,Fo,_8_,_u_b:Array [Array [Array [Boolean ,0X2],0B1_11_1],0B101]){New _().K._6.F();} }Class _{Val _:Float ;}''',
                '''Class,_,{,Constructor,(,_6__,,,_,:,____,;,o8,,,Fo,,,_8_,,,_u_b,:,Array,[,Array,[,Array,[,Boolean,,,0X2,],,,0B1111,],,,0B101,],),{,New,_,(,),.,K,.,_6,.,F,(,),;,},},Class,_,{,Val,_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_186(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _3_{U(){}$B(_f0_m:Array [Array [Int ,0b10],57];K:String ){}Constructor (_:Array [Array [Boolean ,0B1010100],57]){} }Class _i:____{Var FQ_,_R,W,v,$__61_:Float ;Val $_,_M8:Boolean ;}Class _{}''',
                '''Class,_,{,},Class,_3_,{,U,(,),{,},$B,(,_f0_m,:,Array,[,Array,[,Int,,,0b10,],,,57,],;,K,:,String,),{,},Constructor,(,_,:,Array,[,Array,[,Boolean,,,0B1010100,],,,57,],),{,},},Class,_i,:,____,{,Var,FQ_,,,_R,,,W,,,v,,,$__61_,:,Float,;,Val,$_,,,_M8,:,Boolean,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_187(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z:e{Var a6:Boolean ;}Class SJ7_:J{Var V1_1:Float ;Val _Zb,$_1RR5__,$V1:String ;Destructor (){}e6_(){}Constructor (){ {} }}''',
                '''Class,Z,:,e,{,Var,a6,:,Boolean,;,},Class,SJ7_,:,J,{,Var,V1_1,:,Float,;,Val,_Zb,,,$_1RR5__,,,$V1,:,String,;,Destructor,(,),{,},e6_,(,),{,},Constructor,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_188(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:E{}Class _v{Constructor (y:Array [Int ,03];_:Array [String ,0X69];G0_:Int ;K,__,_:Array [Array [Array [Array [Array [Float ,0144],12],022],0B1_1_1_0],0b1_0];o4,e,_j8:Array [Array [Array [Float ,0X5B],0b1000010],0b1000010];M:_){} }Class __:Z7{}''',
                '''Class,_,{,},Class,_,:,E,{,},Class,_v,{,Constructor,(,y,:,Array,[,Int,,,03,],;,_,:,Array,[,String,,,0X69,],;,G0_,:,Int,;,K,,,__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0144,],,,12,],,,022,],,,0B1110,],,,0b10,],;,o4,,,e,,,_j8,:,Array,[,Array,[,Array,[,Float,,,0X5B,],,,0b1000010,],,,0b1000010,],;,M,:,_,),{,},},Class,__,:,Z7,{,},<EOF>''',
                101
            )
        )

    def test_189(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s_0{}Class G4{Destructor (){}$4H(){Val _:Array [Array [Array [Array [Array [Int ,03_6_0_77],1],04],0XD],0B10];Var tv,__,P:Int ;}$X_W(){Val D,_B,h,k2,y:Int ;___A::$_.T();} }Class A:S{Var $_9:Array [Boolean ,0b1000011];}''',
                '''Class,s_0,{,},Class,G4,{,Destructor,(,),{,},$4H,(,),{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,036077,],,,1,],,,04,],,,0XD,],,,0B10,],;,Var,tv,,,__,,,P,:,Int,;,},$X_W,(,),{,Val,D,,,_B,,,h,,,k2,,,y,:,Int,;,___A,::,$_,.,T,(,),;,},},Class,A,:,S,{,Var,$_9,:,Array,[,Boolean,,,0b1000011,],;,},<EOF>''',
                101
            )
        )

    def test_190(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c3s:e0i{Var $E7,z_,$T2,$_:Array [Int ,0x5B];}Class _n{Constructor (_s_,_:_;V_:Array [Int ,64];_,____U:A;_4,_sI15,_N,p,l0:u;_9:_){} }''',
                '''Class,c3s,:,e0i,{,Var,$E7,,,z_,,,$T2,,,$_,:,Array,[,Int,,,0x5B,],;,},Class,_n,{,Constructor,(,_s_,,,_,:,_,;,V_,:,Array,[,Int,,,64,],;,_,,,____U,:,A,;,_4,,,_sI15,,,_N,,,p,,,l0,:,u,;,_9,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_191(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{}Class u:Q31{Val __:Array [String ,706];Destructor (){}Val _,$7:Array [Array [Float ,68],023];Var T_,R668:String ;}''',
                '''Class,x,{,},Class,u,:,Q31,{,Val,__,:,Array,[,String,,,706,],;,Destructor,(,),{,},Val,_,,,$7,:,Array,[,Array,[,Float,,,68,],,,023,],;,Var,T_,,,R668,:,String,;,},<EOF>''',
                101
            )
        )

    def test_192(self):
        self.assertTrue(
            TestLexer.test(
                '''Class iW__{Var R4:String ;}Class _:g{Constructor (_7,C_5:Boolean ;Qp,q:Array [Float ,0x4];_:Array [Array [String ,0B1_1],25];_9_28,w_,l,EK:Array [Array [Boolean ,0b111101],0X65];_____:Int ){} }''',
                '''Class,iW__,{,Var,R4,:,String,;,},Class,_,:,g,{,Constructor,(,_7,,,C_5,:,Boolean,;,Qp,,,q,:,Array,[,Float,,,0x4,],;,_,:,Array,[,Array,[,String,,,0B11,],,,25,],;,_9_28,,,w_,,,l,,,EK,:,Array,[,Array,[,Boolean,,,0b111101,],,,0X65,],;,_____,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_193(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_:d4{Constructor (Z:Array [Array [Array [Int ,0X2D],0B1_1_0_01],0x6F];E6:Float ;s:String ;W_110_5:String ){} }Class f{}Class nt{}''',
                '''Class,l_,:,d4,{,Constructor,(,Z,:,Array,[,Array,[,Array,[,Int,,,0X2D,],,,0B11001,],,,0x6F,],;,E6,:,Float,;,s,:,String,;,W_110_5,:,String,),{,},},Class,f,{,},Class,nt,{,},<EOF>''',
                101
            )
        )

    def test_194(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_n{}Class H_xD_{Constructor (){ {}Break ;}a52(tHr,y:Float ;_V,_,_:Float ){Break ;Break ;}Constructor (){Var ___:x;} }''',
                '''Class,_,:,_n,{,},Class,H_xD_,{,Constructor,(,),{,{,},Break,;,},a52,(,tHr,,,y,:,Float,;,_V,,,_,,,_,:,Float,),{,Break,;,Break,;,},Constructor,(,),{,Var,___,:,x,;,},},<EOF>''',
                101
            )
        )

    def test_195(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___8:_K{w(w_,ZT_,_6,EE,_es_:Array [Array [Boolean ,0X5D],52];_88_,_,S5X,_:_2;_:__;i,h,_:Array [Float ,52];V,_:Int ;_,_A42W,_3r4l_:Boolean ;_,i,K_,_z,_4___gP27p,E__,F:Array [Float ,0x5C];_:Array [String ,0X5D];__3:String ){}Val $s:f2;}''',
                '''Class,___8,:,_K,{,w,(,w_,,,ZT_,,,_6,,,EE,,,_es_,:,Array,[,Array,[,Boolean,,,0X5D,],,,52,],;,_88_,,,_,,,S5X,,,_,:,_2,;,_,:,__,;,i,,,h,,,_,:,Array,[,Float,,,52,],;,V,,,_,:,Int,;,_,,,_A42W,,,_3r4l_,:,Boolean,;,_,,,i,,,K_,,,_z,,,_4___gP27p,,,E__,,,F,:,Array,[,Float,,,0x5C,],;,_,:,Array,[,String,,,0X5D,],;,__3,:,String,),{,},Val,$s,:,f2,;,},<EOF>''',
                101
            )
        )

    def test_196(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G9:_AGR_83{$9(){}Destructor (){Continue ;}Var B_9e___:dGK;}Class xC6{}Class __55{}Class __:Sy{Constructor (j,_:String ;G:Array [String ,0x3]){}Val _1:_;}''',
                '''Class,G9,:,_AGR_83,{,$9,(,),{,},Destructor,(,),{,Continue,;,},Var,B_9e___,:,dGK,;,},Class,xC6,{,},Class,__55,{,},Class,__,:,Sy,{,Constructor,(,j,,,_,:,String,;,G,:,Array,[,String,,,0x3,],),{,},Val,_1,:,_,;,},<EOF>''',
                101
            )
        )

    def test_197(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:CG{Var $_z7,_:Int ;Val $q,$_,$2:Array [Array [Array [Array [String ,27],0132],040],0b100100];}Class _{}Class _kT_Z{}''',
                '''Class,w,:,CG,{,Var,$_z7,,,_,:,Int,;,Val,$q,,,$_,,,$2,:,Array,[,Array,[,Array,[,Array,[,String,,,27,],,,0132,],,,040,],,,0b100100,],;,},Class,_,{,},Class,_kT_Z,{,},<EOF>''',
                101
            )
        )

    def test_198(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class b{Destructor (){}Val $_:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0b1],0112],0X5A],76],5_08],0b1],2_0],0b1],0b1];Val _:Array [Array [Array [String ,0x6],0XA_1B_8AD],76];}Class aG{Var ___,L,_:Float ;}''',
                '''Class,_,{,},Class,b,{,Destructor,(,),{,},Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0112,],,,0X5A,],,,76,],,,508,],,,0b1,],,,20,],,,0b1,],,,0b1,],;,Val,_,:,Array,[,Array,[,Array,[,String,,,0x6,],,,0XA1B8AD,],,,76,],;,},Class,aG,{,Var,___,,,L,,,_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_199(self):
        self.assertTrue(
            TestLexer.test(
                '''Class xH_FDC0_:_qy{}Class __:_5_{Destructor (){}Constructor (){ {Var _1_7:Array [Array [Array [Boolean ,3],0B1_0_1],0B101111];}Val _:Float ;} }''',
                '''Class,xH_FDC0_,:,_qy,{,},Class,__,:,_5_,{,Destructor,(,),{,},Constructor,(,),{,{,Var,_1_7,:,Array,[,Array,[,Array,[,Boolean,,,3,],,,0B101,],,,0B101111,],;,},Val,_,:,Float,;,},},<EOF>''',
                101
            )
        )

    def test_200(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z__{Constructor (b,_:Boolean ;_M_,h583:WA;_:Array [Array [Array [Array [Array [Array [Array [Int ,22],0X57],0xB],22],0B1_01],054],0x2B];_:_Gp){} }Class D:_{}''',
                '''Class,z__,{,Constructor,(,b,,,_,:,Boolean,;,_M_,,,h583,:,WA,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,22,],,,0X57,],,,0xB,],,,22,],,,0B101,],,,054,],,,0x2B,],;,_,:,_Gp,),{,},},Class,D,:,_,{,},<EOF>''',
                101
            )
        )

    def test_201(self):
        self.assertTrue(
            TestLexer.test(
                '''Class IA:w1{$8m(){} }Class _A{Var V:String ;Val _,$6V:Array [Array [Array [Array [Array [Array [Boolean ,0B1],0XD],0b11],0x45_3],0X1],04];}''',
                '''Class,IA,:,w1,{,$8m,(,),{,},},Class,_A,{,Var,V,:,String,;,Val,_,,,$6V,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0XD,],,,0b11,],,,0x453,],,,0X1,],,,04,],;,},<EOF>''',
                101
            )
        )

    def test_202(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Fm:L{L_(Vz2,__,E:Array [Array [Float ,12],050]){}Var $c16u:Array [Array [Array [Float ,12],0B1_011_1_00],0xE_D_A];}''',
                '''Class,Fm,:,L,{,L_,(,Vz2,,,__,,,E,:,Array,[,Array,[,Float,,,12,],,,050,],),{,},Var,$c16u,:,Array,[,Array,[,Array,[,Float,,,12,],,,0B1011100,],,,0xEDA,],;,},<EOF>''',
                101
            )
        )

    def test_203(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C{Constructor (h:Array [Int ,8];xu:_;HG:Float ;_y_:o;Z:Array [Float ,0b111101];lnh_,____:__R1){} }Class _:m{}''',
                '''Class,C,{,Constructor,(,h,:,Array,[,Int,,,8,],;,xu,:,_,;,HG,:,Float,;,_y_,:,o,;,Z,:,Array,[,Float,,,0b111101,],;,lnh_,,,____,:,__R1,),{,},},Class,_,:,m,{,},<EOF>''',
                101
            )
        )

    def test_204(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Constructor (_:_){}Destructor (){}Var $_:Float ;z(){}Val $3:Array [Array [Array [Array [Boolean ,6],0X16],83],03];}''',
                '''Class,S,{,Constructor,(,_,:,_,),{,},Destructor,(,),{,},Var,$_,:,Float,;,z,(,),{,},Val,$3,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,6,],,,0X16,],,,83,],,,03,],;,},<EOF>''',
                101
            )
        )

    def test_205(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t09{Var x,f:Array [Array [Boolean ,0XA8],0x2];A(){Break ;}Var p:Array [Boolean ,3];}Class M{Val _,$__,$_j:r_l;}''',
                '''Class,t09,{,Var,x,,,f,:,Array,[,Array,[,Boolean,,,0XA8,],,,0x2,],;,A,(,),{,Break,;,},Var,p,:,Array,[,Boolean,,,3,],;,},Class,M,{,Val,_,,,$__,,,$_j,:,r_l,;,},<EOF>''',
                101
            )
        )

    def test_206(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8i4{Destructor (){}Destructor (){}Constructor (){} }Class la:k_e0{Destructor (){} }Class _97{$_S2(__,q9_:Array [Int ,3_5];H,_B__,_4:Float ){Continue ;} }Class _i2:_{Var _,_N:String ;}Class _{$6(_,_b,Y,_4,_8,_1:_){}_I(od,wJQ,vz_:Array [Boolean ,0B1];B44p:Int ){Val _:Boolean ;}_1(_OU,_,n_,W_,w:Array [Boolean ,3]){}Var $w_:Array [Array [Int ,06],0x17];}''',
                '''Class,_8i4,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},Class,la,:,k_e0,{,Destructor,(,),{,},},Class,_97,{,$_S2,(,__,,,q9_,:,Array,[,Int,,,35,],;,H,,,_B__,,,_4,:,Float,),{,Continue,;,},},Class,_i2,:,_,{,Var,_,,,_N,:,String,;,},Class,_,{,$6,(,_,,,_b,,,Y,,,_4,,,_8,,,_1,:,_,),{,},_I,(,od,,,wJQ,,,vz_,:,Array,[,Boolean,,,0B1,],;,B44p,:,Int,),{,Val,_,:,Boolean,;,},_1,(,_OU,,,_,,,n_,,,W_,,,w,:,Array,[,Boolean,,,3,],),{,},Var,$w_,:,Array,[,Array,[,Int,,,06,],,,0x17,],;,},<EOF>''',
                101
            )
        )

    def test_207(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$490(Y,_:Array [Array [Array [Boolean ,0115],0b1011001],54]){_99::$J();}Destructor (){Continue ;} }Class R9{Val N_J:C;}''',
                '''Class,_,{,$490,(,Y,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0115,],,,0b1011001,],,,54,],),{,_99,::,$J,(,),;,},Destructor,(,),{,Continue,;,},},Class,R9,{,Val,N_J,:,C,;,},<EOF>''',
                101
            )
        )

    def test_208(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _A_:__{Var _h9_,_:Array [Array [Array [Array [Float ,77],07_0],0x57],0b1];}Class _1w:o{Val e,r,$_,$E_:Boolean ;}''',
                '''Class,_A_,:,__,{,Var,_h9_,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,77,],,,070,],,,0x57,],,,0b1,],;,},Class,_1w,:,o,{,Val,e,,,r,,,$_,,,$E_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_209(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:j_{Val _,$0:Boolean ;Var _:String ;}Class x99G:qx7{G_(t_,_:Array [Int ,05_05];f:Array [Int ,0X4F]){ {}{} }}''',
                '''Class,a,:,j_,{,Val,_,,,$0,:,Boolean,;,Var,_,:,String,;,},Class,x99G,:,qx7,{,G_,(,t_,,,_,:,Array,[,Int,,,0505,],;,f,:,Array,[,Int,,,0X4F,],),{,{,},{,},},},<EOF>''',
                101
            )
        )

    def test_210(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (A,_,Wo:Array [Array [Int ,0131],0B1001010];_9:Array [Boolean ,0131]){}Constructor (q,_:_;c:Float ;l,_n,R:Array [Int ,0B1]){} }''',
                '''Class,_,:,_,{,Constructor,(,A,,,_,,,Wo,:,Array,[,Array,[,Int,,,0131,],,,0B1001010,],;,_9,:,Array,[,Boolean,,,0131,],),{,},Constructor,(,q,,,_,:,_,;,c,:,Float,;,l,,,_n,,,R,:,Array,[,Int,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_211(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s3{}Class _G_{Constructor (b:_;_58,_,r_:String ;b9,O3pwc:Array [Array [Boolean ,0XD_2_A5],99]){}Val $4A7i,$_:_;}''',
                '''Class,s3,{,},Class,_G_,{,Constructor,(,b,:,_,;,_58,,,_,,,r_,:,String,;,b9,,,O3pwc,:,Array,[,Array,[,Boolean,,,0XD2A5,],,,99,],),{,},Val,$4A7i,,,$_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_212(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A{}Class C:_{}Class CI{_(){} }Class A:w5{Constructor (){Break ;} }Class a{}Class _:Y1{}Class _t6R{}Class _{}''',
                '''Class,A,{,},Class,C,:,_,{,},Class,CI,{,_,(,),{,},},Class,A,:,w5,{,Constructor,(,),{,Break,;,},},Class,a,{,},Class,_,:,Y1,{,},Class,_t6R,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_213(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:a69{__4(_2A:Array [String ,0xA];mSm:String ;_:Array [Array [String ,0b11_0_0_10],0141];__,x:_){} }Class _B:_W{}''',
                '''Class,_,{,},Class,_,:,a69,{,__4,(,_2A,:,Array,[,String,,,0xA,],;,mSm,:,String,;,_,:,Array,[,Array,[,String,,,0b110010,],,,0141,],;,__,,,x,:,_,),{,},},Class,_B,:,_W,{,},<EOF>''',
                101
            )
        )

    def test_214(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Constructor (){}Constructor (o2,R,_,r,_,C30,_:Array [String ,0XB1];H:_208I;_,T:Int ;lb:Array [Array [Boolean ,6_5],0X7]){}$___(_:Boolean ;_o:Boolean ;_:fd){}Var _,$3z_,$itx:Array [Float ,76];}''',
                '''Class,_,{,Destructor,(,),{,},Constructor,(,),{,},Constructor,(,o2,,,R,,,_,,,r,,,_,,,C30,,,_,:,Array,[,String,,,0XB1,],;,H,:,_208I,;,_,,,T,:,Int,;,lb,:,Array,[,Array,[,Boolean,,,65,],,,0X7,],),{,},$___,(,_,:,Boolean,;,_o,:,Boolean,;,_,:,fd,),{,},Var,_,,,$3z_,,,$itx,:,Array,[,Float,,,76,],;,},<EOF>''',
                101
            )
        )

    def test_215(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d75{Constructor (_91:Boolean ;_44_,_:f;w8:z;_1,G4_m:Array [Float ,0X8];P:Array [Float ,044];e17_6_,N:Q;_,_,RE:Int ;_,_,__:FI){ {} }}''',
                '''Class,d75,{,Constructor,(,_91,:,Boolean,;,_44_,,,_,:,f,;,w8,:,z,;,_1,,,G4_m,:,Array,[,Float,,,0X8,],;,P,:,Array,[,Float,,,044,],;,e17_6_,,,N,:,Q,;,_,,,_,,,RE,:,Int,;,_,,,_,,,__,:,FI,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_216(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:jP{}Class __0{$l4VAa6(_:Float ){}Destructor (){Break ;Val z,_:Boolean ;}u__251hL7(__:String ){}Destructor (){} }Class _d{}''',
                '''Class,_,:,jP,{,},Class,__0,{,$l4VAa6,(,_,:,Float,),{,},Destructor,(,),{,Break,;,Val,z,,,_,:,Boolean,;,},u__251hL7,(,__,:,String,),{,},Destructor,(,),{,},},Class,_d,{,},<EOF>''',
                101
            )
        )

    def test_217(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _01{Val $5:Array [String ,0115];Val wW,$_J:_;}Class H:p{}Class r{Constructor (){}Var J7_1_:Array [Int ,0x2_0];Val H:Array [Array [Array [String ,0B1],3],0XE_9D];}''',
                '''Class,_01,{,Val,$5,:,Array,[,String,,,0115,],;,Val,wW,,,$_J,:,_,;,},Class,H,:,p,{,},Class,r,{,Constructor,(,),{,},Var,J7_1_,:,Array,[,Int,,,0x20,],;,Val,H,:,Array,[,Array,[,Array,[,String,,,0B1,],,,3,],,,0XE9D,],;,},<EOF>''',
                101
            )
        )

    def test_218(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val _,A,$4,H6,_,_,J:_;}Class V3{Var $X:Array [Boolean ,0b1_1];Val $9:Array [Int ,0104];}Class oTz{Val J,G:i3;Destructor (){} }Class M{}''',
                '''Class,__,{,Val,_,,,A,,,$4,,,H6,,,_,,,_,,,J,:,_,;,},Class,V3,{,Var,$X,:,Array,[,Boolean,,,0b11,],;,Val,$9,:,Array,[,Int,,,0104,],;,},Class,oTz,{,Val,J,,,G,:,i3,;,Destructor,(,),{,},},Class,M,{,},<EOF>''',
                101
            )
        )

    def test_219(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _PM{Var $9,$Q:Array [Array [Array [String ,0X3],74],0X12];Constructor (){} }Class _i{Var a:Array [Array [Int ,04],0B1000010];}Class Y:_3{Constructor (){} }Class _d{}''',
                '''Class,_PM,{,Var,$9,,,$Q,:,Array,[,Array,[,Array,[,String,,,0X3,],,,74,],,,0X12,],;,Constructor,(,),{,},},Class,_i,{,Var,a,:,Array,[,Array,[,Int,,,04,],,,0B1000010,],;,},Class,Y,:,_3,{,Constructor,(,),{,},},Class,_d,{,},<EOF>''',
                101
            )
        )

    def test_220(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _a__{Destructor (){}_2j(){} }Class j:_{}Class _FU:H_{}Class aN:UG__{}Class e5d_{}Class _{Var yo,$0q:Int ;}''',
                '''Class,_a__,{,Destructor,(,),{,},_2j,(,),{,},},Class,j,:,_,{,},Class,_FU,:,H_,{,},Class,aN,:,UG__,{,},Class,e5d_,{,},Class,_,{,Var,yo,,,$0q,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_221(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x79:_{}Class _{}Class _{Constructor (L2_:Array [Int ,0123]){} }Class _:y{Val p,W3_:Array [Array [Boolean ,0x4],0X615];}Class _:h9{$20(){New _().ad();}$_V(J:Array [Boolean ,04_661_7_5];_:Array [Array [Array [Array [Array [Boolean ,0123],0B1011],0x7],0b1],38]){}Destructor (){Var _,msQqv:d_H;}Var $4_,F:U;Destructor (){}Destructor (){} }Class Ekr_4_:C1D_0{}Class q_:B{}''',
                '''Class,x79,:,_,{,},Class,_,{,},Class,_,{,Constructor,(,L2_,:,Array,[,Int,,,0123,],),{,},},Class,_,:,y,{,Val,p,,,W3_,:,Array,[,Array,[,Boolean,,,0x4,],,,0X615,],;,},Class,_,:,h9,{,$20,(,),{,New,_,(,),.,ad,(,),;,},$_V,(,J,:,Array,[,Boolean,,,0466175,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0123,],,,0B1011,],,,0x7,],,,0b1,],,,38,],),{,},Destructor,(,),{,Var,_,,,msQqv,:,d_H,;,},Var,$4_,,,F,:,U,;,Destructor,(,),{,},Destructor,(,),{,},},Class,Ekr_4_,:,C1D_0,{,},Class,q_,:,B,{,},<EOF>''',
                101
            )
        )

    def test_222(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{Destructor (){}Destructor (){} }Class ___7:_h_{Destructor (){} }Class _{}Class e1W:z5_{Constructor (){Var __48_,_:Array [Array [Array [Array [Float ,0106],0X1_8_6_B],0X5D],0X5D];} }''',
                '''Class,e,{,Destructor,(,),{,},Destructor,(,),{,},},Class,___7,:,_h_,{,Destructor,(,),{,},},Class,_,{,},Class,e1W,:,z5_,{,Constructor,(,),{,Var,__48_,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0106,],,,0X186B,],,,0X5D,],,,0X5D,],;,},},<EOF>''',
                101
            )
        )

    def test_223(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C7{}Class _{}Class E{}Class p{_(_i:Array [Int ,0X52];_:Array [Float ,0B1]){ {} }Destructor (){} }Class o1{}Class s0:V{}Class c876{}''',
                '''Class,C7,{,},Class,_,{,},Class,E,{,},Class,p,{,_,(,_i,:,Array,[,Int,,,0X52,],;,_,:,Array,[,Float,,,0B1,],),{,{,},},Destructor,(,),{,},},Class,o1,{,},Class,s0,:,V,{,},Class,c876,{,},<EOF>''',
                101
            )
        )

    def test_224(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j6_:_{Val $7:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0b10000],0X5C],2],0120],0120],0xC],93],0x87_1_B5];}''',
                '''Class,_j6_,:,_,{,Val,$7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10000,],,,0X5C,],,,2,],,,0120,],,,0120,],,,0xC,],,,93,],,,0x871B5,],;,},<EOF>''',
                101
            )
        )

    def test_225(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{}Class _5_{$__(_,E_44,w,A,Of,Q:Array [Array [Array [Array [Array [Boolean ,0X46],0x50],0B11],017],03]){ {} }_K(_:Array [Int ,0b1101];b,_,m,_ZL:Array [Array [Array [Int ,0X21B2_C_58],3_6],0x9]){} }''',
                '''Class,B,{,},Class,_5_,{,$__,(,_,,,E_44,,,w,,,A,,,Of,,,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X46,],,,0x50,],,,0B11,],,,017,],,,03,],),{,{,},},_K,(,_,:,Array,[,Int,,,0b1101,],;,b,,,_,,,m,,,_ZL,:,Array,[,Array,[,Array,[,Int,,,0X21B2C58,],,,36,],,,0x9,],),{,},},<EOF>''',
                101
            )
        )

    def test_226(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $9,ej:Array [Array [Array [Array [Array [Array [Array [Array [Float ,01_54_4_0_2],0100],061],0B1],37],1],0B1],0B10_0];}''',
                '''Class,_,{,Var,$9,,,ej,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0154402,],,,0100,],,,061,],,,0B1,],,,37,],,,1,],,,0B1,],,,0B100,],;,},<EOF>''',
                101
            )
        )

    def test_227(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$k(k__,__,jY,_3_1,IF:Boolean ;J9,_,Z6_,uh:Js;__,_51,X7N6_:Boolean ;zk_:_){Break ;} }Class _2:__{Destructor (){Continue ;Continue ;}Val $_Ij:Float ;}Class _k0:_1_eM{}''',
                '''Class,_,{,$k,(,k__,,,__,,,jY,,,_3_1,,,IF,:,Boolean,;,J9,,,_,,,Z6_,,,uh,:,Js,;,__,,,_51,,,X7N6_,:,Boolean,;,zk_,:,_,),{,Break,;,},},Class,_2,:,__,{,Destructor,(,),{,Continue,;,Continue,;,},Val,$_Ij,:,Float,;,},Class,_k0,:,_1_eM,{,},<EOF>''',
                101
            )
        )

    def test_228(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P{Val $n,$3_,J,$U:Array [Array [String ,0b1000010],61];Val $3:Array [String ,67];}Class _{Var _1,P:Float ;Val $w_1:String ;}Class __7_{}Class _{Constructor (_a,_2,v,zE,y6,Q7c:__;D_8_,N,l,A,B,_,_:Array [Array [Array [String ,0B1_1_100_10_0_1_0],0b1000010],05_5]){} }Class C:C_28{}''',
                '''Class,P,{,Val,$n,,,$3_,,,J,,,$U,:,Array,[,Array,[,String,,,0b1000010,],,,61,],;,Val,$3,:,Array,[,String,,,67,],;,},Class,_,{,Var,_1,,,P,:,Float,;,Val,$w_1,:,String,;,},Class,__7_,{,},Class,_,{,Constructor,(,_a,,,_2,,,v,,,zE,,,y6,,,Q7c,:,__,;,D_8_,,,N,,,l,,,A,,,B,,,_,,,_,:,Array,[,Array,[,Array,[,String,,,0B1110010010,],,,0b1000010,],,,055,],),{,},},Class,C,:,C_28,{,},<EOF>''',
                101
            )
        )

    def test_229(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:_{Var R4,_3,$_:Array [Array [Int ,0X7],0X57];}Class _:_T_j{Val $_,$O1F_,__,$9,x,$5,$_,_:Y6;Destructor (){} }Class _:_21_x{}''',
                '''Class,a,:,_,{,Var,R4,,,_3,,,$_,:,Array,[,Array,[,Int,,,0X7,],,,0X57,],;,},Class,_,:,_T_j,{,Val,$_,,,$O1F_,,,__,,,$9,,,x,,,$5,,,$_,,,_,:,Y6,;,Destructor,(,),{,},},Class,_,:,_21_x,{,},<EOF>''',
                101
            )
        )

    def test_230(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:b{Var $o__:Array [Array [Array [Array [Int ,0X7],4],0b1],05_3];Var $_:Array [Int ,0xD];Constructor (){}Destructor (){} }''',
                '''Class,_,:,b,{,Var,$o__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X7,],,,4,],,,0b1,],,,053,],;,Var,$_,:,Array,[,Int,,,0xD,],;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_231(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:_x_1__{}Class y7J_:u{}Class __:j30x{Constructor (_,__5,_,S:Boolean ;G,_:String ){} }Class Ep17{Destructor (){} }''',
                '''Class,_,{,},Class,_,:,_x_1__,{,},Class,y7J_,:,u,{,},Class,__,:,j30x,{,Constructor,(,_,,,__5,,,_,,,S,:,Boolean,;,G,,,_,:,String,),{,},},Class,Ep17,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_232(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __z:__{}Class _{Var $j:Array [Array [Array [Array [Float ,0B111_0_1_1_1_0],07],0B11_1],75];Val J:Array [Float ,012];}Class Ge0_9{}''',
                '''Class,_,{,},Class,__z,:,__,{,},Class,_,{,Var,$j,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B11101110,],,,07,],,,0B111,],,,75,],;,Val,J,:,Array,[,Float,,,012,],;,},Class,Ge0_9,{,},<EOF>''',
                101
            )
        )

    def test_233(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (){Continue ;N::$_();}RH(_,n:Array [Array [Boolean ,060],05_264_3];C,YBA,wi_C:Boolean ;_:_T;_,Z,a_,_,_,uR_,_:Array [Array [Array [Array [Array [Array [Array [String ,1],01],060],060],0x2A],0b1],0b110];_,_5,_:v){} }''',
                '''Class,_,:,_,{,Constructor,(,),{,Continue,;,N,::,$_,(,),;,},RH,(,_,,,n,:,Array,[,Array,[,Boolean,,,060,],,,052643,],;,C,,,YBA,,,wi_C,:,Boolean,;,_,:,_T,;,_,,,Z,,,a_,,,_,,,_,,,uR_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,1,],,,01,],,,060,],,,060,],,,0x2A,],,,0b1,],,,0b110,],;,_,,,_5,,,_,:,v,),{,},},<EOF>''',
                101
            )
        )

    def test_234(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){ {} }Constructor (J:Boolean ){Continue ;Break ;}Fw1y3R0th(_,_:s;z:Boolean ;K_:kL_){Break ;} }''',
                '''Class,_,{,Constructor,(,),{,{,},},Constructor,(,J,:,Boolean,),{,Continue,;,Break,;,},Fw1y3R0th,(,_,,,_,:,s,;,z,:,Boolean,;,K_,:,kL_,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_235(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{cwI(_6,__,_f76___:Boolean ;_s9n1,_6:Array [Array [Boolean ,0142],0B110101]){ {}Break ;}Destructor (){Continue ;} }''',
                '''Class,_,{,cwI,(,_6,,,__,,,_f76___,:,Boolean,;,_s9n1,,,_6,:,Array,[,Array,[,Boolean,,,0142,],,,0B110101,],),{,{,},Break,;,},Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_236(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k{z(_6_,H5:_Y;_8:_;v:Array [Int ,32];iE,_:Array [Boolean ,2_6_1]){}Constructor (){}Destructor (){}$_T(){Val _,_WV,_5t_4,l:Z210Lu;Val k8_0:Array [Boolean ,0104];}$8z_f(){} }''',
                '''Class,_k,{,z,(,_6_,,,H5,:,_Y,;,_8,:,_,;,v,:,Array,[,Int,,,32,],;,iE,,,_,:,Array,[,Boolean,,,261,],),{,},Constructor,(,),{,},Destructor,(,),{,},$_T,(,),{,Val,_,,,_WV,,,_5t_4,,,l,:,Z210Lu,;,Val,k8_0,:,Array,[,Boolean,,,0104,],;,},$8z_f,(,),{,},},<EOF>''',
                101
            )
        )

    def test_237(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_4{Constructor (_8,S,s,P:_;s,J37_Q8:String ;N_9,__,x_LM:_8__;_2E,__,T,_c:Array [String ,0B1001]){} }Class _c{}''',
                '''Class,__,:,_4,{,Constructor,(,_8,,,S,,,s,,,P,:,_,;,s,,,J37_Q8,:,String,;,N_9,,,__,,,x_LM,:,_8__,;,_2E,,,__,,,T,,,_c,:,Array,[,String,,,0B1001,],),{,},},Class,_c,{,},<EOF>''',
                101
            )
        )

    def test_238(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P__:N5{$7(k,_,_zt:Array [Array [Array [Array [Float ,0B1011001],0X28],0b10011],69];g:Array [Boolean ,0B1_1_0_1]){} }Class _a:_5{}''',
                '''Class,P__,:,N5,{,$7,(,k,,,_,,,_zt,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1011001,],,,0X28,],,,0b10011,],,,69,],;,g,:,Array,[,Boolean,,,0B1101,],),{,},},Class,_a,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_239(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class krQ7{Constructor (xt,vub:Boolean ;k4:v;j:Array [Array [Array [Int ,0XA25C],74],0x4F];T0k,_p87,_6:Array [Boolean ,74]){} }''',
                '''Class,_,{,},Class,krQ7,{,Constructor,(,xt,,,vub,:,Boolean,;,k4,:,v,;,j,:,Array,[,Array,[,Array,[,Int,,,0XA25C,],,,74,],,,0x4F,],;,T0k,,,_p87,,,_6,:,Array,[,Boolean,,,74,],),{,},},<EOF>''',
                101
            )
        )

    def test_240(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Var _:_;Val $5_1,r:g;Var $1___119:Int ;Var I___3002_m:String ;}Class hH{$_(__S:String ;_:d){} }Class __:_{Var $31_,f_,$_,$2__,_:Float ;}Class _{}''',
                '''Class,d,{,Var,_,:,_,;,Val,$5_1,,,r,:,g,;,Var,$1___119,:,Int,;,Var,I___3002_m,:,String,;,},Class,hH,{,$_,(,__S,:,String,;,_,:,d,),{,},},Class,__,:,_,{,Var,$31_,,,f_,,,$_,,,$2__,,,_,:,Float,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_241(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3{Constructor (_E_:w_;_,_:Array [Array [Float ,0127],0x40]){}Destructor (){Continue ;} }Class _{Destructor (){} }Class O{}Class pW:C{Constructor (_P,_,v5:Boolean ){} }''',
                '''Class,_3,{,Constructor,(,_E_,:,w_,;,_,,,_,:,Array,[,Array,[,Float,,,0127,],,,0x40,],),{,},Destructor,(,),{,Continue,;,},},Class,_,{,Destructor,(,),{,},},Class,O,{,},Class,pW,:,C,{,Constructor,(,_P,,,_,,,v5,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_242(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _A_{}Class __:TA0_Fe9E{Val X:R___5;Constructor (_:x;m_ao:jV){ {} }}Class H1:H{Val $8uY,$_i_:Array [String ,0B111100];}''',
                '''Class,_A_,{,},Class,__,:,TA0_Fe9E,{,Val,X,:,R___5,;,Constructor,(,_,:,x,;,m_ao,:,jV,),{,{,},},},Class,H1,:,H,{,Val,$8uY,,,$_i_,:,Array,[,String,,,0B111100,],;,},<EOF>''',
                101
            )
        )

    def test_243(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val L,aW_,$dj__:h9;}Class l1:_{Var $a:Array [Float ,0B1011101];Constructor (S,__:Array [Array [Array [Int ,0x7],0x47],0b1];BT:Boolean ;__,__IN:Array [Float ,50];B,_4h8,_:Array [Array [Array [Array [String ,0B1011101],0xB_0],0B1],0XA];X_6z_:_;_k,q,C,n:Boolean ){} }''',
                '''Class,__,{,Val,L,,,aW_,,,$dj__,:,h9,;,},Class,l1,:,_,{,Var,$a,:,Array,[,Float,,,0B1011101,],;,Constructor,(,S,,,__,:,Array,[,Array,[,Array,[,Int,,,0x7,],,,0x47,],,,0b1,],;,BT,:,Boolean,;,__,,,__IN,:,Array,[,Float,,,50,],;,B,,,_4h8,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1011101,],,,0xB0,],,,0B1,],,,0XA,],;,X_6z_,:,_,;,_k,,,q,,,C,,,n,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_244(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{_(_n:og_;c,_s:_;N7_31_,_9__6d_,_,U9,E,Z,h,o512:Array [Array [Int ,0B1_10],0B1001000];__D,h,v:_;__:Int ;__L:Float ){}Val $w_:Array [Array [String ,0x7],4];c(){Return ;} }''',
                '''Class,_,:,_,{,_,(,_n,:,og_,;,c,,,_s,:,_,;,N7_31_,,,_9__6d_,,,_,,,U9,,,E,,,Z,,,h,,,o512,:,Array,[,Array,[,Int,,,0B110,],,,0B1001000,],;,__D,,,h,,,v,:,_,;,__,:,Int,;,__L,:,Float,),{,},Val,$w_,:,Array,[,Array,[,String,,,0x7,],,,4,],;,c,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_245(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Destructor (){Val _:Array [Array [Array [Array [Array [Array [Array [Int ,724],017],5],0B1],14],0xD],0x4_370];}$_(R0,C:Array [String ,0b1]){} }''',
                '''Class,Q,{,Destructor,(,),{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,724,],,,017,],,,5,],,,0B1,],,,14,],,,0xD,],,,0x4370,],;,},$_,(,R0,,,C,:,Array,[,String,,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_246(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (){Break ;}hA_X_6(v9,y,_:Array [Array [Array [Array [Array [Boolean ,0x71],0B11],0B1000111],066_2],0X1E]){} }Class _8_{}Class s1_I5:Q_{Var _,E3:z_;}''',
                '''Class,__,{,Constructor,(,),{,Break,;,},hA_X_6,(,v9,,,y,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x71,],,,0B11,],,,0B1000111,],,,0662,],,,0X1E,],),{,},},Class,_8_,{,},Class,s1_I5,:,Q_,{,Var,_,,,E3,:,z_,;,},<EOF>''',
                101
            )
        )

    def test_247(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:_{}Class x_9:m__1{}Class __{}Class F3NS59:_{}Class S_{}Class _a_2_:___{E4(){}_(Vn,_,Hz4,__,_0:Float ){} }Class S:_{$_(){} }''',
                '''Class,W,:,_,{,},Class,x_9,:,m__1,{,},Class,__,{,},Class,F3NS59,:,_,{,},Class,S_,{,},Class,_a_2_,:,___,{,E4,(,),{,},_,(,Vn,,,_,,,Hz4,,,__,,,_0,:,Float,),{,},},Class,S,:,_,{,$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_248(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_90{Constructor (__t6Z:Array [Boolean ,0x3];_k,_:__;_:Array [Array [Int ,012],0746]){}Var $WR,$yY1,$_,Pi,$H,c:_;}''',
                '''Class,__,:,_90,{,Constructor,(,__t6Z,:,Array,[,Boolean,,,0x3,],;,_k,,,_,:,__,;,_,:,Array,[,Array,[,Int,,,012,],,,0746,],),{,},Var,$WR,,,$yY1,,,$_,,,Pi,,,$H,,,c,:,_,;,},<EOF>''',
                101
            )
        )

    def test_249(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (X,P:Array [Array [Boolean ,026],07];u:_2;T:Int ;_FU7_:Boolean ;_,P,_,_,_,e,_,__:_;r,t,Z,_v,l,q_G,eZls3,N:Array [Array [Int ,051],85];I,u4,_Q4:Boolean ;N:Array [Int ,0x59];_:Boolean ){} }Class _hy4{Destructor (){} }''',
                '''Class,_,{,Constructor,(,X,,,P,:,Array,[,Array,[,Boolean,,,026,],,,07,],;,u,:,_2,;,T,:,Int,;,_FU7_,:,Boolean,;,_,,,P,,,_,,,_,,,_,,,e,,,_,,,__,:,_,;,r,,,t,,,Z,,,_v,,,l,,,q_G,,,eZls3,,,N,:,Array,[,Array,[,Int,,,051,],,,85,],;,I,,,u4,,,_Q4,:,Boolean,;,N,:,Array,[,Int,,,0x59,],;,_,:,Boolean,),{,},},Class,_hy4,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_250(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _{$K(){} }Class __l_:_3_{$____0_(y:_p){} }Class _{Var _2w:Int ;}Class R_eR{Constructor (){ {} }Constructor (a__J,_O:Boolean ){} }Class _{}''',
                '''Class,__,{,},Class,_,{,$K,(,),{,},},Class,__l_,:,_3_,{,$____0_,(,y,:,_p,),{,},},Class,_,{,Var,_2w,:,Int,;,},Class,R_eR,{,Constructor,(,),{,{,},},Constructor,(,a__J,,,_O,:,Boolean,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_251(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Array [Boolean ,0B110001]){}Val $3:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0115],0b1010101],02_7],0b1],0B1],0b101_0],0B110001],89];}''',
                '''Class,_,{,Constructor,(,_,:,Array,[,Boolean,,,0B110001,],),{,},Val,$3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0115,],,,0b1010101,],,,027,],,,0b1,],,,0B1,],,,0b1010,],,,0B110001,],,,89,],;,},<EOF>''',
                101
            )
        )

    def test_252(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:_{Constructor (q:Array [Array [Array [Float ,0X25],0B1010001],0B1];_1w_:String ;__,_,M:g9_;_0_m:_;i:Int ){Continue ;}Destructor (){ {} }Val Sb,$_,_g4,C6,v,_,Q__48J:S_0_Ve___99;}''',
                '''Class,d,:,_,{,Constructor,(,q,:,Array,[,Array,[,Array,[,Float,,,0X25,],,,0B1010001,],,,0B1,],;,_1w_,:,String,;,__,,,_,,,M,:,g9_,;,_0_m,:,_,;,i,:,Int,),{,Continue,;,},Destructor,(,),{,{,},},Val,Sb,,,$_,,,_g4,,,C6,,,v,,,_,,,Q__48J,:,S_0_Ve___99,;,},<EOF>''',
                101
            )
        )

    def test_253(self):
        self.assertTrue(
            TestLexer.test(
                '''Class MA_{Destructor (){ {} }Val $Y:p0a;Var z09_2t,$3o,$t_lc90_,$_9_8:Array [String ,98];$t(){Continue ;} }Class __y:_8{}''',
                '''Class,MA_,{,Destructor,(,),{,{,},},Val,$Y,:,p0a,;,Var,z09_2t,,,$3o,,,$t_lc90_,,,$_9_8,:,Array,[,String,,,98,],;,$t,(,),{,Continue,;,},},Class,__y,:,_8,{,},<EOF>''',
                101
            )
        )

    def test_254(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Nt:I{}Class __39{$_(R:Array [Array [Array [Array [Array [Float ,033],0B1_0],0X2],0B11],81]){} }Class s:_a{}Class v0:bg{Constructor (__,Z,PN_,_,K:Array [Boolean ,0XF];_x4:Float ;_:Int ){}Val $D4_x:Array [Boolean ,0B110111];}''',
                '''Class,Nt,:,I,{,},Class,__39,{,$_,(,R,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,033,],,,0B10,],,,0X2,],,,0B11,],,,81,],),{,},},Class,s,:,_a,{,},Class,v0,:,bg,{,Constructor,(,__,,,Z,,,PN_,,,_,,,K,:,Array,[,Boolean,,,0XF,],;,_x4,:,Float,;,_,:,Int,),{,},Val,$D4_x,:,Array,[,Boolean,,,0B110111,],;,},<EOF>''',
                101
            )
        )

    def test_255(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:O{Var $Z_,ky:Int ;Destructor (){}Var L,_:Float ;Val $d,$_z_2W:_;Var _Za,K_:Array [Array [Boolean ,0b1],0xF];}''',
                '''Class,b,:,O,{,Var,$Z_,,,ky,:,Int,;,Destructor,(,),{,},Var,L,,,_,:,Float,;,Val,$d,,,$_z_2W,:,_,;,Var,_Za,,,K_,:,Array,[,Array,[,Boolean,,,0b1,],,,0xF,],;,},<EOF>''',
                101
            )
        )

    def test_256(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X{Destructor (){}Val J:Array [Array [Boolean ,4_1],0XC5_9C];}Class _{Constructor (){Return ;}Constructor (u7_4:_h;t3:Array [Array [Array [Array [Array [Array [Array [Float ,01],0B100110],2],01],01_00],01],9]){Break ;{Val I:Array [String ,01];} }}Class H2G:_O{Var $iz,_:Boolean ;}Class o:s_4{}''',
                '''Class,_,:,X,{,Destructor,(,),{,},Val,J,:,Array,[,Array,[,Boolean,,,41,],,,0XC59C,],;,},Class,_,{,Constructor,(,),{,Return,;,},Constructor,(,u7_4,:,_h,;,t3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01,],,,0B100110,],,,2,],,,01,],,,0100,],,,01,],,,9,],),{,Break,;,{,Val,I,:,Array,[,String,,,01,],;,},},},Class,H2G,:,_O,{,Var,$iz,,,_,:,Boolean,;,},Class,o,:,s_4,{,},<EOF>''',
                101
            )
        )

    def test_257(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A_Y4_:w_00{}Class _:I{Val __,$_,_:h1;}Class _56_7:_144{Val _,$1,J:String ;Val pP,_,$U__,_7,k,S_,$z_:Array [Array [Int ,2_1],6_7];}''',
                '''Class,A_Y4_,:,w_00,{,},Class,_,:,I,{,Val,__,,,$_,,,_,:,h1,;,},Class,_56_7,:,_144,{,Val,_,,,$1,,,J,:,String,;,Val,pP,,,_,,,$U__,,,_7,,,k,,,S_,,,$z_,:,Array,[,Array,[,Int,,,21,],,,67,],;,},<EOF>''',
                101
            )
        )

    def test_258(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:LU{Var _,$_3,D,w:Int ;Destructor (){} }Class _W:cZ_{Val $4:f;}Class V3:_drO{Val $_2,_7:_11z;}Class _S_{}''',
                '''Class,_,:,LU,{,Var,_,,,$_3,,,D,,,w,:,Int,;,Destructor,(,),{,},},Class,_W,:,cZ_,{,Val,$4,:,f,;,},Class,V3,:,_drO,{,Val,$_2,,,_7,:,_11z,;,},Class,_S_,{,},<EOF>''',
                101
            )
        )

    def test_259(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A_s_:L{}Class Cf9{Constructor (_t,t,_I8___,e:Array [Array [Array [Array [String ,0xA_6],0b1001000],0x51],0B110111]){} }''',
                '''Class,A_s_,:,L,{,},Class,Cf9,{,Constructor,(,_t,,,t,,,_I8___,,,e,:,Array,[,Array,[,Array,[,Array,[,String,,,0xA6,],,,0b1001000,],,,0x51,],,,0B110111,],),{,},},<EOF>''',
                101
            )
        )

    def test_260(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gA9s:_{}Class L_{Var _:Array [Array [Array [String ,0X5],0b1],0X34];Constructor (R3_I,k_:Boolean ){} }Class MY:_5{}''',
                '''Class,gA9s,:,_,{,},Class,L_,{,Var,_,:,Array,[,Array,[,Array,[,String,,,0X5,],,,0b1,],,,0X34,],;,Constructor,(,R3_I,,,k_,:,Boolean,),{,},},Class,MY,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_261(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class Q:__0{_(_,h:oO;pt0ii:BOg;_:Int ;CYQ_,k,e,y_76,_7N7,A:Array [Boolean ,0X4D]){} }''',
                '''Class,_,{,Destructor,(,),{,},},Class,Q,:,__0,{,_,(,_,,,h,:,oO,;,pt0ii,:,BOg,;,_,:,Int,;,CYQ_,,,k,,,e,,,y_76,,,_7N7,,,A,:,Array,[,Boolean,,,0X4D,],),{,},},<EOF>''',
                101
            )
        )

    def test_262(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s:_I{_(_3_,U:_;pw:Array [Array [Array [Int ,0X50],0x4D],0B1010011]){}Val $67,$_:_7;Val $_:Array [Array [Int ,0X4F],0B1010011];}Class _:_9_0g_{Constructor (){} }''',
                '''Class,_s,:,_I,{,_,(,_3_,,,U,:,_,;,pw,:,Array,[,Array,[,Array,[,Int,,,0X50,],,,0x4D,],,,0B1010011,],),{,},Val,$67,,,$_,:,_7,;,Val,$_,:,Array,[,Array,[,Int,,,0X4F,],,,0B1010011,],;,},Class,_,:,_9_0g_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_263(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w3:_15{Destructor (){ {}Return ;} }Class _9:L{}Class H__:_{Val $1:Array [Boolean ,03_2];$_5(_:Float ;e4:Array [Boolean ,0xBF98]){} }''',
                '''Class,_w3,:,_15,{,Destructor,(,),{,{,},Return,;,},},Class,_9,:,L,{,},Class,H__,:,_,{,Val,$1,:,Array,[,Boolean,,,032,],;,$_5,(,_,:,Float,;,e4,:,Array,[,Boolean,,,0xBF98,],),{,},},<EOF>''',
                101
            )
        )

    def test_264(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D_{_72(_,H,uC,O_:Float ;g_:Array [Array [Float ,0B1],0b11];_,L9S,_:Array [Array [Array [Boolean ,0b10110],99],0X35]){} }''',
                '''Class,D_,{,_72,(,_,,,H,,,uC,,,O_,:,Float,;,g_,:,Array,[,Array,[,Float,,,0B1,],,,0b11,],;,_,,,L9S,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0b10110,],,,99,],,,0X35,],),{,},},<EOF>''',
                101
            )
        )

    def test_265(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$E(){Continue ;}Constructor (_,__:Array [Int ,066];i:Array [Array [Float ,0x6],0b1];E:n){}Var $O:Boolean ;}Class xj:y7{}Class T:z{}''',
                '''Class,_,{,$E,(,),{,Continue,;,},Constructor,(,_,,,__,:,Array,[,Int,,,066,],;,i,:,Array,[,Array,[,Float,,,0x6,],,,0b1,],;,E,:,n,),{,},Var,$O,:,Boolean,;,},Class,xj,:,y7,{,},Class,T,:,z,{,},<EOF>''',
                101
            )
        )

    def test_266(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_:_{Val $_:Array [Array [Int ,0B101111],0x38];}Class _:D_8{Destructor (){Continue ;} }Class q{}Class Nr6_{}Class _Q{Val H,$6,$xDo:_;}''',
                '''Class,_1_,:,_,{,Val,$_,:,Array,[,Array,[,Int,,,0B101111,],,,0x38,],;,},Class,_,:,D_8,{,Destructor,(,),{,Continue,;,},},Class,q,{,},Class,Nr6_,{,},Class,_Q,{,Val,H,,,$6,,,$xDo,:,_,;,},<EOF>''',
                101
            )
        )

    def test_267(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:t1{Val $_,_:Array [Array [Array [Array [Array [Array [Float ,0b1],021],0114],024],0b1_11],0X7E];Val _2HtD8:k6j_VG_;}''',
                '''Class,_,:,t1,{,Val,$_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,021,],,,0114,],,,024,],,,0b111,],,,0X7E,],;,Val,_2HtD8,:,k6j_VG_,;,},<EOF>''',
                101
            )
        )

    def test_268(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U__:q_{$_(){Continue ;}Constructor (r:HT){Break ;}$_C(){}Val $s5:Boolean ;Constructor (){Continue ;} }Class _{}''',
                '''Class,U__,:,q_,{,$_,(,),{,Continue,;,},Constructor,(,r,:,HT,),{,Break,;,},$_C,(,),{,},Val,$s5,:,Boolean,;,Constructor,(,),{,Continue,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_269(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A{}Class _:_{}Class EH__:j2_{Destructor (){}Constructor (){} }Class _8{Val Z,$1,__,_:Array [String ,0X6];}Class _:__{Var S:Boolean ;Val $_:UY;}Class aE{}''',
                '''Class,A,{,},Class,_,:,_,{,},Class,EH__,:,j2_,{,Destructor,(,),{,},Constructor,(,),{,},},Class,_8,{,Val,Z,,,$1,,,__,,,_,:,Array,[,String,,,0X6,],;,},Class,_,:,__,{,Var,S,:,Boolean,;,Val,$_,:,UY,;,},Class,aE,{,},<EOF>''',
                101
            )
        )

    def test_270(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_{}Class z4__{Destructor (){Continue ;}Var $_n:Float ;Constructor (){}Val _4NC,$_0Ct_4:_t;Destructor (){} }''',
                '''Class,P,:,_,{,},Class,z4__,{,Destructor,(,),{,Continue,;,},Var,$_n,:,Float,;,Constructor,(,),{,},Val,_4NC,,,$_0Ct_4,:,_t,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_271(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $d,$3,w,$L:Array [String ,0X5F];Constructor (){}Var $s:u;Destructor (){}Val FT:Array [Array [Array [Float ,0b1],6],6];$m(V,fn:Int ){} }''',
                '''Class,_,{,Val,$d,,,$3,,,w,,,$L,:,Array,[,String,,,0X5F,],;,Constructor,(,),{,},Var,$s,:,u,;,Destructor,(,),{,},Val,FT,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,6,],,,6,],;,$m,(,V,,,fn,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_272(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _59:J3{Val $n4_,$5:String ;Var $_:String =----_::$369*_::$1P%!!_::$C__SG__c;Val g,d,$_g:_;Constructor (uZ1:Array [Array [Array [Array [Array [Float ,0135],0XC],0B1_01],45],0B1011000];o,W,B:Array [String ,0xA]){} }Class Rj{}''',
                '''Class,_59,:,J3,{,Val,$n4_,,,$5,:,String,;,Var,$_,:,String,=,-,-,-,-,_,::,$369,*,_,::,$1P,%,!,!,_,::,$C__SG__c,;,Val,g,,,d,,,$_g,:,_,;,Constructor,(,uZ1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0135,],,,0XC,],,,0B101,],,,45,],,,0B1011000,],;,o,,,W,,,B,:,Array,[,String,,,0xA,],),{,},},Class,Rj,{,},<EOF>''',
                101
            )
        )

    def test_273(self):
        self.assertTrue(
            TestLexer.test(
                '''Class PV{}Class c2{Val T_:Array [Boolean ,0x2_0];}Class u4{Zd(l__,__,_,P:Int ;bb6n8_T_:Boolean ;A__:ZK;a,I:F;M:_;Ri_,_h:fY){} }''',
                '''Class,PV,{,},Class,c2,{,Val,T_,:,Array,[,Boolean,,,0x20,],;,},Class,u4,{,Zd,(,l__,,,__,,,_,,,P,:,Int,;,bb6n8_T_,:,Boolean,;,A__,:,ZK,;,a,,,I,:,F,;,M,:,_,;,Ri_,,,_h,:,fY,),{,},},<EOF>''',
                101
            )
        )

    def test_274(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class P___Y:_{Constructor (D:Array [Int ,97];k,_,_,H:Array [Array [Array [Array [String ,0x11],05_7],072],0XAB_6_E_1_4];_4W___,ou:Int ){Val W:Int ;j_Z::$_();} }Class _:s{Var $_m0W,$1Qj7_:Array [String ,0B1000100];Var _C,$_:T;Val oWH9:Array [String ,0X29];}''',
                '''Class,__,{,},Class,P___Y,:,_,{,Constructor,(,D,:,Array,[,Int,,,97,],;,k,,,_,,,_,,,H,:,Array,[,Array,[,Array,[,Array,[,String,,,0x11,],,,057,],,,072,],,,0XAB6E14,],;,_4W___,,,ou,:,Int,),{,Val,W,:,Int,;,j_Z,::,$_,(,),;,},},Class,_,:,s,{,Var,$_m0W,,,$1Qj7_,:,Array,[,String,,,0B1000100,],;,Var,_C,,,$_,:,T,;,Val,oWH9,:,Array,[,String,,,0X29,],;,},<EOF>''',
                101
            )
        )

    def test_275(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9_3_:_5N_3fLm{}Class _:_X{}Class e:_{Var YvVx,__:H;Val P_,$__O8_j1:Array [Array [Int ,5],0x49];t2(L3_,x,ee4vG367H,Z,_,y:Array [Float ,03];Mh:Array [Array [Array [Float ,7],013],19];_,j,_L:Array [Array [Array [Array [Array [Array [Array [Int ,0127],60],0XB_E2],0B1],0B11010],0X27],1249];_,T5_:YdH){} }Class S{}''',
                '''Class,_9_3_,:,_5N_3fLm,{,},Class,_,:,_X,{,},Class,e,:,_,{,Var,YvVx,,,__,:,H,;,Val,P_,,,$__O8_j1,:,Array,[,Array,[,Int,,,5,],,,0x49,],;,t2,(,L3_,,,x,,,ee4vG367H,,,Z,,,_,,,y,:,Array,[,Float,,,03,],;,Mh,:,Array,[,Array,[,Array,[,Float,,,7,],,,013,],,,19,],;,_,,,j,,,_L,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0127,],,,60,],,,0XBE2,],,,0B1,],,,0B11010,],,,0X27,],,,1249,],;,_,,,T5_,:,YdH,),{,},},Class,S,{,},<EOF>''',
                101
            )
        )

    def test_276(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:_{}Class o{Val $N,$_:Array [Array [Boolean ,82],5_1];Var TK2Hcp,L8_:Array [Array [Array [String ,5_0],9_2],58];}''',
                '''Class,U,:,_,{,},Class,o,{,Val,$N,,,$_,:,Array,[,Array,[,Boolean,,,82,],,,51,],;,Var,TK2Hcp,,,L8_,:,Array,[,Array,[,Array,[,String,,,50,],,,92,],,,58,],;,},<EOF>''',
                101
            )
        )

    def test_277(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:_R_{Constructor (){}Destructor (){}Constructor (n:_3;_h_r_47_:Array [Array [Array [Boolean ,0X8_3],0X6],037]){}Destructor (){} }Class R_{Var $P,$_,$_,$w:M;}Class w9_q{}''',
                '''Class,f,:,_R_,{,Constructor,(,),{,},Destructor,(,),{,},Constructor,(,n,:,_3,;,_h_r_47_,:,Array,[,Array,[,Array,[,Boolean,,,0X83,],,,0X6,],,,037,],),{,},Destructor,(,),{,},},Class,R_,{,Var,$P,,,$_,,,$_,,,$w,:,M,;,},Class,w9_q,{,},<EOF>''',
                101
            )
        )

    def test_278(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Esf{Var $8_:Array [Array [Array [String ,0x3],15],07];Destructor (){} }Class q{}Class k:kU_53{}Class __:_x{}''',
                '''Class,Esf,{,Var,$8_,:,Array,[,Array,[,Array,[,String,,,0x3,],,,15,],,,07,],;,Destructor,(,),{,},},Class,q,{,},Class,k,:,kU_53,{,},Class,__,:,_x,{,},<EOF>''',
                101
            )
        )

    def test_279(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _E{Val u,$8a,_:Array [Array [Array [String ,0B10000],067],0xF_8C];}Class _:_{Constructor (S_11,s_7_,a_:Int ;dC8,Y_m,Y:u){}Val _70,$2__,_,n1:Int ;}Class __:L{}''',
                '''Class,_E,{,Val,u,,,$8a,,,_,:,Array,[,Array,[,Array,[,String,,,0B10000,],,,067,],,,0xF8C,],;,},Class,_,:,_,{,Constructor,(,S_11,,,s_7_,,,a_,:,Int,;,dC8,,,Y_m,,,Y,:,u,),{,},Val,_70,,,$2__,,,_,,,n1,:,Int,;,},Class,__,:,L,{,},<EOF>''',
                101
            )
        )

    def test_280(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S_:_{$_1_(S,pa6:Int ;_:Array [Array [Boolean ,99],6];_,F_:ue;_,_:Array [String ,1];o2_,D__:String ){}Destructor (){Break ;} }''',
                '''Class,S_,:,_,{,$_1_,(,S,,,pa6,:,Int,;,_,:,Array,[,Array,[,Boolean,,,99,],,,6,],;,_,,,F_,:,ue,;,_,,,_,:,Array,[,String,,,1,],;,o2_,,,D__,:,String,),{,},Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_281(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j5:_{Var _,$O_,_,$_3E_x84_:Array [Int ,057];}Class aUQ:q32{}Class z_T:_O{Destructor (){} }Class _{}Class q_j_{Var _5O:Array [Array [String ,0x42],0102];Constructor (){Continue ;} }''',
                '''Class,j5,:,_,{,Var,_,,,$O_,,,_,,,$_3E_x84_,:,Array,[,Int,,,057,],;,},Class,aUQ,:,q32,{,},Class,z_T,:,_O,{,Destructor,(,),{,},},Class,_,{,},Class,q_j_,{,Var,_5O,:,Array,[,Array,[,String,,,0x42,],,,0102,],;,Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_282(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:_{}Class _:Y_{}Class _:_{}Class e:QmF_{Var H:Array [String ,014];Constructor (_,Jd_,_,_b,j:e_;v:_){} }''',
                '''Class,e,:,_,{,},Class,_,:,Y_,{,},Class,_,:,_,{,},Class,e,:,QmF_,{,Var,H,:,Array,[,String,,,014,],;,Constructor,(,_,,,Jd_,,,_,,,_b,,,j,:,e_,;,v,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_283(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _I,_:String ;Var _:Array [Array [Array [String ,0X7],24],7_2]=!t::$78+.--__::$N()+!iL::$_()["'"".g.uz_z5_+-I::$C];}Class _:pso{}''',
                '''Class,_,{,Var,_I,,,_,:,String,;,Var,_,:,Array,[,Array,[,Array,[,String,,,0X7,],,,24,],,,72,],=,!,t,::,$78,+.,-,-,__,::,$N,(,),+,!,iL,::,$_,(,),[,'",.,g,.,uz_z5_,+,-,I,::,$C,],;,},Class,_,:,pso,{,},<EOF>''',
                101
            )
        )

    def test_284(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __3{Constructor (Q:_7;w,d,_:Array [Float ,78];O_,F16_:Array [Float ,41];_5_:Boolean ){Break ;Break ;}Destructor (){}Constructor (RE9P,O_i:Float ){}Constructor (){} }''',
                '''Class,__3,{,Constructor,(,Q,:,_7,;,w,,,d,,,_,:,Array,[,Float,,,78,],;,O_,,,F16_,:,Array,[,Float,,,41,],;,_5_,:,Boolean,),{,Break,;,Break,;,},Destructor,(,),{,},Constructor,(,RE9P,,,O_i,:,Float,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_285(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J7_8:_{$2_LT(x2_j:Int ;oP,_,_o_:Array [Array [Array [Array [Array [Boolean ,6],0b10011],9],732_24],98_98];FB,c3:Boolean ;f_:Array [Array [Boolean ,025],0b10011];K:Array [Array [Array [Int ,70],70],0425];i:_){} }Class w:H____{}''',
                '''Class,J7_8,:,_,{,$2_LT,(,x2_j,:,Int,;,oP,,,_,,,_o_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,6,],,,0b10011,],,,9,],,,73224,],,,9898,],;,FB,,,c3,:,Boolean,;,f_,:,Array,[,Array,[,Boolean,,,025,],,,0b10011,],;,K,:,Array,[,Array,[,Array,[,Int,,,70,],,,70,],,,0425,],;,i,:,_,),{,},},Class,w,:,H____,{,},<EOF>''',
                101
            )
        )

    def test_286(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:__7_29{}Class _:uT{__(_,N,__:Array [Array [Array [Int ,03],01],0x46];A,Q:String ;X:Boolean ){} }Class B{}''',
                '''Class,a,:,__7_29,{,},Class,_,:,uT,{,__,(,_,,,N,,,__,:,Array,[,Array,[,Array,[,Int,,,03,],,,01,],,,0x46,],;,A,,,Q,:,String,;,X,:,Boolean,),{,},},Class,B,{,},<EOF>''',
                101
            )
        )

    def test_287(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2M:_c{}Class _:_{}Class _d:_{$_(){Break ;Break ;Var r:Array [Array [Array [Array [Float ,0b1_011],0X7_9],0B10000],0B10000];}$_(__x,ahl,_:Float ;__o4Hy,w3,K:Array [Boolean ,9]){} }Class F6:wk_7T{}''',
                '''Class,_2M,:,_c,{,},Class,_,:,_,{,},Class,_d,:,_,{,$_,(,),{,Break,;,Break,;,Var,r,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1011,],,,0X79,],,,0B10000,],,,0B10000,],;,},$_,(,__x,,,ahl,,,_,:,Float,;,__o4Hy,,,w3,,,K,:,Array,[,Boolean,,,9,],),{,},},Class,F6,:,wk_7T,{,},<EOF>''',
                101
            )
        )

    def test_288(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M:R{}Class _J_7A__{Var __,$_,$x0,$K:Array [Array [Array [Array [Array [Boolean ,11],0b1_1],0x45],0x45],0x45];}Class vt:X{}''',
                '''Class,M,:,R,{,},Class,_J_7A__,{,Var,__,,,$_,,,$x0,,,$K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,11,],,,0b11,],,,0x45,],,,0x45,],,,0x45,],;,},Class,vt,:,X,{,},<EOF>''',
                101
            )
        )

    def test_289(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(){}Val G_,$z:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0X8],04],0X8],06],6_7],0B1011001],93],93],93];}Class v:s_8{Var n:Array [String ,011];}''',
                '''Class,_,{,_,(,),{,},Val,G_,,,$z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X8,],,,04,],,,0X8,],,,06,],,,67,],,,0B1011001,],,,93,],,,93,],,,93,],;,},Class,v,:,s_8,{,Var,n,:,Array,[,String,,,011,],;,},<EOF>''',
                101
            )
        )

    def test_290(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{Constructor (N:Array [Boolean ,073];_o:Float ){Continue ;}Constructor (L_:_){}Destructor (){} }Class _z{}Class __t:W{}Class __11_9{}''',
                '''Class,B,{,Constructor,(,N,:,Array,[,Boolean,,,073,],;,_o,:,Float,),{,Continue,;,},Constructor,(,L_,:,_,),{,},Destructor,(,),{,},},Class,_z,{,},Class,__t,:,W,{,},Class,__11_9,{,},<EOF>''',
                101
            )
        )

    def test_291(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2_:_4{Constructor (r:Array [Int ,7];_,g,_,k75,_,_,__:__;_Lb:String ;q,vRi2:Array [Array [Array [Boolean ,0b110],02_2_5],0x29]){} }''',
                '''Class,_2_,:,_4,{,Constructor,(,r,:,Array,[,Int,,,7,],;,_,,,g,,,_,,,k75,,,_,,,_,,,__,:,__,;,_Lb,:,String,;,q,,,vRi2,:,Array,[,Array,[,Array,[,Boolean,,,0b110,],,,0225,],,,0x29,],),{,},},<EOF>''',
                101
            )
        )

    def test_292(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__:Array [Boolean ,0113];a:p_1;K_,r:_;u_,M,j,f4,_b:_){}$8(_69,P,e7:String ;_:R3k670n){Break ;} }Class __7C:H{}''',
                '''Class,_,{,Constructor,(,__,:,Array,[,Boolean,,,0113,],;,a,:,p_1,;,K_,,,r,:,_,;,u_,,,M,,,j,,,f4,,,_b,:,_,),{,},$8,(,_69,,,P,,,e7,:,String,;,_,:,R3k670n,),{,Break,;,},},Class,__7C,:,H,{,},<EOF>''',
                101
            )
        )

    def test_293(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _p{}Class I4_Up3{_r(_,_,_y,O:_;__U_5W:Array [Array [Array [Int ,29],0X20],0xBC_A]){}Val $m_,t_z4:Array [String ,0x1F];j(){Val _,_:___Y;Return ;} }''',
                '''Class,_p,{,},Class,I4_Up3,{,_r,(,_,,,_,,,_y,,,O,:,_,;,__U_5W,:,Array,[,Array,[,Array,[,Int,,,29,],,,0X20,],,,0xBCA,],),{,},Val,$m_,,,t_z4,:,Array,[,String,,,0x1F,],;,j,(,),{,Val,_,,,_,:,___Y,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_294(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:I377{Constructor (_,J:JYnI_T){}Constructor (v:Boolean ){}$6t62(N:Array [Array [Int ,0b1100011],01_1]){}Constructor (i,r6_:Float ){} }''',
                '''Class,Q,:,I377,{,Constructor,(,_,,,J,:,JYnI_T,),{,},Constructor,(,v,:,Boolean,),{,},$6t62,(,N,:,Array,[,Array,[,Int,,,0b1100011,],,,011,],),{,},Constructor,(,i,,,r6_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_295(self):
        self.assertTrue(
            TestLexer.test(
                '''Class tO2_7___t:_Z{k_(){} }Class h_{Var _,$9,_,$I:Array [Array [Array [Array [Array [Float ,011],0b1_1_0],46],46],02];Var n,v,_,$_,$77b__,$18_:_;}''',
                '''Class,tO2_7___t,:,_Z,{,k_,(,),{,},},Class,h_,{,Var,_,,,$9,,,_,,,$I,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,011,],,,0b110,],,,46,],,,46,],,,02,],;,Var,n,,,v,,,_,,,$_,,,$77b__,,,$18_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_296(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _h4____k{Destructor (){} }Class j:_{Constructor (_,_N,_7,_:Boolean ){_::$M4__();}Constructor (g,s_:Boolean ){}Constructor (t,_k,_,_,__,__,_:Int ;_o,__,G433,__,_a:__64H){} }''',
                '''Class,_,{,},Class,_h4____k,{,Destructor,(,),{,},},Class,j,:,_,{,Constructor,(,_,,,_N,,,_7,,,_,:,Boolean,),{,_,::,$M4__,(,),;,},Constructor,(,g,,,s_,:,Boolean,),{,},Constructor,(,t,,,_k,,,_,,,_,,,__,,,__,,,_,:,Int,;,_o,,,__,,,G433,,,__,,,_a,:,__64H,),{,},},<EOF>''',
                101
            )
        )

    def test_297(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){} }Class _64_m1{Constructor (_9_7xzh_,R_,_,J:Float ;k,__,_:Boolean ){}$5(C,h_,_:Int ;_f_4:Y2VP;_HT:Int ;_,__:p;_,H:Boolean ;p,O:_){}Var _:Array [Boolean ,0xF];}''',
                '''Class,__,{,Destructor,(,),{,},},Class,_64_m1,{,Constructor,(,_9_7xzh_,,,R_,,,_,,,J,:,Float,;,k,,,__,,,_,:,Boolean,),{,},$5,(,C,,,h_,,,_,:,Int,;,_f_4,:,Y2VP,;,_HT,:,Int,;,_,,,__,:,p,;,_,,,H,:,Boolean,;,p,,,O,:,_,),{,},Var,_,:,Array,[,Boolean,,,0xF,],;,},<EOF>''',
                101
            )
        )

    def test_298(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _{}Class x_{Destructor (){Continue ;}Destructor (){Return ;}Var _,K,_:SI;}Class _{Var J,i,$__A6:_;}Class _J8{}''',
                '''Class,_,:,_,{,},Class,_,{,},Class,x_,{,Destructor,(,),{,Continue,;,},Destructor,(,),{,Return,;,},Var,_,,,K,,,_,:,SI,;,},Class,_,{,Var,J,,,i,,,$__A6,:,_,;,},Class,_J8,{,},<EOF>''',
                101
            )
        )

    def test_299(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $57,$qL:Array [Array [Float ,04_4],5];Val pX,$_,z__r:Int ;Destructor (){}Var $rO,b07:Array [String ,0110];}''',
                '''Class,_,{,Val,$57,,,$qL,:,Array,[,Array,[,Float,,,044,],,,5,],;,Val,pX,,,$_,,,z__r,:,Int,;,Destructor,(,),{,},Var,$rO,,,b07,:,Array,[,String,,,0110,],;,},<EOF>''',
                101
            )
        )

    def test_300(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _d9:r{}Class ___T{Val $V,$_,W17_zt_,$q:Array [Array [Array [Array [Int ,0x39],0X4A],025],0X4A];Val $4,D6,nl,$_u:Array [Array [Int ,0X4A],8_3];}Class _q:l{Destructor (){} }Class __:__c_{}Class E:QW_pqC9{Constructor (){} }''',
                '''Class,_d9,:,r,{,},Class,___T,{,Val,$V,,,$_,,,W17_zt_,,,$q,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x39,],,,0X4A,],,,025,],,,0X4A,],;,Val,$4,,,D6,,,nl,,,$_u,:,Array,[,Array,[,Int,,,0X4A,],,,83,],;,},Class,_q,:,l,{,Destructor,(,),{,},},Class,__,:,__c_,{,},Class,E,:,QW_pqC9,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_301(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Mde_{Var $Z:Array [Array [Int ,76],06];Constructor (_3_:_;_6:Array [Array [Array [Float ,0B10],0x18],0x18];I7V2,__x39:String ){} }''',
                '''Class,Mde_,{,Var,$Z,:,Array,[,Array,[,Int,,,76,],,,06,],;,Constructor,(,_3_,:,_,;,_6,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,0x18,],,,0x18,],;,I7V2,,,__x39,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_302(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X:__{Val $pm:Array [Array [Int ,0b11],0110];}Class _{}Class M9:_Bm{Constructor (_:Array [Boolean ,0b1001011]){.e57.Y();} }''',
                '''Class,X,:,__,{,Val,$pm,:,Array,[,Array,[,Int,,,0b11,],,,0110,],;,},Class,_,{,},Class,M9,:,_Bm,{,Constructor,(,_,:,Array,[,Boolean,,,0b1001011,],),{,.e57,.,Y,(,),;,},},<EOF>''',
                101
            )
        )

    def test_303(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U{_8(){}Destructor (){} }Class p_I:d{Val $_7:_;}Class W_:_{}Class kw1:_nd0{Constructor (n,gK__t956,y:Int ;CYM_:Array [Array [Array [Boolean ,0X4B],19],0B11011];_z4,_6I___18:X;_,_,q6_,g:Float ;S:Array [Array [String ,0X4B],0B1_10_0];p,g973:Int ){} }Class _:n{}''',
                '''Class,U,{,_8,(,),{,},Destructor,(,),{,},},Class,p_I,:,d,{,Val,$_7,:,_,;,},Class,W_,:,_,{,},Class,kw1,:,_nd0,{,Constructor,(,n,,,gK__t956,,,y,:,Int,;,CYM_,:,Array,[,Array,[,Array,[,Boolean,,,0X4B,],,,19,],,,0B11011,],;,_z4,,,_6I___18,:,X,;,_,,,_,,,q6_,,,g,:,Float,;,S,:,Array,[,Array,[,String,,,0X4B,],,,0B1100,],;,p,,,g973,:,Int,),{,},},Class,_,:,n,{,},<EOF>''',
                101
            )
        )

    def test_304(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:H_Y{}Class t:_{Destructor (){} }Class _:B4_J{}Class m:_{Val $m:Array [Array [Array [Array [Boolean ,06],056_5],0B10101],07];Val R:_;}Class h:Y{Val $_,$_,$1,z7_:Array [Int ,0b1_1];Var _:v;}Class ki5O:Oq{}Class W:__{}Class _1__bM_X:H{}''',
                '''Class,I,:,H_Y,{,},Class,t,:,_,{,Destructor,(,),{,},},Class,_,:,B4_J,{,},Class,m,:,_,{,Val,$m,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,06,],,,0565,],,,0B10101,],,,07,],;,Val,R,:,_,;,},Class,h,:,Y,{,Val,$_,,,$_,,,$1,,,z7_,:,Array,[,Int,,,0b11,],;,Var,_,:,v,;,},Class,ki5O,:,Oq,{,},Class,W,:,__,{,},Class,_1__bM_X,:,H,{,},<EOF>''',
                101
            )
        )

    def test_305(self):
        self.assertTrue(
            TestLexer.test(
                '''Class uF7:_t{Destructor (){}Var $_S,C2,$Z6_Kp:Array [Array [Array [Array [Array [Boolean ,4],07_1_6_527664_7],2],0B1_1],0B10000];}''',
                '''Class,uF7,:,_t,{,Destructor,(,),{,},Var,$_S,,,C2,,,$Z6_Kp,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,4,],,,07165276647,],,,2,],,,0B11,],,,0B10000,],;,},<EOF>''',
                101
            )
        )

    def test_306(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T9:vO52{Destructor (){} }Class _{}Class r0{Constructor (_:Array [Array [Boolean ,34],0b1010000];____,t:Array [String ,0x46C]){}Var $_,G:_5;}''',
                '''Class,T9,:,vO52,{,Destructor,(,),{,},},Class,_,{,},Class,r0,{,Constructor,(,_,:,Array,[,Array,[,Boolean,,,34,],,,0b1010000,],;,____,,,t,:,Array,[,String,,,0x46C,],),{,},Var,$_,,,G,:,_5,;,},<EOF>''',
                101
            )
        )

    def test_307(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t0_2{}Class _{Constructor (_:Int ;_C:G){}Var K,_94,$_,$F,_,_5,_:Array [Float ,69];}Class _{}Class b6R:_Q{}Class B6{}Class _:Q{}Class g__:X{}Class g9{}Class __56:Rr21{Var $_91_6_,Gl:Int ;}''',
                '''Class,t0_2,{,},Class,_,{,Constructor,(,_,:,Int,;,_C,:,G,),{,},Var,K,,,_94,,,$_,,,$F,,,_,,,_5,,,_,:,Array,[,Float,,,69,],;,},Class,_,{,},Class,b6R,:,_Q,{,},Class,B6,{,},Class,_,:,Q,{,},Class,g__,:,X,{,},Class,g9,{,},Class,__56,:,Rr21,{,Var,$_91_6_,,,Gl,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_308(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{Destructor (){}Constructor (v5:Boolean ){ {} }}Class _{Destructor (){Continue ;}Var $B,_:Array [Array [Boolean ,0124],0B10100];Constructor (H:G){}N(){ {Break ;} }}Class _:V9{}Class f28__x{Destructor (){} }''',
                '''Class,f,{,Destructor,(,),{,},Constructor,(,v5,:,Boolean,),{,{,},},},Class,_,{,Destructor,(,),{,Continue,;,},Var,$B,,,_,:,Array,[,Array,[,Boolean,,,0124,],,,0B10100,],;,Constructor,(,H,:,G,),{,},N,(,),{,{,Break,;,},},},Class,_,:,V9,{,},Class,f28__x,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_309(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L8{Constructor (__4,_:Array [String ,0x1];F:Array [Array [Array [Boolean ,0b111000],03],0B1];_:_;u_:__;_:Int ){}Var $N,_:_T;}Class _:_{}Class v{}''',
                '''Class,L8,{,Constructor,(,__4,,,_,:,Array,[,String,,,0x1,],;,F,:,Array,[,Array,[,Array,[,Boolean,,,0b111000,],,,03,],,,0B1,],;,_,:,_,;,u_,:,__,;,_,:,Int,),{,},Var,$N,,,_,:,_T,;,},Class,_,:,_,{,},Class,v,{,},<EOF>''',
                101
            )
        )

    def test_310(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V{}Class X5E{}Class F:A{Constructor (IW,d,uQR,_y__,u1Z:Array [Array [Array [String ,05],0xE],0x17]){Continue ;} }''',
                '''Class,_V,{,},Class,X5E,{,},Class,F,:,A,{,Constructor,(,IW,,,d,,,uQR,,,_y__,,,u1Z,:,Array,[,Array,[,Array,[,String,,,05,],,,0xE,],,,0x17,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_311(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p_{Val $9I:Array [Array [Boolean ,0B1000001],0X6_8];$9x(){Break ;}Destructor (){}Constructor (_r,LG,xk_:_0;_,I:String ;__:Float ){VeP::$_();}Destructor (){} }''',
                '''Class,p_,{,Val,$9I,:,Array,[,Array,[,Boolean,,,0B1000001,],,,0X68,],;,$9x,(,),{,Break,;,},Destructor,(,),{,},Constructor,(,_r,,,LG,,,xk_,:,_0,;,_,,,I,:,String,;,__,:,Float,),{,VeP,::,$_,(,),;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_312(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z___:Z{}Class h_UU{}Class g0_{Val L___1,_,$_J:Array [Array [Array [Array [Boolean ,0x32],6],0xC_4],044];}''',
                '''Class,z___,:,Z,{,},Class,h_UU,{,},Class,g0_,{,Val,L___1,,,_,,,$_J,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x32,],,,6,],,,0xC4,],,,044,],;,},<EOF>''',
                101
            )
        )

    def test_313(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __9:j_Xy_p{}Class Pi{Constructor (k_C,_,_,H1,e_,_L__:_3){ {Continue ;Continue ;Var Y49,_r:_;} }}Class L0r6{}''',
                '''Class,__9,:,j_Xy_p,{,},Class,Pi,{,Constructor,(,k_C,,,_,,,_,,,H1,,,e_,,,_L__,:,_3,),{,{,Continue,;,Continue,;,Var,Y49,,,_r,:,_,;,},},},Class,L0r6,{,},<EOF>''',
                101
            )
        )

    def test_314(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Bz:e5{Constructor (_6,__I,DM9:Boolean ;x_8_G,_4_,d_:Int ;Ta,z,__,q5:u;q1:Array [Array [Boolean ,6_5],0XDD_CF]){}Constructor (G:_;_,_yE_5_:S8){} }Class t_:y0G0{Var $hA65g:Int ;Constructor (){}Var $s4:Int ;}''',
                '''Class,_Bz,:,e5,{,Constructor,(,_6,,,__I,,,DM9,:,Boolean,;,x_8_G,,,_4_,,,d_,:,Int,;,Ta,,,z,,,__,,,q5,:,u,;,q1,:,Array,[,Array,[,Boolean,,,65,],,,0XDDCF,],),{,},Constructor,(,G,:,_,;,_,,,_yE_5_,:,S8,),{,},},Class,t_,:,y0G0,{,Var,$hA65g,:,Int,;,Constructor,(,),{,},Var,$s4,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_315(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vJ{}Class __{}Class d{e(_:_){Continue ;}Destructor (){} }Class U67{}Class m{Val $L4_,$_,_5,_69_,$0,$H,$_7,$1:E;}''',
                '''Class,vJ,{,},Class,__,{,},Class,d,{,e,(,_,:,_,),{,Continue,;,},Destructor,(,),{,},},Class,U67,{,},Class,m,{,Val,$L4_,,,$_,,,_5,,,_69_,,,$0,,,$H,,,$_7,,,$1,:,E,;,},<EOF>''',
                101
            )
        )

    def test_316(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _:_hO{Constructor (_,_b,u:Int ;s_49_:LJ_86B_;M,SsG:Array [Array [Boolean ,0365_4_31_2],0b111110]){} }Class C{}Class K:_{}''',
                '''Class,__,{,},Class,_,:,_hO,{,Constructor,(,_,,,_b,,,u,:,Int,;,s_49_,:,LJ_86B_,;,M,,,SsG,:,Array,[,Array,[,Boolean,,,03654312,],,,0b111110,],),{,},},Class,C,{,},Class,K,:,_,{,},<EOF>''',
                101
            )
        )

    def test_317(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _09__P:x1{Val $W,$k_N7:Int ;_(B:Array [Array [Array [Array [Array [Boolean ,0XD],58],044],0XD_29],0XE5_F7];y:h;Z:Float ;U,_:Array [Array [Array [Array [Array [Int ,0B1011001],0xD],1],0B1],0xF];u_1,_,_,A,J:Array [Boolean ,9]){} }Class WG_8:_{}''',
                '''Class,_09__P,:,x1,{,Val,$W,,,$k_N7,:,Int,;,_,(,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XD,],,,58,],,,044,],,,0XD29,],,,0XE5F7,],;,y,:,h,;,Z,:,Float,;,U,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1011001,],,,0xD,],,,1,],,,0B1,],,,0xF,],;,u_1,,,_,,,_,,,A,,,J,:,Array,[,Boolean,,,9,],),{,},},Class,WG_8,:,_,{,},<EOF>''',
                101
            )
        )

    def test_318(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kv{}Class S:f3{}Class M:_6_b{Var $_:Z;Var $0,$L:Float ;$_(B:Array [Array [Float ,0103],0103];v_2_,_3:Array [Boolean ,6];_,_:z_X817V_m1_;__:F;_7,_____:Array [String ,0XB7_3];_:String ;HPB,_:N3;_:Array [Array [Array [Boolean ,0B1],0103],0103]){Val Jb:Array [Array [Array [Float ,11],0xF1],0b1010100];}Var I,$x,$_:Int ;}Class N{}''',
                '''Class,kv,{,},Class,S,:,f3,{,},Class,M,:,_6_b,{,Var,$_,:,Z,;,Var,$0,,,$L,:,Float,;,$_,(,B,:,Array,[,Array,[,Float,,,0103,],,,0103,],;,v_2_,,,_3,:,Array,[,Boolean,,,6,],;,_,,,_,:,z_X817V_m1_,;,__,:,F,;,_7,,,_____,:,Array,[,String,,,0XB73,],;,_,:,String,;,HPB,,,_,:,N3,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0103,],,,0103,],),{,Val,Jb,:,Array,[,Array,[,Array,[,Float,,,11,],,,0xF1,],,,0b1010100,],;,},Var,I,,,$x,,,$_,:,Int,;,},Class,N,{,},<EOF>''',
                101
            )
        )

    def test_319(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}_(_:Float ){Continue ;Break ;} }Class U{Val $__2_:Array [Array [Array [Array [String ,0b1],051],0b1],0B100];}''',
                '''Class,_,{,Destructor,(,),{,},_,(,_,:,Float,),{,Continue,;,Break,;,},},Class,U,{,Val,$__2_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,051,],,,0b1,],,,0B100,],;,},<EOF>''',
                101
            )
        )

    def test_320(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var p:_;}Class R5{$8(___:U;Q7_454:Array [Array [Array [Array [Array [Array [Array [String ,015],0X1],0XF3],4_0],0xD67],015],58]){}Var $4,G,$q,$_:_l1;}Class __:_{}''',
                '''Class,_,{,Var,p,:,_,;,},Class,R5,{,$8,(,___,:,U,;,Q7_454,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,015,],,,0X1,],,,0XF3,],,,40,],,,0xD67,],,,015,],,,58,],),{,},Var,$4,,,G,,,$q,,,$_,:,_l1,;,},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_321(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{E(){}$mY(_z_:Array [Array [Array [Float ,0b10110],0x3C],0X24];G3:Int ;v:_5m){Var _,n71_w,d,_,_s:Array [Boolean ,0X8_8];}Var $MX,__:Array [Array [String ,46],02];}Class _6:D{}''',
                '''Class,O,{,E,(,),{,},$mY,(,_z_,:,Array,[,Array,[,Array,[,Float,,,0b10110,],,,0x3C,],,,0X24,],;,G3,:,Int,;,v,:,_5m,),{,Var,_,,,n71_w,,,d,,,_,,,_s,:,Array,[,Boolean,,,0X88,],;,},Var,$MX,,,__,:,Array,[,Array,[,String,,,46,],,,02,],;,},Class,_6,:,D,{,},<EOF>''',
                101
            )
        )

    def test_322(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{}Class j98{Var _:Boolean ;}Class _:x{}Class _:B7_{}Class T1F6:iAt{Constructor (){}Constructor (J:String ;_6:g___I){}$j(){Continue ;}Destructor (){} }Class _{}Class E__{Val ig7,$_,z:Boolean ;}''',
                '''Class,_1,{,},Class,j98,{,Var,_,:,Boolean,;,},Class,_,:,x,{,},Class,_,:,B7_,{,},Class,T1F6,:,iAt,{,Constructor,(,),{,},Constructor,(,J,:,String,;,_6,:,g___I,),{,},$j,(,),{,Continue,;,},Destructor,(,),{,},},Class,_,{,},Class,E__,{,Val,ig7,,,$_,,,z,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_323(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q_:v{Var $_,$__9eX,_,__,e:String ;}Class Cf{Constructor (__E,z5,W:String ;S__27_,__B:Array [Array [String ,067],0X44];K_,jq:_;t:S4;_:Float ;_147,__3:Int ){} }''',
                '''Class,Q_,:,v,{,Var,$_,,,$__9eX,,,_,,,__,,,e,:,String,;,},Class,Cf,{,Constructor,(,__E,,,z5,,,W,:,String,;,S__27_,,,__B,:,Array,[,Array,[,String,,,067,],,,0X44,],;,K_,,,jq,:,_,;,t,:,S4,;,_,:,Float,;,_147,,,__3,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_324(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _f__{Constructor (UbM_,oq8G,t:_;_0,_,N:Array [Array [Boolean ,5],01];_,___,_,_9_,_,_:Boolean ;_:Array [Array [String ,01],94]){ {} }$N4_(_uU__:Array [Array [Float ,0XB],0b100100]){} }Class _:_{}''',
                '''Class,_f__,{,Constructor,(,UbM_,,,oq8G,,,t,:,_,;,_0,,,_,,,N,:,Array,[,Array,[,Boolean,,,5,],,,01,],;,_,,,___,,,_,,,_9_,,,_,,,_,:,Boolean,;,_,:,Array,[,Array,[,String,,,01,],,,94,],),{,{,},},$N4_,(,_uU__,:,Array,[,Array,[,Float,,,0XB,],,,0b100100,],),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_325(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $Av:Boolean ;Var j_:Array [Array [Array [Boolean ,07_6_0_1_5_2_2],0B111],18];}Class R3:_{Var L3:_;Val j:V6;Val $QGj_,$3_:Int ;}''',
                '''Class,_,{,Var,$Av,:,Boolean,;,Var,j_,:,Array,[,Array,[,Array,[,Boolean,,,07601522,],,,0B111,],,,18,],;,},Class,R3,:,_,{,Var,L3,:,_,;,Val,j,:,V6,;,Val,$QGj_,,,$3_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_326(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P_0{}Class a_F_y4__{Destructor (){}Val __,l2m:Array [Array [Array [Array [Int ,0b1],0b11],01],0x6_C_97F_F_B];}Class _B{Constructor (){} }''',
                '''Class,P_0,{,},Class,a_F_y4__,{,Destructor,(,),{,},Val,__,,,l2m,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0b11,],,,01,],,,0x6C97FFB,],;,},Class,_B,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_327(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q_{$G8B(l5,O_:Array [Array [Boolean ,0X5C],0x43]){}Constructor (a_4_,T:Boolean ;_,c,_z:Array [Boolean ,0B1001001]){}Constructor (I0_,qs_C,v:_;c,_,_7,h5,_,_:Array [Int ,0B1001001];f_4,R_500M,_:y;c_1_:Array [Float ,43]){} }Class _4{}''',
                '''Class,Q_,{,$G8B,(,l5,,,O_,:,Array,[,Array,[,Boolean,,,0X5C,],,,0x43,],),{,},Constructor,(,a_4_,,,T,:,Boolean,;,_,,,c,,,_z,:,Array,[,Boolean,,,0B1001001,],),{,},Constructor,(,I0_,,,qs_C,,,v,:,_,;,c,,,_,,,_7,,,h5,,,_,,,_,:,Array,[,Int,,,0B1001001,],;,f_4,,,R_500M,,,_,:,y,;,c_1_,:,Array,[,Float,,,43,],),{,},},Class,_4,{,},<EOF>''',
                101
            )
        )

    def test_328(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c7_T6_{Destructor (){}Val e,_,ur,$6,$n_4W___,$_6_,qQ_:Array [Array [Array [Array [Array [Boolean ,0B111101],043],0B10_1_00_0],0X3C],0X3C];Constructor (_6,G__I,X,I,k,e:Array [Boolean ,02];_6,_:tW__m;_15:_){Break ;Break ;Return ;} }Class _2Ca{Constructor (l,__9,p:Array [Float ,0b1]){} }''',
                '''Class,c7_T6_,{,Destructor,(,),{,},Val,e,,,_,,,ur,,,$6,,,$n_4W___,,,$_6_,,,qQ_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B111101,],,,043,],,,0B101000,],,,0X3C,],,,0X3C,],;,Constructor,(,_6,,,G__I,,,X,,,I,,,k,,,e,:,Array,[,Boolean,,,02,],;,_6,,,_,:,tW__m,;,_15,:,_,),{,Break,;,Break,;,Return,;,},},Class,_2Ca,{,Constructor,(,l,,,__9,,,p,:,Array,[,Float,,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_329(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0B{Constructor (Ra96:_;__:Array [Boolean ,0X7];f_:Boolean ;_,_M63:_48;K8,tf:Array [Boolean ,0x4C]){} }Class _49{}''',
                '''Class,_0B,{,Constructor,(,Ra96,:,_,;,__,:,Array,[,Boolean,,,0X7,],;,f_,:,Boolean,;,_,,,_M63,:,_48,;,K8,,,tf,:,Array,[,Boolean,,,0x4C,],),{,},},Class,_49,{,},<EOF>''',
                101
            )
        )

    def test_330(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M:q_4{$_(_,Z_:Array [Float ,0B11110];_:Array [Array [Array [Array [Array [Boolean ,37],37],06_0],0B1011],0B11110];ph:Array [String ,0X4D];_:String ){_::$t8();} }''',
                '''Class,M,:,q_4,{,$_,(,_,,,Z_,:,Array,[,Float,,,0B11110,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,37,],,,37,],,,060,],,,0B1011,],,,0B11110,],;,ph,:,Array,[,String,,,0X4D,],;,_,:,String,),{,_,::,$t8,(,),;,},},<EOF>''',
                101
            )
        )

    def test_331(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{$_LJ3YE(){}$99(r1k,_3:Array [Array [Float ,0140],0xA_0];_2:String ){} }Class _AY__03:_{Constructor (){} }''',
                '''Class,m,{,$_LJ3YE,(,),{,},$99,(,r1k,,,_3,:,Array,[,Array,[,Float,,,0140,],,,0xA0,],;,_2,:,String,),{,},},Class,_AY__03,:,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_332(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{TB(_6:Array [Array [String ,10],0XD];W4:FBe_e;__:String ){} }Class _{Val _0,n38:_;Destructor (){}u(_,_,Mx,_,T:Array [Array [Array [Boolean ,0B110101],043],0X6_3];_,jZ,_:_;Rl:Array [Int ,0x64];__,_x:Array [Array [Array [Array [Array [Array [Boolean ,0x3_9],043],10],043],0xB],0b10_0];w,_,T,z_,_:Float ){_o_::$D();}Destructor (){}Var _6:Array [Array [Array [Array [Array [Float ,0B11],05],0b1],0b1],043];}Class __RH2r_{}Class JZ{}''',
                '''Class,_,{,TB,(,_6,:,Array,[,Array,[,String,,,10,],,,0XD,],;,W4,:,FBe_e,;,__,:,String,),{,},},Class,_,{,Val,_0,,,n38,:,_,;,Destructor,(,),{,},u,(,_,,,_,,,Mx,,,_,,,T,:,Array,[,Array,[,Array,[,Boolean,,,0B110101,],,,043,],,,0X63,],;,_,,,jZ,,,_,:,_,;,Rl,:,Array,[,Int,,,0x64,],;,__,,,_x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x39,],,,043,],,,10,],,,043,],,,0xB,],,,0b100,],;,w,,,_,,,T,,,z_,,,_,:,Float,),{,_o_,::,$D,(,),;,},Destructor,(,),{,},Var,_6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B11,],,,05,],,,0b1,],,,0b1,],,,043,],;,},Class,__RH2r_,{,},Class,JZ,{,},<EOF>''',
                101
            )
        )

    def test_333(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T77__:_{}Class _1kQ8f_1{Constructor (Y,_:String ;lF_8U,y,_,h:_7U;_A3,W,j_,_,_:Array [Boolean ,07];H:Array [Array [Array [Array [Array [Array [Float ,5],0X59],053],9],15],4];_,_,_8:Array [Array [Array [String ,06_53_514_6],0B11111],15]){}$UV_s9P1(e:Array [Array [Boolean ,0x18],17];_0,t:String ){} }''',
                '''Class,T77__,:,_,{,},Class,_1kQ8f_1,{,Constructor,(,Y,,,_,:,String,;,lF_8U,,,y,,,_,,,h,:,_7U,;,_A3,,,W,,,j_,,,_,,,_,:,Array,[,Boolean,,,07,],;,H,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,5,],,,0X59,],,,053,],,,9,],,,15,],,,4,],;,_,,,_,,,_8,:,Array,[,Array,[,Array,[,String,,,06535146,],,,0B11111,],,,15,],),{,},$UV_s9P1,(,e,:,Array,[,Array,[,Boolean,,,0x18,],,,17,],;,_0,,,t,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_334(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A{Constructor (w:String ;cM,_,G4_9____,_kd,y_:Array [Float ,0XC0_A_00];_5:Array [Float ,02_1_3];___28:Int ){} }Class A_{}''',
                '''Class,A,{,Constructor,(,w,:,String,;,cM,,,_,,,G4_9____,,,_kd,,,y_,:,Array,[,Float,,,0XC0A00,],;,_5,:,Array,[,Float,,,0213,],;,___28,:,Int,),{,},},Class,A_,{,},<EOF>''',
                101
            )
        )

    def test_335(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{Val _5o419,_4,Z7V,$u,$9,mY,z_,$_,$N_:Array [Int ,0B1_11_000];Var __:Array [Boolean ,0b1_1];}Class _{}Class _W5:_{}''',
                '''Class,X,{,Val,_5o419,,,_4,,,Z7V,,,$u,,,$9,,,mY,,,z_,,,$_,,,$N_,:,Array,[,Int,,,0B111000,],;,Var,__,:,Array,[,Boolean,,,0b11,],;,},Class,_,{,},Class,_W5,:,_,{,},<EOF>''',
                101
            )
        )

    def test_336(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f9{Destructor (){}Var $_5,$27_9:Array [Array [Array [Array [String ,01_27_25],9],97_8],0133];Var a:Boolean ;}''',
                '''Class,f9,{,Destructor,(,),{,},Var,$_5,,,$27_9,:,Array,[,Array,[,Array,[,Array,[,String,,,012725,],,,9,],,,978,],,,0133,],;,Var,a,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_337(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (V,_:Array [Boolean ,0X18];_6,__3b:Float ){Break ;}Constructor (_,k,_WRa,__,ka3_,_:Array [Array [Boolean ,05],44]){} }''',
                '''Class,_,{,Constructor,(,V,,,_,:,Array,[,Boolean,,,0X18,],;,_6,,,__3b,:,Float,),{,Break,;,},Constructor,(,_,,,k,,,_WRa,,,__,,,ka3_,,,_,:,Array,[,Array,[,Boolean,,,05,],,,44,],),{,},},<EOF>''',
                101
            )
        )

    def test_338(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{}Class h{Constructor (x:String ;_3A,__45_G_oi,_8:Int ;__,s:Array [Boolean ,0b1_0];v:Array [Boolean ,21];u:t43;I:E;Ev,n_9,D,a9_,_,_:Boolean ){}Var P:Array [Array [Float ,0X5_2],0x5F];}Class _{Var _,$I,$9:b220;}''',
                '''Class,R,{,},Class,h,{,Constructor,(,x,:,String,;,_3A,,,__45_G_oi,,,_8,:,Int,;,__,,,s,:,Array,[,Boolean,,,0b10,],;,v,:,Array,[,Boolean,,,21,],;,u,:,t43,;,I,:,E,;,Ev,,,n_9,,,D,,,a9_,,,_,,,_,:,Boolean,),{,},Var,P,:,Array,[,Array,[,Float,,,0X52,],,,0x5F,],;,},Class,_,{,Var,_,,,$I,,,$9,:,b220,;,},<EOF>''',
                101
            )
        )

    def test_339(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_M__8{Constructor (_,_N,_:l_;_8:Array [Array [Array [String ,0B1],90],0X7_D_5_3_7];_,__9V,_:_1_;_,l:Array [Array [Array [String ,0X16],0x876_B],90]){ {Break ;} }}''',
                '''Class,__,:,_M__8,{,Constructor,(,_,,,_N,,,_,:,l_,;,_8,:,Array,[,Array,[,Array,[,String,,,0B1,],,,90,],,,0X7D537,],;,_,,,__9V,,,_,:,_1_,;,_,,,l,:,Array,[,Array,[,Array,[,String,,,0X16,],,,0x876B,],,,90,],),{,{,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_340(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w0_{Val $B,$__10,_wi,A,$__:_;}Class o{}Class _:m_{}Class X{}Class w{}Class _8_:zm_4uJl{}Class _{Constructor (__:_;_:Array [Float ,1]){} }Class _G{I(_:Array [Array [Array [Array [Boolean ,0X5B],0B1001101],0b1000110],0X5B]){} }''',
                '''Class,w0_,{,Val,$B,,,$__10,,,_wi,,,A,,,$__,:,_,;,},Class,o,{,},Class,_,:,m_,{,},Class,X,{,},Class,w,{,},Class,_8_,:,zm_4uJl,{,},Class,_,{,Constructor,(,__,:,_,;,_,:,Array,[,Float,,,1,],),{,},},Class,_G,{,I,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X5B,],,,0B1001101,],,,0b1000110,],,,0X5B,],),{,},},<EOF>''',
                101
            )
        )

    def test_341(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z_{Constructor (p2_:L){ {} }_(Y,_:Array [Array [Int ,0106],0106];x1_3:Array [Array [Boolean ,062_155_67_7],0xE]){Return ;} }''',
                '''Class,z_,{,Constructor,(,p2_,:,L,),{,{,},},_,(,Y,,,_,:,Array,[,Array,[,Int,,,0106,],,,0106,],;,x1_3,:,Array,[,Array,[,Boolean,,,062155677,],,,0xE,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_342(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Qv__{Constructor (z:String ;_7X:Array [Array [Boolean ,0X1],2];b4n9:Array [Boolean ,0xC]){} }Class _:uHg{}''',
                '''Class,Qv__,{,Constructor,(,z,:,String,;,_7X,:,Array,[,Array,[,Boolean,,,0X1,],,,2,],;,b4n9,:,Array,[,Boolean,,,0xC,],),{,},},Class,_,:,uHg,{,},<EOF>''',
                101
            )
        )

    def test_343(self):
        self.assertTrue(
            TestLexer.test(
                '''Class mLH10{Constructor (_:Array [Boolean ,0b110001];Q_:Float ;s_,p:Array [Array [Array [Array [Int ,04],0x46],045],02]){}Var kW7_:Array [Array [Array [Float ,0x46],045],02];Var _:Array [Array [Float ,4_9],37];}Class _BW_{$1(P:Int ;O,v,_,Z,u,B,_,_o:N4S){}Val $7,$8:Array [Int ,045];$8Xj10(){} }''',
                '''Class,mLH10,{,Constructor,(,_,:,Array,[,Boolean,,,0b110001,],;,Q_,:,Float,;,s_,,,p,:,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,0x46,],,,045,],,,02,],),{,},Var,kW7_,:,Array,[,Array,[,Array,[,Float,,,0x46,],,,045,],,,02,],;,Var,_,:,Array,[,Array,[,Float,,,49,],,,37,],;,},Class,_BW_,{,$1,(,P,:,Int,;,O,,,v,,,_,,,Z,,,u,,,B,,,_,,,_o,:,N4S,),{,},Val,$7,,,$8,:,Array,[,Int,,,045,],;,$8Xj10,(,),{,},},<EOF>''',
                101
            )
        )

    def test_344(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{Constructor (_,HF:Array [Array [Float ,91],03_6];_2,_,u:Array [Array [Array [Array [Int ,0b1010110],0B1000000],0B10],06];d,_:Int ){} }''',
                '''Class,_9,{,Constructor,(,_,,,HF,:,Array,[,Array,[,Float,,,91,],,,036,],;,_2,,,_,,,u,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1010110,],,,0B1000000,],,,0B10,],,,06,],;,d,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_345(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w:k{_(_:Array [Array [String ,0B1001001],07_6];_:Array [Array [Int ,55],0b1];Gl:Float ){Var f28:String ;Continue ;}$p(){} }''',
                '''Class,_w,:,k,{,_,(,_,:,Array,[,Array,[,String,,,0B1001001,],,,076,],;,_,:,Array,[,Array,[,Int,,,55,],,,0b1,],;,Gl,:,Float,),{,Var,f28,:,String,;,Continue,;,},$p,(,),{,},},<EOF>''',
                101
            )
        )

    def test_346(self):
        self.assertTrue(
            TestLexer.test(
                '''Class VYpn___{Val _:Array [Array [Array [Array [Array [String ,77],0XA_A_1],04],77],061];Val $P,w:s;$_(){} }Class hjE:pi_I_{}Class _X_{}Class _8_{}Class _:_{Val $_,b_2_:Boolean ;}''',
                '''Class,VYpn___,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,77,],,,0XAA1,],,,04,],,,77,],,,061,],;,Val,$P,,,w,:,s,;,$_,(,),{,},},Class,hjE,:,pi_I_,{,},Class,_X_,{,},Class,_8_,{,},Class,_,:,_,{,Val,$_,,,b_2_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_347(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:C{Constructor (_47V_:Array [Array [Array [String ,05_3],040],77];x_:Int ;_7_5_,l:Array [Array [Array [Array [Array [Array [Array [Boolean ,035],0xC_29],0x3C],035],0b1_1],8],0x3C]){Val DsI:Boolean ;}Constructor (DpU7,VL__,o,_8,ET:Int ;Ov:Array [Array [Boolean ,0X2B],0X6]){}Destructor (){}Constructor (){}Constructor (__,_17_,nN,s9:String ){}Destructor (){Break ;} }''',
                '''Class,_,:,C,{,Constructor,(,_47V_,:,Array,[,Array,[,Array,[,String,,,053,],,,040,],,,77,],;,x_,:,Int,;,_7_5_,,,l,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,035,],,,0xC29,],,,0x3C,],,,035,],,,0b11,],,,8,],,,0x3C,],),{,Val,DsI,:,Boolean,;,},Constructor,(,DpU7,,,VL__,,,o,,,_8,,,ET,:,Int,;,Ov,:,Array,[,Array,[,Boolean,,,0X2B,],,,0X6,],),{,},Destructor,(,),{,},Constructor,(,),{,},Constructor,(,__,,,_17_,,,nN,,,s9,:,String,),{,},Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_348(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __0{Var _h_d__,$T:Array [Array [Array [String ,020],02],020];}Class g{}Class __:H{}Class __{Val FY__:String ;}''',
                '''Class,__0,{,Var,_h_d__,,,$T,:,Array,[,Array,[,Array,[,String,,,020,],,,02,],,,020,],;,},Class,g,{,},Class,__,:,H,{,},Class,__,{,Val,FY__,:,String,;,},<EOF>''',
                101
            )
        )

    def test_349(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_:_{Val $1y293,$Q,J,$_:_;Val $5:Array [Array [Array [Int ,6],047_5],04];}Class _I_{Var $x3,$Q,$O,$_m,_99Sv,p,_,Ck,$_,_:J;}Class J{}Class _f{}''',
                '''Class,v_,:,_,{,Val,$1y293,,,$Q,,,J,,,$_,:,_,;,Val,$5,:,Array,[,Array,[,Array,[,Int,,,6,],,,0475,],,,04,],;,},Class,_I_,{,Var,$x3,,,$Q,,,$O,,,$_m,,,_99Sv,,,p,,,_,,,Ck,,,$_,,,_,:,J,;,},Class,J,{,},Class,_f,{,},<EOF>''',
                101
            )
        )

    def test_350(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{Var $X,$8c,G:String ;Val _9x1_:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,12],0B1000100],0b11],0124],0124],0B1000100],0X44],12],04_2_71];}Class ___69A__:v{Var $8:Int ;}Class _3{Destructor (){} }''',
                '''Class,x,{,Var,$X,,,$8c,,,G,:,String,;,Val,_9x1_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,12,],,,0B1000100,],,,0b11,],,,0124,],,,0124,],,,0B1000100,],,,0X44,],,,12,],,,04271,],;,},Class,___69A__,:,v,{,Var,$8,:,Int,;,},Class,_3,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_351(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:M__{}Class __{Constructor (_:Boolean ;__:Array [Boolean ,66];uh,x:e){} }Class Ef{Val $ala_:String ;Var $_f_,$_6:Array [String ,07];}''',
                '''Class,U,:,M__,{,},Class,__,{,Constructor,(,_,:,Boolean,;,__,:,Array,[,Boolean,,,66,],;,uh,,,x,:,e,),{,},},Class,Ef,{,Val,$ala_,:,String,;,Var,$_f_,,,$_6,:,Array,[,String,,,07,],;,},<EOF>''',
                101
            )
        )

    def test_352(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:K{}Class _{Val $q:_;Var O:W;_(){} }Class w:_{Val _:_A6;Constructor (_:Array [Int ,0B1_0_1]){} }Class j{Constructor (){Break ;} }''',
                '''Class,k,:,K,{,},Class,_,{,Val,$q,:,_,;,Var,O,:,W,;,_,(,),{,},},Class,w,:,_,{,Val,_,:,_A6,;,Constructor,(,_,:,Array,[,Int,,,0B101,],),{,},},Class,j,{,Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_353(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O3632{}Class B_{}Class A:_{Constructor (l:Array [Array [Array [String ,11],033],0B10];_K6488:_4;N6:lE41;zF__:Array [Float ,11];_:Int ;_Oc:Array [Int ,11];E_,_,I,I_H,_:Array [Array [Float ,02],0B11]){Break ;{Break ;} }}''',
                '''Class,O3632,{,},Class,B_,{,},Class,A,:,_,{,Constructor,(,l,:,Array,[,Array,[,Array,[,String,,,11,],,,033,],,,0B10,],;,_K6488,:,_4,;,N6,:,lE41,;,zF__,:,Array,[,Float,,,11,],;,_,:,Int,;,_Oc,:,Array,[,Int,,,11,],;,E_,,,_,,,I,,,I_H,,,_,:,Array,[,Array,[,Float,,,02,],,,0B11,],),{,Break,;,{,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_354(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p7_{}Class p_{Val $_,z:Array [Array [Array [String ,87],93],0B11101];Var _:Array [Array [Boolean ,63_3],0b10010];Val $_,q___,_:_;}''',
                '''Class,p7_,{,},Class,p_,{,Val,$_,,,z,:,Array,[,Array,[,Array,[,String,,,87,],,,93,],,,0B11101,],;,Var,_,:,Array,[,Array,[,Boolean,,,633,],,,0b10010,],;,Val,$_,,,q___,,,_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_355(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:_{$H(f,_9M_,_:_;s,Z,L89798,K,zb5a,_,_:_;Z:_){}Val __,$_,$_,P,$0:Array [Float ,0B1_1_0_1];}Class _:_{}Class _{}Class J{}''',
                '''Class,o,:,_,{,$H,(,f,,,_9M_,,,_,:,_,;,s,,,Z,,,L89798,,,K,,,zb5a,,,_,,,_,:,_,;,Z,:,_,),{,},Val,__,,,$_,,,$_,,,P,,,$0,:,Array,[,Float,,,0B1101,],;,},Class,_,:,_,{,},Class,_,{,},Class,J,{,},<EOF>''',
                101
            )
        )

    def test_356(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:_{G7Y5212(_:Array [String ,0b1];__,_,w:Array [Boolean ,0B11_100];D,_,_,D6,i_:_){Break ;}Var $v_,j_5:Array [Array [Int ,0B1_111_111_1_0_1],0xB_B];Constructor (L__:Array [Float ,54];_177__,_R,b:Int ;Z_,_1896IT_,_,__53:Array [Array [Boolean ,0B10100],0B1_01_1_1];h_39,Y,__u9_:Array [String ,0B10100];_,_F:Boolean ){} }''',
                '''Class,x,:,_,{,G7Y5212,(,_,:,Array,[,String,,,0b1,],;,__,,,_,,,w,:,Array,[,Boolean,,,0B11100,],;,D,,,_,,,_,,,D6,,,i_,:,_,),{,Break,;,},Var,$v_,,,j_5,:,Array,[,Array,[,Int,,,0B1111111101,],,,0xBB,],;,Constructor,(,L__,:,Array,[,Float,,,54,],;,_177__,,,_R,,,b,:,Int,;,Z_,,,_1896IT_,,,_,,,__53,:,Array,[,Array,[,Boolean,,,0B10100,],,,0B10111,],;,h_39,,,Y,,,__u9_,:,Array,[,String,,,0B10100,],;,_,,,_F,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_357(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_h{_H_(__s_9:Float ;_4_:Boolean ;K_R,sn_:Array [String ,0x6];_:Array [String ,20]){}Var __,$3,$8,$_,__:C;}''',
                '''Class,k_h,{,_H_,(,__s_9,:,Float,;,_4_,:,Boolean,;,K_R,,,sn_,:,Array,[,String,,,0x6,],;,_,:,Array,[,String,,,20,],),{,},Var,__,,,$3,,,$8,,,$_,,,__,:,C,;,},<EOF>''',
                101
            )
        )

    def test_358(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{$O_28(_:Boolean ;_,ZQ,___n3:Int ;_:Array [Boolean ,043];s,zD,VMxaf5:Int ){}Val w,xT,P:Int ;Var _:Array [Array [Int ,0x2_C_5],0X9_7];Val $K:Y;Destructor (){} }Class _:fj{$0(_,E_,R:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0xE_5_B],0xD_C9],0B1],043],2],0x50],02],4_6]){} }Class ec___:__k_{Constructor (__,_:__Pv95;R:Int ;_W,T61p5:Float ){}Var r32,J,$__:Array [Array [Array [Array [Boolean ,043],2],0x50],0XD6];Var e9Yg:Int ;Constructor (WM:_0_8or;_,z,_5,_,_:Array [Array [String ,0X10],0x50];_z_t_N,_:Boolean ;_4:Boolean ;H2_:Float ){} }''',
                '''Class,o,{,$O_28,(,_,:,Boolean,;,_,,,ZQ,,,___n3,:,Int,;,_,:,Array,[,Boolean,,,043,],;,s,,,zD,,,VMxaf5,:,Int,),{,},Val,w,,,xT,,,P,:,Int,;,Var,_,:,Array,[,Array,[,Int,,,0x2C5,],,,0X97,],;,Val,$K,:,Y,;,Destructor,(,),{,},},Class,_,:,fj,{,$0,(,_,,,E_,,,R,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xE5B,],,,0xDC9,],,,0B1,],,,043,],,,2,],,,0x50,],,,02,],,,46,],),{,},},Class,ec___,:,__k_,{,Constructor,(,__,,,_,:,__Pv95,;,R,:,Int,;,_W,,,T61p5,:,Float,),{,},Var,r32,,,J,,,$__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,043,],,,2,],,,0x50,],,,0XD6,],;,Var,e9Yg,:,Int,;,Constructor,(,WM,:,_0_8or,;,_,,,z,,,_5,,,_,,,_,:,Array,[,Array,[,String,,,0X10,],,,0x50,],;,_z_t_N,,,_,:,Boolean,;,_4,:,Boolean,;,H2_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_359(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z_:a4_z{Destructor (){}Constructor (__Sy,_,_:Array [Boolean ,0X54]){}Constructor (_,_91__,_,_6,__:_6){} }''',
                '''Class,z_,:,a4_z,{,Destructor,(,),{,},Constructor,(,__Sy,,,_,,,_,:,Array,[,Boolean,,,0X54,],),{,},Constructor,(,_,,,_91__,,,_,,,_6,,,__,:,_6,),{,},},<EOF>''',
                101
            )
        )

    def test_360(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H_Zr6H:_{}Class _{Constructor (u,gEw,hu:__;y:Array [String ,2376];__:I;m_,_I,XH,t3,t93,_n,_3:u){Var s,_:T6Q;{} }}''',
                '''Class,H_Zr6H,:,_,{,},Class,_,{,Constructor,(,u,,,gEw,,,hu,:,__,;,y,:,Array,[,String,,,2376,],;,__,:,I,;,m_,,,_I,,,XH,,,t3,,,t93,,,_n,,,_3,:,u,),{,Var,s,,,_,:,T6Q,;,{,},},},<EOF>''',
                101
            )
        )

    def test_361(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _11:q_{}Class _:lD_{Constructor (_8:Float ;U66,_,_,S:Array [Array [Array [String ,0B100100],9],4]){Continue ;Val sn,K,Kl_7,_9C_:Array [Int ,01];Continue ;} }''',
                '''Class,_11,:,q_,{,},Class,_,:,lD_,{,Constructor,(,_8,:,Float,;,U66,,,_,,,_,,,S,:,Array,[,Array,[,Array,[,String,,,0B100100,],,,9,],,,4,],),{,Continue,;,Val,sn,,,K,,,Kl_7,,,_9C_,:,Array,[,Int,,,01,],;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_362(self):
        self.assertTrue(
            TestLexer.test(
                '''Class PEI_:_{Var $_m:Boolean ;$R(_d7118:P;_,A,_,A,_z,kq:Int ;_,J5rM_,e,_,G:QL;_,P7,V,H,_,W_D,_t,I_:Array [Boolean ,0xB]){} }''',
                '''Class,PEI_,:,_,{,Var,$_m,:,Boolean,;,$R,(,_d7118,:,P,;,_,,,A,,,_,,,A,,,_z,,,kq,:,Int,;,_,,,J5rM_,,,e,,,_,,,G,:,QL,;,_,,,P7,,,V,,,H,,,_,,,W_D,,,_t,,,I_,:,Array,[,Boolean,,,0xB,],),{,},},<EOF>''',
                101
            )
        )

    def test_363(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:_{Constructor (c,__x0H,g:Array [Array [Int ,017],0b1111];_2:Float ;_E:Array [Array [String ,0x4_8],0b1011000];Z,_:String ){Continue ;} }''',
                '''Class,B,:,_,{,Constructor,(,c,,,__x0H,,,g,:,Array,[,Array,[,Int,,,017,],,,0b1111,],;,_2,:,Float,;,_E,:,Array,[,Array,[,String,,,0x48,],,,0b1011000,],;,Z,,,_,:,String,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_364(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_{Val $A_:Array [Array [Int ,0B1001111],0B1001111];Var y:Array [Array [Array [Boolean ,0b11_1],0b1001010],53];Var P_,$_,$_:f0D;}''',
                '''Class,N,:,_,{,Val,$A_,:,Array,[,Array,[,Int,,,0B1001111,],,,0B1001111,],;,Var,y,:,Array,[,Array,[,Array,[,Boolean,,,0b111,],,,0b1001010,],,,53,],;,Var,P_,,,$_,,,$_,:,f0D,;,},<EOF>''',
                101
            )
        )

    def test_365(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{Constructor (M_H_D:String ){} }Class Ua:zES1_{Constructor (___:_;_,y0:Array [Array [Array [Array [Array [String ,0157],06],26_6_7],0b1111],9];V:Array [Array [Int ,0x1_C9B0_8_B_0],69]){} }''',
                '''Class,t,{,Constructor,(,M_H_D,:,String,),{,},},Class,Ua,:,zES1_,{,Constructor,(,___,:,_,;,_,,,y0,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0157,],,,06,],,,2667,],,,0b1111,],,,9,],;,V,:,Array,[,Array,[,Int,,,0x1C9B08B0,],,,69,],),{,},},<EOF>''',
                101
            )
        )

    def test_366(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6c:d{Constructor (_,w1:Int ;__,lK_:Array [Array [Boolean ,041],0x6_8];Oe,n,P__,A_:SD;p,__,_:Array [Array [Float ,041],85_3]){}Destructor (){} }''',
                '''Class,_6c,:,d,{,Constructor,(,_,,,w1,:,Int,;,__,,,lK_,:,Array,[,Array,[,Boolean,,,041,],,,0x68,],;,Oe,,,n,,,P__,,,A_,:,SD,;,p,,,__,,,_,:,Array,[,Array,[,Float,,,041,],,,853,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_367(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{Var $CE,C:Array [Array [String ,051],0B1001001];Constructor (C:__;_:_g_j_8;_,_,C1LB:Int ;__bx_:Array [String ,0b100000]){} }''',
                '''Class,c,{,Var,$CE,,,C,:,Array,[,Array,[,String,,,051,],,,0B1001001,],;,Constructor,(,C,:,__,;,_,:,_g_j_8,;,_,,,_,,,C1LB,:,Int,;,__bx_,:,Array,[,String,,,0b100000,],),{,},},<EOF>''',
                101
            )
        )

    def test_368(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Y:_{Destructor (){} }Class q{}Class nX_:_{Constructor (O:Array [Boolean ,01];Y,__:String ){} }Class A8_:__{}''',
                '''Class,_Y,:,_,{,Destructor,(,),{,},},Class,q,{,},Class,nX_,:,_,{,Constructor,(,O,:,Array,[,Boolean,,,01,],;,Y,,,__,:,String,),{,},},Class,A8_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_369(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{}Class T_8{}Class _:_{Destructor (){Var H,sa,D2,__,l,_21,G67,_:Array [Array [Boolean ,0b1],0B11110];} }Class _{}Class _{}''',
                '''Class,r,{,},Class,T_8,{,},Class,_,:,_,{,Destructor,(,),{,Var,H,,,sa,,,D2,,,__,,,l,,,_21,,,G67,,,_,:,Array,[,Array,[,Boolean,,,0b1,],,,0B11110,],;,},},Class,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_370(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___43{Constructor (){}Val $w:Array [Array [Float ,0X6_0],0xB3];}Class P{_(__:Array [Boolean ,0x2D];W1_:oM_9){} }''',
                '''Class,___43,{,Constructor,(,),{,},Val,$w,:,Array,[,Array,[,Float,,,0X60,],,,0xB3,],;,},Class,P,{,_,(,__,:,Array,[,Boolean,,,0x2D,],;,W1_,:,oM_9,),{,},},<EOF>''',
                101
            )
        )

    def test_371(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _f{Constructor (R:Array [Float ,0B1000100];Y:Array [Float ,2]){}Constructor (m:_;q:Array [Array [String ,0b100101],45]){} }''',
                '''Class,_f,{,Constructor,(,R,:,Array,[,Float,,,0B1000100,],;,Y,:,Array,[,Float,,,2,],),{,},Constructor,(,m,:,_,;,q,:,Array,[,Array,[,String,,,0b100101,],,,45,],),{,},},<EOF>''',
                101
            )
        )

    def test_372(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:_Q{}Class _:_16{Var $wz:Array [Array [Float ,0B1111],3_32];Val A,$5,$_,$x_:Array [String ,72];}Class _F:Y{}''',
                '''Class,b,:,_Q,{,},Class,_,:,_16,{,Var,$wz,:,Array,[,Array,[,Float,,,0B1111,],,,332,],;,Val,A,,,$5,,,$_,,,$x_,:,Array,[,String,,,72,],;,},Class,_F,:,Y,{,},<EOF>''',
                101
            )
        )

    def test_373(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class _:l{Constructor (_0,Xos9,_,N5oCFr,__:Array [Float ,0XA_2];_v1:Array [Array [Array [Boolean ,0x1],01],0b1_0_1_1];o:Int ){} }''',
                '''Class,__,:,_,{,},Class,_,:,l,{,Constructor,(,_0,,,Xos9,,,_,,,N5oCFr,,,__,:,Array,[,Float,,,0XA2,],;,_v1,:,Array,[,Array,[,Array,[,Boolean,,,0x1,],,,01,],,,0b1011,],;,o,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_374(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var k7,$_C09_:Array [Boolean ,064];}Class __:_5{$G(zMW70o:Array [Array [Array [Array [Int ,0b1],0B1],05],2];_,K7:k_;OzW,p:String ){} }''',
                '''Class,_,{,Var,k7,,,$_C09_,:,Array,[,Boolean,,,064,],;,},Class,__,:,_5,{,$G,(,zMW70o,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0B1,],,,05,],,,2,],;,_,,,K7,:,k_,;,OzW,,,p,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_375(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __VT{}Class __{Var _Y_5W,_M:Array [Array [Array [Array [Float ,06_34_0_0_0_0],0127],0B1000001],07];}Class _6D_{}''',
                '''Class,__VT,{,},Class,__,{,Var,_Y_5W,,,_M,:,Array,[,Array,[,Array,[,Array,[,Float,,,06340000,],,,0127,],,,0B1000001,],,,07,],;,},Class,_6D_,{,},<EOF>''',
                101
            )
        )

    def test_376(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h{}Class GH{Constructor (){Return ;}Var _9Wsk,_E34_x_P_9:_;Constructor (_:Float ;T_4_i1_,t_4:String ){}Val A,k:String ;}''',
                '''Class,h,{,},Class,GH,{,Constructor,(,),{,Return,;,},Var,_9Wsk,,,_E34_x_P_9,:,_,;,Constructor,(,_,:,Float,;,T_4_i1_,,,t_4,:,String,),{,},Val,A,,,k,:,String,;,},<EOF>''',
                101
            )
        )

    def test_377(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __2:dU{Val __,_8,_:Array [Float ,075];Var _:__H;Destructor (){}Constructor (Z,_:_){} }Class _c{}Class _Lc:__4{}''',
                '''Class,__2,:,dU,{,Val,__,,,_8,,,_,:,Array,[,Float,,,075,],;,Var,_,:,__H,;,Destructor,(,),{,},Constructor,(,Z,,,_,:,_,),{,},},Class,_c,{,},Class,_Lc,:,__4,{,},<EOF>''',
                101
            )
        )

    def test_378(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:y{}Class _:Q__D{Var _5_3:Array [Array [Boolean ,58],58];}Class __:PH{Constructor (){}Constructor (o,_B0,M:Array [Array [Array [Array [Array [Float ,070],0b101101],0B1010011],58],070]){} }''',
                '''Class,_,:,y,{,},Class,_,:,Q__D,{,Var,_5_3,:,Array,[,Array,[,Boolean,,,58,],,,58,],;,},Class,__,:,PH,{,Constructor,(,),{,},Constructor,(,o,,,_B0,,,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,070,],,,0b101101,],,,0B1010011,],,,58,],,,070,],),{,},},<EOF>''',
                101
            )
        )

    def test_379(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{}Class M{Var _,_,$3j,$_,T3:Array [Array [Float ,0B111],8];Val $_O3_,$I_9:Boolean ;}Class u{Val $V:Float ;}''',
                '''Class,V,{,},Class,M,{,Var,_,,,_,,,$3j,,,$_,,,T3,:,Array,[,Array,[,Float,,,0B111,],,,8,],;,Val,$_O3_,,,$I_9,:,Boolean,;,},Class,u,{,Val,$V,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_380(self):
        self.assertTrue(
            TestLexer.test(
                '''Class et_:u{Destructor (){ {Var _Mx_5,j_k7,c_72,d7,t21:Array [Array [Array [Array [Array [Array [Array [Float ,0X61],0x26_C_07_C_8],0b11],0136],0136],0136],0X61];{} }} }Class _:_{}''',
                '''Class,et_,:,u,{,Destructor,(,),{,{,Var,_Mx_5,,,j_k7,,,c_72,,,d7,,,t21,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X61,],,,0x26C07C8,],,,0b11,],,,0136,],,,0136,],,,0136,],,,0X61,],;,{,},},},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_381(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D:_P_3{Val _,q_73:String ;Constructor (){} }Class e5{}Class b:T_{Var $2_:String ;Constructor (){ {}Continue ;}Constructor (G,b,_,Q,_C,f:__;_x:k63){} }Class _y:l_{}Class h:Lm{}''',
                '''Class,D,:,_P_3,{,Val,_,,,q_73,:,String,;,Constructor,(,),{,},},Class,e5,{,},Class,b,:,T_,{,Var,$2_,:,String,;,Constructor,(,),{,{,},Continue,;,},Constructor,(,G,,,b,,,_,,,Q,,,_C,,,f,:,__,;,_x,:,k63,),{,},},Class,_y,:,l_,{,},Class,h,:,Lm,{,},<EOF>''',
                101
            )
        )

    def test_382(self):
        self.assertTrue(
            TestLexer.test(
                '''Class iR0:c{}Class ____:b{Destructor (){Continue ;Return ;}Val sJ,___I1_4,M,__:Array [Array [Array [Array [String ,0x6],0b11],9],1];x6_(_1_y5_8_P:String ){Return ;}Destructor (){} }''',
                '''Class,iR0,:,c,{,},Class,____,:,b,{,Destructor,(,),{,Continue,;,Return,;,},Val,sJ,,,___I1_4,,,M,,,__,:,Array,[,Array,[,Array,[,Array,[,String,,,0x6,],,,0b11,],,,9,],,,1,],;,x6_,(,_1_y5_8_P,:,String,),{,Return,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_383(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y20:K{Val $e26,$C,$7:Float ;q(_,_T,O,v_:Int ;___6,FEUW_3P_,__:Array [String ,0x57];_mzn:Array [Array [Float ,0113],07]){} }''',
                '''Class,Y20,:,K,{,Val,$e26,,,$C,,,$7,:,Float,;,q,(,_,,,_T,,,O,,,v_,:,Int,;,___6,,,FEUW_3P_,,,__,:,Array,[,String,,,0x57,],;,_mzn,:,Array,[,Array,[,Float,,,0113,],,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_384(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j:_{$3(__S:Array [Array [Array [Array [Float ,47],022],074],0b1];_:Pf;h,l0,__:g;_,J:Boolean ){}Destructor (){Continue ;}Constructor (_:e;I4F_:Array [Array [Array [Int ,5],0XF],0B1];f:Boolean ){} }''',
                '''Class,j,:,_,{,$3,(,__S,:,Array,[,Array,[,Array,[,Array,[,Float,,,47,],,,022,],,,074,],,,0b1,],;,_,:,Pf,;,h,,,l0,,,__,:,g,;,_,,,J,:,Boolean,),{,},Destructor,(,),{,Continue,;,},Constructor,(,_,:,e,;,I4F_,:,Array,[,Array,[,Array,[,Int,,,5,],,,0XF,],,,0B1,],;,f,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_385(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:_2_J2{}Class q_:_6_67J{_(_:Array [Boolean ,04];a:Array [Array [Array [Float ,0b1011101],0X38],0B10_010]){Continue ;} }''',
                '''Class,K,:,_2_J2,{,},Class,q_,:,_6_67J,{,_,(,_,:,Array,[,Boolean,,,04,],;,a,:,Array,[,Array,[,Array,[,Float,,,0b1011101,],,,0X38,],,,0B10010,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_386(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:r_{__(_,vG___d,v,P,K,W9:Float ){} }Class __:_B1__{$J(j,Z_5:String ;_,___:Boolean ;__,_L7_:Array [Boolean ,03_4_5_12_22]){} }Class v__F{}''',
                '''Class,J,:,r_,{,__,(,_,,,vG___d,,,v,,,P,,,K,,,W9,:,Float,),{,},},Class,__,:,_B1__,{,$J,(,j,,,Z_5,:,String,;,_,,,___,:,Boolean,;,__,,,_L7_,:,Array,[,Boolean,,,03451222,],),{,},},Class,v__F,{,},<EOF>''',
                101
            )
        )

    def test_387(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_Q{}Class _:_N{Val $_9,$___:Boolean ;Val $Y7_,$Ax,$_:Float ;}Class h{Constructor (___1:v_;_,_:J;_ZL5_T_0:Array [Boolean ,67]){}$Uf(_4_:String ;_,t__,i:_){} }''',
                '''Class,l_Q,{,},Class,_,:,_N,{,Val,$_9,,,$___,:,Boolean,;,Val,$Y7_,,,$Ax,,,$_,:,Float,;,},Class,h,{,Constructor,(,___1,:,v_,;,_,,,_,:,J,;,_ZL5_T_0,:,Array,[,Boolean,,,67,],),{,},$Uf,(,_4_,:,String,;,_,,,t__,,,i,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_388(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __I:_{Destructor (){} }Class _6:o{Constructor (I_,B,W:Float ){} }Class s:_{Val _,_X,$A86939,e_:Int ;}Class t6:_t_D{}''',
                '''Class,__I,:,_,{,Destructor,(,),{,},},Class,_6,:,o,{,Constructor,(,I_,,,B,,,W,:,Float,),{,},},Class,s,:,_,{,Val,_,,,_X,,,$A86939,,,e_,:,Int,;,},Class,t6,:,_t_D,{,},<EOF>''',
                101
            )
        )

    def test_389(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p09{Constructor (T:Array [Array [Boolean ,76],0b1_0]){}Constructor (_3_e:Array [Boolean ,0b110011];O869:Float ){} }''',
                '''Class,p09,{,Constructor,(,T,:,Array,[,Array,[,Boolean,,,76,],,,0b10,],),{,},Constructor,(,_3_e,:,Array,[,Boolean,,,0b110011,],;,O869,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_390(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (fG:Array [Int ,20]){}Val $1,$2:Array [Array [Boolean ,0XE],20];Var __F_C:Array [Array [Array [Array [String ,07],01],0X1_E],0XD];}''',
                '''Class,_,{,Constructor,(,fG,:,Array,[,Int,,,20,],),{,},Val,$1,,,$2,:,Array,[,Array,[,Boolean,,,0XE,],,,20,],;,Var,__F_C,:,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,01,],,,0X1E,],,,0XD,],;,},<EOF>''',
                101
            )
        )

    def test_391(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:y{Destructor (){} }Class x:b{Val $5E09_0,$TI,___,ky:B;Constructor (_5,_,tA0v:Boolean ){DG::$2._._()._k._.q_();}D2(){} }''',
                '''Class,_,:,y,{,Destructor,(,),{,},},Class,x,:,b,{,Val,$5E09_0,,,$TI,,,___,,,ky,:,B,;,Constructor,(,_5,,,_,,,tA0v,:,Boolean,),{,DG,::,$2,.,_,.,_,(,),.,_k,.,_,.,q_,(,),;,},D2,(,),{,},},<EOF>''',
                101
            )
        )

    def test_392(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _{}Class _{}Class R{Destructor (){}Destructor (){}Constructor (_,_4:_){}Var _:Array [Array [Array [Array [Array [Array [Float ,0X10],0b10011],07_0],0X10],04_1_63],0b11];Var $g:_2;}''',
                '''Class,__,{,},Class,_,{,},Class,_,{,},Class,R,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,_,,,_4,:,_,),{,},Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X10,],,,0b10011,],,,070,],,,0X10,],,,04163,],,,0b11,],;,Var,$g,:,_2,;,},<EOF>''',
                101
            )
        )

    def test_393(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class l{$_(G2,U_1:N__;_dE:f;__:_1M;d,_,_,zL,N,_1,M,e,ki:Array [Float ,035];i:Array [Float ,035];__:String ){} }''',
                '''Class,_,{,},Class,l,{,$_,(,G2,,,U_1,:,N__,;,_dE,:,f,;,__,:,_1M,;,d,,,_,,,_,,,zL,,,N,,,_1,,,M,,,e,,,ki,:,Array,[,Float,,,035,],;,i,:,Array,[,Float,,,035,],;,__,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_394(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Kw91_xj{Var $_j__:String ;}Class Jw7NB{}Class _{Constructor (){} }Class j:_{}Class _6kp_k_{Destructor (){} }''',
                '''Class,Kw91_xj,{,Var,$_j__,:,String,;,},Class,Jw7NB,{,},Class,_,{,Constructor,(,),{,},},Class,j,:,_,{,},Class,_6kp_k_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_395(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:_{Constructor (i_8,_:_){Break ;}Destructor (){}Var H6,_S__,_5___2,_:x;Destructor (){}Val $_3,$K,$n:Array [Boolean ,4];}''',
                '''Class,S,:,_,{,Constructor,(,i_8,,,_,:,_,),{,Break,;,},Destructor,(,),{,},Var,H6,,,_S__,,,_5___2,,,_,:,x,;,Destructor,(,),{,},Val,$_3,,,$K,,,$n,:,Array,[,Boolean,,,4,],;,},<EOF>''',
                101
            )
        )

    def test_396(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{}Class k{}Class Ew_{Destructor (){} }Class x:_eI{Val _,NI:Array [Array [Array [Array [Array [Boolean ,7_8],0B1011111],0111],9],0x51];}''',
                '''Class,_9,{,},Class,k,{,},Class,Ew_,{,Destructor,(,),{,},},Class,x,:,_eI,{,Val,_,,,NI,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,78,],,,0B1011111,],,,0111,],,,9,],,,0x51,],;,},<EOF>''',
                101
            )
        )

    def test_397(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Gi____O{w(){} }Class rR:g{}Class Q:Z_{}Class _{Constructor (){ {} }}Class _V05{Val $J_,$Q,_3,$4:Array [Int ,0x7];}''',
                '''Class,Gi____O,{,w,(,),{,},},Class,rR,:,g,{,},Class,Q,:,Z_,{,},Class,_,{,Constructor,(,),{,{,},},},Class,_V05,{,Val,$J_,,,$Q,,,_3,,,$4,:,Array,[,Int,,,0x7,],;,},<EOF>''',
                101
            )
        )

    def test_398(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{$T(A:_4){} }Class m:_{_M(g4:Array [Array [Int ,0X51],3]){Continue ;} }Class ciN{$4_(E:Int ;XS:_X;I_2d:Float ;_:s){} }''',
                '''Class,T,{,$T,(,A,:,_4,),{,},},Class,m,:,_,{,_M,(,g4,:,Array,[,Array,[,Int,,,0X51,],,,3,],),{,Continue,;,},},Class,ciN,{,$4_,(,E,:,Int,;,XS,:,_X,;,I_2d,:,Float,;,_,:,s,),{,},},<EOF>''',
                101
            )
        )

    def test_399(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gi:MTF621{Var T_t,$5_r,$9,$_wt0g:T;}Class b1D_:_{ZA(_,_:__){} }Class _{Destructor (){} }Class c8u{Constructor (){} }''',
                '''Class,gi,:,MTF621,{,Var,T_t,,,$5_r,,,$9,,,$_wt0g,:,T,;,},Class,b1D_,:,_,{,ZA,(,_,,,_,:,__,),{,},},Class,_,{,Destructor,(,),{,},},Class,c8u,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_400(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $s,___92_:__l_;}Class D5v:v{Constructor (_,_T,J:Array [Array [Array [Array [Array [Array [Boolean ,9066],8_5],0X3],0x49],0b1_0],7]){Var cc,_5_S:Boolean ;Return ;} }''',
                '''Class,_,{,Var,$s,,,___92_,:,__l_,;,},Class,D5v,:,v,{,Constructor,(,_,,,_T,,,J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,9066,],,,85,],,,0X3,],,,0x49,],,,0b10,],,,7,],),{,Var,cc,,,_5_S,:,Boolean,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_401(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var U,$_,$_:Array [Array [Array [Int ,037_3],0133],5_4];}Class _2:_O{Var KP,z,__S,$L,_H2:Boolean ;}Class h:H_{}''',
                '''Class,_,{,Var,U,,,$_,,,$_,:,Array,[,Array,[,Array,[,Int,,,0373,],,,0133,],,,54,],;,},Class,_2,:,_O,{,Var,KP,,,z,,,__S,,,$L,,,_H2,:,Boolean,;,},Class,h,:,H_,{,},<EOF>''',
                101
            )
        )

    def test_402(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c:_{}Class _{}Class c_3:b{Val $53c:Float ;Var $8,$n,_7_,$__,P:Float ;Constructor (){_::$_9();Break ;}Constructor (){} }''',
                '''Class,_c,:,_,{,},Class,_,{,},Class,c_3,:,b,{,Val,$53c,:,Float,;,Var,$8,,,$n,,,_7_,,,$__,,,P,:,Float,;,Constructor,(,),{,_,::,$_9,(,),;,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_403(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z:_2n{}Class n:_36{Var B,_,_3:Array [Array [Boolean ,0B1001],7];$2U_3_(_:Int ;_,zv,_8:Array [Array [Array [Array [Array [Array [Array [Boolean ,077],077],0x30],0X4_5_C],0b1000000],3],03]){}Destructor (){}Var G_18:Qd;Constructor (E3_6:h;__:Array [Array [String ,0X47D],3];_,_y6,IZ_:Boolean ){} }Class K:R8__t{}''',
                '''Class,Z,:,_2n,{,},Class,n,:,_36,{,Var,B,,,_,,,_3,:,Array,[,Array,[,Boolean,,,0B1001,],,,7,],;,$2U_3_,(,_,:,Int,;,_,,,zv,,,_8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,077,],,,077,],,,0x30,],,,0X45C,],,,0b1000000,],,,3,],,,03,],),{,},Destructor,(,),{,},Var,G_18,:,Qd,;,Constructor,(,E3_6,:,h,;,__,:,Array,[,Array,[,String,,,0X47D,],,,3,],;,_,,,_y6,,,IZ_,:,Boolean,),{,},},Class,K,:,R8__t,{,},<EOF>''',
                101
            )
        )

    def test_404(self):
        self.assertTrue(
            TestLexer.test(
                '''Class KE:__{Val $d,$2W2_:y3;Val $73:Array [Array [Array [Int ,0x3],0B101001],0B101001];}Class _:_npm{Val $_:Array [Array [Array [Array [Float ,07],064_2],02_4],07];}''',
                '''Class,KE,:,__,{,Val,$d,,,$2W2_,:,y3,;,Val,$73,:,Array,[,Array,[,Array,[,Int,,,0x3,],,,0B101001,],,,0B101001,],;,},Class,_,:,_npm,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,07,],,,0642,],,,024,],,,07,],;,},<EOF>''',
                101
            )
        )

    def test_405(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class B3_q:_{_(_3:Array [Array [Array [Boolean ,026],0X41],026];___AG,__3:Array [Float ,0B100101]){} }Class c{}''',
                '''Class,__,:,_,{,},Class,B3_q,:,_,{,_,(,_3,:,Array,[,Array,[,Array,[,Boolean,,,026,],,,0X41,],,,026,],;,___AG,,,__3,:,Array,[,Float,,,0B100101,],),{,},},Class,c,{,},<EOF>''',
                101
            )
        )

    def test_406(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N{$87(__05,_,U:Array [String ,54]){}Var $l41,$_,$3:Array [Array [Array [Int ,062_3_2],0B10101],0B1];Val _,$_,a,u,_Y,___,$__z:Array [Array [Boolean ,033_0_0],04];Val $I:Array [Float ,0xF];}''',
                '''Class,_,:,N,{,$87,(,__05,,,_,,,U,:,Array,[,String,,,54,],),{,},Var,$l41,,,$_,,,$3,:,Array,[,Array,[,Array,[,Int,,,06232,],,,0B10101,],,,0B1,],;,Val,_,,,$_,,,a,,,u,,,_Y,,,___,,,$__z,:,Array,[,Array,[,Boolean,,,03300,],,,04,],;,Val,$I,:,Array,[,Float,,,0xF,],;,},<EOF>''',
                101
            )
        )

    def test_407(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val n5:Boolean ;$_U(){Continue ;}Var $L:Array [Array [Array [String ,0b1010101],0X3B],0143];Val $6,a_R_:Array [Array [Boolean ,05],0B11101];}''',
                '''Class,_,{,Val,n5,:,Boolean,;,$_U,(,),{,Continue,;,},Var,$L,:,Array,[,Array,[,Array,[,String,,,0b1010101,],,,0X3B,],,,0143,],;,Val,$6,,,a_R_,:,Array,[,Array,[,Boolean,,,05,],,,0B11101,],;,},<EOF>''',
                101
            )
        )

    def test_408(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Aw{}Class Wy_F51_4_:__{}Class __:_8{}Class _6:__u{}Class P:_7{Val q:l;Constructor (Z,_:Boolean ;nFU,c3:_;_C,U,my_:_){Continue ;} }Class __1:Gv{}''',
                '''Class,Aw,{,},Class,Wy_F51_4_,:,__,{,},Class,__,:,_8,{,},Class,_6,:,__u,{,},Class,P,:,_7,{,Val,q,:,l,;,Constructor,(,Z,,,_,:,Boolean,;,nFU,,,c3,:,_,;,_C,,,U,,,my_,:,_,),{,Continue,;,},},Class,__1,:,Gv,{,},<EOF>''',
                101
            )
        )

    def test_409(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_1,_:r6){}Val _5K:Array [Array [Array [Array [Array [Int ,23],5_9_6],23],0xFE2],05];Var __,$Q,Y:Int ;}''',
                '''Class,_,{,Constructor,(,_1,,,_,:,r6,),{,},Val,_5K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,23,],,,596,],,,23,],,,0xFE2,],,,05,],;,Var,__,,,$Q,,,Y,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_410(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z0:_2_{}Class D5{Val _,e12Z:Array [Array [Int ,037],1_7];Val __:Array [Array [Int ,3],0b1000010];R_5OXF_1(y:Int ;__,h:_;a_,L,_c:Array [Int ,0XB3_9]){Continue ;} }''',
                '''Class,_Z0,:,_2_,{,},Class,D5,{,Val,_,,,e12Z,:,Array,[,Array,[,Int,,,037,],,,17,],;,Val,__,:,Array,[,Array,[,Int,,,3,],,,0b1000010,],;,R_5OXF_1,(,y,:,Int,;,__,,,h,:,_,;,a_,,,L,,,_c,:,Array,[,Int,,,0XB39,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_411(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{Var _B:Array [Float ,0x51];}Class __:N{Constructor (){}Destructor (){}Val $1_:Int ;Val $F__Q8,h,pf,$a,$4:Array [Array [Int ,0X1],0127];Val _,$_H__,$51_6,$_4,_,$_rA,m,F1:Array [Array [Boolean ,94],0x8_3];}''',
                '''Class,E,{,Var,_B,:,Array,[,Float,,,0x51,],;,},Class,__,:,N,{,Constructor,(,),{,},Destructor,(,),{,},Val,$1_,:,Int,;,Val,$F__Q8,,,h,,,pf,,,$a,,,$4,:,Array,[,Array,[,Int,,,0X1,],,,0127,],;,Val,_,,,$_H__,,,$51_6,,,$_4,,,_,,,$_rA,,,m,,,F1,:,Array,[,Array,[,Boolean,,,94,],,,0x83,],;,},<EOF>''',
                101
            )
        )

    def test_412(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C_:_U{}Class _{Destructor (){Continue ;}$i(_,_,_,U:Array [Boolean ,45];F7:Array [Boolean ,023100];C4___d3,__,_,W,iG1:Array [Boolean ,03];u:Int ;o_2_03_:String ){ {} }Destructor (){} }Class __{}''',
                '''Class,C_,:,_U,{,},Class,_,{,Destructor,(,),{,Continue,;,},$i,(,_,,,_,,,_,,,U,:,Array,[,Boolean,,,45,],;,F7,:,Array,[,Boolean,,,023100,],;,C4___d3,,,__,,,_,,,W,,,iG1,:,Array,[,Boolean,,,03,],;,u,:,Int,;,o_2_03_,:,String,),{,{,},},Destructor,(,),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_413(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Constructor (z5,__:Array [Array [Array [Float ,0x2_5],0B1_0],0XB];a_7:_9){}Var K_:String ;Destructor (){}_k(_,NP_,_:Int ;y_:c_){} }''',
                '''Class,__,:,_,{,Constructor,(,z5,,,__,:,Array,[,Array,[,Array,[,Float,,,0x25,],,,0B10,],,,0XB,],;,a_7,:,_9,),{,},Var,K_,:,String,;,Destructor,(,),{,},_k,(,_,,,NP_,,,_,:,Int,;,y_,:,c_,),{,},},<EOF>''',
                101
            )
        )

    def test_414(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k94o:Fg{$e2L(E:Array [Int ,0b1]){Break ;} }Class _5_X:_96{Val $_X2,_7,$W_,tg0_:Int ;_9(){} }Class _{Val $6,$1,_:Array [Array [Array [Boolean ,0b10],46],46];}Class h4:_{Destructor (){} }''',
                '''Class,k94o,:,Fg,{,$e2L,(,E,:,Array,[,Int,,,0b1,],),{,Break,;,},},Class,_5_X,:,_96,{,Val,$_X2,,,_7,,,$W_,,,tg0_,:,Int,;,_9,(,),{,},},Class,_,{,Val,$6,,,$1,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,46,],,,46,],;,},Class,h4,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_415(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S677_____H{}Class r{Val _9_:Array [Array [Int ,0b111011],0x27];o_(wBY34_:Int ){}Val $_,$_,$25_L,$5___v,__Y,$_,$8:Array [Array [Array [String ,0b1],0b111011],0x516];}''',
                '''Class,S677_____H,{,},Class,r,{,Val,_9_,:,Array,[,Array,[,Int,,,0b111011,],,,0x27,],;,o_,(,wBY34_,:,Int,),{,},Val,$_,,,$_,,,$25_L,,,$5___v,,,__Y,,,$_,,,$8,:,Array,[,Array,[,Array,[,String,,,0b1,],,,0b111011,],,,0x516,],;,},<EOF>''',
                101
            )
        )

    def test_416(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j_91:_{Val r:Boolean ;Constructor (){}Val $_4,_e,$_7J_5,_,$4,$902D23,$_5:Array [Boolean ,0B10];}Class _{}''',
                '''Class,j_91,:,_,{,Val,r,:,Boolean,;,Constructor,(,),{,},Val,$_4,,,_e,,,$_7J_5,,,_,,,$4,,,$902D23,,,$_5,:,Array,[,Boolean,,,0B10,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_417(self):
        self.assertTrue(
            TestLexer.test(
                '''Class SK_e{$_(_,L1:Float ;N,Y4:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0107],0X71B_6_F],2],0x58_6_D],0x98_6],1_25],0107],01_4_0];ql:m0;q,dG_t_,J_6JJ4_aO6:_){} }Class r:_1__2{}Class u2:_{}''',
                '''Class,SK_e,{,$_,(,_,,,L1,:,Float,;,N,,,Y4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0107,],,,0X71B6F,],,,2,],,,0x586D,],,,0x986,],,,125,],,,0107,],,,0140,],;,ql,:,m0,;,q,,,dG_t_,,,J_6JJ4_aO6,:,_,),{,},},Class,r,:,_1__2,{,},Class,u2,:,_,{,},<EOF>''',
                101
            )
        )

    def test_418(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1e:_{Constructor (_Q,P,w_8H__vU1Y:D424_87O_3_;m,P_,r,O,I,__f_7Q:Array [String ,0B10011];v:Array [Array [Float ,0101],0x5B]){Break ;}Constructor (){} }''',
                '''Class,_1e,:,_,{,Constructor,(,_Q,,,P,,,w_8H__vU1Y,:,D424_87O_3_,;,m,,,P_,,,r,,,O,,,I,,,__f_7Q,:,Array,[,String,,,0B10011,],;,v,:,Array,[,Array,[,Float,,,0101,],,,0x5B,],),{,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_419(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G9:_r{Constructor (_0:K;h:Float ;B_,__t_J:Array [Array [Array [Array [Array [Array [Array [Float ,0XB],0b1_11],0b1100100],96],37_36],01],8_1_3_466];Wh:Array [Int ,0X1C]){} }''',
                '''Class,G9,:,_r,{,Constructor,(,_0,:,K,;,h,:,Float,;,B_,,,__t_J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XB,],,,0b111,],,,0b1100100,],,,96,],,,3736,],,,01,],,,813466,],;,Wh,:,Array,[,Int,,,0X1C,],),{,},},<EOF>''',
                101
            )
        )

    def test_420(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O0i{Destructor (){}$_(j,C:Array [Float ,0b11011];_i:Int ;z,_5:Array [Int ,0B1]){Val i,U_:Int ;}Var Y2:String ;Destructor (){}Destructor (){}$_(){}Var $3,$9:I6;}Class _:B0{}Class _3_lqn:_{}''',
                '''Class,O0i,{,Destructor,(,),{,},$_,(,j,,,C,:,Array,[,Float,,,0b11011,],;,_i,:,Int,;,z,,,_5,:,Array,[,Int,,,0B1,],),{,Val,i,,,U_,:,Int,;,},Var,Y2,:,String,;,Destructor,(,),{,},Destructor,(,),{,},$_,(,),{,},Var,$3,,,$9,:,I6,;,},Class,_,:,B0,{,},Class,_3_lqn,:,_,{,},<EOF>''',
                101
            )
        )

    def test_421(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _pp,s087,$___j_:String ;}Class R7A{Constructor (k,Q4B,_D:Array [Array [Float ,05_0],48];_,_:Boolean ;_:Float ){}Val $__2_,_:Boolean ;Destructor (){} }''',
                '''Class,_,{,Var,_pp,,,s087,,,$___j_,:,String,;,},Class,R7A,{,Constructor,(,k,,,Q4B,,,_D,:,Array,[,Array,[,Float,,,050,],,,48,],;,_,,,_,:,Boolean,;,_,:,Float,),{,},Val,$__2_,,,_,:,Boolean,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_422(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class a5:_{}Class _9XY{}Class V_{}Class _{}Class U{}Class L:z_{Destructor (){}Destructor (){N0::$V();} }''',
                '''Class,_,{,},Class,a5,:,_,{,},Class,_9XY,{,},Class,V_,{,},Class,_,{,},Class,U,{,},Class,L,:,z_,{,Destructor,(,),{,},Destructor,(,),{,N0,::,$V,(,),;,},},<EOF>''',
                101
            )
        )

    def test_423(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x___:__7_Pu{Var $D_:Array [String ,0x2];Destructor (){}Var _:C5;}Class _{}Class s1:_{$_u(){} }Class elc:aK{Var $h:_;Var $1bk,$G:Float ;$y(){ {} }}''',
                '''Class,x___,:,__7_Pu,{,Var,$D_,:,Array,[,String,,,0x2,],;,Destructor,(,),{,},Var,_,:,C5,;,},Class,_,{,},Class,s1,:,_,{,$_u,(,),{,},},Class,elc,:,aK,{,Var,$h,:,_,;,Var,$1bk,,,$G,:,Float,;,$y,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_424(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _m{Val _,_:Array [Array [Array [Boolean ,0356],057],0x9];_3(_,n:Array [Array [Array [Boolean ,07],28],0xA];n4:Array [Array [Array [Array [Array [Array [String ,0xF],0XA],0x68_8],3],0b1],9_0]){} }Class _{Destructor (){Break ;} }''',
                '''Class,_m,{,Val,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0356,],,,057,],,,0x9,],;,_3,(,_,,,n,:,Array,[,Array,[,Array,[,Boolean,,,07,],,,28,],,,0xA,],;,n4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xF,],,,0XA,],,,0x688,],,,3,],,,0b1,],,,90,],),{,},},Class,_,{,Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_425(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m_:_{}Class b{Var $Ig32:Array [Int ,47];Constructor (do_:Y_;i_,t,u:String ;E48,_,_,_:String ){} }Class _1_c:_{}Class _1_vu_4{}''',
                '''Class,m_,:,_,{,},Class,b,{,Var,$Ig32,:,Array,[,Int,,,47,],;,Constructor,(,do_,:,Y_,;,i_,,,t,,,u,:,String,;,E48,,,_,,,_,,,_,:,String,),{,},},Class,_1_c,:,_,{,},Class,_1_vu_4,{,},<EOF>''',
                101
            )
        )

    def test_426(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __g{}Class O7hs{Var $_a_:Q;Destructor (){Break ;Continue ;}Constructor (){}Var $g_x,$6:Array [Array [Array [Boolean ,0x4],2_6],07_46];}''',
                '''Class,__g,{,},Class,O7hs,{,Var,$_a_,:,Q,;,Destructor,(,),{,Break,;,Continue,;,},Constructor,(,),{,},Var,$g_x,,,$6,:,Array,[,Array,[,Array,[,Boolean,,,0x4,],,,26,],,,0746,],;,},<EOF>''',
                101
            )
        )

    def test_427(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{Constructor (_:String ){}Constructor (T_gJ1,p8db2:Array [Array [Array [Array [Int ,0x24],0X59],01],043]){} }''',
                '''Class,R,{,Constructor,(,_,:,String,),{,},Constructor,(,T_gJ1,,,p8db2,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x24,],,,0X59,],,,01,],,,043,],),{,},},<EOF>''',
                101
            )
        )

    def test_428(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z_:_{}Class dm:oF{$7(_:Int ;IE,___,y,P,Z:Boolean ){}Constructor (){}$VK(_3,Y:_;__,U_8,r_,_:y){} }Class __{}Class I:e{}''',
                '''Class,Z_,:,_,{,},Class,dm,:,oF,{,$7,(,_,:,Int,;,IE,,,___,,,y,,,P,,,Z,:,Boolean,),{,},Constructor,(,),{,},$VK,(,_3,,,Y,:,_,;,__,,,U_8,,,r_,,,_,:,y,),{,},},Class,__,{,},Class,I,:,e,{,},<EOF>''',
                101
            )
        )

    def test_429(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8x_m:_L5_{Var ph:Array [Array [Boolean ,0136],0b1];_(){}Var $u:Array [Array [Array [Array [Array [String ,9_1],58_3_3_4_1],0B1000011],6_3],0x9_3];Constructor (_,_,_6_,___:Array [Float ,0136];pi:_){} }Class _{}''',
                '''Class,_8x_m,:,_L5_,{,Var,ph,:,Array,[,Array,[,Boolean,,,0136,],,,0b1,],;,_,(,),{,},Var,$u,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,91,],,,583341,],,,0B1000011,],,,63,],,,0x93,],;,Constructor,(,_,,,_,,,_6_,,,___,:,Array,[,Float,,,0136,],;,pi,:,_,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_430(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f_{}Class D_{}Class _{Destructor (){Var KE:Array [Array [Array [String ,0XA],0xA_1],0B10101];Continue ;Var H2:_2;}K(){} }''',
                '''Class,f_,{,},Class,D_,{,},Class,_,{,Destructor,(,),{,Var,KE,:,Array,[,Array,[,Array,[,String,,,0XA,],,,0xA1,],,,0B10101,],;,Continue,;,Var,H2,:,_2,;,},K,(,),{,},},<EOF>''',
                101
            )
        )

    def test_431(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:_3{}Class kW{}Class _3_{Val $X:Array [Boolean ,02];Constructor (){}j1_(__,_14,O_9,_w,f1,__U,_,P79_,_A:P2p;C4N:Array [Float ,0B1]){}Var d8,r:Array [Float ,0X5A];}Class __{Var $_,$g2:Int ;}Class ef{Var $_,$W_:Float ;}''',
                '''Class,_0,:,_3,{,},Class,kW,{,},Class,_3_,{,Val,$X,:,Array,[,Boolean,,,02,],;,Constructor,(,),{,},j1_,(,__,,,_14,,,O_9,,,_w,,,f1,,,__U,,,_,,,P79_,,,_A,:,P2p,;,C4N,:,Array,[,Float,,,0B1,],),{,},Var,d8,,,r,:,Array,[,Float,,,0X5A,],;,},Class,__,{,Var,$_,,,$g2,:,Int,;,},Class,ef,{,Var,$_,,,$W_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_432(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:Ge_f1i{}Class b:A78_{Val Y__:Array [Int ,0B10];}Class y2:I1{Val R_kB72R,Y_,_,_3_,_,_8,$Y:J9;Constructor (){Var _2_d,__:_;Continue ;}_(_,__9:Boolean ;_:Array [Array [Array [Int ,02],0b1_0],0b1]){} }''',
                '''Class,f,:,Ge_f1i,{,},Class,b,:,A78_,{,Val,Y__,:,Array,[,Int,,,0B10,],;,},Class,y2,:,I1,{,Val,R_kB72R,,,Y_,,,_,,,_3_,,,_,,,_8,,,$Y,:,J9,;,Constructor,(,),{,Var,_2_d,,,__,:,_,;,Continue,;,},_,(,_,,,__9,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Int,,,02,],,,0b10,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_433(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){} }Class _N_{_2(s1i4:Array [Int ,0112];t:B_;_X3JQ,L:_W;A:Array [Float ,0b1];nL,_8s,M:Int ;W:Int ){}Destructor (){} }''',
                '''Class,__,{,Destructor,(,),{,},},Class,_N_,{,_2,(,s1i4,:,Array,[,Int,,,0112,],;,t,:,B_,;,_X3JQ,,,L,:,_W,;,A,:,Array,[,Float,,,0b1,],;,nL,,,_8s,,,M,:,Int,;,W,:,Int,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_434(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V:_{}Class _:_{}Class _{Val $_Uo_,__,$8:Array [Array [Array [Array [Array [String ,0b11],71],0X74],0X6],1_1];Val c4_,_3_,i3_:Int ;Constructor (){} }Class _2{Constructor (X,e:sk_;M0_:Array [Array [Array [Array [Array [Array [Array [Float ,0XD],71],023],0b1],0b1],71],0X3_E_D_B0_5_5];E__6,_,_a,_:Array [Float ,0X9_BF_6_7_2_A];_:Array [Array [Float ,0B1_0_1],023]){} }''',
                '''Class,V,:,_,{,},Class,_,:,_,{,},Class,_,{,Val,$_Uo_,,,__,,,$8,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11,],,,71,],,,0X74,],,,0X6,],,,11,],;,Val,c4_,,,_3_,,,i3_,:,Int,;,Constructor,(,),{,},},Class,_2,{,Constructor,(,X,,,e,:,sk_,;,M0_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XD,],,,71,],,,023,],,,0b1,],,,0b1,],,,71,],,,0X3EDB055,],;,E__6,,,_,,,_a,,,_,:,Array,[,Float,,,0X9BF672A,],;,_,:,Array,[,Array,[,Float,,,0B101,],,,023,],),{,},},<EOF>''',
                101
            )
        )

    def test_435(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_:_r08_____jF8{Constructor (_3cV2_,_:Float ;_,_,_94,_,_:Boolean ;_:Float ;e:_;a,M:Int ;Z5,__,C,T,s,d,E,_:__Z){} }Class j:H{}''',
                '''Class,J_,:,_r08_____jF8,{,Constructor,(,_3cV2_,,,_,:,Float,;,_,,,_,,,_94,,,_,,,_,:,Boolean,;,_,:,Float,;,e,:,_,;,a,,,M,:,Int,;,Z5,,,__,,,C,,,T,,,s,,,d,,,E,,,_,:,__Z,),{,},},Class,j,:,H,{,},<EOF>''',
                101
            )
        )

    def test_436(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{_9(_,Z__5_7,i:Array [Array [Array [Array [Float ,8],03],0X8F_4],0X2_A];_,_:Array [String ,0b1]){Val A,FU:Int ;} }Class y_97g:_{$_Y(){} }''',
                '''Class,__,{,_9,(,_,,,Z__5_7,,,i,:,Array,[,Array,[,Array,[,Array,[,Float,,,8,],,,03,],,,0X8F4,],,,0X2A,],;,_,,,_,:,Array,[,String,,,0b1,],),{,Val,A,,,FU,:,Int,;,},},Class,y_97g,:,_,{,$_Y,(,),{,},},<EOF>''',
                101
            )
        )

    def test_437(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:F_i0m{Var $B,$5,$8P,n7,N:Array [Array [Array [Int ,06],0B1001000],0B1001000];}Class Q_{}Class _{Constructor (){Return ;} }Class a{$P(I:Array [Int ,0X9];k8:Array [Int ,98]){} }''',
                '''Class,__,:,F_i0m,{,Var,$B,,,$5,,,$8P,,,n7,,,N,:,Array,[,Array,[,Array,[,Int,,,06,],,,0B1001000,],,,0B1001000,],;,},Class,Q_,{,},Class,_,{,Constructor,(,),{,Return,;,},},Class,a,{,$P,(,I,:,Array,[,Int,,,0X9,],;,k8,:,Array,[,Int,,,98,],),{,},},<EOF>''',
                101
            )
        )

    def test_438(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{}Class __{Destructor (){}$0(h,_:a;_65:vp;e_n:Array [Array [Float ,0b1_0_0_1_0_0],060];_T,v_R,_1,_8:String ){} }''',
                '''Class,d,{,},Class,__,{,Destructor,(,),{,},$0,(,h,,,_,:,a,;,_65,:,vp,;,e_n,:,Array,[,Array,[,Float,,,0b100100,],,,060,],;,_T,,,v_R,,,_1,,,_8,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_439(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _pE:_3{Var $___,_,$8C,$rT,$P__8:Array [Int ,0x432];Y_(){}Val e:_;}Class _:_{Constructor (_3_,_,z_:r_8;_:Int ){}Val _:Float ;Var M,___,n306:Array [Array [Array [Array [Int ,0b11110],92],020_6],0B1_1];}''',
                '''Class,_pE,:,_3,{,Var,$___,,,_,,,$8C,,,$rT,,,$P__8,:,Array,[,Int,,,0x432,],;,Y_,(,),{,},Val,e,:,_,;,},Class,_,:,_,{,Constructor,(,_3_,,,_,,,z_,:,r_8,;,_,:,Int,),{,},Val,_,:,Float,;,Var,M,,,___,,,n306,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b11110,],,,92,],,,0206,],,,0B11,],;,},<EOF>''',
                101
            )
        )

    def test_440(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j{}Class _3{Constructor (){_s::$y1Gh().U()._3();}i(){} }Class _m{Destructor (){Continue ;Continue ;Var J_5:Int ;} }''',
                '''Class,_j,{,},Class,_3,{,Constructor,(,),{,_s,::,$y1Gh,(,),.,U,(,),.,_3,(,),;,},i,(,),{,},},Class,_m,{,Destructor,(,),{,Continue,;,Continue,;,Var,J_5,:,Int,;,},},<EOF>''',
                101
            )
        )

    def test_441(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ______{Val pA37j,$4yT,$ee_729_0,l,$_,_:String ;Destructor (){} }Class u{}Class J_{}Class R8:_5{}Class _:_3{}''',
                '''Class,______,{,Val,pA37j,,,$4yT,,,$ee_729_0,,,l,,,$_,,,_,:,String,;,Destructor,(,),{,},},Class,u,{,},Class,J_,{,},Class,R8,:,_5,{,},Class,_,:,_3,{,},<EOF>''',
                101
            )
        )

    def test_442(self):
        self.assertTrue(
            TestLexer.test(
                '''Class iC4i:_75{Var _6h:Array [Float ,0x6];$_(SRV:_7;n,__,D,__yrP_:Array [Array [Array [Boolean ,90],0b1_0_01],0b1001100];j_:X){W::$_();}Destructor (){} }''',
                '''Class,iC4i,:,_75,{,Var,_6h,:,Array,[,Float,,,0x6,],;,$_,(,SRV,:,_7,;,n,,,__,,,D,,,__yrP_,:,Array,[,Array,[,Array,[,Boolean,,,90,],,,0b1001,],,,0b1001100,],;,j_,:,X,),{,W,::,$_,(,),;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_443(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0w{$_(CsQ00_:_6;I,l:Array [Int ,0103_2141]){}x(){}Destructor (){}Destructor (){Continue ;}Var $r6,$1,$8h:Array [Array [Int ,054],025_0];}''',
                '''Class,_0w,{,$_,(,CsQ00_,:,_6,;,I,,,l,:,Array,[,Int,,,01032141,],),{,},x,(,),{,},Destructor,(,),{,},Destructor,(,),{,Continue,;,},Var,$r6,,,$1,,,$8h,:,Array,[,Array,[,Int,,,054,],,,0250,],;,},<EOF>''',
                101
            )
        )

    def test_444(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{Destructor (){}u(){} }Class _0{}Class o{Val _j,$7,ph:Array [Boolean ,5];}Class s{}Class n:_{}Class _4_t{}''',
                '''Class,o,{,Destructor,(,),{,},u,(,),{,},},Class,_0,{,},Class,o,{,Val,_j,,,$7,,,ph,:,Array,[,Boolean,,,5,],;,},Class,s,{,},Class,n,:,_,{,},Class,_4_t,{,},<EOF>''',
                101
            )
        )

    def test_445(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:L{_iT9_(a,_8,g:Int ){} }Class _{Destructor (){}$6(Q__:Array [Array [Array [Array [String ,0b1000000],0x2C],02_2_7],0B1];_:_;VYS_,_d_w,___:Vo;_:Boolean ;p,_i98:Boolean ;_n,k78J_:Boolean ){} }Class __{}''',
                '''Class,__,:,L,{,_iT9_,(,a,,,_8,,,g,:,Int,),{,},},Class,_,{,Destructor,(,),{,},$6,(,Q__,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1000000,],,,0x2C,],,,0227,],,,0B1,],;,_,:,_,;,VYS_,,,_d_w,,,___,:,Vo,;,_,:,Boolean,;,p,,,_i98,:,Boolean,;,_n,,,k78J_,:,Boolean,),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_446(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k___{Destructor (){} }Class _:_{}Class _{Constructor (a:j;_,V:Array [Int ,0x2A]){} }Class Z{x(_:__;_,_A6m:_;v_:Int ;_:Int ){} }''',
                '''Class,_k___,{,Destructor,(,),{,},},Class,_,:,_,{,},Class,_,{,Constructor,(,a,:,j,;,_,,,V,:,Array,[,Int,,,0x2A,],),{,},},Class,Z,{,x,(,_,:,__,;,_,,,_A6m,:,_,;,v_,:,Int,;,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_447(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r0{$00(){}Destructor (){}Var $__:Array [Array [Array [Boolean ,040],0X2E],0X28];}Class _W32__010:z_{Val $99,T:Array [Array [Array [Array [Array [Float ,0B1],0B1000111],0B1],0xC],68];}''',
                '''Class,r0,{,$00,(,),{,},Destructor,(,),{,},Var,$__,:,Array,[,Array,[,Array,[,Boolean,,,040,],,,0X2E,],,,0X28,],;,},Class,_W32__010,:,z_,{,Val,$99,,,T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0B1000111,],,,0B1,],,,0xC,],,,68,],;,},<EOF>''',
                101
            )
        )

    def test_448(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _uB6_9:m{Val $0,_41:V1;Constructor (_:Array [Float ,5];_f___:String ;_:_;_6:Array [Boolean ,0B1100010];f_1Q4:Int ){} }''',
                '''Class,_uB6_9,:,m,{,Val,$0,,,_41,:,V1,;,Constructor,(,_,:,Array,[,Float,,,5,],;,_f___,:,String,;,_,:,_,;,_6,:,Array,[,Boolean,,,0B1100010,],;,f_1Q4,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_449(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z7{Constructor (){}Destructor (){Continue ;Break ;}Val $_:Float ;}Class _L:M{}Class _:_{}Class eubk4K:_5{}''',
                '''Class,Z7,{,Constructor,(,),{,},Destructor,(,),{,Continue,;,Break,;,},Val,$_,:,Float,;,},Class,_L,:,M,{,},Class,_,:,_,{,},Class,eubk4K,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_450(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Y{}Class __{}Class a:E{_(PxU,_ONpDU:Array [Array [Array [Int ,0B1_11],02],3]){} }Class _{Val h:_;__6D_(){} }''',
                '''Class,_,:,Y,{,},Class,__,{,},Class,a,:,E,{,_,(,PxU,,,_ONpDU,:,Array,[,Array,[,Array,[,Int,,,0B111,],,,02,],,,3,],),{,},},Class,_,{,Val,h,:,_,;,__6D_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_451(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1q1BE:f{}Class _yG:_2{Destructor (){Continue ;Break ;Break ;}Destructor (){}$zQ(_,D,_,_,__:Float ;nF:Boolean ){Break ;} }''',
                '''Class,_1q1BE,:,f,{,},Class,_yG,:,_2,{,Destructor,(,),{,Continue,;,Break,;,Break,;,},Destructor,(,),{,},$zQ,(,_,,,D,,,_,,,_,,,__,:,Float,;,nF,:,Boolean,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_452(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W5{}Class _:q3{Destructor (){}Var $_02_K,$g,l,$_pt,K_,$X,I,$k_,$_,$S_:k;Var $0h_,$H0:String ;Var _g:Float ;}''',
                '''Class,_W5,{,},Class,_,:,q3,{,Destructor,(,),{,},Var,$_02_K,,,$g,,,l,,,$_pt,,,K_,,,$X,,,I,,,$k_,,,$_,,,$S_,:,k,;,Var,$0h_,,,$H0,:,String,;,Var,_g,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_453(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j:q6{Var $s,r_Q_,Kai___,_eS2:Array [Array [Array [Array [Array [Array [Boolean ,0x51],0b10],80],80],0b1],2];}''',
                '''Class,j,:,q6,{,Var,$s,,,r_Q_,,,Kai___,,,_eS2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x51,],,,0b10,],,,80,],,,80,],,,0b1,],,,2,],;,},<EOF>''',
                101
            )
        )

    def test_454(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j4{}Class Qt0f{}Class Z{$_(){}Var __:_T;Constructor (){}Var m_:Int ;Constructor (){Continue ;} }Class _:k1{}Class H{}Class __:_{}Class R_:_Gv{}''',
                '''Class,j4,{,},Class,Qt0f,{,},Class,Z,{,$_,(,),{,},Var,__,:,_T,;,Constructor,(,),{,},Var,m_,:,Int,;,Constructor,(,),{,Continue,;,},},Class,_,:,k1,{,},Class,H,{,},Class,__,:,_,{,},Class,R_,:,_Gv,{,},<EOF>''',
                101
            )
        )

    def test_455(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _A:k{Constructor (){}B(_,_,o,_99f:Array [Int ,0326]){} }Class _Y{$PL__(){}Val _,$7,$_:__f_;Var $L,$l,_e_5_:Array [Boolean ,0XD_D];}''',
                '''Class,_,{,},Class,_A,:,k,{,Constructor,(,),{,},B,(,_,,,_,,,o,,,_99f,:,Array,[,Int,,,0326,],),{,},},Class,_Y,{,$PL__,(,),{,},Val,_,,,$7,,,$_,:,__f_,;,Var,$L,,,$l,,,_e_5_,:,Array,[,Boolean,,,0XDD,],;,},<EOF>''',
                101
            )
        )

    def test_456(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class __:_4k86{Destructor (){}Constructor (_,_C9_:Array [Int ,0x2_E];__c,K:Int ;D:Float ;_7_nC4:Int ;z,_:Float ;h:Array [Float ,03_6_7_1];_,m,z,a:_;__,_:Boolean ;Zz,_,__6:Array [Float ,013];_:Array [Boolean ,0b1001000];A:F){} }Class P{Destructor (){Break ;}Destructor (){}J_Z(_:Int ){}Var $_:Array [Array [Array [String ,0xD_4_0],013],013];}Class _:__4{}''',
                '''Class,__,:,_,{,},Class,__,:,_4k86,{,Destructor,(,),{,},Constructor,(,_,,,_C9_,:,Array,[,Int,,,0x2E,],;,__c,,,K,:,Int,;,D,:,Float,;,_7_nC4,:,Int,;,z,,,_,:,Float,;,h,:,Array,[,Float,,,03671,],;,_,,,m,,,z,,,a,:,_,;,__,,,_,:,Boolean,;,Zz,,,_,,,__6,:,Array,[,Float,,,013,],;,_,:,Array,[,Boolean,,,0b1001000,],;,A,:,F,),{,},},Class,P,{,Destructor,(,),{,Break,;,},Destructor,(,),{,},J_Z,(,_,:,Int,),{,},Var,$_,:,Array,[,Array,[,Array,[,String,,,0xD40,],,,013,],,,013,],;,},Class,_,:,__4,{,},<EOF>''',
                101
            )
        )

    def test_457(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (S_5:Array [Float ,0b1]){}$_9(Q19:Array [Int ,54];W:Boolean ;_,_:Array [Int ,0XA5]){Val D_v:Array [Array [String ,0X1],0xF5]=0e67._();{} }}''',
                '''Class,_,{,Constructor,(,S_5,:,Array,[,Float,,,0b1,],),{,},$_9,(,Q19,:,Array,[,Int,,,54,],;,W,:,Boolean,;,_,,,_,:,Array,[,Int,,,0XA5,],),{,Val,D_v,:,Array,[,Array,[,String,,,0X1,],,,0xF5,],=,0e67,.,_,(,),;,{,},},},<EOF>''',
                101
            )
        )

    def test_458(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C5:g_{Destructor (){z::$5_P_._N._.W._();Break ;}Var YTq:Float ;Constructor (){} }Class V:MF{}Class _{Val $0ZZ:hp;Constructor (__6,_D,VVJ_:Boolean ){} }''',
                '''Class,C5,:,g_,{,Destructor,(,),{,z,::,$5_P_,.,_N,.,_,.,W,.,_,(,),;,Break,;,},Var,YTq,:,Float,;,Constructor,(,),{,},},Class,V,:,MF,{,},Class,_,{,Val,$0ZZ,:,hp,;,Constructor,(,__6,,,_D,,,VVJ_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_459(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _76:c{Val $7_:_1_;Constructor (__E_V:Boolean ;_,__,V:__jU;Wu,__60t,S:Int ;_:_){} }Class l{$R45H_(_:Float ;Z6:Array [Float ,05]){}Val eS_:Float ;}Class _{}''',
                '''Class,_76,:,c,{,Val,$7_,:,_1_,;,Constructor,(,__E_V,:,Boolean,;,_,,,__,,,V,:,__jU,;,Wu,,,__60t,,,S,:,Int,;,_,:,_,),{,},},Class,l,{,$R45H_,(,_,:,Float,;,Z6,:,Array,[,Float,,,05,],),{,},Val,eS_,:,Float,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_460(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2{Constructor (_:Array [Array [Array [Array [Float ,34],34],0x12],34];SW5_,_9,r:Array [Array [Array [Array [Array [Array [Array [Float ,3_318],0x12],0b1],34],0123],34],02]){} }''',
                '''Class,_2,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,34,],,,34,],,,0x12,],,,34,],;,SW5_,,,_9,,,r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,3318,],,,0x12,],,,0b1,],,,34,],,,0123,],,,34,],,,02,],),{,},},<EOF>''',
                101
            )
        )

    def test_461(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_4{Val $0_:Int ;$u6(_:tS;p_:Array [Int ,0X11];__,_,__:Array [Array [String ,07],0b1]){Break ;} }Class __:qwV_{}Class V{}Class t{}Class _:n_{}''',
                '''Class,h_4,{,Val,$0_,:,Int,;,$u6,(,_,:,tS,;,p_,:,Array,[,Int,,,0X11,],;,__,,,_,,,__,:,Array,[,Array,[,String,,,07,],,,0b1,],),{,Break,;,},},Class,__,:,qwV_,{,},Class,V,{,},Class,t,{,},Class,_,:,n_,{,},<EOF>''',
                101
            )
        )

    def test_462(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_{Z(_K,a27:x;_,H_7,G:Boolean ;G66,__:Boolean ;__,_,_6,_6,G,_,Wr,h8:String ;_T,_,_,_:Array [Float ,42]){} }''',
                '''Class,c,:,_,{,Z,(,_K,,,a27,:,x,;,_,,,H_7,,,G,:,Boolean,;,G66,,,__,:,Boolean,;,__,,,_,,,_6,,,_6,,,G,,,_,,,Wr,,,h8,:,String,;,_T,,,_,,,_,,,_,:,Array,[,Float,,,42,],),{,},},<EOF>''',
                101
            )
        )

    def test_463(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_{Constructor (ja,_4R_:Array [Array [Array [Array [Float ,0121],53],53],0X8_D];j,T_R,z22M,_:Array [Array [Float ,0b10_1],1]){} }''',
                '''Class,c,:,_,{,Constructor,(,ja,,,_4R_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0121,],,,53,],,,53,],,,0X8D,],;,j,,,T_R,,,z22M,,,_,:,Array,[,Array,[,Float,,,0b101,],,,1,],),{,},},<EOF>''',
                101
            )
        )

    def test_464(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Val $5_:Array [Boolean ,1_9];Constructor (c8,__,ajkiHg:Array [Boolean ,0B110110];M:String ){}Var _:Array [Float ,0b11];}Class _{}''',
                '''Class,a,{,Val,$5_,:,Array,[,Boolean,,,19,],;,Constructor,(,c8,,,__,,,ajkiHg,:,Array,[,Boolean,,,0B110110,],;,M,:,String,),{,},Var,_,:,Array,[,Float,,,0b11,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_465(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9:o7{Constructor (){Val _:Array [String ,77];} }Class upb:Cj0_{_(){}Destructor (){} }Class w:n{}Class P_8G{}''',
                '''Class,_9,:,o7,{,Constructor,(,),{,Val,_,:,Array,[,String,,,77,],;,},},Class,upb,:,Cj0_,{,_,(,),{,},Destructor,(,),{,},},Class,w,:,n,{,},Class,P_8G,{,},<EOF>''',
                101
            )
        )

    def test_466(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:q{}Class L__{_(a,_,T,_4_B1_07,p_63:Int ){ {} }}Class ouY{Val $2_:Float ;}Class L80:_{Val $n:Array [Float ,047];Constructor (t:_){ {} }Var J:String ;}''',
                '''Class,z,:,q,{,},Class,L__,{,_,(,a,,,_,,,T,,,_4_B1_07,,,p_63,:,Int,),{,{,},},},Class,ouY,{,Val,$2_,:,Float,;,},Class,L80,:,_,{,Val,$n,:,Array,[,Float,,,047,],;,Constructor,(,t,:,_,),{,{,},},Var,J,:,String,;,},<EOF>''',
                101
            )
        )

    def test_467(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5_{Var $_,$_:Int ;Destructor (){}G(){}Constructor (){}Var R_,C1,$x,p9,$R:Boolean ;b1k(){}Var C5k8_7UE_:Array [Int ,01_0];}Class E{Constructor (){} }''',
                '''Class,_5_,{,Var,$_,,,$_,:,Int,;,Destructor,(,),{,},G,(,),{,},Constructor,(,),{,},Var,R_,,,C1,,,$x,,,p9,,,$R,:,Boolean,;,b1k,(,),{,},Var,C5k8_7UE_,:,Array,[,Int,,,010,],;,},Class,E,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_468(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O:m{}Class _D:a{Val _3,AS:x;Constructor (d8,_,t6,_y,K:Array [Array [Array [Int ,4],93],0B1_000];Pyra,_:Int ;Y,J__B7__:m){Val a,_:_;} }''',
                '''Class,O,:,m,{,},Class,_D,:,a,{,Val,_3,,,AS,:,x,;,Constructor,(,d8,,,_,,,t6,,,_y,,,K,:,Array,[,Array,[,Array,[,Int,,,4,],,,93,],,,0B1000,],;,Pyra,,,_,:,Int,;,Y,,,J__B7__,:,m,),{,Val,a,,,_,:,_,;,},},<EOF>''',
                101
            )
        )

    def test_469(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_:bMw{}Class _{Var l_A1,$_:Array [Array [Array [String ,0x63],0X36],76];}Class H_087:_{Destructor (){Continue ;}Destructor (){}Val $0:Array [Array [Array [String ,0XC_F],0x63],05];}Class _8:G{}''',
                '''Class,k_,:,bMw,{,},Class,_,{,Var,l_A1,,,$_,:,Array,[,Array,[,Array,[,String,,,0x63,],,,0X36,],,,76,],;,},Class,H_087,:,_,{,Destructor,(,),{,Continue,;,},Destructor,(,),{,},Val,$0,:,Array,[,Array,[,Array,[,String,,,0XCF,],,,0x63,],,,05,],;,},Class,_8,:,G,{,},<EOF>''',
                101
            )
        )

    def test_470(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{Constructor (k:Int ;g8:Array [Array [Array [Array [Array [Array [String ,0XE_B],05],0b1],0x4],0b11001],051]){} }Class _6__{}Class y_:h6__9_{Destructor (){} }''',
                '''Class,O,{,Constructor,(,k,:,Int,;,g8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XEB,],,,05,],,,0b1,],,,0x4,],,,0b11001,],,,051,],),{,},},Class,_6__,{,},Class,y_,:,h6__9_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_471(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G4:_{b_(){Break ;}Constructor (C0Ca,yL:c){}Var $8r,v9:Array [Array [Array [Array [String ,0x62],0B1],0B1],0B1000011];}''',
                '''Class,G4,:,_,{,b_,(,),{,Break,;,},Constructor,(,C0Ca,,,yL,:,c,),{,},Var,$8r,,,v9,:,Array,[,Array,[,Array,[,Array,[,String,,,0x62,],,,0B1,],,,0B1,],,,0B1000011,],;,},<EOF>''',
                101
            )
        )

    def test_472(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _,$1,X:Array [Array [Array [Array [Float ,0x8],0634],05],05];Val _,_o_,l,$6___,M_P_H:Boolean ;}Class ld:M{}''',
                '''Class,_,{,Val,_,,,$1,,,X,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x8,],,,0634,],,,05,],,,05,],;,Val,_,,,_o_,,,l,,,$6___,,,M_P_H,:,Boolean,;,},Class,ld,:,M,{,},<EOF>''',
                101
            )
        )

    def test_473(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_{Constructor (b_0,_2:Array [String ,37];_K,u,Dh__,Dh,_2,EW,c_p_:String ;v25:Array [Float ,0107]){}Val $_3:Array [Boolean ,0B110101];}Class E{}''',
                '''Class,P,:,_,{,Constructor,(,b_0,,,_2,:,Array,[,String,,,37,],;,_K,,,u,,,Dh__,,,Dh,,,_2,,,EW,,,c_p_,:,String,;,v25,:,Array,[,Float,,,0107,],),{,},Val,$_3,:,Array,[,Boolean,,,0B110101,],;,},Class,E,{,},<EOF>''',
                101
            )
        )

    def test_474(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W4:_D{}Class L__UQ:_{Constructor (h:Array [Array [Array [String ,0X5A],0b1011011],0144]){Break ;}Constructor (){} }''',
                '''Class,W4,:,_D,{,},Class,L__UQ,:,_,{,Constructor,(,h,:,Array,[,Array,[,Array,[,String,,,0X5A,],,,0b1011011,],,,0144,],),{,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_475(self):
        self.assertTrue(
            TestLexer.test(
                '''Class KH{}Class ___{$_(V,m:Float ;_06:Array [Float ,01]){Return ;}Var m:Array [Array [Array [Boolean ,04],0X24],020];}''',
                '''Class,KH,{,},Class,___,{,$_,(,V,,,m,:,Float,;,_06,:,Array,[,Float,,,01,],),{,Return,;,},Var,m,:,Array,[,Array,[,Array,[,Boolean,,,04,],,,0X24,],,,020,],;,},<EOF>''',
                101
            )
        )

    def test_476(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:g{Constructor (N:Boolean ;N_:Boolean ;_,I6:Array [Boolean ,0B10];_:Array [String ,0XD];U:String ;_:LB){}Constructor (_:l__4_d9;y_x,_:bb4){} }Class _k:_Rn{Val J,$_:Float ;Destructor (){Val _:Array [Array [Int ,0B10],65];uXBe_JRo::$S();}Destructor (){} }Class c{}''',
                '''Class,_,:,g,{,Constructor,(,N,:,Boolean,;,N_,:,Boolean,;,_,,,I6,:,Array,[,Boolean,,,0B10,],;,_,:,Array,[,String,,,0XD,],;,U,:,String,;,_,:,LB,),{,},Constructor,(,_,:,l__4_d9,;,y_x,,,_,:,bb4,),{,},},Class,_k,:,_Rn,{,Val,J,,,$_,:,Float,;,Destructor,(,),{,Val,_,:,Array,[,Array,[,Int,,,0B10,],,,65,],;,uXBe_JRo,::,$S,(,),;,},Destructor,(,),{,},},Class,c,{,},<EOF>''',
                101
            )
        )

    def test_477(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v__N{Constructor (jy:Array [Float ,0B1]){} }Class r{Constructor (kV1,_250J_8la:Array [Int ,30]){Continue ;}Destructor (){}Constructor (M,t4_:String ){} }''',
                '''Class,v__N,{,Constructor,(,jy,:,Array,[,Float,,,0B1,],),{,},},Class,r,{,Constructor,(,kV1,,,_250J_8la,:,Array,[,Int,,,30,],),{,Continue,;,},Destructor,(,),{,},Constructor,(,M,,,t4_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_478(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P{Var $4z_9_:Array [Float ,0b10010];}Class _c:r2N{Constructor (){} }Class r:_{}Class _K_i{Destructor (){}Destructor (){} }Class k:h{}Class _:_1{Constructor (){} }''',
                '''Class,P,{,Var,$4z_9_,:,Array,[,Float,,,0b10010,],;,},Class,_c,:,r2N,{,Constructor,(,),{,},},Class,r,:,_,{,},Class,_K_i,{,Destructor,(,),{,},Destructor,(,),{,},},Class,k,:,h,{,},Class,_,:,_1,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_479(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Pg:L{_2_(C9_x_Eo_:Int ;_R:Float ;_yC:String ;a:_k_;_9:String ){}Constructor (Q:Array [Boolean ,0b100_10_0]){}Var y,b,$_:String ;}''',
                '''Class,Pg,:,L,{,_2_,(,C9_x_Eo_,:,Int,;,_R,:,Float,;,_yC,:,String,;,a,:,_k_,;,_9,:,String,),{,},Constructor,(,Q,:,Array,[,Boolean,,,0b100100,],),{,},Var,y,,,b,,,$_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_480(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __L:__{Destructor (){}_(){Val O_:_7W0_347J2_4;}Constructor (_:c;_l:Array [String ,0xD]){}K(_,_46,B,Xo5kq9,d:WH){Return ;}$_(T9:F_;y,_,z:_;W27:Boolean ){ {} }Constructor (f3E,_,hr17,O_T:Array [Float ,99];x,_B:Y_j;__,r:Array [Array [Array [Array [Array [Float ,050],0xE],3_2_90],0xD],99];_,_:Array [Array [Array [Boolean ,0X27],99],050]){}Var D4_:_;}''',
                '''Class,__L,:,__,{,Destructor,(,),{,},_,(,),{,Val,O_,:,_7W0_347J2_4,;,},Constructor,(,_,:,c,;,_l,:,Array,[,String,,,0xD,],),{,},K,(,_,,,_46,,,B,,,Xo5kq9,,,d,:,WH,),{,Return,;,},$_,(,T9,:,F_,;,y,,,_,,,z,:,_,;,W27,:,Boolean,),{,{,},},Constructor,(,f3E,,,_,,,hr17,,,O_T,:,Array,[,Float,,,99,],;,x,,,_B,:,Y_j,;,__,,,r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,050,],,,0xE,],,,3290,],,,0xD,],,,99,],;,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0X27,],,,99,],,,050,],),{,},Var,D4_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_481(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:S_{}Class _:_{Val _:Float ;Var Y_,$3,$_:String ;}Class _3_{Constructor (_8f_:Boolean ;n0:Array [Float ,8];_:Array [String ,3]){}Constructor (){} }''',
                '''Class,U,:,S_,{,},Class,_,:,_,{,Val,_,:,Float,;,Var,Y_,,,$3,,,$_,:,String,;,},Class,_3_,{,Constructor,(,_8f_,:,Boolean,;,n0,:,Array,[,Float,,,8,],;,_,:,Array,[,String,,,3,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_482(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$1_(y7:String ;Z,__,D0:A7o;_,_,_,_:String ){} }Class m_E:Q{}Class D:D2{Var $k5_Wu5o:_4__=!!Kn::$25_r_1;}''',
                '''Class,_,:,_,{,$1_,(,y7,:,String,;,Z,,,__,,,D0,:,A7o,;,_,,,_,,,_,,,_,:,String,),{,},},Class,m_E,:,Q,{,},Class,D,:,D2,{,Var,$k5_Wu5o,:,_4__,=,!,!,Kn,::,$25_r_1,;,},<EOF>''',
                101
            )
        )

    def test_483(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B8F:___{Constructor (K0_4,_2J,kZ:_;i2_9_,_:Array [Array [Int ,18],0X6]){Return ;Val U:f;}__4g(F7,C:Array [Boolean ,0X4E];_,A9_,_,__7_,a,_7,_:Boolean ;Q:String ;_:String ;L,__:Array [Float ,0b1_0_1];_3411,H,_:Int ;_:_47){} }Class _9_{Val $5WR0,$b:Array [Array [Array [Boolean ,021],18],18];}Class p:_A{}''',
                '''Class,B8F,:,___,{,Constructor,(,K0_4,,,_2J,,,kZ,:,_,;,i2_9_,,,_,:,Array,[,Array,[,Int,,,18,],,,0X6,],),{,Return,;,Val,U,:,f,;,},__4g,(,F7,,,C,:,Array,[,Boolean,,,0X4E,],;,_,,,A9_,,,_,,,__7_,,,a,,,_7,,,_,:,Boolean,;,Q,:,String,;,_,:,String,;,L,,,__,:,Array,[,Float,,,0b101,],;,_3411,,,H,,,_,:,Int,;,_,:,_47,),{,},},Class,_9_,{,Val,$5WR0,,,$b,:,Array,[,Array,[,Array,[,Boolean,,,021,],,,18,],,,18,],;,},Class,p,:,_A,{,},<EOF>''',
                101
            )
        )

    def test_484(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __d:_4{B_A7(w1:Boolean ;_w:Array [Boolean ,0X2];d7c9,_:Array [Array [Array [Array [Boolean ,81_9_9],61],0X5],0B1_11_11];OXl,__,_0,o:Float ;_:Array [Array [Array [Int ,78],0xF],0X52];j5,J:Int ){}Constructor (f:String ;_E_:kb;t,_0,_3,_t5S12:t){} }Class g:H_{}''',
                '''Class,__d,:,_4,{,B_A7,(,w1,:,Boolean,;,_w,:,Array,[,Boolean,,,0X2,],;,d7c9,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8199,],,,61,],,,0X5,],,,0B11111,],;,OXl,,,__,,,_0,,,o,:,Float,;,_,:,Array,[,Array,[,Array,[,Int,,,78,],,,0xF,],,,0X52,],;,j5,,,J,:,Int,),{,},Constructor,(,f,:,String,;,_E_,:,kb,;,t,,,_0,,,_3,,,_t5S12,:,t,),{,},},Class,g,:,H_,{,},<EOF>''',
                101
            )
        )

    def test_485(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_:l83_d{Var E0_c,_,$_t:Int ;Val _:String ;Constructor (__4,_:Array [Array [Array [Array [Array [Boolean ,0B1_01],0xA],64],032],6]){}Val $436_h7,$_:Array [Boolean ,07_2];}''',
                '''Class,J_,:,l83_d,{,Var,E0_c,,,_,,,$_t,:,Int,;,Val,_,:,String,;,Constructor,(,__4,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B101,],,,0xA,],,,64,],,,032,],,,6,],),{,},Val,$436_h7,,,$_,:,Array,[,Boolean,,,072,],;,},<EOF>''',
                101
            )
        )

    def test_486(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Constructor (l,_,L:Array [Array [Boolean ,5_6_4],0b10110]){}Var $_9l3,__:Array [Array [Boolean ,0X5_0E6],67];Constructor (_8,_,K,_4,_7,_6:s){} }Class yS6:__{_(B:String ;T,_:Array [Array [Array [Array [Array [Array [Float ,3_95221_121_0_67],0x3],0B101110],0XE_5],0xF_3B_63],0B101110];E:Array [Int ,7]){} }Class F:_{}''',
                '''Class,___,{,Constructor,(,l,,,_,,,L,:,Array,[,Array,[,Boolean,,,564,],,,0b10110,],),{,},Var,$_9l3,,,__,:,Array,[,Array,[,Boolean,,,0X50E6,],,,67,],;,Constructor,(,_8,,,_,,,K,,,_4,,,_7,,,_6,:,s,),{,},},Class,yS6,:,__,{,_,(,B,:,String,;,T,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,395221121067,],,,0x3,],,,0B101110,],,,0XE5,],,,0xF3B63,],,,0B101110,],;,E,:,Array,[,Int,,,7,],),{,},},Class,F,:,_,{,},<EOF>''',
                101
            )
        )

    def test_487(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{Var $SA:Float ;ME(_9_:String ;_,_,w0B:Array [Array [Float ,025],0b1]){}Var $a:Array [Array [Float ,0xF],0X8];}''',
                '''Class,f,{,Var,$SA,:,Float,;,ME,(,_9_,:,String,;,_,,,_,,,w0B,:,Array,[,Array,[,Float,,,025,],,,0b1,],),{,},Var,$a,:,Array,[,Array,[,Float,,,0xF,],,,0X8,],;,},<EOF>''',
                101
            )
        )

    def test_488(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:J{Var T:Float ;}Class _I_W:_{Val p:Array [Int ,0x33];}Class h1{Constructor (uJjl:C){}Constructor (_3E43J0xE,_,_9:jT;jD6s_x:Boolean ){} }''',
                '''Class,A,:,J,{,Var,T,:,Float,;,},Class,_I_W,:,_,{,Val,p,:,Array,[,Int,,,0x33,],;,},Class,h1,{,Constructor,(,uJjl,:,C,),{,},Constructor,(,_3E43J0xE,,,_,,,_9,:,jT,;,jD6s_x,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_489(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class M{}Class j__:f1V___{}Class __{Destructor (){Break ;}Val $D,_S:Float ;$_Fe(P9,m:String ;q79,_1:a){}Destructor (){} }Class _{}''',
                '''Class,_,{,},Class,M,{,},Class,j__,:,f1V___,{,},Class,__,{,Destructor,(,),{,Break,;,},Val,$D,,,_S,:,Float,;,$_Fe,(,P9,,,m,:,String,;,q79,,,_1,:,a,),{,},Destructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_490(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _f1:P{Constructor (_,fZ_,q:C;T,b:Array [Array [Float ,9080_5],0x3E];_6W:Array [Array [Float ,3],0B111010]){Continue ;} }''',
                '''Class,_f1,:,P,{,Constructor,(,_,,,fZ_,,,q,:,C,;,T,,,b,:,Array,[,Array,[,Float,,,90805,],,,0x3E,],;,_6W,:,Array,[,Array,[,Float,,,3,],,,0B111010,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_491(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I{}Class lZ6:E1{Constructor (_S,v1,_r:String ){}Val $32,$0_:k;}Class __50___:_W_{Var $17__F,_,$81:_2_u9_;}''',
                '''Class,I,{,},Class,lZ6,:,E1,{,Constructor,(,_S,,,v1,,,_r,:,String,),{,},Val,$32,,,$0_,:,k,;,},Class,__50___,:,_W_,{,Var,$17__F,,,_,,,$81,:,_2_u9_,;,},<EOF>''',
                101
            )
        )

    def test_492(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _6{Destructor (){}Constructor (_,n,_H9,_,_,_60,__,_,n,_:S){Break ;Var e__G4,S,N:_e2;} }Class H9{}''',
                '''Class,_,{,},Class,_6,{,Destructor,(,),{,},Constructor,(,_,,,n,,,_H9,,,_,,,_,,,_60,,,__,,,_,,,n,,,_,:,S,),{,Break,;,Var,e__G4,,,S,,,N,:,_e2,;,},},Class,H9,{,},<EOF>''',
                101
            )
        )

    def test_493(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___e7{}Class F_:_{Destructor (){}Constructor (g4gQ,J_,xsU:Array [Array [Float ,0x54],011]){} }Class Fz:Ks{Constructor (){} }''',
                '''Class,___e7,{,},Class,F_,:,_,{,Destructor,(,),{,},Constructor,(,g4gQ,,,J_,,,xsU,:,Array,[,Array,[,Float,,,0x54,],,,011,],),{,},},Class,Fz,:,Ks,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_494(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2K:Z_{}Class ____6l_{}Class I{Val $1_4__,$_n,e__:Array [Array [Array [Array [Array [Array [String ,05_77],017],010],0B10],2],0B1];}''',
                '''Class,_2K,:,Z_,{,},Class,____6l_,{,},Class,I,{,Val,$1_4__,,,$_n,,,e__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0577,],,,017,],,,010,],,,0B10,],,,2,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_495(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _T:_8a3d_{Var _b_8,___:Array [Array [Boolean ,3],3];Var $_,$_:Array [String ,0X58];$_(_96_5:String ){Break ;} }Class _:a_{}Class _{}Class K{}''',
                '''Class,_T,:,_8a3d_,{,Var,_b_8,,,___,:,Array,[,Array,[,Boolean,,,3,],,,3,],;,Var,$_,,,$_,:,Array,[,String,,,0X58,],;,$_,(,_96_5,:,String,),{,Break,;,},},Class,_,:,a_,{,},Class,_,{,},Class,K,{,},<EOF>''',
                101
            )
        )

    def test_496(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val $__:String ;}Class _:_1_Z{}Class _2_2w:v55C{}Class w_{}Class __:I{}Class q:a_{_l(){}_(){} }Class C6{}''',
                '''Class,__,{,Val,$__,:,String,;,},Class,_,:,_1_Z,{,},Class,_2_2w,:,v55C,{,},Class,w_,{,},Class,__,:,I,{,},Class,q,:,a_,{,_l,(,),{,},_,(,),{,},},Class,C6,{,},<EOF>''',
                101
            )
        )

    def test_497(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:Z{}Class D{Constructor (Z:Array [Array [String ,06],804]){} }Class _0S_9:O3{}Class a{}Class _:P{Var $O_:Array [Array [Int ,90],0X28];}''',
                '''Class,L,:,Z,{,},Class,D,{,Constructor,(,Z,:,Array,[,Array,[,String,,,06,],,,804,],),{,},},Class,_0S_9,:,O3,{,},Class,a,{,},Class,_,:,P,{,Var,$O_,:,Array,[,Array,[,Int,,,90,],,,0X28,],;,},<EOF>''',
                101
            )
        )

    def test_498(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X:g{$m(FeD__UI4:Array [Array [Array [Array [Array [Array [Boolean ,0B10010],0XA],21],0B10010],9],9_3_337]){} }Class _8:a{}''',
                '''Class,X,:,g,{,$m,(,FeD__UI4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10010,],,,0XA,],,,21,],,,0B10010,],,,9,],,,93337,],),{,},},Class,_8,:,a,{,},<EOF>''',
                101
            )
        )

    def test_499(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$_xb(__:Array [Int ,0x3_F];h,X:Int ;_e_,B:String ){Return ;} }Class _{$6_(){ {}Continue ;{Val ___,b_M_,F,_BW_W8:Array [Array [Array [Array [Array [Array [Int ,0133],1],0b1000100],0133],0X3],2];} }}''',
                '''Class,_,{,$_xb,(,__,:,Array,[,Int,,,0x3F,],;,h,,,X,:,Int,;,_e_,,,B,:,String,),{,Return,;,},},Class,_,{,$6_,(,),{,{,},Continue,;,{,Val,___,,,b_M_,,,F,,,_BW_W8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0133,],,,1,],,,0b1000100,],,,0133,],,,0X3,],,,2,],;,},},},<EOF>''',
                101
            )
        )

    def test_500(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{}Class _82:_z{Val $_,$s_1:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B111],0X61],01],0b1010011],0xE],2],01_0_4_55],0140],0x33];}''',
                '''Class,B,{,},Class,_82,:,_z,{,Val,$_,,,$s_1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B111,],,,0X61,],,,01,],,,0b1010011,],,,0xE,],,,2,],,,010455,],,,0140,],,,0x33,],;,},<EOF>''',
                101
            )
        )

    def test_501(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _kCc_i:O{$_(p,tg,S_,__O64,t:Array [Boolean ,70]){If (!!!New p_o()){} }Constructor (by_31,_,_7_2,___0:Array [Boolean ,96_7]){Continue ;}Val $_O__3:__;}Class _{}Class _:L{}Class g:q{Var y:Array [Array [Float ,7],0b101010];}''',
                '''Class,__,{,},Class,_kCc_i,:,O,{,$_,(,p,,,tg,,,S_,,,__O64,,,t,:,Array,[,Boolean,,,70,],),{,If,(,!,!,!,New,p_o,(,),),{,},},Constructor,(,by_31,,,_,,,_7_2,,,___0,:,Array,[,Boolean,,,967,],),{,Continue,;,},Val,$_O__3,:,__,;,},Class,_,{,},Class,_,:,L,{,},Class,g,:,q,{,Var,y,:,Array,[,Array,[,Float,,,7,],,,0b101010,],;,},<EOF>''',
                101
            )
        )

    def test_502(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:j{}Class _78{Constructor (Q6_8dG_:Boolean ;t,_2D,_5R:Array [String ,0B1_1];E:_;O_6,_,Q3,_:Array [Int ,0127]){} }''',
                '''Class,x,:,j,{,},Class,_78,{,Constructor,(,Q6_8dG_,:,Boolean,;,t,,,_2D,,,_5R,:,Array,[,String,,,0B11,],;,E,:,_,;,O_6,,,_,,,Q3,,,_,:,Array,[,Int,,,0127,],),{,},},<EOF>''',
                101
            )
        )

    def test_503(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:___{}Class _T_:u{Var $_:O_l;Val $_:Array [Array [Array [Array [Float ,0140],0b1001],05],0B1];}Class _p_:_{$0(a:String ){}$Q(C_a,_:Array [Array [Boolean ,0B10_111],0140];__1e:Array [Boolean ,0XD_8];_:Boolean ;_,J2_L3:Array [Array [Float ,6],43]){} }''',
                '''Class,I,:,___,{,},Class,_T_,:,u,{,Var,$_,:,O_l,;,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0140,],,,0b1001,],,,05,],,,0B1,],;,},Class,_p_,:,_,{,$0,(,a,:,String,),{,},$Q,(,C_a,,,_,:,Array,[,Array,[,Boolean,,,0B10111,],,,0140,],;,__1e,:,Array,[,Boolean,,,0XD8,],;,_,:,Boolean,;,_,,,J2_L3,:,Array,[,Array,[,Float,,,6,],,,43,],),{,},},<EOF>''',
                101
            )
        )

    def test_504(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:E__o__0b{Val _:Array [Float ,9];Var W,$t,_Y_u4k,$H_WJ,_7:Array [Boolean ,05_1];Val dR,$_4__M3:Array [Array [Float ,0x4],0x41];}Class __VJ:BH{}Class z_9{}Class _:__5{}Class _{}''',
                '''Class,E,:,E__o__0b,{,Val,_,:,Array,[,Float,,,9,],;,Var,W,,,$t,,,_Y_u4k,,,$H_WJ,,,_7,:,Array,[,Boolean,,,051,],;,Val,dR,,,$_4__M3,:,Array,[,Array,[,Float,,,0x4,],,,0x41,],;,},Class,__VJ,:,BH,{,},Class,z_9,{,},Class,_,:,__5,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_505(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $_,$Eu1:Float ;Val $E:S;$_(){Break ;} }Class _{$p(_,DU,iA_,f,_0:Boolean ;z0,f:Array [Array [Array [Float ,0X55],0X55],939];k:Array [Array [Boolean ,0x62],0X55];_0_,R,__l_T,_1F:Float ){} }''',
                '''Class,_,{,Var,$_,,,$Eu1,:,Float,;,Val,$E,:,S,;,$_,(,),{,Break,;,},},Class,_,{,$p,(,_,,,DU,,,iA_,,,f,,,_0,:,Boolean,;,z0,,,f,:,Array,[,Array,[,Array,[,Float,,,0X55,],,,0X55,],,,939,],;,k,:,Array,[,Array,[,Boolean,,,0x62,],,,0X55,],;,_0_,,,R,,,__l_T,,,_1F,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_506(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:X_{$9(){} }Class _:e{f_(_,__,_:Float ){Break ;}r1(){}Constructor (E_y:Array [Boolean ,0B1001010];x:Array [Array [String ,0X23],0125];_OK,_,_kQ:H_L;XJ,_y:Array [String ,0b1100011]){} }''',
                '''Class,n,:,X_,{,$9,(,),{,},},Class,_,:,e,{,f_,(,_,,,__,,,_,:,Float,),{,Break,;,},r1,(,),{,},Constructor,(,E_y,:,Array,[,Boolean,,,0B1001010,],;,x,:,Array,[,Array,[,String,,,0X23,],,,0125,],;,_OK,,,_,,,_kQ,:,H_L,;,XJ,,,_y,:,Array,[,String,,,0b1100011,],),{,},},<EOF>''',
                101
            )
        )

    def test_507(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,p3:Array [Array [Array [Boolean ,0x2_2_E],0xAD],42];H,f:Array [Array [Boolean ,0XFC_12],0X9];_,_,P:Int ;RH,aVE,k,_:Array [Int ,0x8_6_21_48_95_7A_6_8C_E];zk,_Zg09,B_,__:Float ;T,_p:_){Continue ;} }Class _{Var R,d2:_;Constructor (_9,d,__,uW:String ;v_8:Array [String ,42]){ {Return ;}Var h,c,___19_,__:String ;} }Class o{}''',
                '''Class,_,{,Constructor,(,_,,,p3,:,Array,[,Array,[,Array,[,Boolean,,,0x22E,],,,0xAD,],,,42,],;,H,,,f,:,Array,[,Array,[,Boolean,,,0XFC12,],,,0X9,],;,_,,,_,,,P,:,Int,;,RH,,,aVE,,,k,,,_,:,Array,[,Int,,,0x862148957A68CE,],;,zk,,,_Zg09,,,B_,,,__,:,Float,;,T,,,_p,:,_,),{,Continue,;,},},Class,_,{,Var,R,,,d2,:,_,;,Constructor,(,_9,,,d,,,__,,,uW,:,String,;,v_8,:,Array,[,String,,,42,],),{,{,Return,;,},Var,h,,,c,,,___19_,,,__,:,String,;,},},Class,o,{,},<EOF>''',
                101
            )
        )

    def test_508(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_{}Class db:A9{$5_(G,a7,f_C_:Array [Array [Array [Array [Float ,0X3_7],0X33],0B1011],0B1];b__,_f4,l,_C2:Array [Array [Array [String ,03],53_7_9_22],59];I,H:_6){__::$12();} }''',
                '''Class,z,:,_,{,},Class,db,:,A9,{,$5_,(,G,,,a7,,,f_C_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X37,],,,0X33,],,,0B1011,],,,0B1,],;,b__,,,_f4,,,l,,,_C2,:,Array,[,Array,[,Array,[,String,,,03,],,,537922,],,,59,],;,I,,,H,:,_6,),{,__,::,$12,(,),;,},},<EOF>''',
                101
            )
        )

    def test_509(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:vD{_(_,j,t_n_,__:V;_,q:HO;_:Array [Array [Boolean ,0xC0],03_6_0_702_4];l_4:Boolean ;d:f_;_,A:Boolean ;__,__8:W;O:Array [Float ,0X2]){}Var $4_:Boolean ;}''',
                '''Class,F,:,vD,{,_,(,_,,,j,,,t_n_,,,__,:,V,;,_,,,q,:,HO,;,_,:,Array,[,Array,[,Boolean,,,0xC0,],,,03607024,],;,l_4,:,Boolean,;,d,:,f_,;,_,,,A,:,Boolean,;,__,,,__8,:,W,;,O,:,Array,[,Float,,,0X2,],),{,},Var,$4_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_510(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{$_(K41_,M,_As:U;_6O7:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0b1_0],02],02],0XE],0XF1],0B101010],3],0120],4],07_1153],0120],0B1];N:v3_;_:y){} }''',
                '''Class,__,{,$_,(,K41_,,,M,,,_As,:,U,;,_6O7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b10,],,,02,],,,02,],,,0XE,],,,0XF1,],,,0B101010,],,,3,],,,0120,],,,4,],,,071153,],,,0120,],,,0B1,],;,N,:,v3_,;,_,:,y,),{,},},<EOF>''',
                101
            )
        )

    def test_511(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m4r{Destructor (){}Var _7p03,VAA_,$1:Array [Array [Array [Boolean ,0xF_4],050],10];Constructor (){Return ;} }Class _{}''',
                '''Class,m4r,{,Destructor,(,),{,},Var,_7p03,,,VAA_,,,$1,:,Array,[,Array,[,Array,[,Boolean,,,0xF4,],,,050,],,,10,],;,Constructor,(,),{,Return,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_512(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{}Class Q__{C47(){}Constructor (src_,_:Int ){}Destructor (){}Val $4:Boolean ;Constructor (_:__;_:Array [Int ,6];_8x,w,_:Array [Array [Array [Boolean ,0x4A],74],024];W:Float ){}Var $8__0:_;}''',
                '''Class,K,{,},Class,Q__,{,C47,(,),{,},Constructor,(,src_,,,_,:,Int,),{,},Destructor,(,),{,},Val,$4,:,Boolean,;,Constructor,(,_,:,__,;,_,:,Array,[,Int,,,6,],;,_8x,,,w,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0x4A,],,,74,],,,024,],;,W,:,Float,),{,},Var,$8__0,:,_,;,},<EOF>''',
                101
            )
        )

    def test_513(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Val _0,_:Int ;Constructor (__d3:Array [Array [Float ,0X43],0B1_0_1];_,T7,W:_;_Uj,Q__6AT,O:_b_;_52K:String ;Z8_jVq:_){} }Class _:___19{}''',
                '''Class,_,{,Constructor,(,),{,},Val,_0,,,_,:,Int,;,Constructor,(,__d3,:,Array,[,Array,[,Float,,,0X43,],,,0B101,],;,_,,,T7,,,W,:,_,;,_Uj,,,Q__6AT,,,O,:,_b_,;,_52K,:,String,;,Z8_jVq,:,_,),{,},},Class,_,:,___19,{,},<EOF>''',
                101
            )
        )

    def test_514(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:_D3{Constructor (A,rp,_,_,_,_:CX_7mR;_,_,r,_,o:Array [Array [String ,0X31],0b1010011];e__,X,o,X_:Array [Array [Int ,0X31],7]){} }''',
                '''Class,m,:,_D3,{,Constructor,(,A,,,rp,,,_,,,_,,,_,,,_,:,CX_7mR,;,_,,,_,,,r,,,_,,,o,:,Array,[,Array,[,String,,,0X31,],,,0b1010011,],;,e__,,,X,,,o,,,X_,:,Array,[,Array,[,Int,,,0X31,],,,7,],),{,},},<EOF>''',
                101
            )
        )

    def test_515(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3_{}Class _5{U(W,u:Array [String ,9];FW59:Array [Int ,0b1];_:String ;_N:Boolean ;i,t,r_R:Array [Int ,043];sr4:_){ {} }}''',
                '''Class,_3_,{,},Class,_5,{,U,(,W,,,u,:,Array,[,String,,,9,],;,FW59,:,Array,[,Int,,,0b1,],;,_,:,String,;,_N,:,Boolean,;,i,,,t,,,r_R,:,Array,[,Int,,,043,],;,sr4,:,_,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_516(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{Var _,_6_:Array [Array [Int ,99],0B110101];O(e:Array [Array [Float ,0X4A],0b1011110];X:Array [Float ,0B110101]){} }Class V020_:_{}''',
                '''Class,r,{,Var,_,,,_6_,:,Array,[,Array,[,Int,,,99,],,,0B110101,],;,O,(,e,:,Array,[,Array,[,Float,,,0X4A,],,,0b1011110,],;,X,:,Array,[,Float,,,0B110101,],),{,},},Class,V020_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_517(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5__:OD{$_(niJ_,Y:Array [Int ,0B1_00_1]){}Var _:Boolean ;}Class Y2_{}Class z_{}Class m3:_{}Class IP{}Class _a{}''',
                '''Class,_5__,:,OD,{,$_,(,niJ_,,,Y,:,Array,[,Int,,,0B1001,],),{,},Var,_,:,Boolean,;,},Class,Y2_,{,},Class,z_,{,},Class,m3,:,_,{,},Class,IP,{,},Class,_a,{,},<EOF>''',
                101
            )
        )

    def test_518(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class _{$_x8(_,_,_:Array [String ,0XB]){} }Class __:m{Constructor (){}$_(){}Var $_,$_so,K:String ;}''',
                '''Class,_,{,Constructor,(,),{,},},Class,_,{,$_x8,(,_,,,_,,,_,:,Array,[,String,,,0XB,],),{,},},Class,__,:,m,{,Constructor,(,),{,},$_,(,),{,},Var,$_,,,$_so,,,K,:,String,;,},<EOF>''',
                101
            )
        )

    def test_519(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5_:D{Val __:Array [Array [Array [Boolean ,1],0xA_3_A],48];Val $282:String ;Destructor (){} }Class v__:I{}Class e:GI8{}''',
                '''Class,_5_,:,D,{,Val,__,:,Array,[,Array,[,Array,[,Boolean,,,1,],,,0xA3A,],,,48,],;,Val,$282,:,String,;,Destructor,(,),{,},},Class,v__,:,I,{,},Class,e,:,GI8,{,},<EOF>''',
                101
            )
        )

    def test_520(self):
        self.assertTrue(
            TestLexer.test(
                '''Class it{}Class pI:OD{$_q(){Continue ;}Constructor (j20:Int ){} }Class a:_{Var _1_,p_8_6M_:String ;}Class xc_m:O{}''',
                '''Class,it,{,},Class,pI,:,OD,{,$_q,(,),{,Continue,;,},Constructor,(,j20,:,Int,),{,},},Class,a,:,_,{,Var,_1_,,,p_8_6M_,:,String,;,},Class,xc_m,:,O,{,},<EOF>''',
                101
            )
        )

    def test_521(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D_:g{$y(S_n_:Array [Array [Array [Array [Array [String ,9],0x19],0B101100],0B100],0132];__,_O:U8j;qD,_:Array [Array [Int ,0x9_C3],0B101100];m_,Fr,H:Array [Boolean ,0x1];W_:Array [Array [Array [Int ,0x19],0x4],05];_,c,_,S,U:Boolean ){_3i_::$_C();} }''',
                '''Class,D_,:,g,{,$y,(,S_n_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,9,],,,0x19,],,,0B101100,],,,0B100,],,,0132,],;,__,,,_O,:,U8j,;,qD,,,_,:,Array,[,Array,[,Int,,,0x9C3,],,,0B101100,],;,m_,,,Fr,,,H,:,Array,[,Boolean,,,0x1,],;,W_,:,Array,[,Array,[,Array,[,Int,,,0x19,],,,0x4,],,,05,],;,_,,,c,,,_,,,S,,,U,:,Boolean,),{,_3i_,::,$_C,(,),;,},},<EOF>''',
                101
            )
        )

    def test_522(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e_s_7:v2{Var $M_M:w_08M;Destructor (){} }Class _kt{$__(W_g:Array [String ,26];J,_,K43:Float ){}Constructor (_:Array [String ,0x18];c:String ){} }Class X_26f0{$6(){Return ;} }''',
                '''Class,_e_s_7,:,v2,{,Var,$M_M,:,w_08M,;,Destructor,(,),{,},},Class,_kt,{,$__,(,W_g,:,Array,[,String,,,26,],;,J,,,_,,,K43,:,Float,),{,},Constructor,(,_,:,Array,[,String,,,0x18,],;,c,:,String,),{,},},Class,X_26f0,{,$6,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_523(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Constructor (_38_,_nMz,MP6,_,Y_,_T:_l;i_,___:Array [Array [Array [Boolean ,0b110100],0x43_E],1];M_,_,u:Float ;_,_3,_,h:Array [Array [Int ,2],0xA_9];U,_:Array [Float ,0103]){} }Class _:e8{}''',
                '''Class,M,{,Constructor,(,_38_,,,_nMz,,,MP6,,,_,,,Y_,,,_T,:,_l,;,i_,,,___,:,Array,[,Array,[,Array,[,Boolean,,,0b110100,],,,0x43E,],,,1,],;,M_,,,_,,,u,:,Float,;,_,,,_3,,,_,,,h,:,Array,[,Array,[,Int,,,2,],,,0xA9,],;,U,,,_,:,Array,[,Float,,,0103,],),{,},},Class,_,:,e8,{,},<EOF>''',
                101
            )
        )

    def test_524(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:a{u(){} }Class _9{Constructor (A0_,_,_W,_,_,__0,S2:Array [Array [Float ,0XD],2_0]){}Destructor (){} }Class w{_(){}Var $7P_H5,$C:_;Var w_,_T0,$_,__:_M;}''',
                '''Class,_,:,a,{,u,(,),{,},},Class,_9,{,Constructor,(,A0_,,,_,,,_W,,,_,,,_,,,__0,,,S2,:,Array,[,Array,[,Float,,,0XD,],,,20,],),{,},Destructor,(,),{,},},Class,w,{,_,(,),{,},Var,$7P_H5,,,$C,:,_,;,Var,w_,,,_T0,,,$_,,,__,:,_M,;,},<EOF>''',
                101
            )
        )

    def test_525(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (d,_:Boolean ;S,__:Float ){_IK::$Y();}Val $__,_7,$r_W:Array [Array [Boolean ,0x5A],0X3];$_(_:_X;W1_:_5;y9:__bE_j_p5__Y;_,fe:Int ;n,_:Array [Float ,55];_Ns,_N51__:String ){ {} }}''',
                '''Class,_,{,Constructor,(,d,,,_,:,Boolean,;,S,,,__,:,Float,),{,_IK,::,$Y,(,),;,},Val,$__,,,_7,,,$r_W,:,Array,[,Array,[,Boolean,,,0x5A,],,,0X3,],;,$_,(,_,:,_X,;,W1_,:,_5,;,y9,:,__bE_j_p5__Y,;,_,,,fe,:,Int,;,n,,,_,:,Array,[,Float,,,55,],;,_Ns,,,_N51__,:,String,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_526(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4_:_{Destructor (){}Val Y,_:Array [Boolean ,0b10];Var I:Array [Array [Array [Int ,0x6_D_A_5B],0B100100],0b1];Destructor (){} }''',
                '''Class,_4_,:,_,{,Destructor,(,),{,},Val,Y,,,_,:,Array,[,Boolean,,,0b10,],;,Var,I,:,Array,[,Array,[,Array,[,Int,,,0x6DA5B,],,,0B100100,],,,0b1,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_527(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:n{}Class ____:S{}Class __{i(kd66,_:C_u){} }Class _29_3N:_{Var f58,nG,_,L:M;Constructor (c,_:h;gC,K,__2_,_l:Float ;_:B;__:Boolean ){} }''',
                '''Class,c,:,n,{,},Class,____,:,S,{,},Class,__,{,i,(,kd66,,,_,:,C_u,),{,},},Class,_29_3N,:,_,{,Var,f58,,,nG,,,_,,,L,:,M,;,Constructor,(,c,,,_,:,h,;,gC,,,K,,,__2_,,,_l,:,Float,;,_,:,B,;,__,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_528(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h41:X8{Constructor (_:Boolean ;r__:Float ;H:Array [String ,0x2C];_,JA2,_:Array [Array [Int ,0x3_7_EC],0123]){}Destructor (){} }''',
                '''Class,h41,:,X8,{,Constructor,(,_,:,Boolean,;,r__,:,Float,;,H,:,Array,[,String,,,0x2C,],;,_,,,JA2,,,_,:,Array,[,Array,[,Int,,,0x37EC,],,,0123,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_529(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:__{Constructor (XT2,u2:Int ){}R(){}Constructor (){}_(_P,emf,_3_:F;r,S:_;_q:___;_:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,053],0X25],0B1],2],0b10_0_1],077],0b100],70];c,H:_____){}Val R,$3:String ;}''',
                '''Class,t,:,__,{,Constructor,(,XT2,,,u2,:,Int,),{,},R,(,),{,},Constructor,(,),{,},_,(,_P,,,emf,,,_3_,:,F,;,r,,,S,:,_,;,_q,:,___,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,053,],,,0X25,],,,0B1,],,,2,],,,0b1001,],,,077,],,,0b100,],,,70,],;,c,,,H,:,_____,),{,},Val,R,,,$3,:,String,;,},<EOF>''',
                101
            )
        )

    def test_530(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5:Z4{$V(_:Array [Boolean ,0B1_110]){} }Class J{Val $z,$X1e,$O,$_I:hfoV_3Vj;Val ____6,_,$__:Int ;}Class _{}''',
                '''Class,_5,:,Z4,{,$V,(,_,:,Array,[,Boolean,,,0B1110,],),{,},},Class,J,{,Val,$z,,,$X1e,,,$O,,,$_I,:,hfoV_3Vj,;,Val,____6,,,_,,,$__,:,Int,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_531(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h3:_{Constructor (){_::$_3c56_();}Var __v9,$o,IB,__,$nZ,$1,_,_:Array [Boolean ,01_70];}Class q:VI{}Class _3{}Class _r:sb{}''',
                '''Class,h3,:,_,{,Constructor,(,),{,_,::,$_3c56_,(,),;,},Var,__v9,,,$o,,,IB,,,__,,,$nZ,,,$1,,,_,,,_,:,Array,[,Boolean,,,0170,],;,},Class,q,:,VI,{,},Class,_3,{,},Class,_r,:,sb,{,},<EOF>''',
                101
            )
        )

    def test_532(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H:_{$6LO__(_,h:Int ;_:String ){Break ;}Destructor (){} }Class L8{}Class _:L{$_(_:Array [String ,0b101011]){}Constructor (){} }''',
                '''Class,H,:,_,{,$6LO__,(,_,,,h,:,Int,;,_,:,String,),{,Break,;,},Destructor,(,),{,},},Class,L8,{,},Class,_,:,L,{,$_,(,_,:,Array,[,String,,,0b101011,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_533(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,A2n:Float ;L_:Array [Array [Array [Array [Array [Boolean ,0B1011110],9_76],0142],0b1_0_1],0B1_1_0];_,_,__:Int ;_,o,et:Array [String ,0b1];T,J:Int ){} }''',
                '''Class,_,{,Constructor,(,_,,,A2n,:,Float,;,L_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1011110,],,,976,],,,0142,],,,0b101,],,,0B110,],;,_,,,_,,,__,:,Int,;,_,,,o,,,et,:,Array,[,String,,,0b1,],;,T,,,J,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_534(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9_{Var $_,_:String ;}Class _{Constructor (_7:Array [Float ,0x3];s_,_1,L:String ){}Var F,$_,$r_:___;Val yI_K:J;}Class bZ_:_{}''',
                '''Class,_9_,{,Var,$_,,,_,:,String,;,},Class,_,{,Constructor,(,_7,:,Array,[,Float,,,0x3,],;,s_,,,_1,,,L,:,String,),{,},Var,F,,,$_,,,$r_,:,___,;,Val,yI_K,:,J,;,},Class,bZ_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_535(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Destructor (){} }Class _3{Constructor (_,U:Array [String ,3]){}Destructor (){}Destructor (){}Val h:YN;}''',
                '''Class,_,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_3,{,Constructor,(,_,,,U,:,Array,[,String,,,3,],),{,},Destructor,(,),{,},Destructor,(,),{,},Val,h,:,YN,;,},<EOF>''',
                101
            )
        )

    def test_536(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{D9A_(_,g_v,Z2,W,dt,H__,__:Array [Array [Array [Array [Array [Array [Boolean ,5_3_2],0B110111],73],73],06],0b111100]){Break ;t275::$14();} }Class _{}Class i9:Q{}''',
                '''Class,_,{,D9A_,(,_,,,g_v,,,Z2,,,W,,,dt,,,H__,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,532,],,,0B110111,],,,73,],,,73,],,,06,],,,0b111100,],),{,Break,;,t275,::,$14,(,),;,},},Class,_,{,},Class,i9,:,Q,{,},<EOF>''',
                101
            )
        )

    def test_537(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class p{Val UV6:_;}Class v{}Class __{}Class m:P__J{u(B:Float ){Break ;}Val __,XS,$006,$_7__:Array [Float ,07];}''',
                '''Class,_,{,},Class,p,{,Val,UV6,:,_,;,},Class,v,{,},Class,__,{,},Class,m,:,P__J,{,u,(,B,:,Float,),{,Break,;,},Val,__,,,XS,,,$006,,,$_7__,:,Array,[,Float,,,07,],;,},<EOF>''',
                101
            )
        )

    def test_538(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ggy:x9Y{Constructor (_v_2,Z1:Z3__4;_g,T,_,n0:Int ;U_t_,__:p){} }Class q_{}Class y_{$0(){} }Class _:H5{}Class p_3:_4{}''',
                '''Class,Ggy,:,x9Y,{,Constructor,(,_v_2,,,Z1,:,Z3__4,;,_g,,,T,,,_,,,n0,:,Int,;,U_t_,,,__,:,p,),{,},},Class,q_,{,},Class,y_,{,$0,(,),{,},},Class,_,:,H5,{,},Class,p_3,:,_4,{,},<EOF>''',
                101
            )
        )

    def test_539(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_Q{}Class A2:_S6{$9(_:Array [Array [Int ,9],0B11001]){} }Class n__{$__381(_7:Array [Array [Array [Float ,0X14],0B11001],0b101011];_:Array [Array [String ,024],07];__,_:Array [Float ,0B11001];F:Float ){} }''',
                '''Class,_,:,_Q,{,},Class,A2,:,_S6,{,$9,(,_,:,Array,[,Array,[,Int,,,9,],,,0B11001,],),{,},},Class,n__,{,$__381,(,_7,:,Array,[,Array,[,Array,[,Float,,,0X14,],,,0B11001,],,,0b101011,],;,_,:,Array,[,Array,[,String,,,024,],,,07,],;,__,,,_,:,Array,[,Float,,,0B11001,],;,F,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_540(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:q9{$P(_3,s7B6,M:Float ;_1,e,J:Array [String ,057]){Break ;}Var $_1_:Int ;}Class L{Val $A:Float ;}Class W:A{}Class _6x3_3{}''',
                '''Class,_,:,q9,{,$P,(,_3,,,s7B6,,,M,:,Float,;,_1,,,e,,,J,:,Array,[,String,,,057,],),{,Break,;,},Var,$_1_,:,Int,;,},Class,L,{,Val,$A,:,Float,;,},Class,W,:,A,{,},Class,_6x3_3,{,},<EOF>''',
                101
            )
        )

    def test_541(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_{__s4_(){Break ;}Constructor (_:Array [Array [Array [Array [Boolean ,0b10_1],6_73],0x10],0127];Z:Float ;N_,__A,IZ_,f,T___K,L:Array [Array [Array [Boolean ,07],0127],0x10]){}Var $8W:Array [Boolean ,0B1_0];$___(TeI,p9,b:Float ){} }Class _:j_{$0(_o4,__k9,Nq5_,_p:Array [Array [Array [Array [Array [String ,04],5],8_8_1],0b111100],0B100100];F,p6q,_4:R){}Var $YE_:Array [Array [Float ,0b111100],0X19];}Class _{}''',
                '''Class,l_,{,__s4_,(,),{,Break,;,},Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101,],,,673,],,,0x10,],,,0127,],;,Z,:,Float,;,N_,,,__A,,,IZ_,,,f,,,T___K,,,L,:,Array,[,Array,[,Array,[,Boolean,,,07,],,,0127,],,,0x10,],),{,},Var,$8W,:,Array,[,Boolean,,,0B10,],;,$___,(,TeI,,,p9,,,b,:,Float,),{,},},Class,_,:,j_,{,$0,(,_o4,,,__k9,,,Nq5_,,,_p,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,04,],,,5,],,,881,],,,0b111100,],,,0B100100,],;,F,,,p6q,,,_4,:,R,),{,},Var,$YE_,:,Array,[,Array,[,Float,,,0b111100,],,,0X19,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_542(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $_:Array [Float ,0X5C];Constructor (_7:Array [Int ,0x43_6]){Continue ;{Break ;}Break ;} }Class _00{}Class O{$t(){} }''',
                '''Class,_,{,Var,$_,:,Array,[,Float,,,0X5C,],;,Constructor,(,_7,:,Array,[,Int,,,0x436,],),{,Continue,;,{,Break,;,},Break,;,},},Class,_00,{,},Class,O,{,$t,(,),{,},},<EOF>''',
                101
            )
        )

    def test_543(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Var _s:Array [Boolean ,0B1];}Class Z:Z_{}Class __m:k{}Class k{Val _:String ;$4K(v:Array [Array [Int ,6],0b111000]){} }Class B:_{}Class _a{Constructor (_7,_:L){Return ;} }Class m:v{}Class M{Val $1,$_91_:It5;Val a,$_7,_:Array [Array [Boolean ,04],04];}''',
                '''Class,d,{,Var,_s,:,Array,[,Boolean,,,0B1,],;,},Class,Z,:,Z_,{,},Class,__m,:,k,{,},Class,k,{,Val,_,:,String,;,$4K,(,v,:,Array,[,Array,[,Int,,,6,],,,0b111000,],),{,},},Class,B,:,_,{,},Class,_a,{,Constructor,(,_7,,,_,:,L,),{,Return,;,},},Class,m,:,v,{,},Class,M,{,Val,$1,,,$_91_,:,It5,;,Val,a,,,$_7,,,_,:,Array,[,Array,[,Boolean,,,04,],,,04,],;,},<EOF>''',
                101
            )
        )

    def test_544(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class D7{}Class _:Y{}Class _{}Class Xj:S6809{Constructor (___:v){}Val $_:Array [Boolean ,0X2C];Destructor (){} }''',
                '''Class,_,:,_,{,},Class,D7,{,},Class,_,:,Y,{,},Class,_,{,},Class,Xj,:,S6809,{,Constructor,(,___,:,v,),{,},Val,$_,:,Array,[,Boolean,,,0X2C,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_545(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___E_:_{Destructor (){}Destructor (){} }Class _{Val $_,$4:Array [Boolean ,74];}Class _:_l{}Class __{Var $sz2g:Array [Int ,8_0];Destructor (){} }Class b{}''',
                '''Class,___E_,:,_,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_,{,Val,$_,,,$4,:,Array,[,Boolean,,,74,],;,},Class,_,:,_l,{,},Class,__,{,Var,$sz2g,:,Array,[,Int,,,80,],;,Destructor,(,),{,},},Class,b,{,},<EOF>''',
                101
            )
        )

    def test_546(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{$83_F280(__9,_:Array [Array [Float ,066],0X34];wf_qW,_:a;y9:String ;_,hj,N__3:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1000101],066],4],0b11],066],066],05],0x63],066];_:Array [Int ,0b110]){Continue ;}Val z,g7,__:Int ;}''',
                '''Class,G,{,$83_F280,(,__9,,,_,:,Array,[,Array,[,Float,,,066,],,,0X34,],;,wf_qW,,,_,:,a,;,y9,:,String,;,_,,,hj,,,N__3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1000101,],,,066,],,,4,],,,0b11,],,,066,],,,066,],,,05,],,,0x63,],,,066,],;,_,:,Array,[,Int,,,0b110,],),{,Continue,;,},Val,z,,,g7,,,__,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_547(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_7{}Class H:c16{b(_e1,_4_F1_:Array [Boolean ,7];_:__;A:_;G43U:PS){}Val $w,$n:Array [Float ,065];Constructor (){Break ;} }Class ___:w{Var i:Array [String ,0b1000001];}''',
                '''Class,_,:,_7,{,},Class,H,:,c16,{,b,(,_e1,,,_4_F1_,:,Array,[,Boolean,,,7,],;,_,:,__,;,A,:,_,;,G43U,:,PS,),{,},Val,$w,,,$n,:,Array,[,Float,,,065,],;,Constructor,(,),{,Break,;,},},Class,___,:,w,{,Var,i,:,Array,[,String,,,0b1000001,],;,},<EOF>''',
                101
            )
        )

    def test_548(self):
        self.assertTrue(
            TestLexer.test(
                '''Class xH:C57_1{Destructor (){} }Class _{Val $_,__,$Y:Array [Array [Int ,0111],0xA];}Class _{Var $_:Array [Int ,0111];}''',
                '''Class,xH,:,C57_1,{,Destructor,(,),{,},},Class,_,{,Val,$_,,,__,,,$Y,:,Array,[,Array,[,Int,,,0111,],,,0xA,],;,},Class,_,{,Var,$_,:,Array,[,Int,,,0111,],;,},<EOF>''',
                101
            )
        )

    def test_549(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:_DWE___{Var _:Int ;}Class W_{}Class jJ{Q(v:Array [Array [Boolean ,21],052];wa:Array [Array [Float ,21],052];U_,i:n_1_;_,_:Boolean ){} }''',
                '''Class,_,{,},Class,_,:,_DWE___,{,Var,_,:,Int,;,},Class,W_,{,},Class,jJ,{,Q,(,v,:,Array,[,Array,[,Boolean,,,21,],,,052,],;,wa,:,Array,[,Array,[,Float,,,21,],,,052,],;,U_,,,i,:,n_1_,;,_,,,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_550(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N8:_{Val $3,$B6:__;Val P_:Float ;Destructor (){Val C,___3_l,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,07],8],8],0B1],1_5],0x8_2314_D5],0X40],03_7_2],0X40],0x19],0x19];{}{}Break ;}Destructor (){Continue ;} }''',
                '''Class,N8,:,_,{,Val,$3,,,$B6,:,__,;,Val,P_,:,Float,;,Destructor,(,),{,Val,C,,,___3_l,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,07,],,,8,],,,8,],,,0B1,],,,15,],,,0x82314D5,],,,0X40,],,,0372,],,,0X40,],,,0x19,],,,0x19,],;,{,},{,},Break,;,},Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_551(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_8{}Class _:_{$86k(__,K:_8;_45:Float ;_,z:Int ;w_Z,_:E;_eR61_,_:_a){}Val $qK,$9:Array [Array [Float ,036],0x87_B];}''',
                '''Class,_,:,_8,{,},Class,_,:,_,{,$86k,(,__,,,K,:,_8,;,_45,:,Float,;,_,,,z,:,Int,;,w_Z,,,_,:,E,;,_eR61_,,,_,:,_a,),{,},Val,$qK,,,$9,:,Array,[,Array,[,Float,,,036,],,,0x87B,],;,},<EOF>''',
                101
            )
        )

    def test_552(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D:_____Q{Constructor (G:Boolean ;y9,h,b1,_:Array [Array [Array [Boolean ,40],0B11],07]){}Val $_:Array [Array [Array [Float ,0X90],07_3_4_3],40];}''',
                '''Class,D,:,_____Q,{,Constructor,(,G,:,Boolean,;,y9,,,h,,,b1,,,_,:,Array,[,Array,[,Array,[,Boolean,,,40,],,,0B11,],,,07,],),{,},Val,$_,:,Array,[,Array,[,Array,[,Float,,,0X90,],,,07343,],,,40,],;,},<EOF>''',
                101
            )
        )

    def test_553(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{}Class _{__(N:_;B,X,a,a:Array [String ,01_66];_,_2_,_,__H:Array [Boolean ,062]){} }Class I:_{Destructor (){Break ;O::$5();} }''',
                '''Class,u,{,},Class,_,{,__,(,N,:,_,;,B,,,X,,,a,,,a,:,Array,[,String,,,0166,],;,_,,,_2_,,,_,,,__H,:,Array,[,Boolean,,,062,],),{,},},Class,I,:,_,{,Destructor,(,),{,Break,;,O,::,$5,(,),;,},},<EOF>''',
                101
            )
        )

    def test_554(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:m{Destructor (){}Var __836Me_P,$G4_,$33:Int ;Constructor (X_w:C;Gr:Float ;w,X,m:__m5){Val __L:Array [Array [String ,32],7];Break ;} }''',
                '''Class,_,:,m,{,Destructor,(,),{,},Var,__836Me_P,,,$G4_,,,$33,:,Int,;,Constructor,(,X_w,:,C,;,Gr,:,Float,;,w,,,X,,,m,:,__m5,),{,Val,__L,:,Array,[,Array,[,String,,,32,],,,7,],;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_555(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:b_{Val $___,o8:Int ;Var $3:String ;Var N_:Array [Array [Array [Float ,0B101_11010],0x58],0X63];}Class oY{_6F__D(P1,Q:Float ){Break ;} }''',
                '''Class,_,:,b_,{,Val,$___,,,o8,:,Int,;,Var,$3,:,String,;,Var,N_,:,Array,[,Array,[,Array,[,Float,,,0B10111010,],,,0x58,],,,0X63,],;,},Class,oY,{,_6F__D,(,P1,,,Q,:,Float,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_556(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:S{Destructor (){}Var h1_,$u:String ;}Class B:_{$_(f_:Array [Int ,74];R:__9;T_1_:Array [Array [Array [Array [Array [Boolean ,0xD69],0b11_1_000_0],74],0144],07];_8,T_:_){}Var $5I7,$F:k;Var $V:Y_;}''',
                '''Class,_,:,S,{,Destructor,(,),{,},Var,h1_,,,$u,:,String,;,},Class,B,:,_,{,$_,(,f_,:,Array,[,Int,,,74,],;,R,:,__9,;,T_1_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xD69,],,,0b1110000,],,,74,],,,0144,],,,07,],;,_8,,,T_,:,_,),{,},Var,$5I7,,,$F,:,k,;,Var,$V,:,Y_,;,},<EOF>''',
                101
            )
        )

    def test_557(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _g7:_{}Class n_0:_1{}Class G:_X{Val $K,i:Array [Array [Float ,0B1101],0X6];Val $8_,_,$_:Array [Array [Array [Float ,0xA],0x1],0B1_010_0_01];}''',
                '''Class,_g7,:,_,{,},Class,n_0,:,_1,{,},Class,G,:,_X,{,Val,$K,,,i,:,Array,[,Array,[,Float,,,0B1101,],,,0X6,],;,Val,$8_,,,_,,,$_,:,Array,[,Array,[,Array,[,Float,,,0xA,],,,0x1,],,,0B1010001,],;,},<EOF>''',
                101
            )
        )

    def test_558(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_22k{Var $Y07:Array [Array [Array [String ,04_5],0B1101],0X6_0_C];}Class y{Var K_:Array [Array [Array [Float ,07],046],0xD];$1_W(){Break ;} }''',
                '''Class,d_22k,{,Var,$Y07,:,Array,[,Array,[,Array,[,String,,,045,],,,0B1101,],,,0X60C,],;,},Class,y,{,Var,K_,:,Array,[,Array,[,Array,[,Float,,,07,],,,046,],,,0xD,],;,$1_W,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_559(self):
        self.assertTrue(
            TestLexer.test(
                '''Class mv_:s_{}Class _{}Class ___:_{Var _:String ;Destructor (){}t__(){} }Class _f{_(){Var m,I,r7:_;} }Class _{}Class _uf:_70J{}''',
                '''Class,mv_,:,s_,{,},Class,_,{,},Class,___,:,_,{,Var,_,:,String,;,Destructor,(,),{,},t__,(,),{,},},Class,_f,{,_,(,),{,Var,m,,,I,,,r7,:,_,;,},},Class,_,{,},Class,_uf,:,_70J,{,},<EOF>''',
                101
            )
        )

    def test_560(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_N0{Destructor (){} }Class Q:_{}Class v:M187kIit{$a(_:Boolean ){} }Class _2_{}Class E:_4q{Destructor (){} }Class C:__{}Class Sf{Val $_H8J11:Array [Array [Array [Boolean ,056],16],5_2_3];}Class y{}''',
                '''Class,_,:,_N0,{,Destructor,(,),{,},},Class,Q,:,_,{,},Class,v,:,M187kIit,{,$a,(,_,:,Boolean,),{,},},Class,_2_,{,},Class,E,:,_4q,{,Destructor,(,),{,},},Class,C,:,__,{,},Class,Sf,{,Val,$_H8J11,:,Array,[,Array,[,Array,[,Boolean,,,056,],,,16,],,,523,],;,},Class,y,{,},<EOF>''',
                101
            )
        )

    def test_561(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:S_{}Class u{Var _1:__w4;_(){} }Class _m{Destructor (){}Var T_,$7,$N86h,_3,z6Q6:Int ;$B(U:Array [Array [Int ,05],0X1E];F_,_l_i:r2;_12_,_3,J:Boolean ;GZw_y,V_:Float ;_,T:Array [Array [Array [Array [Array [Boolean ,0110],65],05_0_1],1720],0b1001011]){} }''',
                '''Class,__,:,S_,{,},Class,u,{,Var,_1,:,__w4,;,_,(,),{,},},Class,_m,{,Destructor,(,),{,},Var,T_,,,$7,,,$N86h,,,_3,,,z6Q6,:,Int,;,$B,(,U,:,Array,[,Array,[,Int,,,05,],,,0X1E,],;,F_,,,_l_i,:,r2,;,_12_,,,_3,,,J,:,Boolean,;,GZw_y,,,V_,:,Float,;,_,,,T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0110,],,,65,],,,0501,],,,1720,],,,0b1001011,],),{,},},<EOF>''',
                101
            )
        )

    def test_562(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m_t:_{Constructor (_h__,n:Array [Array [Boolean ,9],2];R4,W,p_,_:S;_d,_1:Array [Array [Array [Array [Array [Array [Array [Boolean ,0X38],0B110000],0B1],05],0136],4],0XA_D];_9708t,_7:Int ;Q___:Array [Boolean ,07];A,_bK_,Jf_:Float ){} }''',
                '''Class,m_t,:,_,{,Constructor,(,_h__,,,n,:,Array,[,Array,[,Boolean,,,9,],,,2,],;,R4,,,W,,,p_,,,_,:,S,;,_d,,,_1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X38,],,,0B110000,],,,0B1,],,,05,],,,0136,],,,4,],,,0XAD,],;,_9708t,,,_7,:,Int,;,Q___,:,Array,[,Boolean,,,07,],;,A,,,_bK_,,,Jf_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_563(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:t{}Class t:O{}Class __:_{}Class w5:_3{Var $_f,h0,$4_,Y_q0,o_,$1E,$4,$_:Array [Array [Array [Float ,0X38],1],055];Xc0(){Continue ;} }''',
                '''Class,L,:,t,{,},Class,t,:,O,{,},Class,__,:,_,{,},Class,w5,:,_3,{,Var,$_f,,,h0,,,$4_,,,Y_q0,,,o_,,,$1E,,,$4,,,$_,:,Array,[,Array,[,Array,[,Float,,,0X38,],,,1,],,,055,],;,Xc0,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_564(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __v2{S(_:Array [Boolean ,47]){Val _,_:Array [Array [Array [Array [Array [Int ,04],0x2C],0x2C],041_4],47];}$___II6W(_2,_:Array [Float ,0x2C];D:Boolean ){Break ;} }''',
                '''Class,__v2,{,S,(,_,:,Array,[,Boolean,,,47,],),{,Val,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,0x2C,],,,0x2C,],,,0414,],,,47,],;,},$___II6W,(,_2,,,_,:,Array,[,Float,,,0x2C,],;,D,:,Boolean,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_565(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v_{Var $0:_;}Class _{}Class f7_:_{Constructor (__,KT:Boolean ;_1q,__,w,_,_,T_v,_J:String ){Continue ;{Continue ;Return ;}Return ;}Constructor (_,b1:Array [Array [Array [Array [Boolean ,0X5F],22],0B1011111],064];_,d,_J,q_,_:N;M_:String ){}Destructor (){}Constructor (_J,_:Array [Array [Boolean ,0x9],0b1_1_0];et:String ){}Val __:Array [Boolean ,0X5F];}Class _5{}''',
                '''Class,_v_,{,Var,$0,:,_,;,},Class,_,{,},Class,f7_,:,_,{,Constructor,(,__,,,KT,:,Boolean,;,_1q,,,__,,,w,,,_,,,_,,,T_v,,,_J,:,String,),{,Continue,;,{,Continue,;,Return,;,},Return,;,},Constructor,(,_,,,b1,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X5F,],,,22,],,,0B1011111,],,,064,],;,_,,,d,,,_J,,,q_,,,_,:,N,;,M_,:,String,),{,},Destructor,(,),{,},Constructor,(,_J,,,_,:,Array,[,Array,[,Boolean,,,0x9,],,,0b110,],;,et,:,String,),{,},Val,__,:,Array,[,Boolean,,,0X5F,],;,},Class,_5,{,},<EOF>''',
                101
            )
        )

    def test_566(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:_{Val l4l_,$_:Int ;s1(){} }Class _:__19{Constructor (e:u;e2:Array [Int ,026]){Continue ;}Destructor (){} }Class _{}Class r_{Destructor (){} }Class _4_:_{Destructor (){Return ;Val _9_,Y_,d,hZ:Int ;} }''',
                '''Class,r,:,_,{,Val,l4l_,,,$_,:,Int,;,s1,(,),{,},},Class,_,:,__19,{,Constructor,(,e,:,u,;,e2,:,Array,[,Int,,,026,],),{,Continue,;,},Destructor,(,),{,},},Class,_,{,},Class,r_,{,Destructor,(,),{,},},Class,_4_,:,_,{,Destructor,(,),{,Return,;,Val,_9_,,,Y_,,,d,,,hZ,:,Int,;,},},<EOF>''',
                101
            )
        )

    def test_567(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Rt4{_1(){}_5_h_9_137(){} }Class _Kr_t:_{Val _:Array [Int ,014];}Class _{Constructor (S,C:J_;_1,Y_:W__9;i_,h_,w,R:qK__;__:_;_:g){Break ;Break ;} }''',
                '''Class,Rt4,{,_1,(,),{,},_5_h_9_137,(,),{,},},Class,_Kr_t,:,_,{,Val,_,:,Array,[,Int,,,014,],;,},Class,_,{,Constructor,(,S,,,C,:,J_,;,_1,,,Y_,:,W__9,;,i_,,,h_,,,w,,,R,:,qK__,;,__,:,_,;,_,:,g,),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_568(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:q{Val $Az7X:Float ;Constructor (_78_:d;qh:Array [String ,0x44];_:String ;_k:Array [Array [Array [Boolean ,0x1],7],7];L:Array [Float ,05_2_4];W4:Boolean ;x:Array [Array [Array [Boolean ,0b11],81],0x7];k,_0:_){Return ;} }Class _{}''',
                '''Class,_,:,q,{,Val,$Az7X,:,Float,;,Constructor,(,_78_,:,d,;,qh,:,Array,[,String,,,0x44,],;,_,:,String,;,_k,:,Array,[,Array,[,Array,[,Boolean,,,0x1,],,,7,],,,7,],;,L,:,Array,[,Float,,,0524,],;,W4,:,Boolean,;,x,:,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,81,],,,0x7,],;,k,,,_0,:,_,),{,Return,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_569(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{$_(){Return ;} }Class _:K4{Destructor (){_0G83kT9_::$03_().T().h._.p84tj_27.h._9.b();Var _y_7O8,_,_:Array [String ,5];} }''',
                '''Class,_8,{,$_,(,),{,Return,;,},},Class,_,:,K4,{,Destructor,(,),{,_0G83kT9_,::,$03_,(,),.,T,(,),.,h,.,_,.,p84tj_27,.,h,.,_9,.,b,(,),;,Var,_y_7O8,,,_,,,_,:,Array,[,String,,,5,],;,},},<EOF>''',
                101
            )
        )

    def test_570(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Val $_,f,_:_Bo_1W_;Var DuG,I3:Int ;Val $39,u:Array [Array [Array [Float ,3_85],0b100011],0xE];}''',
                '''Class,_,{,Destructor,(,),{,},Val,$_,,,f,,,_,:,_Bo_1W_,;,Var,DuG,,,I3,:,Int,;,Val,$39,,,u,:,Array,[,Array,[,Array,[,Float,,,385,],,,0b100011,],,,0xE,],;,},<EOF>''',
                101
            )
        )

    def test_571(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j:b____{$_(_eoN:Array [Array [Int ,0141],02]){Continue ;}Var _,$2:Array [Array [Array [Int ,0X49],2],03265];$b_5_76(F_3,nB:D;_c36,_:__3){} }''',
                '''Class,j,:,b____,{,$_,(,_eoN,:,Array,[,Array,[,Int,,,0141,],,,02,],),{,Continue,;,},Var,_,,,$2,:,Array,[,Array,[,Array,[,Int,,,0X49,],,,2,],,,03265,],;,$b_5_76,(,F_3,,,nB,:,D,;,_c36,,,_,:,__3,),{,},},<EOF>''',
                101
            )
        )

    def test_572(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M:yY{Destructor (){}Constructor (F:Array [Array [Array [Array [Int ,0x3_6E_C],33],0b1100100],93]){}$21_i_m(){}Var $N_:W_;}''',
                '''Class,M,:,yY,{,Destructor,(,),{,},Constructor,(,F,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x36EC,],,,33,],,,0b1100100,],,,93,],),{,},$21_i_m,(,),{,},Var,$N_,:,W_,;,},<EOF>''',
                101
            )
        )

    def test_573(self):
        self.assertTrue(
            TestLexer.test(
                '''Class uI{Var _xV1ZB:H4;Var $_:Array [Int ,96];Var __:Array [Array [Int ,0B10_1],0XA0_81];Val $4,$FsHu7,p7,_,_:Array [String ,037];}''',
                '''Class,uI,{,Var,_xV1ZB,:,H4,;,Var,$_,:,Array,[,Int,,,96,],;,Var,__,:,Array,[,Array,[,Int,,,0B101,],,,0XA081,],;,Val,$4,,,$FsHu7,,,p7,,,_,,,_,:,Array,[,String,,,037,],;,},<EOF>''',
                101
            )
        )

    def test_574(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:_9{Val _,q:Array [String ,042];$_A_(_:_){}Constructor (){ {Break ;} }Var s3_,HX:Array [String ,13];Val $___,$4_:Cf2;}Class R:_7{}Class b3Z{}''',
                '''Class,K,:,_9,{,Val,_,,,q,:,Array,[,String,,,042,],;,$_A_,(,_,:,_,),{,},Constructor,(,),{,{,Break,;,},},Var,s3_,,,HX,:,Array,[,String,,,13,],;,Val,$___,,,$4_,:,Cf2,;,},Class,R,:,_7,{,},Class,b3Z,{,},<EOF>''',
                101
            )
        )

    def test_575(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val ub,J:M;Val $39_D_:Array [Array [Array [Int ,339_7],0x7_C_E],892_0_3];$g_Nc_(__q:X){} }Class _{}Class _{Destructor (){} }Class ___{}''',
                '''Class,_,{,Val,ub,,,J,:,M,;,Val,$39_D_,:,Array,[,Array,[,Array,[,Int,,,3397,],,,0x7CE,],,,89203,],;,$g_Nc_,(,__q,:,X,),{,},},Class,_,{,},Class,_,{,Destructor,(,),{,},},Class,___,{,},<EOF>''',
                101
            )
        )

    def test_576(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:RTn_99{Constructor (T,_60,__,v2,_:t;_5j:Array [Array [Float ,0X27],0xE]){}Destructor (){Continue ;} }Class D{Destructor (){} }''',
                '''Class,_,:,RTn_99,{,Constructor,(,T,,,_60,,,__,,,v2,,,_,:,t,;,_5j,:,Array,[,Array,[,Float,,,0X27,],,,0xE,],),{,},Destructor,(,),{,Continue,;,},},Class,D,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_577(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_5:H{Val $B_l,M:Array [Int ,0B1010010];}Class C__B:L{Constructor (){}Val _,$__4,F:Array [Array [Array [Array [Array [Int ,0b100011],8],47],5_875],0114];}Class s:_5{}''',
                '''Class,b_5,:,H,{,Val,$B_l,,,M,:,Array,[,Int,,,0B1010010,],;,},Class,C__B,:,L,{,Constructor,(,),{,},Val,_,,,$__4,,,F,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b100011,],,,8,],,,47,],,,5875,],,,0114,],;,},Class,s,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_578(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_{$_(k_:Array [Array [Int ,0X3],0x3C];V,_:Boolean ;L,_U_Z,u18K:Array [Array [Array [Int ,0X3_32_13],14],14];PI,_h,h:f;l_:Int ;z,n_,a:Array [Array [Array [Array [String ,0x3D],0B1011111],0XD_9],0b1_0];L8:_){ {} }}''',
                '''Class,P,:,_,{,$_,(,k_,:,Array,[,Array,[,Int,,,0X3,],,,0x3C,],;,V,,,_,:,Boolean,;,L,,,_U_Z,,,u18K,:,Array,[,Array,[,Array,[,Int,,,0X33213,],,,14,],,,14,],;,PI,,,_h,,,h,:,f,;,l_,:,Int,;,z,,,n_,,,a,:,Array,[,Array,[,Array,[,Array,[,String,,,0x3D,],,,0B1011111,],,,0XD9,],,,0b10,],;,L8,:,_,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_579(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $y13_o:Array [Array [Array [Boolean ,0X1A],0b1],0B1011100];$5_Z(x_:_1){}Constructor (__,___,_,R,TB_:Float ){} }Class _8:T{}''',
                '''Class,_,{,Val,$y13_o,:,Array,[,Array,[,Array,[,Boolean,,,0X1A,],,,0b1,],,,0B1011100,],;,$5_Z,(,x_,:,_1,),{,},Constructor,(,__,,,___,,,_,,,R,,,TB_,:,Float,),{,},},Class,_8,:,T,{,},<EOF>''',
                101
            )
        )

    def test_580(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:_f{}Class E:_{}Class _{Var $0_1,_,__838,$4:Array [Array [Array [String ,8_5],0B1],0b1];Destructor (){}Val $_:Int ;}''',
                '''Class,F,:,_f,{,},Class,E,:,_,{,},Class,_,{,Var,$0_1,,,_,,,__838,,,$4,:,Array,[,Array,[,Array,[,String,,,85,],,,0B1,],,,0b1,],;,Destructor,(,),{,},Val,$_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_581(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q_{Constructor (il:Array [Array [Int ,0b1000],0X3];E:Array [Int ,054];_:String ;_,d:Array [Int ,054];_:String ;v_,j,A,__,_,_:Int ;_bl_,Ik,__,_:__4;vK,c,_,_0:Array [Float ,0B11011]){} }''',
                '''Class,Q_,{,Constructor,(,il,:,Array,[,Array,[,Int,,,0b1000,],,,0X3,],;,E,:,Array,[,Int,,,054,],;,_,:,String,;,_,,,d,:,Array,[,Int,,,054,],;,_,:,String,;,v_,,,j,,,A,,,__,,,_,,,_,:,Int,;,_bl_,,,Ik,,,__,,,_,:,__4,;,vK,,,c,,,_,,,_0,:,Array,[,Float,,,0B11011,],),{,},},<EOF>''',
                101
            )
        )

    def test_582(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:_0{}Class pr{Constructor (_E,_,_,f_g,E,_3A,B_:Array [Array [Array [Int ,0X4E],16],0B1010101];__t:_k_){} }Class _{}''',
                '''Class,_1,:,_0,{,},Class,pr,{,Constructor,(,_E,,,_,,,_,,,f_g,,,E,,,_3A,,,B_,:,Array,[,Array,[,Array,[,Int,,,0X4E,],,,16,],,,0B1010101,],;,__t,:,_k_,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_583(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___5{}Class __5c:_{}Class _{Destructor (){Var _:Float ;Var w:Array [Array [Array [Float ,1],0xA_2D],0XE];} }''',
                '''Class,___5,{,},Class,__5c,:,_,{,},Class,_,{,Destructor,(,),{,Var,_,:,Float,;,Var,w,:,Array,[,Array,[,Array,[,Float,,,1,],,,0xA2D,],,,0XE,],;,},},<EOF>''',
                101
            )
        )

    def test_584(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{}Class __{Constructor (){}Var $F5i88,_:Array [Array [Array [Array [Array [Array [Array [Int ,0X2D],037],0X2D],034],0x28],96],0b1];}Class _:Y_{}''',
                '''Class,o,{,},Class,__,{,Constructor,(,),{,},Var,$F5i88,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X2D,],,,037,],,,0X2D,],,,034,],,,0x28,],,,96,],,,0b1,],;,},Class,_,:,Y_,{,},<EOF>''',
                101
            )
        )

    def test_585(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class x_:H{}Class f_{$8(__:Array [Boolean ,0120];_:_){}Val $k:____k;Var $a9k5,D:_5m5;Var $42,L,$8_,$rJ:Array [Array [Boolean ,0120],8];}''',
                '''Class,_,:,_,{,},Class,x_,:,H,{,},Class,f_,{,$8,(,__,:,Array,[,Boolean,,,0120,],;,_,:,_,),{,},Val,$k,:,____k,;,Var,$a9k5,,,D,:,_5m5,;,Var,$42,,,L,,,$8_,,,$rJ,:,Array,[,Array,[,Boolean,,,0120,],,,8,],;,},<EOF>''',
                101
            )
        )

    def test_586(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P{Constructor (){}Val $H_1Q0,$1DY_:Int ;Constructor (B1,_:W4W8K;B:Array [Array [String ,0X5E],0B1_1];m_qS:Array [Int ,0X5E];y:_6g_){} }''',
                '''Class,P,{,Constructor,(,),{,},Val,$H_1Q0,,,$1DY_,:,Int,;,Constructor,(,B1,,,_,:,W4W8K,;,B,:,Array,[,Array,[,String,,,0X5E,],,,0B11,],;,m_qS,:,Array,[,Int,,,0X5E,],;,y,:,_6g_,),{,},},<EOF>''',
                101
            )
        )

    def test_587(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _J:_2_7{}Class _:_xC329t_{Var I,I1:Array [Float ,0b101100];Var O:_4_;Var $5f_x:Array [String ,12];}Class G:__{}''',
                '''Class,_J,:,_2_7,{,},Class,_,:,_xC329t_,{,Var,I,,,I1,:,Array,[,Float,,,0b101100,],;,Var,O,:,_4_,;,Var,$5f_x,:,Array,[,String,,,12,],;,},Class,G,:,__,{,},<EOF>''',
                101
            )
        )

    def test_588(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__:String ;_,e61,_:Float ;d_6F1,_u:dL_t){}Var $u:Array [Array [Array [Array [Array [Boolean ,8],0b10_0_1_0],0113],0B110],0b1_1];_(){Break ;} }''',
                '''Class,_,{,Constructor,(,__,:,String,;,_,,,e61,,,_,:,Float,;,d_6F1,,,_u,:,dL_t,),{,},Var,$u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,0b10010,],,,0113,],,,0B110,],,,0b11,],;,_,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_589(self):
        self.assertTrue(
            TestLexer.test(
                '''Class QO{Val C,$_,_g_,$_,$s7:Boolean ;Constructor (r:_;_:GP;Eq,_:w;D_13,h,Q,j:Float ){} }Class _7{$_L(){}F(){} }''',
                '''Class,QO,{,Val,C,,,$_,,,_g_,,,$_,,,$s7,:,Boolean,;,Constructor,(,r,:,_,;,_,:,GP,;,Eq,,,_,:,w,;,D_13,,,h,,,Q,,,j,:,Float,),{,},},Class,_7,{,$_L,(,),{,},F,(,),{,},},<EOF>''',
                101
            )
        )

    def test_590(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{Val _D,IF5_,_:Array [String ,77];Constructor (_,M_,_,_:Array [Array [Array [Array [Boolean ,0b101111],02],77],0x24]){} }''',
                '''Class,g,{,Val,_D,,,IF5_,,,_,:,Array,[,String,,,77,],;,Constructor,(,_,,,M_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101111,],,,02,],,,77,],,,0x24,],),{,},},<EOF>''',
                101
            )
        )

    def test_591(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9:k{Constructor (){}Val t_,$9N:Array [Array [Array [Boolean ,0XB],0b1010001],7];Val $_:Array [Array [Array [String ,0114],0b11_0],8_7_8_6];}Class _4_v:lJYz65_B{}''',
                '''Class,_9,:,k,{,Constructor,(,),{,},Val,t_,,,$9N,:,Array,[,Array,[,Array,[,Boolean,,,0XB,],,,0b1010001,],,,7,],;,Val,$_,:,Array,[,Array,[,Array,[,String,,,0114,],,,0b110,],,,8786,],;,},Class,_4_v,:,lJYz65_B,{,},<EOF>''',
                101
            )
        )

    def test_592(self):
        self.assertTrue(
            TestLexer.test(
                '''Class UjK{Val $0_:Boolean ;Constructor (GG_P,E_,k,N:String ;d:C){Continue ;}Constructor (){Continue ;} }Class s{}''',
                '''Class,UjK,{,Val,$0_,:,Boolean,;,Constructor,(,GG_P,,,E_,,,k,,,N,:,String,;,d,:,C,),{,Continue,;,},Constructor,(,),{,Continue,;,},},Class,s,{,},<EOF>''',
                101
            )
        )

    def test_593(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$6(_3:Array [Array [Array [Array [Array [String ,0B1011011],01],0XF],0X17],5_8];__W,G,r7,_,_,E2,F:Array [Array [String ,01],0X17]){Continue ;} }Class F{}''',
                '''Class,_,{,$6,(,_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1011011,],,,01,],,,0XF,],,,0X17,],,,58,],;,__W,,,G,,,r7,,,_,,,_,,,E2,,,F,:,Array,[,Array,[,String,,,01,],,,0X17,],),{,Continue,;,},},Class,F,{,},<EOF>''',
                101
            )
        )

    def test_594(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I{Constructor (_3_8_b:k;_,v1,_:Array [Int ,04];_k_d_:Array [Int ,0X33];Y:String ;_:Boolean ;w7,__2:_;A:Array [Int ,0b1010111]){}Destructor (){} }Class _B{}''',
                '''Class,_,:,I,{,Constructor,(,_3_8_b,:,k,;,_,,,v1,,,_,:,Array,[,Int,,,04,],;,_k_d_,:,Array,[,Int,,,0X33,],;,Y,:,String,;,_,:,Boolean,;,w7,,,__2,:,_,;,A,:,Array,[,Int,,,0b1010111,],),{,},Destructor,(,),{,},},Class,_B,{,},<EOF>''',
                101
            )
        )

    def test_595(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _B:_3{Constructor (a:Boolean ;__Z,b:Array [Float ,0b1010010];e:Array [String ,8];V1_EN3__t:Array [Array [Array [Float ,0b1010010],0XD],042];_,F_,B:Int ){} }''',
                '''Class,_B,:,_3,{,Constructor,(,a,:,Boolean,;,__Z,,,b,:,Array,[,Float,,,0b1010010,],;,e,:,Array,[,String,,,8,],;,V1_EN3__t,:,Array,[,Array,[,Array,[,Float,,,0b1010010,],,,0XD,],,,042,],;,_,,,F_,,,B,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_596(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:J{}Class l:N0{__z21_8(_0_,_J:Boolean ;c5_yc,___8:Boolean ;m4__,c__,d,Yx:Array [Boolean ,0B1_11]){} }Class x{}''',
                '''Class,__,:,J,{,},Class,l,:,N0,{,__z21_8,(,_0_,,,_J,:,Boolean,;,c5_yc,,,___8,:,Boolean,;,m4__,,,c__,,,d,,,Yx,:,Array,[,Boolean,,,0B111,],),{,},},Class,x,{,},<EOF>''',
                101
            )
        )

    def test_597(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yk0UxD:j{}Class S:oC{_(){}Constructor (___:_03e_;__,Zf3:Array [Array [Boolean ,62],62]){} }Class _L{Val $3,_:Array [Array [Array [Array [Array [Array [Boolean ,5_9_0],0B1000101],0b11],0b1_1],0b1_1],19_4];_(){} }''',
                '''Class,yk0UxD,:,j,{,},Class,S,:,oC,{,_,(,),{,},Constructor,(,___,:,_03e_,;,__,,,Zf3,:,Array,[,Array,[,Boolean,,,62,],,,62,],),{,},},Class,_L,{,Val,$3,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,590,],,,0B1000101,],,,0b11,],,,0b11,],,,0b11,],,,194,],;,_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_598(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5iHsh{Constructor (__:Int ){}Val $2Jz:__SE_;}Class I:__5{Val R:Array [Array [Float ,0X1F],0x7_DE];}Class _W5_3:G{Var _,$GS7_b:Array [Boolean ,24];Val $_:_;}''',
                '''Class,_5iHsh,{,Constructor,(,__,:,Int,),{,},Val,$2Jz,:,__SE_,;,},Class,I,:,__5,{,Val,R,:,Array,[,Array,[,Float,,,0X1F,],,,0x7DE,],;,},Class,_W5_3,:,G,{,Var,_,,,$GS7_b,:,Array,[,Boolean,,,24,],;,Val,$_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_599(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_{_(_T,T,_:_f8_;B,V_,_,_F:T;Q_:Float ;B3:Array [Array [Array [Array [String ,02_5],06],2],0x36]){Continue ;} }Class MxF:A{}''',
                '''Class,I_,{,_,(,_T,,,T,,,_,:,_f8_,;,B,,,V_,,,_,,,_F,:,T,;,Q_,:,Float,;,B3,:,Array,[,Array,[,Array,[,Array,[,String,,,025,],,,06,],,,2,],,,0x36,],),{,Continue,;,},},Class,MxF,:,A,{,},<EOF>''',
                101
            )
        )

    def test_600(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5:_{}Class _7C:T{Constructor (__13__,l_,__,_2B:V3){ {} }Constructor (__,S__D_:_;L,_3__J,_2:String ){} }''',
                '''Class,_5,:,_,{,},Class,_7C,:,T,{,Constructor,(,__13__,,,l_,,,__,,,_2B,:,V3,),{,{,},},Constructor,(,__,,,S__D_,:,_,;,L,,,_3__J,,,_2,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_601(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{Constructor (W,P,_,L3:Array [Boolean ,01];M_Q:Z;Q:Boolean ;E_,l:Array [Boolean ,88];_F2:Array [Int ,04_0_4]){Continue ;} }Class g__Rq{Val u,$r:C;Val $1:Boolean ;}Class _:j{}Class _:_2{}''',
                '''Class,c,{,Constructor,(,W,,,P,,,_,,,L3,:,Array,[,Boolean,,,01,],;,M_Q,:,Z,;,Q,:,Boolean,;,E_,,,l,:,Array,[,Boolean,,,88,],;,_F2,:,Array,[,Int,,,0404,],),{,Continue,;,},},Class,g__Rq,{,Val,u,,,$r,:,C,;,Val,$1,:,Boolean,;,},Class,_,:,j,{,},Class,_,:,_2,{,},<EOF>''',
                101
            )
        )

    def test_602(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Constructor (D2,_R:v;_:E;R,C,E:_;_13:Array [Int ,047]){}Constructor (f:Array [Array [Int ,02],6]){}Var r,o93,n:i;}Class _3{}''',
                '''Class,d,{,Constructor,(,D2,,,_R,:,v,;,_,:,E,;,R,,,C,,,E,:,_,;,_13,:,Array,[,Int,,,047,],),{,},Constructor,(,f,:,Array,[,Array,[,Int,,,02,],,,6,],),{,},Var,r,,,o93,,,n,:,i,;,},Class,_3,{,},<EOF>''',
                101
            )
        )

    def test_603(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:g{Var l,$9,$D:Array [Array [Array [Array [Array [Int ,15],15],15],0B1_1],0x57];p(){}Constructor (__,T1:Array [String ,0b1001101];be:F){} }''',
                '''Class,_,:,g,{,Var,l,,,$9,,,$D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,15,],,,15,],,,15,],,,0B11,],,,0x57,],;,p,(,),{,},Constructor,(,__,,,T1,:,Array,[,String,,,0b1001101,],;,be,:,F,),{,},},<EOF>''',
                101
            )
        )

    def test_604(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:_{Constructor (){}Val $0U93O,y_,D,$n:D;Var $a,W,$_:Array [Float ,0x9];}Class R{Destructor (){}Val _:S;Constructor (){}Constructor (WD:Array [Array [Int ,0XF],01]){}Var $F,$0,_:Array [String ,035];}''',
                '''Class,k,:,_,{,Constructor,(,),{,},Val,$0U93O,,,y_,,,D,,,$n,:,D,;,Var,$a,,,W,,,$_,:,Array,[,Float,,,0x9,],;,},Class,R,{,Destructor,(,),{,},Val,_,:,S,;,Constructor,(,),{,},Constructor,(,WD,:,Array,[,Array,[,Int,,,0XF,],,,01,],),{,},Var,$F,,,$0,,,_,:,Array,[,String,,,035,],;,},<EOF>''',
                101
            )
        )

    def test_605(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{}Class ___A{Constructor (_N:Array [Array [String ,9],0X3]){}Z8(){}Destructor (){}Val __2,_m:Array [Array [Array [Boolean ,44],0b1],44];Var _:Array [Array [Array [Float ,0B1001],06],0xA];}''',
                '''Class,v,{,},Class,___A,{,Constructor,(,_N,:,Array,[,Array,[,String,,,9,],,,0X3,],),{,},Z8,(,),{,},Destructor,(,),{,},Val,__2,,,_m,:,Array,[,Array,[,Array,[,Boolean,,,44,],,,0b1,],,,44,],;,Var,_,:,Array,[,Array,[,Array,[,Float,,,0B1001,],,,06,],,,0xA,],;,},<EOF>''',
                101
            )
        )

    def test_606(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{$M8(){} }Class Q_{Destructor (){} }Class R:GXj_KEx{}Class s{v4(_:EJ;__q:Array [Array [Array [Array [String ,0B1_1],4],4_4],0x7_A2A1];k__4:Int ;y8_A,g2:Array [Float ,6];_W:String ;_2,_:_){ {} }}Class o__{$5(){} }Class _{}Class D:_{}''',
                '''Class,c,{,$M8,(,),{,},},Class,Q_,{,Destructor,(,),{,},},Class,R,:,GXj_KEx,{,},Class,s,{,v4,(,_,:,EJ,;,__q,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11,],,,4,],,,44,],,,0x7A2A1,],;,k__4,:,Int,;,y8_A,,,g2,:,Array,[,Float,,,6,],;,_W,:,String,;,_2,,,_,:,_,),{,{,},},},Class,o__,{,$5,(,),{,},},Class,_,{,},Class,D,:,_,{,},<EOF>''',
                101
            )
        )

    def test_607(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:__P_V{$N(_,_61:Array [Array [Float ,9],0X1];_,L0_:Nw){}Constructor (_,_:x4;X_bZ_,i,xM_5_w,q_:Array [String ,0b101110]){} }''',
                '''Class,C,:,__P_V,{,$N,(,_,,,_61,:,Array,[,Array,[,Float,,,9,],,,0X1,],;,_,,,L0_,:,Nw,),{,},Constructor,(,_,,,_,:,x4,;,X_bZ_,,,i,,,xM_5_w,,,q_,:,Array,[,String,,,0b101110,],),{,},},<EOF>''',
                101
            )
        )

    def test_608(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:B9b{$_(){} }Class fe{}Class N5{Constructor (_K:Array [Boolean ,9_50];SK,_5:_D3;G_G:Array [Array [Boolean ,037_3_44],011];_:Array [Array [String ,0X64],0x38];_:aH){} }Class qT:_{}''',
                '''Class,_,:,B9b,{,$_,(,),{,},},Class,fe,{,},Class,N5,{,Constructor,(,_K,:,Array,[,Boolean,,,950,],;,SK,,,_5,:,_D3,;,G_G,:,Array,[,Array,[,Boolean,,,037344,],,,011,],;,_,:,Array,[,Array,[,String,,,0X64,],,,0x38,],;,_,:,aH,),{,},},Class,qT,:,_,{,},<EOF>''',
                101
            )
        )

    def test_609(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:_1_{}Class __:p{}Class _:__Q{_(b:Float ;_:_o0;R19rvf,_,___,__,q5,_,C,_:Array [String ,0x2FF3_CA];P1v1,P_:String ;d:Array [Array [Array [Array [Array [Array [Boolean ,35],0x7],03_4_2_1],35],07_2_551_7_7_73],0b1010]){} }''',
                '''Class,I,:,_1_,{,},Class,__,:,p,{,},Class,_,:,__Q,{,_,(,b,:,Float,;,_,:,_o0,;,R19rvf,,,_,,,___,,,__,,,q5,,,_,,,C,,,_,:,Array,[,String,,,0x2FF3CA,],;,P1v1,,,P_,:,String,;,d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,35,],,,0x7,],,,03421,],,,35,],,,0725517773,],,,0b1010,],),{,},},<EOF>''',
                101
            )
        )

    def test_610(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{Val _:Float ;}Class _{Var D,D:Array [Array [Float ,0x20],06_6];$3(l3:p){}Val $_,N:Boolean ;Constructor (_,_:Array [Array [Array [Array [Array [Array [Array [Array [String ,0X38],0XA],16],05],0134],0b110101],41_9_3],0134]){} }''',
                '''Class,p,{,Val,_,:,Float,;,},Class,_,{,Var,D,,,D,:,Array,[,Array,[,Float,,,0x20,],,,066,],;,$3,(,l3,:,p,),{,},Val,$_,,,N,:,Boolean,;,Constructor,(,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X38,],,,0XA,],,,16,],,,05,],,,0134,],,,0b110101,],,,4193,],,,0134,],),{,},},<EOF>''',
                101
            )
        )

    def test_611(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q5_:w_y_1S2{Val M:Array [Float ,0120];}Class _{}Class tT_3319L_b8k{Constructor (_3_,__H,C0,_8jh:String ){} }''',
                '''Class,Q5_,:,w_y_1S2,{,Val,M,:,Array,[,Float,,,0120,],;,},Class,_,{,},Class,tT_3319L_b8k,{,Constructor,(,_3_,,,__H,,,C0,,,_8jh,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_612(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:_{Destructor (){} }Class T{Var B7,_n_:Array [Array [Array [Boolean ,21],0x1],065];}Class D{Destructor (){} }''',
                '''Class,l,:,_,{,Destructor,(,),{,},},Class,T,{,Var,B7,,,_n_,:,Array,[,Array,[,Array,[,Boolean,,,21,],,,0x1,],,,065,],;,},Class,D,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_613(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:_x{}Class _:__{Val $D:_;Var $_6,$__,$__,t,$2:Array [Array [Array [Array [Boolean ,0x4],026],0B1_1_1],0B1110];$_(x9,_94__:Float ){}Val _,m4V:Float ;}''',
                '''Class,U,:,_x,{,},Class,_,:,__,{,Val,$D,:,_,;,Var,$_6,,,$__,,,$__,,,t,,,$2,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x4,],,,026,],,,0B111,],,,0B1110,],;,$_,(,x9,,,_94__,:,Float,),{,},Val,_,,,m4V,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_614(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_K{Constructor (C,J:String ;P7:_;i,_:Array [Boolean ,0b1100100]){}Var $4,$_,$dZ:Array [Float ,0x5];}Class O{Var _,OEt6,$1c9,_:Q91;}''',
                '''Class,_1_K,{,Constructor,(,C,,,J,:,String,;,P7,:,_,;,i,,,_,:,Array,[,Boolean,,,0b1100100,],),{,},Var,$4,,,$_,,,$dZ,:,Array,[,Float,,,0x5,],;,},Class,O,{,Var,_,,,OEt6,,,$1c9,,,_,:,Q91,;,},<EOF>''',
                101
            )
        )

    def test_615(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _N:r_{Val __:Array [Boolean ,0x35_1_1];Constructor (__:Boolean ){Break ;} }Class __:d{Destructor (){Return ;} }Class _4{}''',
                '''Class,_N,:,r_,{,Val,__,:,Array,[,Boolean,,,0x3511,],;,Constructor,(,__,:,Boolean,),{,Break,;,},},Class,__,:,d,{,Destructor,(,),{,Return,;,},},Class,_4,{,},<EOF>''',
                101
            )
        )

    def test_616(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _H3_{Constructor (l:Array [String ,0b10];_5,A__:Array [Array [Array [Array [Array [Float ,0xA_C_79],30],017],073_5],0B1100010];T:Float ;D,_,_,_6,_x,_v_,_E4:Array [Array [Int ,0B1_0],0X22]){}Val $4_WJ6,$3:_39;}''',
                '''Class,_H3_,{,Constructor,(,l,:,Array,[,String,,,0b10,],;,_5,,,A__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xAC79,],,,30,],,,017,],,,0735,],,,0B1100010,],;,T,:,Float,;,D,,,_,,,_,,,_6,,,_x,,,_v_,,,_E4,:,Array,[,Array,[,Int,,,0B10,],,,0X22,],),{,},Val,$4_WJ6,,,$3,:,_39,;,},<EOF>''',
                101
            )
        )

    def test_617(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{Eb(){}Val K,_:Array [Float ,84];Destructor (){}Val $_Lo6,f,T3,$_:Array [Array [Array [Array [Int ,04],0X4C],7],033];}Class _:__T_6{}''',
                '''Class,B,{,Eb,(,),{,},Val,K,,,_,:,Array,[,Float,,,84,],;,Destructor,(,),{,},Val,$_Lo6,,,f,,,T3,,,$_,:,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,0X4C,],,,7,],,,033,],;,},Class,_,:,__T_6,{,},<EOF>''',
                101
            )
        )

    def test_618(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{l_j(){}Var $rF,_,g:Array [Array [Array [Float ,03_4_40_6],072],0B11111];Val _i:Array [Array [Int ,0b1000110],0X4];}Class Z_0m:__{Var $W,$_,_,_,yC,$8:_;}''',
                '''Class,t,{,l_j,(,),{,},Var,$rF,,,_,,,g,:,Array,[,Array,[,Array,[,Float,,,034406,],,,072,],,,0B11111,],;,Val,_i,:,Array,[,Array,[,Int,,,0b1000110,],,,0X4,],;,},Class,Z_0m,:,__,{,Var,$W,,,$_,,,_,,,_,,,yC,,,$8,:,_,;,},<EOF>''',
                101
            )
        )

    def test_619(self):
        self.assertTrue(
            TestLexer.test(
                '''Class HYp_:B{Destructor (){}Val n:Array [Array [Array [Float ,0b111111],0XC],0121];Val $_A:v;}Class _{Constructor (Ty,_:Int ){} }''',
                '''Class,HYp_,:,B,{,Destructor,(,),{,},Val,n,:,Array,[,Array,[,Array,[,Float,,,0b111111,],,,0XC,],,,0121,],;,Val,$_A,:,v,;,},Class,_,{,Constructor,(,Ty,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_620(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U653_{}Class _{_p7____(f:Array [Float ,53_23];__,__t:Array [Float ,0B111000];_Xj:Array [Array [Float ,0XA],5]){} }''',
                '''Class,U653_,{,},Class,_,{,_p7____,(,f,:,Array,[,Float,,,5323,],;,__,,,__t,:,Array,[,Float,,,0B111000,],;,_Xj,:,Array,[,Array,[,Float,,,0XA,],,,5,],),{,},},<EOF>''',
                101
            )
        )

    def test_621(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{}Class _oL:_1_2__{Destructor (){}Constructor (){} }Class _{Val $8:Array [Array [Array [Boolean ,044],0x16],10];}''',
                '''Class,x,{,},Class,_oL,:,_1_2__,{,Destructor,(,),{,},Constructor,(,),{,},},Class,_,{,Val,$8,:,Array,[,Array,[,Array,[,Boolean,,,044,],,,0x16,],,,10,],;,},<EOF>''',
                101
            )
        )

    def test_622(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S1:_{Val $_9,$_dT,_,$rf_:String ;Var $9X70_,$P_,$__,S_:Array [Array [Array [Int ,0B1101],5_3],021];Destructor (){}Constructor (){}Constructor (_:Array [String ,0B1101];c:String ;F9aQN:Float ){}Val $_t:Array [Float ,0b1];}''',
                '''Class,S1,:,_,{,Val,$_9,,,$_dT,,,_,,,$rf_,:,String,;,Var,$9X70_,,,$P_,,,$__,,,S_,:,Array,[,Array,[,Array,[,Int,,,0B1101,],,,53,],,,021,],;,Destructor,(,),{,},Constructor,(,),{,},Constructor,(,_,:,Array,[,String,,,0B1101,],;,c,:,String,;,F9aQN,:,Float,),{,},Val,$_t,:,Array,[,Float,,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_623(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e{Constructor (nR:D_7;F_52,S,iO:SVh7T;Q,_J38__,QG5,_,__,_:Array [Array [Boolean ,6],0x4F]){}Val $0_C,_:Float ;}''',
                '''Class,_e,{,Constructor,(,nR,:,D_7,;,F_52,,,S,,,iO,:,SVh7T,;,Q,,,_J38__,,,QG5,,,_,,,__,,,_,:,Array,[,Array,[,Boolean,,,6,],,,0x4F,],),{,},Val,$0_C,,,_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_624(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _8a{$q(_5_:Array [Array [Array [Int ,0xA],06],07]){Continue ;}Var $zii,V3vB:Array [Array [Float ,0XA],0X42];Val s:Int ;Constructor (_,F:Boolean ;ZR,d_,_:_M8;_,_:V;z:Array [Array [Array [Array [Float ,0x5],81],0xA],0b1001101]){Continue ;}Val $_,i_f4,$1,T:Array [Array [String ,3_11],0B1100011];Var _5:Z1_A;}Class T___x{Destructor (){Return ;} }''',
                '''Class,_,:,_,{,},Class,_8a,{,$q,(,_5_,:,Array,[,Array,[,Array,[,Int,,,0xA,],,,06,],,,07,],),{,Continue,;,},Var,$zii,,,V3vB,:,Array,[,Array,[,Float,,,0XA,],,,0X42,],;,Val,s,:,Int,;,Constructor,(,_,,,F,:,Boolean,;,ZR,,,d_,,,_,:,_M8,;,_,,,_,:,V,;,z,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x5,],,,81,],,,0xA,],,,0b1001101,],),{,Continue,;,},Val,$_,,,i_f4,,,$1,,,T,:,Array,[,Array,[,String,,,311,],,,0B1100011,],;,Var,_5,:,Z1_A,;,},Class,T___x,{,Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_625(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class _{}Class j:Ta{Constructor (){}Destructor (){}$3(){_e::$x_._m.H();}Destructor (){Break ;} }Class m3:v{}''',
                '''Class,__,:,_,{,},Class,_,{,},Class,j,:,Ta,{,Constructor,(,),{,},Destructor,(,),{,},$3,(,),{,_e,::,$x_,.,_m,.,H,(,),;,},Destructor,(,),{,Break,;,},},Class,m3,:,v,{,},<EOF>''',
                101
            )
        )

    def test_626(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{Constructor (_9,z:d;_C,_2:String ){Var _ix__:Array [Array [Array [Array [Array [Float ,65],0B101100],0B101100],0b1],07_2];Break ;} }''',
                '''Class,_1,{,Constructor,(,_9,,,z,:,d,;,_C,,,_2,:,String,),{,Var,_ix__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,65,],,,0B101100,],,,0B101100,],,,0b1,],,,072,],;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_627(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N{Var y43__1:Float ;$31_(_:Array [Array [Array [Array [Boolean ,0x1E],22],057_6],0B10]){} }Class _:K{}Class _QP4_u0{}Class _{$_(){Var P,_,R:_;} }Class ta{}''',
                '''Class,N,{,Var,y43__1,:,Float,;,$31_,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x1E,],,,22,],,,0576,],,,0B10,],),{,},},Class,_,:,K,{,},Class,_QP4_u0,{,},Class,_,{,$_,(,),{,Var,P,,,_,,,R,:,_,;,},},Class,ta,{,},<EOF>''',
                101
            )
        )

    def test_628(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:H_c{$I_(WF:_M_u;_B43h:_c){ {Continue ;} }Z(k:Array [String ,49]){Var p,MbV_:Array [Array [Boolean ,02],0B1001010];}Constructor (_,Y,_,_,Ms1:_R){} }''',
                '''Class,C,:,H_c,{,$I_,(,WF,:,_M_u,;,_B43h,:,_c,),{,{,Continue,;,},},Z,(,k,:,Array,[,String,,,49,],),{,Var,p,,,MbV_,:,Array,[,Array,[,Boolean,,,02,],,,0B1001010,],;,},Constructor,(,_,,,Y,,,_,,,_,,,Ms1,:,_R,),{,},},<EOF>''',
                101
            )
        )

    def test_629(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{}Class _:_H{}Class _Y:gP6y6_kz{}Class __:_{Val $_v,_6_619_,$_:_B2;Val J8:Array [Array [Float ,78],0b1_0];Val d2:Array [Array [Array [Array [Boolean ,78],0x51],034],0x51];Var _:f;}Class P:Cl__l{}''',
                '''Class,Y,{,},Class,_,:,_H,{,},Class,_Y,:,gP6y6_kz,{,},Class,__,:,_,{,Val,$_v,,,_6_619_,,,$_,:,_B2,;,Val,J8,:,Array,[,Array,[,Float,,,78,],,,0b10,],;,Val,d2,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,78,],,,0x51,],,,034,],,,0x51,],;,Var,_,:,f,;,},Class,P,:,Cl__l,{,},<EOF>''',
                101
            )
        )

    def test_630(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:wL{Var $_I:Int ;Constructor (_:Array [Array [Float ,0b1],0133];_7:Array [String ,0B10010];_j:y9){Break ;Continue ;}Var T4q,$6_,$n,$5:Array [Array [Float ,0133],0B1];}''',
                '''Class,f,:,wL,{,Var,$_I,:,Int,;,Constructor,(,_,:,Array,[,Array,[,Float,,,0b1,],,,0133,],;,_7,:,Array,[,String,,,0B10010,],;,_j,:,y9,),{,Break,;,Continue,;,},Var,T4q,,,$6_,,,$n,,,$5,:,Array,[,Array,[,Float,,,0133,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_631(self):
        self.assertTrue(
            TestLexer.test(
                '''Class St8{Destructor (){}Constructor (O,T,K:Int ;_,_,Q:Array [Float ,06];QP_,_9:Array [Array [String ,057],0B1]){ {} }Var Wv__Y:Boolean ;}Class p{Destructor (){Break ;} }Class B6{Var $_,$_u,$_,$_:_4_8;Constructor (){Val _,_90:t;{} }}''',
                '''Class,St8,{,Destructor,(,),{,},Constructor,(,O,,,T,,,K,:,Int,;,_,,,_,,,Q,:,Array,[,Float,,,06,],;,QP_,,,_9,:,Array,[,Array,[,String,,,057,],,,0B1,],),{,{,},},Var,Wv__Y,:,Boolean,;,},Class,p,{,Destructor,(,),{,Break,;,},},Class,B6,{,Var,$_,,,$_u,,,$_,,,$_,:,_4_8,;,Constructor,(,),{,Val,_,,,_90,:,t,;,{,},},},<EOF>''',
                101
            )
        )

    def test_632(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y___{Constructor (rQ:p_8){}Destructor (){Break ;}Var _8,y:String ;Val d:Boolean ;$_(__,__3____,__:WQ){}_4(di_W6,_,y,_,_T_8,J,HtH,_,dF9V:Array [Boolean ,0X7_6]){} }Class _{}''',
                '''Class,y___,{,Constructor,(,rQ,:,p_8,),{,},Destructor,(,),{,Break,;,},Var,_8,,,y,:,String,;,Val,d,:,Boolean,;,$_,(,__,,,__3____,,,__,:,WQ,),{,},_4,(,di_W6,,,_,,,y,,,_,,,_T_8,,,J,,,HtH,,,_,,,dF9V,:,Array,[,Boolean,,,0X76,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_633(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_{$_o(){}f(PO:Array [Boolean ,04_65];_2,_,_sd,_,_:Boolean ;yk:K;_,_,_,_:String ;yE0:Int ;__:_5){} }Class D_{Destructor (){Break ;Break ;Continue ;} }''',
                '''Class,l_,{,$_o,(,),{,},f,(,PO,:,Array,[,Boolean,,,0465,],;,_2,,,_,,,_sd,,,_,,,_,:,Boolean,;,yk,:,K,;,_,,,_,,,_,,,_,:,String,;,yE0,:,Int,;,__,:,_5,),{,},},Class,D_,{,Destructor,(,),{,Break,;,Break,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_634(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:w5{Constructor (){}_(){}Var $6:Boolean ;Constructor (_:String ;W:Array [Float ,0b100111];_L,zc,_:Array [Int ,03]){} }Class _:Jg{}''',
                '''Class,_0,:,w5,{,Constructor,(,),{,},_,(,),{,},Var,$6,:,Boolean,;,Constructor,(,_,:,String,;,W,:,Array,[,Float,,,0b100111,],;,_L,,,zc,,,_,:,Array,[,Int,,,03,],),{,},},Class,_,:,Jg,{,},<EOF>''',
                101
            )
        )

    def test_635(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{Val __:Array [Array [Array [Array [Float ,84],012],77],0B1];$8(_,_2,w,_Q,_n:String ;_5,_:Array [Array [Int ,0b1011001],012]){Continue ;}Val p0:Float ;}''',
                '''Class,x,{,Val,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,84,],,,012,],,,77,],,,0B1,],;,$8,(,_,,,_2,,,w,,,_Q,,,_n,:,String,;,_5,,,_,:,Array,[,Array,[,Int,,,0b1011001,],,,012,],),{,Continue,;,},Val,p0,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_636(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F941L62:X{Constructor (_,uj,_09,N,w_:Array [Int ,0x3E]){}Destructor (){Null .s._n().q.T6()._4.E();} }Class q8{}''',
                '''Class,F941L62,:,X,{,Constructor,(,_,,,uj,,,_09,,,N,,,w_,:,Array,[,Int,,,0x3E,],),{,},Destructor,(,),{,Null,.,s,.,_n,(,),.,q,.,T6,(,),.,_4,.,E,(,),;,},},Class,q8,{,},<EOF>''',
                101
            )
        )

    def test_637(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:I__{}Class W61_:_{Destructor (){}Constructor (p:Array [Array [Array [Array [Int ,0103],01],0b111100],04];n_,p0_,_:_;_,_:Array [Boolean ,0xE];q6:Array [Boolean ,0B10]){Break ;}Val $_,$_9zgL,$_,_9_5,$A,$5,X,___,Bi:String ;}''',
                '''Class,b,:,I__,{,},Class,W61_,:,_,{,Destructor,(,),{,},Constructor,(,p,:,Array,[,Array,[,Array,[,Array,[,Int,,,0103,],,,01,],,,0b111100,],,,04,],;,n_,,,p0_,,,_,:,_,;,_,,,_,:,Array,[,Boolean,,,0xE,],;,q6,:,Array,[,Boolean,,,0B10,],),{,Break,;,},Val,$_,,,$_9zgL,,,$_,,,_9_5,,,$A,,,$5,,,X,,,___,,,Bi,:,String,;,},<EOF>''',
                101
            )
        )

    def test_638(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(_9969,_1_7,_:Int ){ {} }}Class __:_{}Class _NC2_3{}Class eG:_{$_(){Var B_:Array [Int ,0x5];} }Class kE:_{}''',
                '''Class,_,{,_,(,_9969,,,_1_7,,,_,:,Int,),{,{,},},},Class,__,:,_,{,},Class,_NC2_3,{,},Class,eG,:,_,{,$_,(,),{,Var,B_,:,Array,[,Int,,,0x5,],;,},},Class,kE,:,_,{,},<EOF>''',
                101
            )
        )

    def test_639(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z{Var $rZ:String ;Constructor (){Var u,_0:Array [Int ,2_4];Break ;} }Class R:N{Constructor (){} }Class t:N9_{}Class b{Var F,g:Int ;}Class w{}Class B:__{}Class _{}Class f:_g42{}''',
                '''Class,z,{,Var,$rZ,:,String,;,Constructor,(,),{,Var,u,,,_0,:,Array,[,Int,,,24,],;,Break,;,},},Class,R,:,N,{,Constructor,(,),{,},},Class,t,:,N9_,{,},Class,b,{,Var,F,,,g,:,Int,;,},Class,w,{,},Class,B,:,__,{,},Class,_,{,},Class,f,:,_g42,{,},<EOF>''',
                101
            )
        )

    def test_640(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Destructor (){}$u(n:_Ju;H,_:Array [Array [Array [Array [Array [Float ,4_0],031_5],0B10100],8_0],87];_:Array [Array [Int ,87],0B10100];b:Boolean ;D:Int ;A4Yf:String ;J1I_,R:Array [Boolean ,04_2]){}Val _6,$2_G:g_d3;}''',
                '''Class,M,{,Destructor,(,),{,},$u,(,n,:,_Ju,;,H,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,40,],,,0315,],,,0B10100,],,,80,],,,87,],;,_,:,Array,[,Array,[,Int,,,87,],,,0B10100,],;,b,:,Boolean,;,D,:,Int,;,A4Yf,:,String,;,J1I_,,,R,:,Array,[,Boolean,,,042,],),{,},Val,_6,,,$2_G,:,g_d3,;,},<EOF>''',
                101
            )
        )

    def test_641(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (T,_,_,_:Array [Array [Array [Boolean ,0b1001],328],0102];__33_:Array [Float ,0102];_:Array [String ,24];_:Array [Int ,64]){} }''',
                '''Class,_,:,_,{,Constructor,(,T,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0b1001,],,,328,],,,0102,],;,__33_,:,Array,[,Float,,,0102,],;,_,:,Array,[,String,,,24,],;,_,:,Array,[,Int,,,64,],),{,},},<EOF>''',
                101
            )
        )

    def test_642(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{}Class z:YQA_6sT{}Class _o:A_qq{Constructor (A_93,sR:_;_1,C,__:Int ;_t,_th4,_5_1_,_7_6,k:R0){ {Continue ;} }}''',
                '''Class,B,{,},Class,z,:,YQA_6sT,{,},Class,_o,:,A_qq,{,Constructor,(,A_93,,,sR,:,_,;,_1,,,C,,,__,:,Int,;,_t,,,_th4,,,_5_1_,,,_7_6,,,k,:,R0,),{,{,Continue,;,},},},<EOF>''',
                101
            )
        )

    def test_643(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i:_{$5(_:Array [Array [Float ,0b1001100],0b1001100];__Y,_4U_:Array [Array [Array [Array [Array [Float ,0327],3_041],023],06],0x4C]){} }Class Y{}Class Z{Var $9ZP:g;Constructor (){Break ;} }''',
                '''Class,i,:,_,{,$5,(,_,:,Array,[,Array,[,Float,,,0b1001100,],,,0b1001100,],;,__Y,,,_4U_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0327,],,,3041,],,,023,],,,06,],,,0x4C,],),{,},},Class,Y,{,},Class,Z,{,Var,$9ZP,:,g,;,Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_644(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:j_{Val _E_d,$_,$_:Array [Array [Array [Float ,78],2],0B110];Val $_,_2,$_M_:Array [Array [Int ,0X7A4],1_693];}Class A4{}Class J3:_{}''',
                '''Class,P,:,j_,{,Val,_E_d,,,$_,,,$_,:,Array,[,Array,[,Array,[,Float,,,78,],,,2,],,,0B110,],;,Val,$_,,,_2,,,$_M_,:,Array,[,Array,[,Int,,,0X7A4,],,,1693,],;,},Class,A4,{,},Class,J3,:,_,{,},<EOF>''',
                101
            )
        )

    def test_645(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class f{}Class R{Val $_1,W,$_:Array [Array [Array [Int ,16],0b110],16];Constructor (q876:Array [Array [Float ,062],0X37];_,o__,_z,c3l__:Int ;_Y:Array [Array [Int ,0b101011],33]){} }''',
                '''Class,_,{,Constructor,(,),{,},},Class,f,{,},Class,R,{,Val,$_1,,,W,,,$_,:,Array,[,Array,[,Array,[,Int,,,16,],,,0b110,],,,16,],;,Constructor,(,q876,:,Array,[,Array,[,Float,,,062,],,,0X37,],;,_,,,o__,,,_z,,,c3l__,:,Int,;,_Y,:,Array,[,Array,[,Int,,,0b101011,],,,33,],),{,},},<EOF>''',
                101
            )
        )

    def test_646(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vw{}Class t:_{}Class _{}Class _{Constructor (){Return ;}R_zc6(Z_:Array [Array [Array [String ,0B1],0b101101],44];__3,k:L){Var C4_:Boolean ;}Constructor (){} }''',
                '''Class,vw,{,},Class,t,:,_,{,},Class,_,{,},Class,_,{,Constructor,(,),{,Return,;,},R_zc6,(,Z_,:,Array,[,Array,[,Array,[,String,,,0B1,],,,0b101101,],,,44,],;,__3,,,k,:,L,),{,Var,C4_,:,Boolean,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_647(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Destructor (){} }Class _:_{}Class __30{}Class __:__1__{$S45_K(BVw,_,N_4:_;T7V_71,K,__:Array [Array [Array [Array [Boolean ,037],0B10],0212],0XA]){Continue ;Return ;} }''',
                '''Class,d,{,Destructor,(,),{,},},Class,_,:,_,{,},Class,__30,{,},Class,__,:,__1__,{,$S45_K,(,BVw,,,_,,,N_4,:,_,;,T7V_71,,,K,,,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,037,],,,0B10,],,,0212,],,,0XA,],),{,Continue,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_648(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$_(Db,m,D_,_,D_Q,O1:u__;__:Array [String ,04];BT:Array [Array [Float ,01],0b111];_n_R47,xA,i_7,m,_:String ;l:Array [Float ,0x59];_:_vi_e6;nw:Array [String ,0B1_0];__:Boolean ){} }Class _{}Class g{}''',
                '''Class,_,{,$_,(,Db,,,m,,,D_,,,_,,,D_Q,,,O1,:,u__,;,__,:,Array,[,String,,,04,],;,BT,:,Array,[,Array,[,Float,,,01,],,,0b111,],;,_n_R47,,,xA,,,i_7,,,m,,,_,:,String,;,l,:,Array,[,Float,,,0x59,],;,_,:,_vi_e6,;,nw,:,Array,[,String,,,0B10,],;,__,:,Boolean,),{,},},Class,_,{,},Class,g,{,},<EOF>''',
                101
            )
        )

    def test_649(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{}Class o3B6{Var Lm:ObQ;Destructor (){}$_(){}Var R6_F_,$F,$_0,$__D4:Float ;Destructor (){} }Class nS6j:O_{Var _:Array [Array [Array [Array [String ,02],02],177_39530],7];Constructor (){}Destructor (){} }Class R__Z9_{}Class j{Var __7:Array [Array [Boolean ,85],85];}''',
                '''Class,T,{,},Class,o3B6,{,Var,Lm,:,ObQ,;,Destructor,(,),{,},$_,(,),{,},Var,R6_F_,,,$F,,,$_0,,,$__D4,:,Float,;,Destructor,(,),{,},},Class,nS6j,:,O_,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,02,],,,17739530,],,,7,],;,Constructor,(,),{,},Destructor,(,),{,},},Class,R__Z9_,{,},Class,j,{,Var,__7,:,Array,[,Array,[,Boolean,,,85,],,,85,],;,},<EOF>''',
                101
            )
        )

    def test_650(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:_{}Class _d{Var $N_:a9_;$t7(___,p,z__H:Array [String ,011]){}$_07(B:Array [Array [Float ,0xE_0_B],0x8];g_9:e_;_,_0_,_7,_7:Array [Array [Float ,06_0],011];_,F__,o9:Array [String ,0x13];Lo:Array [Array [String ,011],0b10]){Continue ;}Var L83,$9:Float ;Val $mO0V:R;}''',
                '''Class,C,:,_,{,},Class,_d,{,Var,$N_,:,a9_,;,$t7,(,___,,,p,,,z__H,:,Array,[,String,,,011,],),{,},$_07,(,B,:,Array,[,Array,[,Float,,,0xE0B,],,,0x8,],;,g_9,:,e_,;,_,,,_0_,,,_7,,,_7,:,Array,[,Array,[,Float,,,060,],,,011,],;,_,,,F__,,,o9,:,Array,[,String,,,0x13,],;,Lo,:,Array,[,Array,[,String,,,011,],,,0b10,],),{,Continue,;,},Var,L83,,,$9,:,Float,;,Val,$mO0V,:,R,;,},<EOF>''',
                101
            )
        )

    def test_651(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class G3___:L_{}Class p8:_{}Class x{}Class s:f_6{}Class _:T{Destructor (){}Val $_3,$f,$_,D:Array [Boolean ,0x8_1];}Class d:Q_T{}''',
                '''Class,_,{,Constructor,(,),{,},},Class,G3___,:,L_,{,},Class,p8,:,_,{,},Class,x,{,},Class,s,:,f_6,{,},Class,_,:,T,{,Destructor,(,),{,},Val,$_3,,,$f,,,$_,,,D,:,Array,[,Boolean,,,0x81,],;,},Class,d,:,Q_T,{,},<EOF>''',
                101
            )
        )

    def test_652(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_4__{Var _,$_8_:Q_;}Class _:_4{Val $_,$_,_K,$_29:Array [Array [Boolean ,0X40],0b100101];Val $W:Array [Int ,0B1];}''',
                '''Class,d_4__,{,Var,_,,,$_8_,:,Q_,;,},Class,_,:,_4,{,Val,$_,,,$_,,,_K,,,$_29,:,Array,[,Array,[,Boolean,,,0X40,],,,0b100101,],;,Val,$W,:,Array,[,Int,,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_653(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:Jb{Val $3526_u3_T,i0_,$_,$RF,_:__;Y_4F(){Var _,_l,e,jd:AFQ;} }Class r8_{Constructor (){ {} }}Class Y_N{}''',
                '''Class,f,:,Jb,{,Val,$3526_u3_T,,,i0_,,,$_,,,$RF,,,_,:,__,;,Y_4F,(,),{,Var,_,,,_l,,,e,,,jd,:,AFQ,;,},},Class,r8_,{,Constructor,(,),{,{,},},},Class,Y_N,{,},<EOF>''',
                101
            )
        )

    def test_654(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:_{Constructor (){}Var $0_:Array [Array [Int ,0b11],0B1000];}Class ___5{Constructor (IC_:Int ;_,_:n){} }Class _:_{}Class _:f{Val _j,$5,E:Array [Float ,0b11];}Class ____:y1KB{}Class __77{}Class _7___:__{Val $w:String ;}Class k_5t:U6{}''',
                '''Class,Q,:,_,{,Constructor,(,),{,},Var,$0_,:,Array,[,Array,[,Int,,,0b11,],,,0B1000,],;,},Class,___5,{,Constructor,(,IC_,:,Int,;,_,,,_,:,n,),{,},},Class,_,:,_,{,},Class,_,:,f,{,Val,_j,,,$5,,,E,:,Array,[,Float,,,0b11,],;,},Class,____,:,y1KB,{,},Class,__77,{,},Class,_7___,:,__,{,Val,$w,:,String,;,},Class,k_5t,:,U6,{,},<EOF>''',
                101
            )
        )

    def test_655(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Var $X_2M6,$_t,$v_:String ;Var $sn9O,$8:Array [Array [Array [Boolean ,0b10000],0x54],4_7_4_3973_15_2];Var $2:Float ;}Class _:_p__H_c{Constructor (w_0d3,_:String ;_:Boolean ){} }''',
                '''Class,_,:,__,{,Var,$X_2M6,,,$_t,,,$v_,:,String,;,Var,$sn9O,,,$8,:,Array,[,Array,[,Array,[,Boolean,,,0b10000,],,,0x54,],,,4743973152,],;,Var,$2,:,Float,;,},Class,_,:,_p__H_c,{,Constructor,(,w_0d3,,,_,:,String,;,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_656(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{Constructor (I6_9:Array [Boolean ,9];_,v_,Pm_2,g:Array [Boolean ,07];_O:Int ;_6L,_:Array [Array [Array [Array [Array [Float ,0xD],01],9],0120],0B1001100]){} }Class _{}''',
                '''Class,Y,{,Constructor,(,I6_9,:,Array,[,Boolean,,,9,],;,_,,,v_,,,Pm_2,,,g,:,Array,[,Boolean,,,07,],;,_O,:,Int,;,_6L,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xD,],,,01,],,,9,],,,0120,],,,0B1001100,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_657(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:H{Constructor (K,_A1_:Array [Array [String ,0x2A],0111];J,B_,b,_I,_,_,E_o:Array [Float ,0B11_1_1000]){}_(E,J8:I;g8_B,_:_){} }Class U:_{}''',
                '''Class,_,:,H,{,Constructor,(,K,,,_A1_,:,Array,[,Array,[,String,,,0x2A,],,,0111,],;,J,,,B_,,,b,,,_I,,,_,,,_,,,E_o,:,Array,[,Float,,,0B1111000,],),{,},_,(,E,,,J8,:,I,;,g8_B,,,_,:,_,),{,},},Class,U,:,_,{,},<EOF>''',
                101
            )
        )

    def test_658(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _l:d{Constructor (f4_:Array [Array [String ,0B100],19];_6:Array [Array [Array [Array [Array [Int ,01],0B100],0xD],19],6_8_3_0]){} }''',
                '''Class,_l,:,d,{,Constructor,(,f4_,:,Array,[,Array,[,String,,,0B100,],,,19,],;,_6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,0B100,],,,0xD,],,,19,],,,6830,],),{,},},<EOF>''',
                101
            )
        )

    def test_659(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:A9{Constructor (){ {} }Constructor (Z3Iv:Array [Array [Array [Array [Array [Boolean ,061],061],0b101100],0B100],0X41]){Continue ;} }''',
                '''Class,J,:,A9,{,Constructor,(,),{,{,},},Constructor,(,Z3Iv,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,061,],,,061,],,,0b101100,],,,0B100,],,,0X41,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_660(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:_9P{Destructor (){}Var R:R3;}Class P{Val $_1:Boolean ;Var $p_P6_,__1,_:Array [String ,34];Val h:Float ;Val $_,h,$x,_,m:__6yr2;}''',
                '''Class,x,:,_9P,{,Destructor,(,),{,},Var,R,:,R3,;,},Class,P,{,Val,$_1,:,Boolean,;,Var,$p_P6_,,,__1,,,_,:,Array,[,String,,,34,],;,Val,h,:,Float,;,Val,$_,,,h,,,$x,,,_,,,m,:,__6yr2,;,},<EOF>''',
                101
            )
        )

    def test_661(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{Var _,$_,_7:Array [Array [Array [Boolean ,0b1_0],0b1],83];}Class _:A__{Val _Fx__,$q,Er:Array [Array [Int ,0b11011],022];}''',
                '''Class,t,{,Var,_,,,$_,,,_7,:,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0b1,],,,83,],;,},Class,_,:,A__,{,Val,_Fx__,,,$q,,,Er,:,Array,[,Array,[,Int,,,0b11011,],,,022,],;,},<EOF>''',
                101
            )
        )

    def test_662(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:Ws5{Val $_:String ;Constructor (){}Destructor (){} }Class _{Constructor (){_::$3();}Val _,$w2v:Array [Float ,27];}Class __:iSkA{}Class T_{}''',
                '''Class,_1,:,Ws5,{,Val,$_,:,String,;,Constructor,(,),{,},Destructor,(,),{,},},Class,_,{,Constructor,(,),{,_,::,$3,(,),;,},Val,_,,,$w2v,:,Array,[,Float,,,27,],;,},Class,__,:,iSkA,{,},Class,T_,{,},<EOF>''',
                101
            )
        )

    def test_663(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _li{}Class E{}Class __7:O_d_Fe_28_S_{Constructor (_,v:Array [Array [Array [Boolean ,0X45],0B1],0122];_,_0:K){} }''',
                '''Class,_li,{,},Class,E,{,},Class,__7,:,O_d_Fe_28_S_,{,Constructor,(,_,,,v,:,Array,[,Array,[,Array,[,Boolean,,,0X45,],,,0B1,],,,0122,],;,_,,,_0,:,K,),{,},},<EOF>''',
                101
            )
        )

    def test_664(self):
        self.assertTrue(
            TestLexer.test(
                '''Class RyrHw_{Constructor (){}$J(){} }Class _:K_3__9{}Class Z{Val t_,_:Array [Int ,9];Val M_6:Float ;Val _4,$3_:Boolean ;}''',
                '''Class,RyrHw_,{,Constructor,(,),{,},$J,(,),{,},},Class,_,:,K_3__9,{,},Class,Z,{,Val,t_,,,_,:,Array,[,Int,,,9,],;,Val,M_6,:,Float,;,Val,_4,,,$3_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_665(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _:__5{}Class __:t___{}Class C:_8i{__(P_f,qg_,_:Array [Array [Array [Boolean ,0B1],0X18],70];zq2,z0__,_,_0H,Kv_,EM,_,_:Boolean ){} }''',
                '''Class,_,:,_,{,},Class,_,:,__5,{,},Class,__,:,t___,{,},Class,C,:,_8i,{,__,(,P_f,,,qg_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0X18,],,,70,],;,zq2,,,z0__,,,_,,,_0H,,,Kv_,,,EM,,,_,,,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_666(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z___7{}Class g5:_{X_8(_i,_5,__,n,j,_:Array [Array [Array [Array [Array [Array [Int ,0x33],01],0b111111],023],0X23],0x33];__:Float ;_F:g){}Constructor (_,r,N_52E:D_v_2){ {Return ;Break ;} }}''',
                '''Class,z___7,{,},Class,g5,:,_,{,X_8,(,_i,,,_5,,,__,,,n,,,j,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x33,],,,01,],,,0b111111,],,,023,],,,0X23,],,,0x33,],;,__,:,Float,;,_F,:,g,),{,},Constructor,(,_,,,r,,,N_52E,:,D_v_2,),{,{,Return,;,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_667(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j{$0(k95,G:Array [Array [Boolean ,0131],0B1_0_0];_0:Array [Boolean ,11];__E,_2_10,_57,_28p4,__:X;oZ_,_f:Array [Int ,11];h_4,_:_q_97_;S:_;_,G,_d,G:Array [Array [Float ,0X7],0b1100000];_M_07:String ;d,NM9,l:h_;____,O:L;__:M_a){Continue ;} }''',
                '''Class,j,{,$0,(,k95,,,G,:,Array,[,Array,[,Boolean,,,0131,],,,0B100,],;,_0,:,Array,[,Boolean,,,11,],;,__E,,,_2_10,,,_57,,,_28p4,,,__,:,X,;,oZ_,,,_f,:,Array,[,Int,,,11,],;,h_4,,,_,:,_q_97_,;,S,:,_,;,_,,,G,,,_d,,,G,:,Array,[,Array,[,Float,,,0X7,],,,0b1100000,],;,_M_07,:,String,;,d,,,NM9,,,l,:,h_,;,____,,,O,:,L,;,__,:,M_a,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_668(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{Destructor (){Continue ;} }Class _:n{Var $11,_A:String ;}Class _{Constructor (M,_:Z;_,h,_,D,V,_,C:Array [String ,24]){}Destructor (){}$D(){} }''',
                '''Class,V,{,Destructor,(,),{,Continue,;,},},Class,_,:,n,{,Var,$11,,,_A,:,String,;,},Class,_,{,Constructor,(,M,,,_,:,Z,;,_,,,h,,,_,,,D,,,V,,,_,,,C,:,Array,[,String,,,24,],),{,},Destructor,(,),{,},$D,(,),{,},},<EOF>''',
                101
            )
        )

    def test_669(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __iD3__{Val $8____2:Int ;Var $7_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B111100],03],0121],0121],5],56],1],0B1],0x38],0b1_0_0_1];}''',
                '''Class,__iD3__,{,Val,$8____2,:,Int,;,Var,$7_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B111100,],,,03,],,,0121,],,,0121,],,,5,],,,56,],,,1,],,,0B1,],,,0x38,],,,0b1001,],;,},<EOF>''',
                101
            )
        )

    def test_670(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:P{Constructor (){Var _:String ;}Val $y9_6HPKe,l3,$bb:Array [Array [Array [Int ,0111],0B1],0B1];}Class _:A{}''',
                '''Class,_,:,P,{,Constructor,(,),{,Var,_,:,String,;,},Val,$y9_6HPKe,,,l3,,,$bb,:,Array,[,Array,[,Array,[,Int,,,0111,],,,0B1,],,,0B1,],;,},Class,_,:,A,{,},<EOF>''',
                101
            )
        )

    def test_671(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _C{Destructor (){Return ;{}Continue ;}Destructor (){Continue ;}Var $_,$2k,$x:Array [Float ,0x26];}Class _7_X:_53{}''',
                '''Class,_C,{,Destructor,(,),{,Return,;,{,},Continue,;,},Destructor,(,),{,Continue,;,},Var,$_,,,$2k,,,$x,:,Array,[,Float,,,0x26,],;,},Class,_7_X,:,_53,{,},<EOF>''',
                101
            )
        )

    def test_672(self):
        self.assertTrue(
            TestLexer.test(
                '''Class bhZy:_{Val $F:Array [Array [Array [Float ,0X21],0x1],067];Val $26_,_9n,$_,_,V:String ;Val _6_,_,b_:Array [Array [Boolean ,0x3_B],0X19];Destructor (){ {{d::$b();} }}Var $086_,$_:_6;}Class __6:___L{}''',
                '''Class,bhZy,:,_,{,Val,$F,:,Array,[,Array,[,Array,[,Float,,,0X21,],,,0x1,],,,067,],;,Val,$26_,,,_9n,,,$_,,,_,,,V,:,String,;,Val,_6_,,,_,,,b_,:,Array,[,Array,[,Boolean,,,0x3B,],,,0X19,],;,Destructor,(,),{,{,{,d,::,$b,(,),;,},},},Var,$086_,,,$_,:,_6,;,},Class,__6,:,___L,{,},<EOF>''',
                101
            )
        )

    def test_673(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k1{Destructor (){} }Class _p9:_{}Class _4:_{}Class r7:_8909{Destructor (){}Val TG0e,a,_:Int ;Destructor (){ {A_::$X2o3();Break ;} }}''',
                '''Class,k1,{,Destructor,(,),{,},},Class,_p9,:,_,{,},Class,_4,:,_,{,},Class,r7,:,_8909,{,Destructor,(,),{,},Val,TG0e,,,a,,,_,:,Int,;,Destructor,(,),{,{,A_,::,$X2o3,(,),;,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_674(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{}Class _o:_1{Constructor (f3,_2,_,_,_:Array [String ,0B1]){Continue ;}Val h_____Q,$89_:Array [Float ,739_121];}''',
                '''Class,Y,{,},Class,_o,:,_1,{,Constructor,(,f3,,,_2,,,_,,,_,,,_,:,Array,[,String,,,0B1,],),{,Continue,;,},Val,h_____Q,,,$89_,:,Array,[,Float,,,739121,],;,},<EOF>''',
                101
            )
        )

    def test_675(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class A_{__(c1,rm1:Float ){ {Continue ;} }$B(){} }Class A:_m{}Class __:_{Val _:L;_(p3_,d:Array [Int ,03]){}gj(m95,__4,l,_,r,__3,__77969:j4;c:Int ){} }''',
                '''Class,_,{,},Class,A_,{,__,(,c1,,,rm1,:,Float,),{,{,Continue,;,},},$B,(,),{,},},Class,A,:,_m,{,},Class,__,:,_,{,Val,_,:,L,;,_,(,p3_,,,d,:,Array,[,Int,,,03,],),{,},gj,(,m95,,,__4,,,l,,,_,,,r,,,__3,,,__77969,:,j4,;,c,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_676(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vc{Destructor (){Break ;} }Class a{Constructor (m,R_VY,_,u__:String ;_,iF,SY:Int ;_:Boolean ;R:Array [Float ,0xD06]){}Val _:Array [Array [Int ,0b1],0xE];}''',
                '''Class,vc,{,Destructor,(,),{,Break,;,},},Class,a,{,Constructor,(,m,,,R_VY,,,_,,,u__,:,String,;,_,,,iF,,,SY,:,Int,;,_,:,Boolean,;,R,:,Array,[,Float,,,0xD06,],),{,},Val,_,:,Array,[,Array,[,Int,,,0b1,],,,0xE,],;,},<EOF>''',
                101
            )
        )

    def test_677(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s1K:Z_S{Destructor (){}$N_Kn_(B9Z28_P:Float ;S,O_3,d:Array [Array [Array [Array [Int ,0B11100],0x7],0b111001],6]){} }Class V{}''',
                '''Class,s1K,:,Z_S,{,Destructor,(,),{,},$N_Kn_,(,B9Z28_P,:,Float,;,S,,,O_3,,,d,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B11100,],,,0x7,],,,0b111001,],,,6,],),{,},},Class,V,{,},<EOF>''',
                101
            )
        )

    def test_678(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_7__T:p;C:Array [Array [Array [Float ,0XB1_9],0b10],0X5B]){} }Class p4:_{}Class C:_{Destructor (){} }''',
                '''Class,_,{,Constructor,(,_7__T,:,p,;,C,:,Array,[,Array,[,Array,[,Float,,,0XB19,],,,0b10,],,,0X5B,],),{,},},Class,p4,:,_,{,},Class,C,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_679(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j:_{}Class _{Constructor (l55Y:Array [Array [String ,0B1_0],0B11_01_1_11];_,_,N4,_e_:Array [Array [Array [Array [Array [Array [Boolean ,0b10],0b1000011],0B111000],0xB_4],0136],0XFB]){} }Class M{}''',
                '''Class,_j,:,_,{,},Class,_,{,Constructor,(,l55Y,:,Array,[,Array,[,String,,,0B10,],,,0B1101111,],;,_,,,_,,,N4,,,_e_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0b1000011,],,,0B111000,],,,0xB4,],,,0136,],,,0XFB,],),{,},},Class,M,{,},<EOF>''',
                101
            )
        )

    def test_680(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $9__:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0X49],0x27],9],0127],0b111001],0B100001],1],1],0B1];}''',
                '''Class,_,{,Val,$9__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X49,],,,0x27,],,,9,],,,0127,],,,0b111001,],,,0B100001,],,,1,],,,1,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_681(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:m{Destructor (){}Destructor (){Continue ;}z(_:Boolean ;jm,_H,Z_:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,4],6],04],07_2],0b1],0XF],0XD],0X27]){Var G:_EN__;}$i4(){Var x,_:Boolean ;} }Class _:d{}Class zn{}''',
                '''Class,x,:,m,{,Destructor,(,),{,},Destructor,(,),{,Continue,;,},z,(,_,:,Boolean,;,jm,,,_H,,,Z_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,4,],,,6,],,,04,],,,072,],,,0b1,],,,0XF,],,,0XD,],,,0X27,],),{,Var,G,:,_EN__,;,},$i4,(,),{,Var,x,,,_,:,Boolean,;,},},Class,_,:,d,{,},Class,zn,{,},<EOF>''',
                101
            )
        )

    def test_682(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cq{Val $h2_,$_:r;Constructor (_O_A,j:Array [Array [Float ,055],0X2F]){}Var $75:String ;_(B:Array [Array [Float ,015],067];_,__,s,_4C_8_:Array [Int ,4]){}Destructor (){} }Class _{}Class _:_P{}''',
                '''Class,cq,{,Val,$h2_,,,$_,:,r,;,Constructor,(,_O_A,,,j,:,Array,[,Array,[,Float,,,055,],,,0X2F,],),{,},Var,$75,:,String,;,_,(,B,:,Array,[,Array,[,Float,,,015,],,,067,],;,_,,,__,,,s,,,_4C_8_,:,Array,[,Int,,,4,],),{,},Destructor,(,),{,},},Class,_,{,},Class,_,:,_P,{,},<EOF>''',
                101
            )
        )

    def test_683(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _k_:b7__1{Var i:Boolean ;Var __:Array [Array [Array [Float ,0B100010],0443_45],0b1100000];}Class _8:B{Var $__f,K,$3tsd:Array [Array [Array [Int ,0b10_0_1_0],33],0XE021_D06];}''',
                '''Class,_,{,},Class,_k_,:,b7__1,{,Var,i,:,Boolean,;,Var,__,:,Array,[,Array,[,Array,[,Float,,,0B100010,],,,044345,],,,0b1100000,],;,},Class,_8,:,B,{,Var,$__f,,,K,,,$3tsd,:,Array,[,Array,[,Array,[,Int,,,0b10010,],,,33,],,,0XE021D06,],;,},<EOF>''',
                101
            )
        )

    def test_684(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:z{Val Q0,$3:T;Constructor (_,j2,__,__Nx:_){}$1(____:Array [Array [Float ,062],07_4_5];A,L,sL:_;_1l:Int ){}D_cX(g__670,_r__:Float ){Break ;}$_(_:Array [Array [Array [Boolean ,01],0X1F],0b11_11_0]){}Val $_,_X:Array [Int ,0B1];}''',
                '''Class,_,:,z,{,Val,Q0,,,$3,:,T,;,Constructor,(,_,,,j2,,,__,,,__Nx,:,_,),{,},$1,(,____,:,Array,[,Array,[,Float,,,062,],,,0745,],;,A,,,L,,,sL,:,_,;,_1l,:,Int,),{,},D_cX,(,g__670,,,_r__,:,Float,),{,Break,;,},$_,(,_,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,0X1F,],,,0b11110,],),{,},Val,$_,,,_X,:,Array,[,Int,,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_685(self):
        self.assertTrue(
            TestLexer.test(
                '''Class CM_Hp_Ol:I{Val P3:Float ;}Class __:_{}Class D____:_2{Constructor (cS_,_,R:Array [Boolean ,0xC]){} }Class _{}Class c_1:_{}Class _8{Destructor (){} }''',
                '''Class,CM_Hp_Ol,:,I,{,Val,P3,:,Float,;,},Class,__,:,_,{,},Class,D____,:,_2,{,Constructor,(,cS_,,,_,,,R,:,Array,[,Boolean,,,0xC,],),{,},},Class,_,{,},Class,c_1,:,_,{,},Class,_8,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_686(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:kz9{}Class k{}Class S{Destructor (){} }Class Ej{}Class J7{Val _,$42pCr8:Array [Array [String ,0b1_0],0137];}''',
                '''Class,_,:,kz9,{,},Class,k,{,},Class,S,{,Destructor,(,),{,},},Class,Ej,{,},Class,J7,{,Val,_,,,$42pCr8,:,Array,[,Array,[,String,,,0b10,],,,0137,],;,},<EOF>''',
                101
            )
        )

    def test_687(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f_0:Y_5{Constructor (S,B:Array [Int ,7_0_6];T:_Y_;_:Array [Array [Array [Array [Array [Array [Boolean ,0b1100100],0B1_1_1_0_10_0],06],73],0b1100100],0b1100100]){}Constructor (_9f3:Float ){Break ;} }''',
                '''Class,f_0,:,Y_5,{,Constructor,(,S,,,B,:,Array,[,Int,,,706,],;,T,:,_Y_,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1100100,],,,0B1110100,],,,06,],,,73,],,,0b1100100,],,,0b1100100,],),{,},Constructor,(,_9f3,:,Float,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_688(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6e3:_{Var _N,Z:Array [String ,0B101_0];}Class D:_a{DIs(_,F,_2,_g:Boolean ;_:ur_6__;_x:Int ){}Constructor (){Break ;} }Class __:KM_{}''',
                '''Class,_6e3,:,_,{,Var,_N,,,Z,:,Array,[,String,,,0B1010,],;,},Class,D,:,_a,{,DIs,(,_,,,F,,,_2,,,_g,:,Boolean,;,_,:,ur_6__,;,_x,:,Int,),{,},Constructor,(,),{,Break,;,},},Class,__,:,KM_,{,},<EOF>''',
                101
            )
        )

    def test_689(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cx:_N{}Class s_8_{_78s(){}Constructor (YD,_8,_,_Axb:w4_;___,M04p:Array [Float ,03_6_26]){}Var __:Array [Array [Boolean ,0B10_0],1];}''',
                '''Class,cx,:,_N,{,},Class,s_8_,{,_78s,(,),{,},Constructor,(,YD,,,_8,,,_,,,_Axb,:,w4_,;,___,,,M04p,:,Array,[,Float,,,03626,],),{,},Var,__,:,Array,[,Array,[,Boolean,,,0B100,],,,1,],;,},<EOF>''',
                101
            )
        )

    def test_690(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:M{}Class __{$_(_:Boolean ;x2,_46:D8_;O_,S598,_,_3,_,K_,_M:Array [Array [Int ,0X5D],92]){} }Class _:__{}''',
                '''Class,___,:,M,{,},Class,__,{,$_,(,_,:,Boolean,;,x2,,,_46,:,D8_,;,O_,,,S598,,,_,,,_3,,,_,,,K_,,,_M,:,Array,[,Array,[,Int,,,0X5D,],,,92,],),{,},},Class,_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_691(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{m(_,_,Rq_,I,O,e,_,__kV:Boolean ){}_(_,Z__2_92,_5a,u:N_;n_3,_,o,X_,H,_4O82:Array [Int ,0B110100]){} }Class a4:B{Constructor (b:_){} }''',
                '''Class,_,{,m,(,_,,,_,,,Rq_,,,I,,,O,,,e,,,_,,,__kV,:,Boolean,),{,},_,(,_,,,Z__2_92,,,_5a,,,u,:,N_,;,n_3,,,_,,,o,,,X_,,,H,,,_4O82,:,Array,[,Int,,,0B110100,],),{,},},Class,a4,:,B,{,Constructor,(,b,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_692(self):
        self.assertTrue(
            TestLexer.test(
                '''Class sKS_:Kg{$2K(___:_;k:Array [Array [Boolean ,0120],0B100001]){} }Class ___E59O{}Class _{}Class _{_5Z1_334(){Return ;}$O(h_:String ;NkG,l3:String ){ {} }}''',
                '''Class,sKS_,:,Kg,{,$2K,(,___,:,_,;,k,:,Array,[,Array,[,Boolean,,,0120,],,,0B100001,],),{,},},Class,___E59O,{,},Class,_,{,},Class,_,{,_5Z1_334,(,),{,Return,;,},$O,(,h_,:,String,;,NkG,,,l3,:,String,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_693(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n_{Var _,$3_jTX,_6_05:Array [Array [Float ,0xB3],17];Var $Yed__,nNLP,$kO:Array [Int ,0B1100001];}Class FD7{Var $Y,$____,_2__:Array [Array [Boolean ,59],047];}Class zt09:y6{}''',
                '''Class,n_,{,Var,_,,,$3_jTX,,,_6_05,:,Array,[,Array,[,Float,,,0xB3,],,,17,],;,Var,$Yed__,,,nNLP,,,$kO,:,Array,[,Int,,,0B1100001,],;,},Class,FD7,{,Var,$Y,,,$____,,,_2__,:,Array,[,Array,[,Boolean,,,59,],,,047,],;,},Class,zt09,:,y6,{,},<EOF>''',
                101
            )
        )

    def test_694(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x__64G:J_6q{}Class __{Constructor (_4:Array [Boolean ,024];d:_;C__:Array [Array [Array [Array [Array [Array [Array [Int ,024],8_08],4],0x45],03_2],0X20],45];B,J0,O1O:_Yc1e_;a,x_Q_:Int ;_:_l;__,IF:_;R3_:Int ){} }''',
                '''Class,x__64G,:,J_6q,{,},Class,__,{,Constructor,(,_4,:,Array,[,Boolean,,,024,],;,d,:,_,;,C__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,024,],,,808,],,,4,],,,0x45,],,,032,],,,0X20,],,,45,],;,B,,,J0,,,O1O,:,_Yc1e_,;,a,,,x_Q_,:,Int,;,_,:,_l,;,__,,,IF,:,_,;,R3_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_695(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2{Val $3,_,_,$_:Float ;}Class QZF{}Class u{$0(d1,_8_,_,b:Float ;F:Int ){Continue ;} }Class _:_{}Class __:_H_20{}''',
                '''Class,_2,{,Val,$3,,,_,,,_,,,$_,:,Float,;,},Class,QZF,{,},Class,u,{,$0,(,d1,,,_8_,,,_,,,b,:,Float,;,F,:,Int,),{,Continue,;,},},Class,_,:,_,{,},Class,__,:,_H_20,{,},<EOF>''',
                101
            )
        )

    def test_696(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Var $ab32:C76e_t;_(B__M:Int ;_:__n_4k2a){}Constructor (V,W2_7ai,L:_){}Var $2,$_:Int ;Destructor (){} }Class _V:q{$__(N:String ;y0,_:G){} }Class j:C_{}''',
                '''Class,__,:,_,{,Var,$ab32,:,C76e_t,;,_,(,B__M,:,Int,;,_,:,__n_4k2a,),{,},Constructor,(,V,,,W2_7ai,,,L,:,_,),{,},Var,$2,,,$_,:,Int,;,Destructor,(,),{,},},Class,_V,:,q,{,$__,(,N,:,String,;,y0,,,_,:,G,),{,},},Class,j,:,C_,{,},<EOF>''',
                101
            )
        )

    def test_697(self):
        self.assertTrue(
            TestLexer.test(
                '''Class eK_:_{Var _:String ;Destructor (){} }Class _:r_1P3{Val Os29,_,$c,_o3_,$7:Array [String ,0x58_E];}Class _19:C{}''',
                '''Class,eK_,:,_,{,Var,_,:,String,;,Destructor,(,),{,},},Class,_,:,r_1P3,{,Val,Os29,,,_,,,$c,,,_o3_,,,$7,:,Array,[,String,,,0x58E,],;,},Class,_19,:,C,{,},<EOF>''',
                101
            )
        )

    def test_698(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:_p{}Class _:C5{$3_3(_,U__5:Array [Array [Array [Int ,0X7],03_6_3],06];_:Int ;Zu,LF:Float ;P_3,U,_4_96:_;o9O67D_E,R,_,___3,TJ_,_,kr0_1xr:pE306;_194_uu,r:Array [String ,72]){} }''',
                '''Class,g,:,_p,{,},Class,_,:,C5,{,$3_3,(,_,,,U__5,:,Array,[,Array,[,Array,[,Int,,,0X7,],,,0363,],,,06,],;,_,:,Int,;,Zu,,,LF,:,Float,;,P_3,,,U,,,_4_96,:,_,;,o9O67D_E,,,R,,,_,,,___3,,,TJ_,,,_,,,kr0_1xr,:,pE306,;,_194_uu,,,r,:,Array,[,String,,,72,],),{,},},<EOF>''',
                101
            )
        )

    def test_699(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p:_{}Class G{Destructor (){}zL7(){Continue ;}Var _:_;Var $_:Array [Array [Array [Array [Array [String ,5],0xA4_41],0x27],7_09_3_91],2];}Class Q:t{}''',
                '''Class,p,:,_,{,},Class,G,{,Destructor,(,),{,},zL7,(,),{,Continue,;,},Var,_,:,_,;,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,5,],,,0xA441,],,,0x27,],,,709391,],,,2,],;,},Class,Q,:,t,{,},<EOF>''',
                101
            )
        )

    def test_700(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var H,$N92,$__,$8:Array [Array [Float ,22],0x42];Var $_:Array [Array [Boolean ,013_6],52];}Class _:A3{}Class IB{Val _5_:Float ;}''',
                '''Class,_,:,_,{,Var,H,,,$N92,,,$__,,,$8,:,Array,[,Array,[,Float,,,22,],,,0x42,],;,Var,$_,:,Array,[,Array,[,Boolean,,,0136,],,,52,],;,},Class,_,:,A3,{,},Class,IB,{,Val,_5_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_701(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vB_3:gz_H8{Constructor (D_6_:Int ){}Val __9,$2:Array [Array [String ,03],0b1];}Class B_v{}Class _{Destructor (){}Val _5Z:String ;}''',
                '''Class,vB_3,:,gz_H8,{,Constructor,(,D_6_,:,Int,),{,},Val,__9,,,$2,:,Array,[,Array,[,String,,,03,],,,0b1,],;,},Class,B_v,{,},Class,_,{,Destructor,(,),{,},Val,_5Z,:,String,;,},<EOF>''',
                101
            )
        )

    def test_702(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var z,$1,$n0:y;Destructor (){_n::$_();} }Class _:G_5{}Class __:HeoH_{Var $l,$8:U;Var $594,$F8,___,$_,_6:__e56;}''',
                '''Class,_,{,Var,z,,,$1,,,$n0,:,y,;,Destructor,(,),{,_n,::,$_,(,),;,},},Class,_,:,G_5,{,},Class,__,:,HeoH_,{,Var,$l,,,$8,:,U,;,Var,$594,,,$F8,,,___,,,$_,,,_6,:,__e56,;,},<EOF>''',
                101
            )
        )

    def test_703(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _9:_{}Class _:_7O{Constructor (K,_,_l:Array [Array [Float ,82],04];r,_,__,__,_V,_:J_79l;_6:Int ;g:Array [Array [String ,0x7],0xD_C4]){} }Class _2{}''',
                '''Class,_,{,},Class,_9,:,_,{,},Class,_,:,_7O,{,Constructor,(,K,,,_,,,_l,:,Array,[,Array,[,Float,,,82,],,,04,],;,r,,,_,,,__,,,__,,,_V,,,_,:,J_79l,;,_6,:,Int,;,g,:,Array,[,Array,[,String,,,0x7,],,,0xDC4,],),{,},},Class,_2,{,},<EOF>''',
                101
            )
        )

    def test_704(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_t,__,F_86,ef4,_:String ;a3_:Array [Int ,0XD]){} }Class Tg_{Constructor (Sp:Int ){}Val _l,$3H,$l,__,$__O:String ;Val __,$N3_,Q:_z1;Var $1_5_:Array [Array [Array [Array [Array [Int ,0XA],070],68],070],0B1100100];}''',
                '''Class,_,{,Constructor,(,_t,,,__,,,F_86,,,ef4,,,_,:,String,;,a3_,:,Array,[,Int,,,0XD,],),{,},},Class,Tg_,{,Constructor,(,Sp,:,Int,),{,},Val,_l,,,$3H,,,$l,,,__,,,$__O,:,String,;,Val,__,,,$N3_,,,Q,:,_z1,;,Var,$1_5_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XA,],,,070,],,,68,],,,070,],,,0B1100100,],;,},<EOF>''',
                101
            )
        )

    def test_705(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:r{Constructor (_:Array [Boolean ,0107]){}Val i:_7b;}Class __7:__P{Var _v_44,$gw1,S,$_,O,_,$yS,$6b_c7a,Xz:Array [Float ,01_3];Destructor (){}Destructor (){} }Class _RS__kW_2L{Constructor (){}Constructor (p5979tyk_29J:Float ;M2,T4,_:String ;q_955,w,___:Array [Array [Array [Int ,0B1_11],0b10111],5_8_8];G,S9,X,n,_,H_2,c_3,d:X9){} }Class _:tR{}''',
                '''Class,E,:,r,{,Constructor,(,_,:,Array,[,Boolean,,,0107,],),{,},Val,i,:,_7b,;,},Class,__7,:,__P,{,Var,_v_44,,,$gw1,,,S,,,$_,,,O,,,_,,,$yS,,,$6b_c7a,,,Xz,:,Array,[,Float,,,013,],;,Destructor,(,),{,},Destructor,(,),{,},},Class,_RS__kW_2L,{,Constructor,(,),{,},Constructor,(,p5979tyk_29J,:,Float,;,M2,,,T4,,,_,:,String,;,q_955,,,w,,,___,:,Array,[,Array,[,Array,[,Int,,,0B111,],,,0b10111,],,,588,],;,G,,,S9,,,X,,,n,,,_,,,H_2,,,c_3,,,d,:,X9,),{,},},Class,_,:,tR,{,},<EOF>''',
                101
            )
        )

    def test_706(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:M{}Class l352_:_{$Z(_,_3:Array [Float ,0b1100010]){}T9_(){_a7_::$tw0.gQ._._._.__().n()._._.m1();Var G2Dx_,_W,Q_c,_y,_:W_;{} }Val $_,$___S_q:Array [Float ,1];Constructor (T:String ){} }Class _3{}Class _:_{}Class _8:pd{Var _,$_N:__;}''',
                '''Class,_,:,M,{,},Class,l352_,:,_,{,$Z,(,_,,,_3,:,Array,[,Float,,,0b1100010,],),{,},T9_,(,),{,_a7_,::,$tw0,.,gQ,.,_,.,_,.,_,.,__,(,),.,n,(,),.,_,.,_,.,m1,(,),;,Var,G2Dx_,,,_W,,,Q_c,,,_y,,,_,:,W_,;,{,},},Val,$_,,,$___S_q,:,Array,[,Float,,,1,],;,Constructor,(,T,:,String,),{,},},Class,_3,{,},Class,_,:,_,{,},Class,_8,:,pd,{,Var,_,,,$_N,:,__,;,},<EOF>''',
                101
            )
        )

    def test_707(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:y__e1J{Constructor (S_,_2_:Int ;z5,EI,_:Array [Array [Array [Array [Array [Int ,7_0],0134],0676_44],0B1000000],02_2]){Break ;}Val $r,__,_70:Float ;Destructor (){} }Class _83_{}Class Uz:___{}''',
                '''Class,_,:,y__e1J,{,Constructor,(,S_,,,_2_,:,Int,;,z5,,,EI,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,70,],,,0134,],,,067644,],,,0B1000000,],,,022,],),{,Break,;,},Val,$r,,,__,,,_70,:,Float,;,Destructor,(,),{,},},Class,_83_,{,},Class,Uz,:,___,{,},<EOF>''',
                101
            )
        )

    def test_708(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_m{Var $1_,$5,rx_1,$105_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0xF],0103],0X44],0x50],07_2],7_4_5],02],0x5],0x50],0B1],2],01_1],0x17B_00CF_9],0X6],2];Constructor (){} }Class XB_{}Class _:_W{}''',
                '''Class,_,:,_m,{,Var,$1_,,,$5,,,rx_1,,,$105_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xF,],,,0103,],,,0X44,],,,0x50,],,,072,],,,745,],,,02,],,,0x5,],,,0x50,],,,0B1,],,,2,],,,011,],,,0x17B00CF9,],,,0X6,],,,2,],;,Constructor,(,),{,},},Class,XB_,{,},Class,_,:,_W,{,},<EOF>''',
                101
            )
        )

    def test_709(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i3_2Y3:C7{E__(){} }Class _300sm:_{}Class m:n{Val _,m,$_,$_8,$_e,_,J,$R,VQ,$v:__;}Class t_x{Destructor (){} }''',
                '''Class,i3_2Y3,:,C7,{,E__,(,),{,},},Class,_300sm,:,_,{,},Class,m,:,n,{,Val,_,,,m,,,$_,,,$_8,,,$_e,,,_,,,J,,,$R,,,VQ,,,$v,:,__,;,},Class,t_x,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_710(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___6_:_{}Class _8:_6{}Class _:_8{Constructor (___:_01I){} }Class _t{Constructor (HE4,_,C,__6:String ;_K_3_1,_:_nd;__:String ;lC9,_F:String ;yvU_:_){}__ks(_1n:Array [Float ,060];_:V13__;_:Array [Int ,0x6]){} }''',
                '''Class,___6_,:,_,{,},Class,_8,:,_6,{,},Class,_,:,_8,{,Constructor,(,___,:,_01I,),{,},},Class,_t,{,Constructor,(,HE4,,,_,,,C,,,__6,:,String,;,_K_3_1,,,_,:,_nd,;,__,:,String,;,lC9,,,_F,:,String,;,yvU_,:,_,),{,},__ks,(,_1n,:,Array,[,Float,,,060,],;,_,:,V13__,;,_,:,Array,[,Int,,,0x6,],),{,},},<EOF>''',
                101
            )
        )

    def test_711(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:C{}Class _{$1(_920Z:Float ;_:__;_n3B:Float ;__:Boolean ){} }Class _9mv:_{$G7y(u:_){Break ;Continue ;} }''',
                '''Class,_,:,C,{,},Class,_,{,$1,(,_920Z,:,Float,;,_,:,__,;,_n3B,:,Float,;,__,:,Boolean,),{,},},Class,_9mv,:,_,{,$G7y,(,u,:,_,),{,Break,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_712(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X{_(T,y:Int ;_8H:String ;_28__36:Array [Boolean ,0b10010]){}Var _5,_UQ39:Array [Array [Array [Float ,0x14],01_70_5_61],0B110110];}Class _:_{Constructor (K:Array [Int ,0x14];R7,_u,_,__,Y_,B4_r,lG:Array [Float ,4]){} }''',
                '''Class,_,:,X,{,_,(,T,,,y,:,Int,;,_8H,:,String,;,_28__36,:,Array,[,Boolean,,,0b10010,],),{,},Var,_5,,,_UQ39,:,Array,[,Array,[,Array,[,Float,,,0x14,],,,0170561,],,,0B110110,],;,},Class,_,:,_,{,Constructor,(,K,:,Array,[,Int,,,0x14,],;,R7,,,_u,,,_,,,__,,,Y_,,,B4_r,,,lG,:,Array,[,Float,,,4,],),{,},},<EOF>''',
                101
            )
        )

    def test_713(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{Destructor (){}U(B8___,__,__:b;_U:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0XB0F_D],3],91],8],3],3],076_5_5],07];_,_:Float ;a:_){} }''',
                '''Class,_8,{,Destructor,(,),{,},U,(,B8___,,,__,,,__,:,b,;,_U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XB0FD,],,,3,],,,91,],,,8,],,,3,],,,3,],,,07655,],,,07,],;,_,,,_,:,Float,;,a,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_714(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Lk:l{Var G54,$_,G0,H:D613V__;}Class Z_{Destructor (){} }Class _{Destructor (){Continue ;} }Class _5E:_d{}''',
                '''Class,_Lk,:,l,{,Var,G54,,,$_,,,G0,,,H,:,D613V__,;,},Class,Z_,{,Destructor,(,),{,},},Class,_,{,Destructor,(,),{,Continue,;,},},Class,_5E,:,_d,{,},<EOF>''',
                101
            )
        )

    def test_715(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c_{}Class g_:_{Val $1,$_6,i,$EN:___1;Val _:String ;Var $3ym9:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,02],0x89],0x94_D],0B1010],7],0X3C],0b110],0B1_1],0B1010],2],0X30];Var $9,$j:J_;}Class m_:__B{}Class xV{}Class G:r{}''',
                '''Class,c_,{,},Class,g_,:,_,{,Val,$1,,,$_6,,,i,,,$EN,:,___1,;,Val,_,:,String,;,Var,$3ym9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,02,],,,0x89,],,,0x94D,],,,0B1010,],,,7,],,,0X3C,],,,0b110,],,,0B11,],,,0B1010,],,,2,],,,0X30,],;,Var,$9,,,$j,:,J_,;,},Class,m_,:,__B,{,},Class,xV,{,},Class,G,:,r,{,},<EOF>''',
                101
            )
        )

    def test_716(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A_:_{}Class jd{Constructor (k:Float ;N,_,__:Array [Array [Float ,0X40],0b101011];_:_0_){Return ;} }Class _:uH{}''',
                '''Class,A_,:,_,{,},Class,jd,{,Constructor,(,k,:,Float,;,N,,,_,,,__,:,Array,[,Array,[,Float,,,0X40,],,,0b101011,],;,_,:,_0_,),{,Return,;,},},Class,_,:,uH,{,},<EOF>''',
                101
            )
        )

    def test_717(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:L{Var __:Array [Array [Array [Array [Array [Array [Boolean ,0B1_11],0107],49],0B1],4_82],0x2];Constructor (J9,_:T1){Return ;} }''',
                '''Class,_,:,L,{,Var,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B111,],,,0107,],,,49,],,,0B1,],,,482,],,,0x2,],;,Constructor,(,J9,,,_,:,T1,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_718(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ca:_5_{}Class Y_i:__Tw{}Class _K_{__t(R,__r729:_a;PQ:String ;_,R,T8:_;_:_4){}Constructor (_,Z,sW,E,_:Array [Array [Array [Int ,03],0b1_1],72];_Pe,s:a){} }Class _{}''',
                '''Class,ca,:,_5_,{,},Class,Y_i,:,__Tw,{,},Class,_K_,{,__t,(,R,,,__r729,:,_a,;,PQ,:,String,;,_,,,R,,,T8,:,_,;,_,:,_4,),{,},Constructor,(,_,,,Z,,,sW,,,E,,,_,:,Array,[,Array,[,Array,[,Int,,,03,],,,0b11,],,,72,],;,_Pe,,,s,:,a,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_719(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_Qf_{Val jp,_,l_8:_;}Class B:H{Destructor (){Var L29:Array [Array [Array [String ,02],06_21],6];} }Class _:bZ_{}''',
                '''Class,_,:,_Qf_,{,Val,jp,,,_,,,l_8,:,_,;,},Class,B,:,H,{,Destructor,(,),{,Var,L29,:,Array,[,Array,[,Array,[,String,,,02,],,,0621,],,,6,],;,},},Class,_,:,bZ_,{,},<EOF>''',
                101
            )
        )

    def test_720(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t4:_j{Constructor (){Var _8_:Array [Float ,90];} }Class _{}Class d62{}Class ___:_{}Class _mF{Constructor (){} }Class _{Var _7,O,W:Array [Array [Int ,03],025];Var $6B_,_49,$G:Int ;}''',
                '''Class,t4,:,_j,{,Constructor,(,),{,Var,_8_,:,Array,[,Float,,,90,],;,},},Class,_,{,},Class,d62,{,},Class,___,:,_,{,},Class,_mF,{,Constructor,(,),{,},},Class,_,{,Var,_7,,,O,,,W,:,Array,[,Array,[,Int,,,03,],,,025,],;,Var,$6B_,,,_49,,,$G,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_721(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B0:g{Var $_:Array [Float ,046];}Class d{Destructor (){_Z_3E::$_();Continue ;}Val $M64_,_,_Y_:Array [String ,85];Var L,_c__:Int ;Val __,$_,$R9H3,j:Boolean ;}Class D7:D{}Class b:_{}''',
                '''Class,B0,:,g,{,Var,$_,:,Array,[,Float,,,046,],;,},Class,d,{,Destructor,(,),{,_Z_3E,::,$_,(,),;,Continue,;,},Val,$M64_,,,_,,,_Y_,:,Array,[,String,,,85,],;,Var,L,,,_c__,:,Int,;,Val,__,,,$_,,,$R9H3,,,j,:,Boolean,;,},Class,D7,:,D,{,},Class,b,:,_,{,},<EOF>''',
                101
            )
        )

    def test_722(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:nK_Pa{Var $L4:Array [Array [Int ,0xB_4E_3],0B1101];Val _:D;Var i1:Array [Array [String ,062],0B1_00];}Class _:q2E{}''',
                '''Class,v,:,nK_Pa,{,Var,$L4,:,Array,[,Array,[,Int,,,0xB4E3,],,,0B1101,],;,Val,_,:,D,;,Var,i1,:,Array,[,Array,[,String,,,062,],,,0B100,],;,},Class,_,:,q2E,{,},<EOF>''',
                101
            )
        )

    def test_723(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_3__:_{Destructor (){}Val $71F66:Float ;}Class hY{__(_tI:String ;U__,_,_:__B;u4,_,W:Array [Array [Array [Array [Array [Boolean ,0B1],0x45],01_7],89],8_92];_7:Int ){} }''',
                '''Class,h_3__,:,_,{,Destructor,(,),{,},Val,$71F66,:,Float,;,},Class,hY,{,__,(,_tI,:,String,;,U__,,,_,,,_,:,__B,;,u4,,,_,,,W,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0x45,],,,017,],,,89,],,,892,],;,_7,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_724(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:I{}Class _:E{Var $_:Array [Array [Boolean ,64],0507_1_7];_(d:Array [Array [Array [Boolean ,0x6],64],0X45];sM:_U){Continue ;} }Class f_:Y3{}Class _G:_{}''',
                '''Class,___,:,I,{,},Class,_,:,E,{,Var,$_,:,Array,[,Array,[,Boolean,,,64,],,,050717,],;,_,(,d,:,Array,[,Array,[,Array,[,Boolean,,,0x6,],,,64,],,,0X45,],;,sM,:,_U,),{,Continue,;,},},Class,f_,:,Y3,{,},Class,_G,:,_,{,},<EOF>''',
                101
            )
        )

    def test_725(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p__{Constructor (){}Constructor (d:Array [Array [Array [Int ,032],064],0X10];_:Boolean ;_3:Boolean ){}Var $68,$_:String ;}Class __q:_{}Class __401_{}Class _{Constructor (H,_,_,_,_8:Array [Array [Array [Array [Float ,0B100_110_1],0xA],0b1],0B1010010];W_9:Array [String ,0b1110]){}Val $_1__:__;Var $2U_,$6j:Float ;}''',
                '''Class,p__,{,Constructor,(,),{,},Constructor,(,d,:,Array,[,Array,[,Array,[,Int,,,032,],,,064,],,,0X10,],;,_,:,Boolean,;,_3,:,Boolean,),{,},Var,$68,,,$_,:,String,;,},Class,__q,:,_,{,},Class,__401_,{,},Class,_,{,Constructor,(,H,,,_,,,_,,,_,,,_8,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1001101,],,,0xA,],,,0b1,],,,0B1010010,],;,W_9,:,Array,[,String,,,0b1110,],),{,},Val,$_1__,:,__,;,Var,$2U_,,,$6j,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_726(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V8:_{}Class BG9{Val $59_8:String ;}Class _{}Class D:__9{}Class f{Destructor (){Var A,_9b:Int ;Var _cfN:zl;} }''',
                '''Class,V8,:,_,{,},Class,BG9,{,Val,$59_8,:,String,;,},Class,_,{,},Class,D,:,__9,{,},Class,f,{,Destructor,(,),{,Var,A,,,_9b,:,Int,;,Var,_cfN,:,zl,;,},},<EOF>''',
                101
            )
        )

    def test_727(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3{Var $_xy,$j,$Y:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,040_0],74],74],0B1100_1],0X3],74],0X4D],94_7_2],74],057],0b1],0X4D];$d(_:Int ){} }''',
                '''Class,_3,{,Var,$_xy,,,$j,,,$Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0400,],,,74,],,,74,],,,0B11001,],,,0X3,],,,74,],,,0X4D,],,,9472,],,,74,],,,057,],,,0b1,],,,0X4D,],;,$d,(,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_728(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s_{$4(){} }Class Qg{Var $_:_;}Class ___:x{}Class c_M:__{Var _3,_t,$___:D_;$_Ez(){}Val Mb:Array [Int ,0b1_0];Var _w_uj,$4:String ;}''',
                '''Class,s_,{,$4,(,),{,},},Class,Qg,{,Var,$_,:,_,;,},Class,___,:,x,{,},Class,c_M,:,__,{,Var,_3,,,_t,,,$___,:,D_,;,$_Ez,(,),{,},Val,Mb,:,Array,[,Int,,,0b10,],;,Var,_w_uj,,,$4,:,String,;,},<EOF>''',
                101
            )
        )

    def test_729(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:AZ{}Class _o8{Constructor (J9_,s3v,__5,_1:_;_,_,_z44_,_35N_0_aO_y,sr,_,_:_){} }Class _3:N__z_2_hJ{}Class F{Constructor (){} }Class _EFw{}''',
                '''Class,f,:,AZ,{,},Class,_o8,{,Constructor,(,J9_,,,s3v,,,__5,,,_1,:,_,;,_,,,_,,,_z44_,,,_35N_0_aO_y,,,sr,,,_,,,_,:,_,),{,},},Class,_3,:,N__z_2_hJ,{,},Class,F,{,Constructor,(,),{,},},Class,_EFw,{,},<EOF>''',
                101
            )
        )

    def test_730(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Constructor (__:t_;___,m,u,_,_D6___,B:Array [Float ,0X5]){} }Class b{Var N_,v:_8;}Class _{Destructor (){} }''',
                '''Class,___,{,Constructor,(,__,:,t_,;,___,,,m,,,u,,,_,,,_D6___,,,B,:,Array,[,Float,,,0X5,],),{,},},Class,b,{,Var,N_,,,v,:,_8,;,},Class,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_731(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _J{$i(_,N3,R__1,b:Array [Array [Int ,02],0X2A];Y_,_:Array [Array [Boolean ,48],2];Z5Y,_,_,___3___G_,h,_:O){} }''',
                '''Class,_J,{,$i,(,_,,,N3,,,R__1,,,b,:,Array,[,Array,[,Int,,,02,],,,0X2A,],;,Y_,,,_,:,Array,[,Array,[,Boolean,,,48,],,,2,],;,Z5Y,,,_,,,_,,,___3___G_,,,h,,,_,:,O,),{,},},<EOF>''',
                101
            )
        )

    def test_732(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class h{}Class S:nY{}Class x{$__4(sZW__,___7:Boolean ;_r8_:__;M,_f,_,F:A;_,_79_U6J:Float ){} }Class _{}''',
                '''Class,_,{,},Class,h,{,},Class,S,:,nY,{,},Class,x,{,$__4,(,sZW__,,,___7,:,Boolean,;,_r8_,:,__,;,M,,,_f,,,_,,,F,:,A,;,_,,,_79_U6J,:,Float,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_733(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Q_{Constructor (H0:Boolean ;_:Int ;rd,Y:Array [String ,0X8_052]){}$66j_(X__2_T:Int ;_36,t_c,_,_:Array [Array [Float ,0XE4],98];P1,_,__,p__l0Z_N:Array [Boolean ,066]){} }''',
                '''Class,_Q_,{,Constructor,(,H0,:,Boolean,;,_,:,Int,;,rd,,,Y,:,Array,[,String,,,0X8052,],),{,},$66j_,(,X__2_T,:,Int,;,_36,,,t_c,,,_,,,_,:,Array,[,Array,[,Float,,,0XE4,],,,98,],;,P1,,,_,,,__,,,p__l0Z_N,:,Array,[,Boolean,,,066,],),{,},},<EOF>''',
                101
            )
        )

    def test_734(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:o{Val $5,$VS_6_g,$_,$7,$_L,$t,_,$071,_9_,m:Int ;Constructor (){} }Class z:__MN4{Destructor (){} }Class h{}''',
                '''Class,_,:,o,{,Val,$5,,,$VS_6_g,,,$_,,,$7,,,$_L,,,$t,,,_,,,$071,,,_9_,,,m,:,Int,;,Constructor,(,),{,},},Class,z,:,__MN4,{,Destructor,(,),{,},},Class,h,{,},<EOF>''',
                101
            )
        )

    def test_735(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R___:U{$Z(_4_,_P_,_,__84_,u,xH:Array [Array [Float ,5],9];__:Int ;_1,s6,_,rp,_Lh1Z,v_:_;_:Array [Array [Float ,39],39];_,__:Float ;___X_:Array [Array [Array [Array [Array [Array [Int ,03_3_6],0B1],0xD_0],011],05],011]){} }Class _:_{}''',
                '''Class,R___,:,U,{,$Z,(,_4_,,,_P_,,,_,,,__84_,,,u,,,xH,:,Array,[,Array,[,Float,,,5,],,,9,],;,__,:,Int,;,_1,,,s6,,,_,,,rp,,,_Lh1Z,,,v_,:,_,;,_,:,Array,[,Array,[,Float,,,39,],,,39,],;,_,,,__,:,Float,;,___X_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0336,],,,0B1,],,,0xD0,],,,011,],,,05,],,,011,],),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_736(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Val $Dl27__,u,$C,$s,__:Float ;Val $g__:Int ;Val _,$I3:LJX;Destructor (){}Val $__o,_:_;}Class j:a78{}''',
                '''Class,___,{,Val,$Dl27__,,,u,,,$C,,,$s,,,__,:,Float,;,Val,$g__,:,Int,;,Val,_,,,$I3,:,LJX,;,Destructor,(,),{,},Val,$__o,,,_,:,_,;,},Class,j,:,a78,{,},<EOF>''',
                101
            )
        )

    def test_737(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{Constructor (A,_,_,N7:Array [Array [Array [Float ,0x5E],0X56],016];_9LW2:MQ;_:_6_;_Z_,_:Array [Boolean ,0b1011000]){Continue ;}Val $1:Int ;}''',
                '''Class,E,{,Constructor,(,A,,,_,,,_,,,N7,:,Array,[,Array,[,Array,[,Float,,,0x5E,],,,0X56,],,,016,],;,_9LW2,:,MQ,;,_,:,_6_,;,_Z_,,,_,:,Array,[,Boolean,,,0b1011000,],),{,Continue,;,},Val,$1,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_738(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5{Val t__47:Array [String ,0106];}Class _{_(__:Array [Array [String ,0X4A],010];_,E,_:String ;_93y:Float ;Ka_:T){} }Class _:A{}Class i0T{$z2(){Var e2:Array [Array [Int ,3],04];} }Class _:_{}''',
                '''Class,_5,{,Val,t__47,:,Array,[,String,,,0106,],;,},Class,_,{,_,(,__,:,Array,[,Array,[,String,,,0X4A,],,,010,],;,_,,,E,,,_,:,String,;,_93y,:,Float,;,Ka_,:,T,),{,},},Class,_,:,A,{,},Class,i0T,{,$z2,(,),{,Var,e2,:,Array,[,Array,[,Int,,,3,],,,04,],;,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_739(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v{}Class _4:__K2{Val $_7_:Array [Array [Array [Array [Array [Array [Float ,0X7E],0b1000111],47],077],0x5A],0XA];}Class i:_gs{}''',
                '''Class,_v,{,},Class,_4,:,__K2,{,Val,$_7_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X7E,],,,0b1000111,],,,47,],,,077,],,,0x5A,],,,0XA,],;,},Class,i,:,_gs,{,},<EOF>''',
                101
            )
        )

    def test_740(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:D1X_{Var _:Array [Array [Array [Array [Array [Int ,0x4D],0B1011010],0X3],5],23]=!U::$1()._Q;}Class _g{Constructor (){} }Class m{Destructor (){Continue ;}Val $M,n_6,__U:String ;Constructor (){}Destructor (){} }''',
                '''Class,_,:,D1X_,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x4D,],,,0B1011010,],,,0X3,],,,5,],,,23,],=,!,U,::,$1,(,),.,_Q,;,},Class,_g,{,Constructor,(,),{,},},Class,m,{,Destructor,(,),{,Continue,;,},Val,$M,,,n_6,,,__U,:,String,;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_741(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T8{}Class _4_19{}Class k0{Val $_,m,_L_,$_:Array [Array [Array [Float ,0b110101],7_7],0XD];$9(_,Z05:_){}Constructor (_j,J_Ap,K3I_c,f:Boolean ){}$_9(Y3,_0,U_,l_0,R___295,gE,_0:_7;A:__){}Var $a_,CE:Boolean ;}Class _{Constructor (_8:Float ){} }''',
                '''Class,T8,{,},Class,_4_19,{,},Class,k0,{,Val,$_,,,m,,,_L_,,,$_,:,Array,[,Array,[,Array,[,Float,,,0b110101,],,,77,],,,0XD,],;,$9,(,_,,,Z05,:,_,),{,},Constructor,(,_j,,,J_Ap,,,K3I_c,,,f,:,Boolean,),{,},$_9,(,Y3,,,_0,,,U_,,,l_0,,,R___295,,,gE,,,_0,:,_7,;,A,:,__,),{,},Var,$a_,,,CE,:,Boolean,;,},Class,_,{,Constructor,(,_8,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_742(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ao:v{$56B(__:Array [Array [String ,0x5A],0X12];e6,_:Array [Float ,0B1];h:_;D,_,_,_:Array [Array [Array [Int ,0B1],0X12],0x9E5];_K,_:Int ){Var a:Array [Array [String ,4],0B1];Continue ;} }Class L_6:_u{}''',
                '''Class,Ao,:,v,{,$56B,(,__,:,Array,[,Array,[,String,,,0x5A,],,,0X12,],;,e6,,,_,:,Array,[,Float,,,0B1,],;,h,:,_,;,D,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,0X12,],,,0x9E5,],;,_K,,,_,:,Int,),{,Var,a,:,Array,[,Array,[,String,,,4,],,,0B1,],;,Continue,;,},},Class,L_6,:,_u,{,},<EOF>''',
                101
            )
        )

    def test_743(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _p_x8:_g506{Val $_,$_:Array [Int ,5];$7(_:Array [Boolean ,012]){Return ;}Constructor (){}__b626(_,PeD:Int ;v:Array [Array [Array [Array [String ,012],0b1],0B10],60]){} }Class __:E_{}''',
                '''Class,_p_x8,:,_g506,{,Val,$_,,,$_,:,Array,[,Int,,,5,],;,$7,(,_,:,Array,[,Boolean,,,012,],),{,Return,;,},Constructor,(,),{,},__b626,(,_,,,PeD,:,Int,;,v,:,Array,[,Array,[,Array,[,Array,[,String,,,012,],,,0b1,],,,0B10,],,,60,],),{,},},Class,__,:,E_,{,},<EOF>''',
                101
            )
        )

    def test_744(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (J6__96:String ;u,_35d:Int ;o,_zN,_,__,_1_50,p,_,_:Array [Array [Boolean ,15],0110]){}Destructor (){}Var _N_:Float ;}Class k:_{$4C(_,x,_9:Int ;kj,e,_:Array [Array [Array [Array [String ,0b111010],15],0b111010],0X10]){} }''',
                '''Class,_,{,Constructor,(,J6__96,:,String,;,u,,,_35d,:,Int,;,o,,,_zN,,,_,,,__,,,_1_50,,,p,,,_,,,_,:,Array,[,Array,[,Boolean,,,15,],,,0110,],),{,},Destructor,(,),{,},Var,_N_,:,Float,;,},Class,k,:,_,{,$4C,(,_,,,x,,,_9,:,Int,;,kj,,,e,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b111010,],,,15,],,,0b111010,],,,0X10,],),{,},},<EOF>''',
                101
            )
        )

    def test_745(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __9E{$A_x(){}$_(V4e,_9_:E;_:_1){} }Class D4:M_{Destructor (){}Constructor (_,p,__:Array [Array [Array [Array [Array [Array [Float ,0x41],85],067],0B11],0x42],0B11];_1_:_){} }''',
                '''Class,__9E,{,$A_x,(,),{,},$_,(,V4e,,,_9_,:,E,;,_,:,_1,),{,},},Class,D4,:,M_,{,Destructor,(,),{,},Constructor,(,_,,,p,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x41,],,,85,],,,067,],,,0B11,],,,0x42,],,,0B11,],;,_1_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_746(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:_{Var __:Array [Array [Array [Float ,16],03],0B1];Constructor (_2,i_B_,__9:Array [Array [Array [Array [String ,2_2],06],0X38],7_81]){} }Class s_4_{}Class OH:Y4{}Class _{}''',
                '''Class,o,:,_,{,Var,__,:,Array,[,Array,[,Array,[,Float,,,16,],,,03,],,,0B1,],;,Constructor,(,_2,,,i_B_,,,__9,:,Array,[,Array,[,Array,[,Array,[,String,,,22,],,,06,],,,0X38,],,,781,],),{,},},Class,s_4_,{,},Class,OH,:,Y4,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_747(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{Constructor (S__h_W:Array [Array [Array [Boolean ,06_16_6],39],1];U,_:Array [Array [Boolean ,0b1],066]){Continue ;} }''',
                '''Class,_1,{,Constructor,(,S__h_W,:,Array,[,Array,[,Array,[,Boolean,,,06166,],,,39,],,,1,],;,U,,,_,:,Array,[,Array,[,Boolean,,,0b1,],,,066,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_748(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i_F0{Val r,l:Array [Array [Boolean ,02_2],0B10];}Class V4{}Class nY{$9_(){} }Class K:O{Var $_16:y;}Class _{}''',
                '''Class,i_F0,{,Val,r,,,l,:,Array,[,Array,[,Boolean,,,022,],,,0B10,],;,},Class,V4,{,},Class,nY,{,$9_,(,),{,},},Class,K,:,O,{,Var,$_16,:,y,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_749(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{Constructor (_db54:x;n,_,A,_:__;_8:Array [Array [Boolean ,0X6],0b1]){} }Class _:_{Val $0,$o2:String ;}''',
                '''Class,x,{,Constructor,(,_db54,:,x,;,n,,,_,,,A,,,_,:,__,;,_8,:,Array,[,Array,[,Boolean,,,0X6,],,,0b1,],),{,},},Class,_,:,_,{,Val,$0,,,$o2,:,String,;,},<EOF>''',
                101
            )
        )

    def test_750(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _uT8:a{}Class _P{$B(a,m:Array [Int ,01_53_73];k5g__:Float ;I:Array [Array [Array [Array [Int ,9_9_1630],0x5],0b1],05_214];_:_;uqu,t_:Boolean ;_:S){}__0(){} }Class x:_9{}''',
                '''Class,_uT8,:,a,{,},Class,_P,{,$B,(,a,,,m,:,Array,[,Int,,,015373,],;,k5g__,:,Float,;,I,:,Array,[,Array,[,Array,[,Array,[,Int,,,991630,],,,0x5,],,,0b1,],,,05214,],;,_,:,_,;,uqu,,,t_,:,Boolean,;,_,:,S,),{,},__0,(,),{,},},Class,x,:,_9,{,},<EOF>''',
                101
            )
        )

    def test_751(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class s{u_F(Uq,K:Q){}Var __k:_;Destructor (){}Var $7,$_,$2,$t7:Array [Array [Array [Float ,2],01],0B1_10];}''',
                '''Class,_,{,},Class,s,{,u_F,(,Uq,,,K,:,Q,),{,},Var,__k,:,_,;,Destructor,(,),{,},Var,$7,,,$_,,,$2,,,$t7,:,Array,[,Array,[,Array,[,Float,,,2,],,,01,],,,0B110,],;,},<EOF>''',
                101
            )
        )

    def test_752(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{Destructor (){}Val M:Array [Array [Array [Array [Int ,06],06_03_01],6],0x52];}Class C{}Class R{Var Ym_3:N;}Class _v__G:j{}''',
                '''Class,_9,{,Destructor,(,),{,},Val,M,:,Array,[,Array,[,Array,[,Array,[,Int,,,06,],,,060301,],,,6,],,,0x52,],;,},Class,C,{,},Class,R,{,Var,Ym_3,:,N,;,},Class,_v__G,:,j,{,},<EOF>''',
                101
            )
        )

    def test_753(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_8{}Class _{$R__0(__:Array [Float ,4];n,_XZ:Array [Array [Int ,57],6];_,GC:Array [Array [Array [Float ,056_573],037],0b1]){Break ;Break ;}Var _w4:Boolean ;Var H,$q9:_;}''',
                '''Class,z,:,_8,{,},Class,_,{,$R__0,(,__,:,Array,[,Float,,,4,],;,n,,,_XZ,:,Array,[,Array,[,Int,,,57,],,,6,],;,_,,,GC,:,Array,[,Array,[,Array,[,Float,,,056573,],,,037,],,,0b1,],),{,Break,;,Break,;,},Var,_w4,:,Boolean,;,Var,H,,,$q9,:,_,;,},<EOF>''',
                101
            )
        )

    def test_754(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:_{Destructor (){}Destructor (){}Destructor (){}Var $Bz0I,a_:q63;Val _,$4Q,$__:Array [Boolean ,07_240];}''',
                '''Class,F,:,_,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Var,$Bz0I,,,a_,:,q63,;,Val,_,,,$4Q,,,$__,:,Array,[,Boolean,,,07240,],;,},<EOF>''',
                101
            )
        )

    def test_755(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N81_9:__I{$_(){ {Break ;} }Val $a18_:Array [Array [Array [Array [Array [Array [Boolean ,0x2],3],0X17],0b11110],071],23];}Class U{b(P:uT;j7,I,k3_,c,_47y_XE4x___:Int ;_:o2L333b){}Var _9_:_;}Class _:Z{Destructor (){} }Class wZ1:_{Val $P8L72x7,Gd:k;Val $_9,Y,$__,$5S3:Array [Array [Int ,6],6];Val _TY,W8:_F;Var zz6:Float ;}''',
                '''Class,N81_9,:,__I,{,$_,(,),{,{,Break,;,},},Val,$a18_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x2,],,,3,],,,0X17,],,,0b11110,],,,071,],,,23,],;,},Class,U,{,b,(,P,:,uT,;,j7,,,I,,,k3_,,,c,,,_47y_XE4x___,:,Int,;,_,:,o2L333b,),{,},Var,_9_,:,_,;,},Class,_,:,Z,{,Destructor,(,),{,},},Class,wZ1,:,_,{,Val,$P8L72x7,,,Gd,:,k,;,Val,$_9,,,Y,,,$__,,,$5S3,:,Array,[,Array,[,Int,,,6,],,,6,],;,Val,_TY,,,W8,:,_F,;,Var,zz6,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_756(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:A_Y{}Class r:Lj__{Var $_,$_9:_8;Var I:Array [Array [Array [Array [Boolean ,0B1_0],0X6],0x5_34],0B100111];Var y_,$T8,__:Array [Array [Float ,033216_0],076];L8Y(){}Destructor (){Continue ;}Constructor (_,t:Array [String ,46];S,W_A_,j_:Boolean ;_:Array [Int ,076];_,_,A,_,M,p,_:_;R,__:String ){} }Class s{}''',
                '''Class,_,:,A_Y,{,},Class,r,:,Lj__,{,Var,$_,,,$_9,:,_8,;,Var,I,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10,],,,0X6,],,,0x534,],,,0B100111,],;,Var,y_,,,$T8,,,__,:,Array,[,Array,[,Float,,,0332160,],,,076,],;,L8Y,(,),{,},Destructor,(,),{,Continue,;,},Constructor,(,_,,,t,:,Array,[,String,,,46,],;,S,,,W_A_,,,j_,:,Boolean,;,_,:,Array,[,Int,,,076,],;,_,,,_,,,A,,,_,,,M,,,p,,,_,:,_,;,R,,,__,:,String,),{,},},Class,s,{,},<EOF>''',
                101
            )
        )

    def test_757(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y_1:_{}Class M3:_l_2f{Constructor (_,_At,_:Int ){} }Class U_{}Class _5x:U{}Class _{_(Jk:_){Continue ;} }Class _{}Class Q6{}''',
                '''Class,y_1,:,_,{,},Class,M3,:,_l_2f,{,Constructor,(,_,,,_At,,,_,:,Int,),{,},},Class,U_,{,},Class,_5x,:,U,{,},Class,_,{,_,(,Jk,:,_,),{,Continue,;,},},Class,_,{,},Class,Q6,{,},<EOF>''',
                101
            )
        )

    def test_758(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Constructor (_Qv:Boolean ){ {} }}Class Ha1:_C{Destructor (){} }Class QC:l{}Class _:m{Var $_:Array [Int ,0102];}''',
                '''Class,__,:,_,{,Constructor,(,_Qv,:,Boolean,),{,{,},},},Class,Ha1,:,_C,{,Destructor,(,),{,},},Class,QC,:,l,{,},Class,_,:,m,{,Var,$_,:,Array,[,Int,,,0102,],;,},<EOF>''',
                101
            )
        )

    def test_759(self):
        self.assertTrue(
            TestLexer.test(
                '''Class qQ_E0:t4{_(WK:Array [Array [Int ,067],0b1];__X,_O:Array [Array [Array [Array [Array [Array [Boolean ,37],067],0B1010100],067],57],0X1]){} }''',
                '''Class,qQ_E0,:,t4,{,_,(,WK,:,Array,[,Array,[,Int,,,067,],,,0b1,],;,__X,,,_O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,37,],,,067,],,,0B1010100,],,,067,],,,57,],,,0X1,],),{,},},<EOF>''',
                101
            )
        )

    def test_760(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X{Val $N,G8y6:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,70],0b1],0132],0132],062],0B1],0b11],0132],0132];Destructor (){Break ;{ {} }Break ;} }Class _:L{}''',
                '''Class,_,:,X,{,Val,$N,,,G8y6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,70,],,,0b1,],,,0132,],,,0132,],,,062,],,,0B1,],,,0b11,],,,0132,],,,0132,],;,Destructor,(,),{,Break,;,{,{,},},Break,;,},},Class,_,:,L,{,},<EOF>''',
                101
            )
        )

    def test_761(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:fy{Val _7:String ;}Class _:__{}Class e_S_:_90r{Var $H_Z,s:_;Val $_q:IzD9R;Var $_Y,U_,t:Array [Float ,0x5];}''',
                '''Class,_,:,fy,{,Val,_7,:,String,;,},Class,_,:,__,{,},Class,e_S_,:,_90r,{,Var,$H_Z,,,s,:,_,;,Val,$_q,:,IzD9R,;,Var,$_Y,,,U_,,,t,:,Array,[,Float,,,0x5,],;,},<EOF>''',
                101
            )
        )

    def test_762(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{$P99_(e:Boolean ;_,_3:q9_;i_:Array [Int ,0x9];k2,_6:ym;y_:Array [Boolean ,3_79];A_2:j_9){}$Q_(){Break ;Continue ;Var __h__,SHt:e;} }''',
                '''Class,__,{,$P99_,(,e,:,Boolean,;,_,,,_3,:,q9_,;,i_,:,Array,[,Int,,,0x9,],;,k2,,,_6,:,ym,;,y_,:,Array,[,Boolean,,,379,],;,A_2,:,j_9,),{,},$Q_,(,),{,Break,;,Continue,;,Var,__h__,,,SHt,:,e,;,},},<EOF>''',
                101
            )
        )

    def test_763(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class Q:_9_q74gS{Val H,G_f6_W,_,__67,_,$GE6,$D4ZvA1,$9J,$_W,$_:Int ;}Class _{Val _,__:Array [Array [String ,6],0b1011];}Class O{}''',
                '''Class,_,{,},Class,Q,:,_9_q74gS,{,Val,H,,,G_f6_W,,,_,,,__67,,,_,,,$GE6,,,$D4ZvA1,,,$9J,,,$_W,,,$_,:,Int,;,},Class,_,{,Val,_,,,__,:,Array,[,Array,[,String,,,6,],,,0b1011,],;,},Class,O,{,},<EOF>''',
                101
            )
        )

    def test_764(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q5:_{}Class _:_{Val _Lg:Array [Boolean ,05];__(__,_:Array [Int ,85];_,__,T:a6){}$7(){}Val $5:_;Destructor (){} }Class Y9:p{}''',
                '''Class,q5,:,_,{,},Class,_,:,_,{,Val,_Lg,:,Array,[,Boolean,,,05,],;,__,(,__,,,_,:,Array,[,Int,,,85,],;,_,,,__,,,T,:,a6,),{,},$7,(,),{,},Val,$5,:,_,;,Destructor,(,),{,},},Class,Y9,:,p,{,},<EOF>''',
                101
            )
        )

    def test_765(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _55BQ{Var $0_5,_Z_,__g2,_5,q,$E_6_:String ;Destructor (){}Var m,$Y,_5_:Boolean ;}Class v_3:_X46c{}Class o:e{}''',
                '''Class,_55BQ,{,Var,$0_5,,,_Z_,,,__g2,,,_5,,,q,,,$E_6_,:,String,;,Destructor,(,),{,},Var,m,,,$Y,,,_5_,:,Boolean,;,},Class,v_3,:,_X46c,{,},Class,o,:,e,{,},<EOF>''',
                101
            )
        )

    def test_766(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C{__5(L6,_9_,_:Array [String ,0x48];aG:Float ;__:Boolean ;_,GG:A){Continue ;}Destructor (){} }Class _{}Class W_:P{}Class _N:D{}Class F{}Class u{}''',
                '''Class,C,{,__5,(,L6,,,_9_,,,_,:,Array,[,String,,,0x48,],;,aG,:,Float,;,__,:,Boolean,;,_,,,GG,:,A,),{,Continue,;,},Destructor,(,),{,},},Class,_,{,},Class,W_,:,P,{,},Class,_N,:,D,{,},Class,F,{,},Class,u,{,},<EOF>''',
                101
            )
        )

    def test_767(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:_{Constructor (V__8___,_G6_:__;_:__;_:Float ;_,X,_As,oiu:Array [Boolean ,0367_3];S,C:Float ){} }Class _{}''',
                '''Class,T,:,_,{,Constructor,(,V__8___,,,_G6_,:,__,;,_,:,__,;,_,:,Float,;,_,,,X,,,_As,,,oiu,:,Array,[,Boolean,,,03673,],;,S,,,C,:,Float,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_768(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Yl69F{Constructor (_5,k,_,a38_,R:Float ){Return ;}Constructor (Mg:Array [Array [Int ,0X8],60];_,u_:Array [Boolean ,06]){} }Class D6{}Class w:_6_K1_{}''',
                '''Class,Yl69F,{,Constructor,(,_5,,,k,,,_,,,a38_,,,R,:,Float,),{,Return,;,},Constructor,(,Mg,:,Array,[,Array,[,Int,,,0X8,],,,60,],;,_,,,u_,:,Array,[,Boolean,,,06,],),{,},},Class,D6,{,},Class,w,:,_6_K1_,{,},<EOF>''',
                101
            )
        )

    def test_769(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P_8U:O{Var $278,F:Array [Int ,0b1001111];$_7(){Null .B9().H()._._._();}_(cI:_92){Continue ;}Destructor (){Return ;} }''',
                '''Class,P_8U,:,O,{,Var,$278,,,F,:,Array,[,Int,,,0b1001111,],;,$_7,(,),{,Null,.,B9,(,),.,H,(,),.,_,.,_,.,_,(,),;,},_,(,cI,:,_92,),{,Continue,;,},Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_770(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k5{$4(__,J_6:String ;_1Tx_3,EP,S_,i:X;_,_:Array [Array [Array [Float ,0X1B],07_4_3],06];_1_:Int ;M:Array [Array [Array [Array [Int ,01],0XE],0B10000],064];_:Boolean ;m1,I_c,__6_:Int ){ {} }}''',
                '''Class,k5,{,$4,(,__,,,J_6,:,String,;,_1Tx_3,,,EP,,,S_,,,i,:,X,;,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0X1B,],,,0743,],,,06,],;,_1_,:,Int,;,M,:,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,0XE,],,,0B10000,],,,064,],;,_,:,Boolean,;,m1,,,I_c,,,__6_,:,Int,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_771(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_2:_{Constructor (v,F:_;____,_40,wQ_:y;m24_d8_:_;__0,_:Array [Array [Array [Boolean ,0B10_0],0X29],0b1_1_0]){} }Class _m:_A3y_{}Class _t25{}Class __F{}Class G{}''',
                '''Class,k_2,:,_,{,Constructor,(,v,,,F,:,_,;,____,,,_40,,,wQ_,:,y,;,m24_d8_,:,_,;,__0,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0B100,],,,0X29,],,,0b110,],),{,},},Class,_m,:,_A3y_,{,},Class,_t25,{,},Class,__F,{,},Class,G,{,},<EOF>''',
                101
            )
        )

    def test_772(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pM_{}Class R:_M_{Constructor (){} }Class _26__zg6_G:J{_4_39(_,K:Array [Array [Float ,0X7],60_0];i_,b___,__I7,w_,_5,V7:Int ){}Var C,$TZ,$Wa_,_:x45_L_;}''',
                '''Class,pM_,{,},Class,R,:,_M_,{,Constructor,(,),{,},},Class,_26__zg6_G,:,J,{,_4_39,(,_,,,K,:,Array,[,Array,[,Float,,,0X7,],,,600,],;,i_,,,b___,,,__I7,,,w_,,,_5,,,V7,:,Int,),{,},Var,C,,,$TZ,,,$Wa_,,,_,:,x45_L_,;,},<EOF>''',
                101
            )
        )

    def test_773(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _UE51{Var _20_:String ;Destructor (){Return ;}Constructor (){Break ;}Destructor (){Continue ;} }Class _U{}''',
                '''Class,_UE51,{,Var,_20_,:,String,;,Destructor,(,),{,Return,;,},Constructor,(,),{,Break,;,},Destructor,(,),{,Continue,;,},},Class,_U,{,},<EOF>''',
                101
            )
        )

    def test_774(self):
        self.assertTrue(
            TestLexer.test(
                '''Class DTF{}Class CET8_en{Constructor (_:Array [Array [Float ,47],47];s_:Array [Array [Boolean ,0B1_0_0],0b1100];N,N,w:_){}Var $j__4k:Array [Array [Array [Array [Int ,033],0x60],0x1],4];}Class _{}Class U{}Class d{Constructor (){} }''',
                '''Class,DTF,{,},Class,CET8_en,{,Constructor,(,_,:,Array,[,Array,[,Float,,,47,],,,47,],;,s_,:,Array,[,Array,[,Boolean,,,0B100,],,,0b1100,],;,N,,,N,,,w,:,_,),{,},Var,$j__4k,:,Array,[,Array,[,Array,[,Array,[,Int,,,033,],,,0x60,],,,0x1,],,,4,],;,},Class,_,{,},Class,U,{,},Class,d,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_775(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V_:t{z2(X2__:Array [Int ,0X2_4];a,J_:Array [Int ,0B1_0]){}pP(_:Array [Array [Array [Array [Array [Array [Boolean ,37],0xB],0102],37],0b10011],0102];_03_,U:Array [Array [Array [String ,0XC],37],0102];m83,__Mh_,Z,_:_mIG;__,__,A,y:_y__17iy_h3d){} }''',
                '''Class,V_,:,t,{,z2,(,X2__,:,Array,[,Int,,,0X24,],;,a,,,J_,:,Array,[,Int,,,0B10,],),{,},pP,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,37,],,,0xB,],,,0102,],,,37,],,,0b10011,],,,0102,],;,_03_,,,U,:,Array,[,Array,[,Array,[,String,,,0XC,],,,37,],,,0102,],;,m83,,,__Mh_,,,Z,,,_,:,_mIG,;,__,,,__,,,A,,,y,:,_y__17iy_h3d,),{,},},<EOF>''',
                101
            )
        )

    def test_776(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:P1_{Val $44:Array [Array [Float ,0B1],0B10];}Class BT_:h__{Val $_:Array [Int ,0x3];Val $___,r,$P0:Float ;Val F7,$1:Array [Int ,64];}''',
                '''Class,_,:,P1_,{,Val,$44,:,Array,[,Array,[,Float,,,0B1,],,,0B10,],;,},Class,BT_,:,h__,{,Val,$_,:,Array,[,Int,,,0x3,],;,Val,$___,,,r,,,$P0,:,Float,;,Val,F7,,,$1,:,Array,[,Int,,,64,],;,},<EOF>''',
                101
            )
        )

    def test_777(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _R:p3169{}Class _:B{Destructor (){}Constructor (){} }Class M1:_{$o(){} }Class s{}Class _:_g{}Class J0{Val $Lx_:n;}Class _____{}''',
                '''Class,_R,:,p3169,{,},Class,_,:,B,{,Destructor,(,),{,},Constructor,(,),{,},},Class,M1,:,_,{,$o,(,),{,},},Class,s,{,},Class,_,:,_g,{,},Class,J0,{,Val,$Lx_,:,n,;,},Class,_____,{,},<EOF>''',
                101
            )
        )

    def test_778(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:w_Aa{$s(){}Constructor (){Break ;}Destructor (){}Destructor (){}Constructor (){Y2_P::$1n4();Break ;} }Class V:p{}''',
                '''Class,_,:,w_Aa,{,$s,(,),{,},Constructor,(,),{,Break,;,},Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,Y2_P,::,$1n4,(,),;,Break,;,},},Class,V,:,p,{,},<EOF>''',
                101
            )
        )

    def test_779(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_:l{$5(){Break ;} }Class I{}Class NS2{Val _:Array [Array [Array [Array [Array [Boolean ,0B100101],0x75_C4],61],9_9],04_6];}Class b__:Y{}''',
                '''Class,_0_,:,l,{,$5,(,),{,Break,;,},},Class,I,{,},Class,NS2,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B100101,],,,0x75C4,],,,61,],,,99,],,,046,],;,},Class,b__,:,Y,{,},<EOF>''',
                101
            )
        )

    def test_780(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _O:_{Constructor (_d93Zk,_:Array [Array [String ,0B1],0b1000001];____6__,_U,nZ5_9,bF:p_){Continue ;Var uib3:Boolean ;}Var $0_3,__,$_j,$5,$H:Array [Array [Array [Array [Array [Float ,9_39_3],0b1000001],016],0b1_1_01],2_09];}''',
                '''Class,_O,:,_,{,Constructor,(,_d93Zk,,,_,:,Array,[,Array,[,String,,,0B1,],,,0b1000001,],;,____6__,,,_U,,,nZ5_9,,,bF,:,p_,),{,Continue,;,Var,uib3,:,Boolean,;,},Var,$0_3,,,__,,,$_j,,,$5,,,$H,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,9393,],,,0b1000001,],,,016,],,,0b1101,],,,209,],;,},<EOF>''',
                101
            )
        )

    def test_781(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yP:_{U(){}Constructor (_,_8,_:Array [Array [Float ,76],0X5E];_,a96y,u,r,C3:YH3i;OM:oH_;__Z,_47,H:_;_,H,Q,_:Array [Int ,0XC];J_:Array [Float ,5_0]){ {}Break ;} }''',
                '''Class,yP,:,_,{,U,(,),{,},Constructor,(,_,,,_8,,,_,:,Array,[,Array,[,Float,,,76,],,,0X5E,],;,_,,,a96y,,,u,,,r,,,C3,:,YH3i,;,OM,:,oH_,;,__Z,,,_47,,,H,:,_,;,_,,,H,,,Q,,,_,:,Array,[,Int,,,0XC,],;,J_,:,Array,[,Float,,,50,],),{,{,},Break,;,},},<EOF>''',
                101
            )
        )

    def test_782(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:_9{}Class _{Destructor (){} }Class Q:M_1{Constructor (B_o:Array [Array [Boolean ,0B1_01],0B1];fl:Array [Array [Array [Float ,8],0xB],87]){}Val $_3,$__:p;}''',
                '''Class,S,:,_9,{,},Class,_,{,Destructor,(,),{,},},Class,Q,:,M_1,{,Constructor,(,B_o,:,Array,[,Array,[,Boolean,,,0B101,],,,0B1,],;,fl,:,Array,[,Array,[,Array,[,Float,,,8,],,,0xB,],,,87,],),{,},Val,$_3,,,$__,:,p,;,},<EOF>''',
                101
            )
        )

    def test_783(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){Val _9_,_7,AQ,e,_m0,_T,mQ_,U,_,a,P,_:Int ;Break ;Continue ;} }Class S:v1E9_Y{}Class _t_:_{}''',
                '''Class,__,{,Destructor,(,),{,Val,_9_,,,_7,,,AQ,,,e,,,_m0,,,_T,,,mQ_,,,U,,,_,,,a,,,P,,,_,:,Int,;,Break,;,Continue,;,},},Class,S,:,v1E9_Y,{,},Class,_t_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_784(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w_6:k3s2_9_h4____1{}Class mJ:_{}Class _{Constructor (K:t;b,V_:_4z0;_:Array [Array [Array [String ,0b1_1],0x7B_1B_A],64];t,i_:Array [Array [Array [String ,6],1_1],0xA2C];Jx6AS_x:Array [Boolean ,0141]){} }Class __:_Y{}''',
                '''Class,w_6,:,k3s2_9_h4____1,{,},Class,mJ,:,_,{,},Class,_,{,Constructor,(,K,:,t,;,b,,,V_,:,_4z0,;,_,:,Array,[,Array,[,Array,[,String,,,0b11,],,,0x7B1BA,],,,64,],;,t,,,i_,:,Array,[,Array,[,Array,[,String,,,6,],,,11,],,,0xA2C,],;,Jx6AS_x,:,Array,[,Boolean,,,0141,],),{,},},Class,__,:,_Y,{,},<EOF>''',
                101
            )
        )

    def test_785(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:DS{}Class B{}Class _H:F{}Class _{$d(y:Array [Array [Float ,01_66_02],02_2]){_0::$n().c7j();Return ;Continue ;Continue ;} }''',
                '''Class,_,:,DS,{,},Class,B,{,},Class,_H,:,F,{,},Class,_,{,$d,(,y,:,Array,[,Array,[,Float,,,016602,],,,022,],),{,_0,::,$n,(,),.,c7j,(,),;,Return,;,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_786(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:e{Val B:Array [Boolean ,20];Destructor (){Break ;}Destructor (){} }Class O3z{}Class _{Destructor (){}Var D:String ;Var $_v9:_3____;Var $_:Array [Array [Float ,0X60],0X5];Val _O:_;}Class K:_B_54{Val _h_:Array [String ,5_0];}Class _C:_F{Var $_:Boolean ;}''',
                '''Class,t,:,e,{,Val,B,:,Array,[,Boolean,,,20,],;,Destructor,(,),{,Break,;,},Destructor,(,),{,},},Class,O3z,{,},Class,_,{,Destructor,(,),{,},Var,D,:,String,;,Var,$_v9,:,_3____,;,Var,$_,:,Array,[,Array,[,Float,,,0X60,],,,0X5,],;,Val,_O,:,_,;,},Class,K,:,_B_54,{,Val,_h_,:,Array,[,String,,,50,],;,},Class,_C,:,_F,{,Var,$_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_787(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P2{Constructor (y4:Array [Array [String ,0b110011],042];YA:Array [Boolean ,0X3];h,_,_3_:A){}Val _9,$_:Array [String ,0B1001101];Var W,a,h:Array [Float ,0b110011];}''',
                '''Class,P2,{,Constructor,(,y4,:,Array,[,Array,[,String,,,0b110011,],,,042,],;,YA,:,Array,[,Boolean,,,0X3,],;,h,,,_,,,_3_,:,A,),{,},Val,_9,,,$_,:,Array,[,String,,,0B1001101,],;,Var,W,,,a,,,h,:,Array,[,Float,,,0b110011,],;,},<EOF>''',
                101
            )
        )

    def test_788(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5{Constructor (k5_,W68,_6:Float ;_,_,____b,_a,_,_1___:Array [Array [Boolean ,052],75]){Break ;Return ;} }Class J__{Var _:Int ;}''',
                '''Class,_5,{,Constructor,(,k5_,,,W68,,,_6,:,Float,;,_,,,_,,,____b,,,_a,,,_,,,_1___,:,Array,[,Array,[,Boolean,,,052,],,,75,],),{,Break,;,Return,;,},},Class,J__,{,Var,_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_789(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D:P2{}Class ___:__{$i(_,b,_:Hy;n,S_:_7__;_:Array [String ,41]){} }Class n{Constructor (){}Constructor (){} }Class u_28_{}''',
                '''Class,D,:,P2,{,},Class,___,:,__,{,$i,(,_,,,b,,,_,:,Hy,;,n,,,S_,:,_7__,;,_,:,Array,[,String,,,41,],),{,},},Class,n,{,Constructor,(,),{,},Constructor,(,),{,},},Class,u_28_,{,},<EOF>''',
                101
            )
        )

    def test_790(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:i{Val Y:Array [Array [Array [Array [Array [Array [Float ,14],8_3],14],290],14],0B110010];}Class _9{Var $_i,__,h:Array [Boolean ,0b11];}''',
                '''Class,_,:,i,{,Val,Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,14,],,,83,],,,14,],,,290,],,,14,],,,0B110010,],;,},Class,_9,{,Var,$_i,,,__,,,h,:,Array,[,Boolean,,,0b11,],;,},<EOF>''',
                101
            )
        )

    def test_791(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class K{}Class vE:_{}Class A5c{Var _,__,_:Array [Array [Array [Array [Array [Boolean ,0b110000],0x3E],0b110000],5],0B1011101];}Class _S:_7__{j(){} }''',
                '''Class,_,{,},Class,K,{,},Class,vE,:,_,{,},Class,A5c,{,Var,_,,,__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b110000,],,,0x3E,],,,0b110000,],,,5,],,,0B1011101,],;,},Class,_S,:,_7__,{,j,(,),{,},},<EOF>''',
                101
            )
        )

    def test_792(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _G7_2:z9{Constructor (_6B3,_,_,_b1,_,O_,FBw,__R4_:Array [Float ,9]){} }Class __j_:_{_73(_ON_K:_0_;_:l){Break ;} }''',
                '''Class,_G7_2,:,z9,{,Constructor,(,_6B3,,,_,,,_,,,_b1,,,_,,,O_,,,FBw,,,__R4_,:,Array,[,Float,,,9,],),{,},},Class,__j_,:,_,{,_73,(,_ON_K,:,_0_,;,_,:,l,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_793(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class d{}Class M:Y_U8_{Val X,_,_0_9:String ;}Class _5{}Class ge{Var _,$6:String ;}Class Z4b_:_h_DH{Destructor (){}Var $2:Array [Float ,02_6_5_6];Var $3,$58,H,$_3,$__:Boolean ;}Class _:G146{Val _,$j:Boolean ;Var $S,_902M3:Boolean ;}Class A:__3{}Class w:C_{}''',
                '''Class,_,{,},Class,d,{,},Class,M,:,Y_U8_,{,Val,X,,,_,,,_0_9,:,String,;,},Class,_5,{,},Class,ge,{,Var,_,,,$6,:,String,;,},Class,Z4b_,:,_h_DH,{,Destructor,(,),{,},Var,$2,:,Array,[,Float,,,02656,],;,Var,$3,,,$58,,,H,,,$_3,,,$__,:,Boolean,;,},Class,_,:,G146,{,Val,_,,,$j,:,Boolean,;,Var,$S,,,_902M3,:,Boolean,;,},Class,A,:,__3,{,},Class,w,:,C_,{,},<EOF>''',
                101
            )
        )

    def test_794(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Aw_{Var __:String ;Constructor (_O_,a,e:Array [Array [Float ,0114],0xF];__,vg,FX5,__7__,_:h){Return ;}Val Y_,__5_W__,$V,$3_,_:String ;}''',
                '''Class,_,:,Aw_,{,Var,__,:,String,;,Constructor,(,_O_,,,a,,,e,:,Array,[,Array,[,Float,,,0114,],,,0xF,],;,__,,,vg,,,FX5,,,__7__,,,_,:,h,),{,Return,;,},Val,Y_,,,__5_W__,,,$V,,,$3_,,,_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_795(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class bA7:_{}Class Zd{}Class __62{}Class F__:_{}Class _:z81i{}Class Bl_6L_O{_6(_,_:Array [Float ,0B1_0];c33:Array [Float ,0XE]){} }''',
                '''Class,_,{,},Class,bA7,:,_,{,},Class,Zd,{,},Class,__62,{,},Class,F__,:,_,{,},Class,_,:,z81i,{,},Class,Bl_6L_O,{,_6,(,_,,,_,:,Array,[,Float,,,0B10,],;,c33,:,Array,[,Float,,,0XE,],),{,},},<EOF>''',
                101
            )
        )

    def test_796(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{Constructor (ec:X;__R:Array [Array [Array [Array [String ,0x15],16_5],3_747_39],063];w0:Int ;_S7,x,_,H,__,_:Array [String ,85];_08,o_,_32_,W509,_,g:Array [Array [Array [Boolean ,0555_5_3],063],0X46E2]){} }''',
                '''Class,O,{,Constructor,(,ec,:,X,;,__R,:,Array,[,Array,[,Array,[,Array,[,String,,,0x15,],,,165,],,,374739,],,,063,],;,w0,:,Int,;,_S7,,,x,,,_,,,H,,,__,,,_,:,Array,[,String,,,85,],;,_08,,,o_,,,_32_,,,W509,,,_,,,g,:,Array,[,Array,[,Array,[,Boolean,,,055553,],,,063,],,,0X46E2,],),{,},},<EOF>''',
                101
            )
        )

    def test_797(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _A{}Class _:_7_x_{}Class _:zH{Destructor (){}Val $_:String ;}Class w3{}Class S:t_53e{Constructor (m__2:J){} }''',
                '''Class,_A,{,},Class,_,:,_7_x_,{,},Class,_,:,zH,{,Destructor,(,),{,},Val,$_,:,String,;,},Class,w3,{,},Class,S,:,t_53e,{,Constructor,(,m__2,:,J,),{,},},<EOF>''',
                101
            )
        )

    def test_798(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (___,_,A,u:Array [Boolean ,02];B2:__9;y_,_:Array [Array [Int ,017],017]){Continue ;Val _1749:_3;Break ;Continue ;} }Class _{}''',
                '''Class,_,{,Constructor,(,___,,,_,,,A,,,u,:,Array,[,Boolean,,,02,],;,B2,:,__9,;,y_,,,_,:,Array,[,Array,[,Int,,,017,],,,017,],),{,Continue,;,Val,_1749,:,_3,;,Break,;,Continue,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_799(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r_W{Destructor (){} }Class _DMRE:_{Destructor (){Break ;} }Class _{Val K,_32,d,$_:Float ;_(_Dz,H,y_:b;l,X_MX,_H:_){} }''',
                '''Class,r_W,{,Destructor,(,),{,},},Class,_DMRE,:,_,{,Destructor,(,),{,Break,;,},},Class,_,{,Val,K,,,_32,,,d,,,$_,:,Float,;,_,(,_Dz,,,H,,,y_,:,b,;,l,,,X_MX,,,_H,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_800(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}$__4_(_:Array [Array [Boolean ,19],043_1];J,M,_8,ok1:String ;w:Array [String ,19];d5j:Boolean ){} }Class b:__{}''',
                '''Class,_,{,Constructor,(,),{,},$__4_,(,_,:,Array,[,Array,[,Boolean,,,19,],,,0431,],;,J,,,M,,,_8,,,ok1,:,String,;,w,:,Array,[,String,,,19,],;,d5j,:,Boolean,),{,},},Class,b,:,__,{,},<EOF>''',
                101
            )
        )

    def test_801(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:q{Constructor (__:z_;_,__29,_ZA,_85:d_132;_:Array [Array [Array [Array [Array [String ,8],0122],42],42],0122]){} }''',
                '''Class,_,:,q,{,Constructor,(,__,:,z_,;,_,,,__29,,,_ZA,,,_85,:,d_132,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,8,],,,0122,],,,42,],,,42,],,,0122,],),{,},},<EOF>''',
                101
            )
        )

    def test_802(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5__:mh_{Val _,__,$_,$C6,_2_:Array [Float ,0X3B];P(__d,p,_:o;F:String ;s3,k874__,_9_5:_;_:p7L;__g__,_,_QA,__:___;_,z,_:Boolean ;h:Q;H,_,y:G9_){} }Class h:g{}Class K_{}''',
                '''Class,_5__,:,mh_,{,Val,_,,,__,,,$_,,,$C6,,,_2_,:,Array,[,Float,,,0X3B,],;,P,(,__d,,,p,,,_,:,o,;,F,:,String,;,s3,,,k874__,,,_9_5,:,_,;,_,:,p7L,;,__g__,,,_,,,_QA,,,__,:,___,;,_,,,z,,,_,:,Boolean,;,h,:,Q,;,H,,,_,,,y,:,G9_,),{,},},Class,h,:,g,{,},Class,K_,{,},<EOF>''',
                101
            )
        )

    def test_803(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2:l{}Class _{}Class _:e_{Val $_:Array [Array [String ,0b1],0X37];}Class _{Constructor (){} }Class Y1c8:_{}Class b:_{Destructor (){} }''',
                '''Class,_2,:,l,{,},Class,_,{,},Class,_,:,e_,{,Val,$_,:,Array,[,Array,[,String,,,0b1,],,,0X37,],;,},Class,_,{,Constructor,(,),{,},},Class,Y1c8,:,_,{,},Class,b,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_804(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A01:b{Val $L:Float ;}Class Qdh{Destructor (){}Destructor (){Val _,_:Int ;}Destructor (){}Var _7:Array [Array [Int ,0XE],84];Val $_,$3_44_:_7;}''',
                '''Class,A01,:,b,{,Val,$L,:,Float,;,},Class,Qdh,{,Destructor,(,),{,},Destructor,(,),{,Val,_,,,_,:,Int,;,},Destructor,(,),{,},Var,_7,:,Array,[,Array,[,Int,,,0XE,],,,84,],;,Val,$_,,,$3_44_,:,_7,;,},<EOF>''',
                101
            )
        )

    def test_805(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:a{}Class _:U{Var $C7b_7g_,_,V,_:Array [Array [Array [Array [Array [Array [Int ,2],0B10001],0XC_A_58],05],1],014];n9F(g:Array [Array [Float ,6_5_5],0B10001]){} }''',
                '''Class,_,:,a,{,},Class,_,:,U,{,Var,$C7b_7g_,,,_,,,V,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,2,],,,0B10001,],,,0XCA58,],,,05,],,,1,],,,014,],;,n9F,(,g,:,Array,[,Array,[,Float,,,655,],,,0B10001,],),{,},},<EOF>''',
                101
            )
        )

    def test_806(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$_(){}Val _6:_=!!---Zi2::$_7.R._A33J._3HO.Ez5_2&&---_S_1v::$_().n_+_::$_5();eO(){}Constructor (){}Var T:E;}''',
                '''Class,_,{,$_,(,),{,},Val,_6,:,_,=,!,!,-,-,-,Zi2,::,$_7,.,R,.,_A33J,.,_3HO,.,Ez5_2,&&,-,-,-,_S_1v,::,$_,(,),.,n_,+,_,::,$_5,(,),;,eO,(,),{,},Constructor,(,),{,},Var,T,:,E,;,},<EOF>''',
                101
            )
        )

    def test_807(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_{Destructor (){Break ;}Var _:_;Constructor (uqD_6g:Float ){} }Class S_{Val $_KK,$hc4,$I_,i_,_,$E_:_;}Class _{}''',
                '''Class,P,:,_,{,Destructor,(,),{,Break,;,},Var,_,:,_,;,Constructor,(,uqD_6g,:,Float,),{,},},Class,S_,{,Val,$_KK,,,$hc4,,,$I_,,,i_,,,_,,,$E_,:,_,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_808(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Sc:h{$6(_:r;T,AC,_0,M:Array [String ,87]){} }Class wA___8:r{Constructor (_B:__;Bc,_,f:x8_;T,H,_,K,_,H:Float ){} }''',
                '''Class,Sc,:,h,{,$6,(,_,:,r,;,T,,,AC,,,_0,,,M,:,Array,[,String,,,87,],),{,},},Class,wA___8,:,r,{,Constructor,(,_B,:,__,;,Bc,,,_,,,f,:,x8_,;,T,,,H,,,_,,,K,,,_,,,H,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_809(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _,_,c9:Int ;Var Q3,$_06_47X_,k_7:_;}Class __:zB{Constructor (BJ,S_,W7TR:Array [Array [Float ,0B1],17]){} }''',
                '''Class,_,{,Val,_,,,_,,,c9,:,Int,;,Var,Q3,,,$_06_47X_,,,k_7,:,_,;,},Class,__,:,zB,{,Constructor,(,BJ,,,S_,,,W7TR,:,Array,[,Array,[,Float,,,0B1,],,,17,],),{,},},<EOF>''',
                101
            )
        )

    def test_810(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$_(_l,z:Array [Array [Array [Float ,0B1000011],0B1_0_1],60];_D_I:Float ;v_4:Array [Array [Float ,96],96]){_12::$Mbi.b9___c();} }''',
                '''Class,_,:,_,{,$_,(,_l,,,z,:,Array,[,Array,[,Array,[,Float,,,0B1000011,],,,0B101,],,,60,],;,_D_I,:,Float,;,v_4,:,Array,[,Array,[,Float,,,96,],,,96,],),{,_12,::,$Mbi,.,b9___c,(,),;,},},<EOF>''',
                101
            )
        )

    def test_811(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:Fy{Var _L,j,$_:Float ;Destructor (){}LT(E1:Array [Array [Float ,0110],0B1];_,J,_:Boolean ;_d6_,O,F:Boolean ;j:d){}Val _:Array [Int ,73];}Class _2:_{}''',
                '''Class,__,:,Fy,{,Var,_L,,,j,,,$_,:,Float,;,Destructor,(,),{,},LT,(,E1,:,Array,[,Array,[,Float,,,0110,],,,0B1,],;,_,,,J,,,_,:,Boolean,;,_d6_,,,O,,,F,:,Boolean,;,j,:,d,),{,},Val,_,:,Array,[,Int,,,73,],;,},Class,_2,:,_,{,},<EOF>''',
                101
            )
        )

    def test_812(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _fV{Val V2,$37,$6z,_6:Array [Array [Array [Array [Float ,0XC_169_B1_42_726_C_0],0B101000],0114],0B101000];}Class F_{}''',
                '''Class,_fV,{,Val,V2,,,$37,,,$6z,,,_6,:,Array,[,Array,[,Array,[,Array,[,Float,,,0XC169B142726C0,],,,0B101000,],,,0114,],,,0B101000,],;,},Class,F_,{,},<EOF>''',
                101
            )
        )

    def test_813(self):
        self.assertTrue(
            TestLexer.test(
                '''Class KFJ:G1{Destructor (){Var _y,_0f:Float ;} }Class Z:C{}Class A:_5{$__n(A87_:Int ;H,_:Array [Array [String ,5],0B101];_,z_,_56:Float ;_,J,_,_:Array [Boolean ,7];I6E:Array [Array [Boolean ,0B1],062];y,_U,R__6L:Array [Boolean ,0b111101]){}Constructor (){} }''',
                '''Class,KFJ,:,G1,{,Destructor,(,),{,Var,_y,,,_0f,:,Float,;,},},Class,Z,:,C,{,},Class,A,:,_5,{,$__n,(,A87_,:,Int,;,H,,,_,:,Array,[,Array,[,String,,,5,],,,0B101,],;,_,,,z_,,,_56,:,Float,;,_,,,J,,,_,,,_,:,Array,[,Boolean,,,7,],;,I6E,:,Array,[,Array,[,Boolean,,,0B1,],,,062,],;,y,,,_U,,,R__6L,:,Array,[,Boolean,,,0b111101,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_814(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P{Var $1,_0:Array [Array [Float ,0B1],0X3F];$F__(x_0PS___,_:___g;_,_40K:a;_:g7;_3,R:Int ;__:Array [Array [Boolean ,053],0x4D];_R:Array [Float ,040];__:Array [Float ,0B1_1]){} }Class Q_:_{h(__0,__s699,_,s:Array [Array [Array [Array [Array [Array [Int ,0x4D],0B1_0_11],05_0_7_5],0b101110],53],0xD];_68,tI,k,X,A,_:Array [Float ,6_5];_,B,_d,fd,x2I6,qy,_z_5:Boolean ){} }''',
                '''Class,P,{,Var,$1,,,_0,:,Array,[,Array,[,Float,,,0B1,],,,0X3F,],;,$F__,(,x_0PS___,,,_,:,___g,;,_,,,_40K,:,a,;,_,:,g7,;,_3,,,R,:,Int,;,__,:,Array,[,Array,[,Boolean,,,053,],,,0x4D,],;,_R,:,Array,[,Float,,,040,],;,__,:,Array,[,Float,,,0B11,],),{,},},Class,Q_,:,_,{,h,(,__0,,,__s699,,,_,,,s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x4D,],,,0B1011,],,,05075,],,,0b101110,],,,53,],,,0xD,],;,_68,,,tI,,,k,,,X,,,A,,,_,:,Array,[,Float,,,65,],;,_,,,B,,,_d,,,fd,,,x2I6,,,qy,,,_z_5,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_815(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{Destructor (){}Val $s,$_3,$_t__:Boolean ;}Class __520f{}Class F{Destructor (){} }Class _ge___:_E__7{f(){} }''',
                '''Class,f,{,Destructor,(,),{,},Val,$s,,,$_3,,,$_t__,:,Boolean,;,},Class,__520f,{,},Class,F,{,Destructor,(,),{,},},Class,_ge___,:,_E__7,{,f,(,),{,},},<EOF>''',
                101
            )
        )

    def test_816(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5{Var $6,$47N50,_:Array [Boolean ,0X19];}Class N:_{}Class _7O02{_8(){}Val _,$LO5,Z:Array [Array [Array [Array [Boolean ,064],57],57],05];}Class _{}''',
                '''Class,_5,{,Var,$6,,,$47N50,,,_,:,Array,[,Boolean,,,0X19,],;,},Class,N,:,_,{,},Class,_7O02,{,_8,(,),{,},Val,_,,,$LO5,,,Z,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,064,],,,57,],,,57,],,,05,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_817(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_72C{}Class _:L{}Class OY:_{_(a,h,J4,Zv,r_4:Boolean ;_,_n:Boolean ;Y,_,_J,I4,g39:M8){} }Class t9:j{}''',
                '''Class,_,:,_72C,{,},Class,_,:,L,{,},Class,OY,:,_,{,_,(,a,,,h,,,J4,,,Zv,,,r_4,:,Boolean,;,_,,,_n,:,Boolean,;,Y,,,_,,,_J,,,I4,,,g39,:,M8,),{,},},Class,t9,:,j,{,},<EOF>''',
                101
            )
        )

    def test_818(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H{}Class E0_:XTwB{}Class _y2nxw__1z_oa:_X_{Constructor (){}Constructor (_,x,ZT,h1w:Array [Boolean ,54];v,bk_,_,_5:_2){ {}Continue ;} }''',
                '''Class,H,{,},Class,E0_,:,XTwB,{,},Class,_y2nxw__1z_oa,:,_X_,{,Constructor,(,),{,},Constructor,(,_,,,x,,,ZT,,,h1w,:,Array,[,Boolean,,,54,],;,v,,,bk_,,,_,,,_5,:,_2,),{,{,},Continue,;,},},<EOF>''',
                101
            )
        )

    def test_819(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:yy{}Class T:_{}Class H:_3DQ_g_{Constructor (_,q_:Boolean ;_b_:s;I:Array [Boolean ,27];_,Y:Float ){ {}Continue ;} }''',
                '''Class,d,:,yy,{,},Class,T,:,_,{,},Class,H,:,_3DQ_g_,{,Constructor,(,_,,,q_,:,Boolean,;,_b_,:,s,;,I,:,Array,[,Boolean,,,27,],;,_,,,Y,:,Float,),{,{,},Continue,;,},},<EOF>''',
                101
            )
        )

    def test_820(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:jC4{bt_(C__,w_,_:Array [Array [Array [Int ,35],0B1],0XA];_j,_,N:o;P_:Array [Array [Array [Array [Float ,0b101011],0x1_E],07],0XDF];_g5g9_,_:_){} }''',
                '''Class,_,:,jC4,{,bt_,(,C__,,,w_,,,_,:,Array,[,Array,[,Array,[,Int,,,35,],,,0B1,],,,0XA,],;,_j,,,_,,,N,:,o,;,P_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b101011,],,,0x1E,],,,07,],,,0XDF,],;,_g5g9_,,,_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_821(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _:x{Constructor (_4,_:_Q;m_fj_K_9B_0_Xy2_:Array [Array [Array [Int ,0124],21],0X3C]){ {} }}Class _{Destructor (){Val ___,e5:String ;}Destructor (){}Val $_5,$83:j;}Class G:_{}''',
                '''Class,_,:,_,{,},Class,_,:,x,{,Constructor,(,_4,,,_,:,_Q,;,m_fj_K_9B_0_Xy2_,:,Array,[,Array,[,Array,[,Int,,,0124,],,,21,],,,0X3C,],),{,{,},},},Class,_,{,Destructor,(,),{,Val,___,,,e5,:,String,;,},Destructor,(,),{,},Val,$_5,,,$83,:,j,;,},Class,G,:,_,{,},<EOF>''',
                101
            )
        )

    def test_822(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_0_{}Class _7p{$X_(__:Float ;_,y5v1,p8_,Q,S,_,_,a:_I0){}e_(){} }Class h8:__{}Class _{}Class o{}Class e:_{}Class o{}''',
                '''Class,_,:,_0_,{,},Class,_7p,{,$X_,(,__,:,Float,;,_,,,y5v1,,,p8_,,,Q,,,S,,,_,,,_,,,a,:,_I0,),{,},e_,(,),{,},},Class,h8,:,__,{,},Class,_,{,},Class,o,{,},Class,e,:,_,{,},Class,o,{,},<EOF>''',
                101
            )
        )

    def test_823(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:_{Destructor (){Continue ;} }Class _{}Class _{_(v0,_0,_,_,V_,k4,__,_4,_,M,n,B4_9,_8__:Boolean ;_O,_5:_;_:Array [Array [Float ,0x2],0x2_E]){} }''',
                '''Class,v,:,_,{,Destructor,(,),{,Continue,;,},},Class,_,{,},Class,_,{,_,(,v0,,,_0,,,_,,,_,,,V_,,,k4,,,__,,,_4,,,_,,,M,,,n,,,B4_9,,,_8__,:,Boolean,;,_O,,,_5,:,_,;,_,:,Array,[,Array,[,Float,,,0x2,],,,0x2E,],),{,},},<EOF>''',
                101
            )
        )

    def test_824(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t_:_5I{Var C_H,$2:String ;}Class F:_{}Class I_k{}Class E:_{Constructor (p,y_,J,R,__Pr,h,Pj:_;_:Int ){} }''',
                '''Class,t_,:,_5I,{,Var,C_H,,,$2,:,String,;,},Class,F,:,_,{,},Class,I_k,{,},Class,E,:,_,{,Constructor,(,p,,,y_,,,J,,,R,,,__Pr,,,h,,,Pj,:,_,;,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_825(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _L{Constructor (_:Array [String ,0X49];B5,_,p:Array [Array [Array [Int ,030],0X49],0XB_3]){}Val $z,$9_8:Array [Array [String ,9_6],64];}''',
                '''Class,_,{,},Class,_L,{,Constructor,(,_,:,Array,[,String,,,0X49,],;,B5,,,_,,,p,:,Array,[,Array,[,Array,[,Int,,,030,],,,0X49,],,,0XB3,],),{,},Val,$z,,,$9_8,:,Array,[,Array,[,String,,,96,],,,64,],;,},<EOF>''',
                101
            )
        )

    def test_826(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I3:P0v{$1(_,T:Int ;_,_:Array [Array [Array [Float ,0x3C],0x3C],0X2D];g:Array [Boolean ,013];_55:R;_wJ8:s9){} }Class l:_H_2j7_4{}''',
                '''Class,I3,:,P0v,{,$1,(,_,,,T,:,Int,;,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0x3C,],,,0x3C,],,,0X2D,],;,g,:,Array,[,Boolean,,,013,],;,_55,:,R,;,_wJ8,:,s9,),{,},},Class,l,:,_H_2j7_4,{,},<EOF>''',
                101
            )
        )

    def test_827(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_{Destructor (){}Constructor (_:Array [String ,012];_,_D4:Array [Boolean ,0b1110];_:Array [Array [Array [Int ,55_3_3],66],0X4A]){} }''',
                '''Class,d_,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,String,,,012,],;,_,,,_D4,:,Array,[,Boolean,,,0b1110,],;,_,:,Array,[,Array,[,Array,[,Int,,,5533,],,,66,],,,0X4A,],),{,},},<EOF>''',
                101
            )
        )

    def test_828(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (H4y,_8,g:Array [Array [String ,02],43];__:Array [Array [Array [Array [Float ,0X75],2_78],0X23],0X23];n013_:Boolean ;i,_,_l5:R){}Val N:_;}''',
                '''Class,_,{,Constructor,(,H4y,,,_8,,,g,:,Array,[,Array,[,String,,,02,],,,43,],;,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X75,],,,278,],,,0X23,],,,0X23,],;,n013_,:,Boolean,;,i,,,_,,,_l5,:,R,),{,},Val,N,:,_,;,},<EOF>''',
                101
            )
        )

    def test_829(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q1S{__(){} }Class s_:K{$P79(_bO,E1,_CBF,_,_:_){Break ;}Val U,_74_0,na:String ;Destructor (){ {Continue ;Break ;Break ;} }}''',
                '''Class,q1S,{,__,(,),{,},},Class,s_,:,K,{,$P79,(,_bO,,,E1,,,_CBF,,,_,,,_,:,_,),{,Break,;,},Val,U,,,_74_0,,,na,:,String,;,Destructor,(,),{,{,Continue,;,Break,;,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_830(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:fEcv{Destructor (){Return ;}Constructor (c,Q_7:Array [Array [Float ,0B1001],0b1];Ek3,_1:_;_,_b:Float ;_:a;O,_n,s_:Array [Array [Array [Array [Float ,12],0X6],0b1_1],0x2];t_4,K:Float ;__:Array [Array [Array [String ,0B1001],2],0X4B];D,_3,___U,Y,_0_,_:String ;vLp2:Array [Int ,0b10001]){} }Class _{}''',
                '''Class,r,:,fEcv,{,Destructor,(,),{,Return,;,},Constructor,(,c,,,Q_7,:,Array,[,Array,[,Float,,,0B1001,],,,0b1,],;,Ek3,,,_1,:,_,;,_,,,_b,:,Float,;,_,:,a,;,O,,,_n,,,s_,:,Array,[,Array,[,Array,[,Array,[,Float,,,12,],,,0X6,],,,0b11,],,,0x2,],;,t_4,,,K,:,Float,;,__,:,Array,[,Array,[,Array,[,String,,,0B1001,],,,2,],,,0X4B,],;,D,,,_3,,,___U,,,Y,,,_0_,,,_,:,String,;,vLp2,:,Array,[,Int,,,0b10001,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_831(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{Var $H,$72,$o:Array [Boolean ,0104];Destructor (){}Val _c_,$_,$__1P:_6;a(){}Val G5:Array [String ,2_1];}''',
                '''Class,n,{,Var,$H,,,$72,,,$o,:,Array,[,Boolean,,,0104,],;,Destructor,(,),{,},Val,_c_,,,$_,,,$__1P,:,_6,;,a,(,),{,},Val,G5,:,Array,[,String,,,21,],;,},<EOF>''',
                101
            )
        )

    def test_832(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Var $c:__;Val $54:Array [Boolean ,011];_(){}Val $9_:String ;Constructor (_a,_:_;__,_74,_,D__,W__,___70,mt:_;_,j:_;d,V:Array [Float ,78];___,__1:Int ;_10c:Z;___:_R_){} }''',
                '''Class,M,{,Var,$c,:,__,;,Val,$54,:,Array,[,Boolean,,,011,],;,_,(,),{,},Val,$9_,:,String,;,Constructor,(,_a,,,_,:,_,;,__,,,_74,,,_,,,D__,,,W__,,,___70,,,mt,:,_,;,_,,,j,:,_,;,d,,,V,:,Array,[,Float,,,78,],;,___,,,__1,:,Int,;,_10c,:,Z,;,___,:,_R_,),{,},},<EOF>''',
                101
            )
        )

    def test_833(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D_:_{}Class n_C8a_1{Destructor (){}$0(){}WG(_A,_:a;ZU_3,u:String ;a,L9:Array [Boolean ,0X2D]){}Val $B1_,u7_F9__:Boolean ;i(){Break ;}$1(){}Destructor (){} }''',
                '''Class,D_,:,_,{,},Class,n_C8a_1,{,Destructor,(,),{,},$0,(,),{,},WG,(,_A,,,_,:,a,;,ZU_3,,,u,:,String,;,a,,,L9,:,Array,[,Boolean,,,0X2D,],),{,},Val,$B1_,,,u7_F9__,:,Boolean,;,i,(,),{,Break,;,},$1,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_834(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4F{Destructor (){}___(g:Float ;_0wW2o__d:E;O:__T1;i__,J:Array [Array [Array [Array [Float ,0B1011111],11_6],87],0B1]){}$37(){} }''',
                '''Class,_4F,{,Destructor,(,),{,},___,(,g,:,Float,;,_0wW2o__d,:,E,;,O,:,__T1,;,i__,,,J,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1011111,],,,116,],,,87,],,,0B1,],),{,},$37,(,),{,},},<EOF>''',
                101
            )
        )

    def test_835(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:v{}Class _C{Constructor (d25Z8_7,K2,F,_5,_,_:c__5a;_,r:String ;V,Y53s,_,_:Float ){}Val $1Ri6,$M:y;Constructor (){} }Class _{}''',
                '''Class,k,:,v,{,},Class,_C,{,Constructor,(,d25Z8_7,,,K2,,,F,,,_5,,,_,,,_,:,c__5a,;,_,,,r,:,String,;,V,,,Y53s,,,_,,,_,:,Float,),{,},Val,$1Ri6,,,$M,:,y,;,Constructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_836(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:E{$_7(c:Array [Array [Array [Int ,0b10_1_1],0b101100],040];_,_,_0:_B){Var _:Int ;Continue ;} }Class D:s{}Class _:c{}Class kD{}Class _{}''',
                '''Class,__,:,E,{,$_7,(,c,:,Array,[,Array,[,Array,[,Int,,,0b1011,],,,0b101100,],,,040,],;,_,,,_,,,_0,:,_B,),{,Var,_,:,Int,;,Continue,;,},},Class,D,:,s,{,},Class,_,:,c,{,},Class,kD,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_837(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _u{}Class _{}Class _n_{}Class _9{}Class i68:_{}Class W:_{}Class S:_{}Class o{Destructor (){Val _:String ;} }Class _N_N:_{}''',
                '''Class,_u,{,},Class,_,{,},Class,_n_,{,},Class,_9,{,},Class,i68,:,_,{,},Class,W,:,_,{,},Class,S,:,_,{,},Class,o,{,Destructor,(,),{,Val,_,:,String,;,},},Class,_N_N,:,_,{,},<EOF>''',
                101
            )
        )

    def test_838(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class t:_{O(T,_,_r,_,x9,Q3,En3:j;_:Array [Array [Array [Array [Array [Array [Float ,0133],0b110001],0b1],9],0B1],05];m:String ){} }Class go5_:E{Var J:Array [String ,0X3];}''',
                '''Class,_,{,},Class,t,:,_,{,O,(,T,,,_,,,_r,,,_,,,x9,,,Q3,,,En3,:,j,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0133,],,,0b110001,],,,0b1,],,,9,],,,0B1,],,,05,],;,m,:,String,),{,},},Class,go5_,:,E,{,Var,J,:,Array,[,String,,,0X3,],;,},<EOF>''',
                101
            )
        )

    def test_839(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _d6:C{}Class _:oI_{Constructor (V1,_,_D_6:_;__,F_,k:_){Break ;Return ;}Destructor (){}Destructor (){Val T,n,_P,X:Array [Array [Array [Int ,07],24],0b1];}M(){} }''',
                '''Class,_d6,:,C,{,},Class,_,:,oI_,{,Constructor,(,V1,,,_,,,_D_6,:,_,;,__,,,F_,,,k,:,_,),{,Break,;,Return,;,},Destructor,(,),{,},Destructor,(,),{,Val,T,,,n,,,_P,,,X,:,Array,[,Array,[,Array,[,Int,,,07,],,,24,],,,0b1,],;,},M,(,),{,},},<EOF>''',
                101
            )
        )

    def test_840(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (x0,__X8:X_8;_:c;n_:Array [Array [String ,624],01];a_:Float ){} }Class _:PM{Constructor (p:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B1_0_1],0XF],07],62],62],0x46],04_24_4],6]){} }''',
                '''Class,_,{,Constructor,(,x0,,,__X8,:,X_8,;,_,:,c,;,n_,:,Array,[,Array,[,String,,,624,],,,01,],;,a_,:,Float,),{,},},Class,_,:,PM,{,Constructor,(,p,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B101,],,,0XF,],,,07,],,,62,],,,62,],,,0x46,],,,04244,],,,6,],),{,},},<EOF>''',
                101
            )
        )

    def test_841(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I3{Var $m,$__68,_:Array [Float ,07];}Class _U:r{}Class V:da{}Class _{Constructor (){Break ;}$__(__i:__){} }''',
                '''Class,I3,{,Var,$m,,,$__68,,,_,:,Array,[,Float,,,07,],;,},Class,_U,:,r,{,},Class,V,:,da,{,},Class,_,{,Constructor,(,),{,Break,;,},$__,(,__i,:,__,),{,},},<EOF>''',
                101
            )
        )

    def test_842(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p4{Constructor (_,E:V_;g:Array [Array [Float ,2_1],055]){} }Class h7:tu{Destructor (){} }Class __2B{Var _,V_j:_;Destructor (){Return ;} }Class c__o17{}''',
                '''Class,p4,{,Constructor,(,_,,,E,:,V_,;,g,:,Array,[,Array,[,Float,,,21,],,,055,],),{,},},Class,h7,:,tu,{,Destructor,(,),{,},},Class,__2B,{,Var,_,,,V_j,:,_,;,Destructor,(,),{,Return,;,},},Class,c__o17,{,},<EOF>''',
                101
            )
        )

    def test_843(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{Val W,_,$__:Array [Float ,1];Constructor (){Break ;}Constructor (){}Val S57h:Array [Array [String ,0B101011],0x37];}''',
                '''Class,n,{,Val,W,,,_,,,$__,:,Array,[,Float,,,1,],;,Constructor,(,),{,Break,;,},Constructor,(,),{,},Val,S57h,:,Array,[,Array,[,String,,,0B101011,],,,0x37,],;,},<EOF>''',
                101
            )
        )

    def test_844(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X:y{Val $tB_:Array [Array [Array [Array [Array [Array [Array [String ,0122],7],35],35],0x10],0b1000001],0B11];}Class WH4A:_v_{}''',
                '''Class,X,:,y,{,Val,$tB_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0122,],,,7,],,,35,],,,35,],,,0x10,],,,0b1000001,],,,0B11,],;,},Class,WH4A,:,_v_,{,},<EOF>''',
                101
            )
        )

    def test_845(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_q:_8j_5_A{}Class pxY:_{}Class D{}Class _{}Class D:g{}Class r{}Class _{n(____36,Z,n,_,P0:Array [Boolean ,0B100101];oB_:Int ){} }Class wo52{}''',
                '''Class,_0_q,:,_8j_5_A,{,},Class,pxY,:,_,{,},Class,D,{,},Class,_,{,},Class,D,:,g,{,},Class,r,{,},Class,_,{,n,(,____36,,,Z,,,n,,,_,,,P0,:,Array,[,Boolean,,,0B100101,],;,oB_,:,Int,),{,},},Class,wo52,{,},<EOF>''',
                101
            )
        )

    def test_846(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Constructor (W:XH;L__,_:Array [Float ,0b1100100];OD,_x,_L_,e__,_,wd_2:Array [Int ,01]){} }Class __:_7l{Destructor (){Return ;Break ;{} }}''',
                '''Class,S,{,Constructor,(,W,:,XH,;,L__,,,_,:,Array,[,Float,,,0b1100100,],;,OD,,,_x,,,_L_,,,e__,,,_,,,wd_2,:,Array,[,Int,,,01,],),{,},},Class,__,:,_7l,{,Destructor,(,),{,Return,;,Break,;,{,},},},<EOF>''',
                101
            )
        )

    def test_847(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:k7{Val $0_5,$_9,$_:Boolean ;Destructor (){Var _:Array [Array [Array [Array [Array [String ,0b101],03],0b1],0XE],0B110010];Continue ;} }''',
                '''Class,Y,:,k7,{,Val,$0_5,,,$_9,,,$_,:,Boolean,;,Destructor,(,),{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b101,],,,03,],,,0b1,],,,0XE,],,,0B110010,],;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_848(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class s{Var __:Array [Boolean ,0B1_00_0];Val $2_625_,e2,_3:Array [Int ,0X5];}Class O{}Class S_:__X{}Class _y{Var $b:S0;}Class E{}''',
                '''Class,_,{,},Class,s,{,Var,__,:,Array,[,Boolean,,,0B1000,],;,Val,$2_625_,,,e2,,,_3,:,Array,[,Int,,,0X5,],;,},Class,O,{,},Class,S_,:,__X,{,},Class,_y,{,Var,$b,:,S0,;,},Class,E,{,},<EOF>''',
                101
            )
        )

    def test_849(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:MA{Destructor (){ {} }}Class _{Destructor (){Break ;}Val $47,$Z,y:Int ;Val l,G7_:Array [Array [Array [String ,0B11110],0602_2],0b1011100];}''',
                '''Class,_,:,MA,{,Destructor,(,),{,{,},},},Class,_,{,Destructor,(,),{,Break,;,},Val,$47,,,$Z,,,y,:,Int,;,Val,l,,,G7_,:,Array,[,Array,[,Array,[,String,,,0B11110,],,,06022,],,,0b1011100,],;,},<EOF>''',
                101
            )
        )

    def test_850(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:d{Var _:Array [String ,01_75_3];_(_q:Int ;a:__){}$y7(_:Array [Array [String ,0x44],0B101100];z:String ){}Constructor (){} }Class _2:S8{}''',
                '''Class,W,:,d,{,Var,_,:,Array,[,String,,,01753,],;,_,(,_q,:,Int,;,a,:,__,),{,},$y7,(,_,:,Array,[,Array,[,String,,,0x44,],,,0B101100,],;,z,:,String,),{,},Constructor,(,),{,},},Class,_2,:,S8,{,},<EOF>''',
                101
            )
        )

    def test_851(self):
        self.assertTrue(
            TestLexer.test(
                '''Class fY_:_{}Class _N{Val _:Array [Array [String ,100],0x4];Val $5_,$4S1t,l8__:Array [Array [Array [Array [Int ,100],0b100011],0b100011],34];}Class _8:_86{}Class _:c_{Destructor (){}Constructor (){} }''',
                '''Class,fY_,:,_,{,},Class,_N,{,Val,_,:,Array,[,Array,[,String,,,100,],,,0x4,],;,Val,$5_,,,$4S1t,,,l8__,:,Array,[,Array,[,Array,[,Array,[,Int,,,100,],,,0b100011,],,,0b100011,],,,34,],;,},Class,_8,:,_86,{,},Class,_,:,c_,{,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_852(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:fQ{Constructor (j5,_,e,_:K_K;t:Array [Array [Array [Array [Float ,0b101000],0b101000],2_7],0X44]){}Constructor (){} }''',
                '''Class,s,:,fQ,{,Constructor,(,j5,,,_,,,e,,,_,:,K_K,;,t,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b101000,],,,0b101000,],,,27,],,,0X44,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_853(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:H{Val s,_:Array [Array [Boolean ,0b10],2];Var _,$e:Int ;Constructor (_:Float ;o2,H8zN:Array [Array [String ,92],0104]){} }Class __E{}''',
                '''Class,Y,:,H,{,Val,s,,,_,:,Array,[,Array,[,Boolean,,,0b10,],,,2,],;,Var,_,,,$e,:,Int,;,Constructor,(,_,:,Float,;,o2,,,H8zN,:,Array,[,Array,[,String,,,92,],,,0104,],),{,},},Class,__E,{,},<EOF>''',
                101
            )
        )

    def test_854(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _:Float ;$J(){} }Class _Q_sV_e{Var $A,$W:Array [Array [String ,0b111010],63];$4(O,_:Array [Array [Array [Int ,0B1],0B1_10],0x43];__,_:Array [Array [String ,016],016];T:Array [Int ,016];Oi:String ;f:Array [Array [Float ,016],016]){Var __,_,z,_1:Array [Int ,0X7_F];} }Class _:k__A{}Class _:_0{}''',
                '''Class,_,{,Var,_,:,Float,;,$J,(,),{,},},Class,_Q_sV_e,{,Var,$A,,,$W,:,Array,[,Array,[,String,,,0b111010,],,,63,],;,$4,(,O,,,_,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B110,],,,0x43,],;,__,,,_,:,Array,[,Array,[,String,,,016,],,,016,],;,T,:,Array,[,Int,,,016,],;,Oi,:,String,;,f,:,Array,[,Array,[,Float,,,016,],,,016,],),{,Var,__,,,_,,,z,,,_1,:,Array,[,Int,,,0X7F,],;,},},Class,_,:,k__A,{,},Class,_,:,_0,{,},<EOF>''',
                101
            )
        )

    def test_855(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M__:_{Constructor (Q:Array [Array [Array [Float ,07],0X3],0X5C];B:Array [Int ,05]){}$s(_H_:J){} }Class o__{}''',
                '''Class,_M__,:,_,{,Constructor,(,Q,:,Array,[,Array,[,Array,[,Float,,,07,],,,0X3,],,,0X5C,],;,B,:,Array,[,Int,,,05,],),{,},$s,(,_H_,:,J,),{,},},Class,o__,{,},<EOF>''',
                101
            )
        )

    def test_856(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ____:p62r_{Val _23U5,$_dG36:Array [String ,042];}Class _q{Val $9_,$2g52_9_,$_r30,$2_:Array [Float ,0X3];}Class d_{Destructor (){}$B_(){Return ;Continue ;} }''',
                '''Class,____,:,p62r_,{,Val,_23U5,,,$_dG36,:,Array,[,String,,,042,],;,},Class,_q,{,Val,$9_,,,$2g52_9_,,,$_r30,,,$2_,:,Array,[,Float,,,0X3,],;,},Class,d_,{,Destructor,(,),{,},$B_,(,),{,Return,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_857(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{_(__:String ;__,Ry:String ;_h,_19_v1,__2,____7_:Array [Int ,07];_,_:Array [Float ,04];J46__328_:Float ){Continue ;}$_7(u,_:Int ;T:Float ;_9:Array [Boolean ,031]){}Val $_N1,yAJP_,$8,$_,__0,$__Y80_G4,$2,$J_7_v,Hq:_;}''',
                '''Class,e,{,_,(,__,:,String,;,__,,,Ry,:,String,;,_h,,,_19_v1,,,__2,,,____7_,:,Array,[,Int,,,07,],;,_,,,_,:,Array,[,Float,,,04,],;,J46__328_,:,Float,),{,Continue,;,},$_7,(,u,,,_,:,Int,;,T,:,Float,;,_9,:,Array,[,Boolean,,,031,],),{,},Val,$_N1,,,yAJP_,,,$8,,,$_,,,__0,,,$__Y80_G4,,,$2,,,$J_7_v,,,Hq,:,_,;,},<EOF>''',
                101
            )
        )

    def test_858(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:N{}Class _n{}Class lB3:t{Constructor (__:Array [Boolean ,0x697_FA];d:_ac;Z_:Array [Array [Float ,0b1],0B100101]){} }''',
                '''Class,_,{,},Class,_,:,N,{,},Class,_n,{,},Class,lB3,:,t,{,Constructor,(,__,:,Array,[,Boolean,,,0x697FA,],;,d,:,_ac,;,Z_,:,Array,[,Array,[,Float,,,0b1,],,,0B100101,],),{,},},<EOF>''',
                101
            )
        )

    def test_859(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _60{Var $_87:_;Constructor (C,l_:Array [Array [Array [Int ,07724_5],0B110100],04];_4i1,_:A2;_:Array [String ,02]){}Val h_:Array [Array [Int ,4],4_5];Destructor (){}Destructor (){} }Class _{Val $mBY2:x;Var $_,_,___1w,_:Y;}Class _:___{}Class _:m{}''',
                '''Class,_60,{,Var,$_87,:,_,;,Constructor,(,C,,,l_,:,Array,[,Array,[,Array,[,Int,,,077245,],,,0B110100,],,,04,],;,_4i1,,,_,:,A2,;,_,:,Array,[,String,,,02,],),{,},Val,h_,:,Array,[,Array,[,Int,,,4,],,,45,],;,Destructor,(,),{,},Destructor,(,),{,},},Class,_,{,Val,$mBY2,:,x,;,Var,$_,,,_,,,___1w,,,_,:,Y,;,},Class,_,:,___,{,},Class,_,:,m,{,},<EOF>''',
                101
            )
        )

    def test_860(self):
        self.assertTrue(
            TestLexer.test(
                '''Class No:_4{Val $L_5:_;$z(_:d){Return ;}Constructor (_,f,_,ck,_6E,_05:Float ;_:Array [Float ,0B100010]){}Constructor (){}Var jI_6:Array [Int ,0B100010];Constructor (W_y8_:Array [Float ,0b10100];I:Float ;_w:Int ){} }''',
                '''Class,No,:,_4,{,Val,$L_5,:,_,;,$z,(,_,:,d,),{,Return,;,},Constructor,(,_,,,f,,,_,,,ck,,,_6E,,,_05,:,Float,;,_,:,Array,[,Float,,,0B100010,],),{,},Constructor,(,),{,},Var,jI_6,:,Array,[,Int,,,0B100010,],;,Constructor,(,W_y8_,:,Array,[,Float,,,0b10100,],;,I,:,Float,;,_w,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_861(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{}Class _{}Class _:__G7{}Class b6_v_{Constructor (_,_:_){ {} }Destructor (){Return ;{} }$_(){} }Class _{}Class _{}''',
                '''Class,X,{,},Class,_,{,},Class,_,:,__G7,{,},Class,b6_v_,{,Constructor,(,_,,,_,:,_,),{,{,},},Destructor,(,),{,Return,;,{,},},$_,(,),{,},},Class,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_862(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{$_(F:Array [Array [Array [Boolean ,73],0105],060_26];o0,y4:Array [Boolean ,023];c,_,d,_1:Float ;_,_,_1iB9,r:Boolean ;T,Q7:O;U:Int ;_:Float ;_,_,m__:Array [Boolean ,0b1_1];e0:Array [Boolean ,3];__z,_W_t_:Boolean ;_,_:I_5){ {}{Break ;} }}''',
                '''Class,u,{,$_,(,F,:,Array,[,Array,[,Array,[,Boolean,,,73,],,,0105,],,,06026,],;,o0,,,y4,:,Array,[,Boolean,,,023,],;,c,,,_,,,d,,,_1,:,Float,;,_,,,_,,,_1iB9,,,r,:,Boolean,;,T,,,Q7,:,O,;,U,:,Int,;,_,:,Float,;,_,,,_,,,m__,:,Array,[,Boolean,,,0b11,],;,e0,:,Array,[,Boolean,,,3,],;,__z,,,_W_t_,:,Boolean,;,_,,,_,:,I_5,),{,{,},{,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_863(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M__{Constructor (_,D,__:Array [Array [Float ,0B111101],037]){Continue ;}Val $K:O;}Class _:z{}Class ___{Destructor (){} }''',
                '''Class,M__,{,Constructor,(,_,,,D,,,__,:,Array,[,Array,[,Float,,,0B111101,],,,037,],),{,Continue,;,},Val,$K,:,O,;,},Class,_,:,z,{,},Class,___,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_864(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Cz{Constructor (_4,vIx:String ;C04,_:b;U:Array [Array [Float ,1],01];t,j_,_,S00:Array [Array [Array [String ,11],0B1001],0B1]){}_9(){}Constructor (){} }Class R_:_1{}''',
                '''Class,Cz,{,Constructor,(,_4,,,vIx,:,String,;,C04,,,_,:,b,;,U,:,Array,[,Array,[,Float,,,1,],,,01,],;,t,,,j_,,,_,,,S00,:,Array,[,Array,[,Array,[,String,,,11,],,,0B1001,],,,0B1,],),{,},_9,(,),{,},Constructor,(,),{,},},Class,R_,:,_1,{,},<EOF>''',
                101
            )
        )

    def test_865(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _D:E_{Destructor (){} }Class r:_U{}Class _{Var $G:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0140],0XB],2],0324_3],0x4E],0140],0X2A],0b1];}''',
                '''Class,_D,:,E_,{,Destructor,(,),{,},},Class,r,:,_U,{,},Class,_,{,Var,$G,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0140,],,,0XB,],,,2,],,,03243,],,,0x4E,],,,0140,],,,0X2A,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_866(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_I{}Class _:QZ{Val $tS:Array [Array [Float ,0b11110],077];_(W,X,z,_k:_4OD_;__:Array [Array [Array [Array [Array [Int ,0xF_5F0],9],0B10101],077],0X45]){}Destructor (){New _().__();} }Class _{$A(l0,_,us4,_:Array [Array [Array [Array [Boolean ,38],0757],0b1],0b10];Y5,W,__26,___54,_,T:Array [Float ,0b1_1];_C,a:Int ){} }''',
                '''Class,__,:,_I,{,},Class,_,:,QZ,{,Val,$tS,:,Array,[,Array,[,Float,,,0b11110,],,,077,],;,_,(,W,,,X,,,z,,,_k,:,_4OD_,;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xF5F0,],,,9,],,,0B10101,],,,077,],,,0X45,],),{,},Destructor,(,),{,New,_,(,),.,__,(,),;,},},Class,_,{,$A,(,l0,,,_,,,us4,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,38,],,,0757,],,,0b1,],,,0b10,],;,Y5,,,W,,,__26,,,___54,,,_,,,T,:,Array,[,Float,,,0b11,],;,_C,,,a,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_867(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (M:Array [Array [Array [Array [Array [Array [String ,021],06],021],045],68],0b1010001]){}$ow(){} }Class _0_{}Class _TQ{}''',
                '''Class,__,{,Constructor,(,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,021,],,,06,],,,021,],,,045,],,,68,],,,0b1010001,],),{,},$ow,(,),{,},},Class,_0_,{,},Class,_TQ,{,},<EOF>''',
                101
            )
        )

    def test_868(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:n{}Class _5:_6{Destructor (){ {} }ad___8(_C:Int ){}$___92iq(B,_:Array [Array [Int ,03],0B1_1_1]){} }Class _Y:V{Destructor (){} }''',
                '''Class,_,:,n,{,},Class,_5,:,_6,{,Destructor,(,),{,{,},},ad___8,(,_C,:,Int,),{,},$___92iq,(,B,,,_,:,Array,[,Array,[,Int,,,03,],,,0B111,],),{,},},Class,_Y,:,V,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_869(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:___5k{}Class m_G{xL44z(){}Var $74__,x,$z1y7__,__:Array [Array [String ,0B1010100],0b1];}Class _x:_0{}Class M6{}''',
                '''Class,_0,:,___5k,{,},Class,m_G,{,xL44z,(,),{,},Var,$74__,,,x,,,$z1y7__,,,__,:,Array,[,Array,[,String,,,0B1010100,],,,0b1,],;,},Class,_x,:,_0,{,},Class,M6,{,},<EOF>''',
                101
            )
        )

    def test_870(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:J{}Class _{}Class E{}Class _9:u{}Class O{}Class L{Destructor (){} }Class iX2_V7O_{}Class L_{}Class d:d{Val $4,O:Array [Array [Int ,94],0XC_3];}''',
                '''Class,_,:,J,{,},Class,_,{,},Class,E,{,},Class,_9,:,u,{,},Class,O,{,},Class,L,{,Destructor,(,),{,},},Class,iX2_V7O_,{,},Class,L_,{,},Class,d,:,d,{,Val,$4,,,O,:,Array,[,Array,[,Int,,,94,],,,0XC3,],;,},<EOF>''',
                101
            )
        )

    def test_871(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Var _,$__:Int ;Constructor (I8,g_:Float ;__c5:Float ;a:vv;g7_,M6,D__:Array [String ,69];v:__o;_:Float ;_,O:S__){Continue ;} }Class _3_{}''',
                '''Class,_,{,Destructor,(,),{,},Var,_,,,$__,:,Int,;,Constructor,(,I8,,,g_,:,Float,;,__c5,:,Float,;,a,:,vv,;,g7_,,,M6,,,D__,:,Array,[,String,,,69,],;,v,:,__o,;,_,:,Float,;,_,,,O,:,S__,),{,Continue,;,},},Class,_3_,{,},<EOF>''',
                101
            )
        )

    def test_872(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:A_{Var ___9_,$je_:Boolean ;}Class FO:__{$_X35(r,_:Array [String ,0X31]){Val aa:Array [Array [String ,03_5_3],68];} }''',
                '''Class,_,:,A_,{,Var,___9_,,,$je_,:,Boolean,;,},Class,FO,:,__,{,$_X35,(,r,,,_,:,Array,[,String,,,0X31,],),{,Val,aa,:,Array,[,Array,[,String,,,0353,],,,68,],;,},},<EOF>''',
                101
            )
        )

    def test_873(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w{Val $08___,g,$s,$6n1,_j0,$99N,$TJ_,_,$_,U,L:Array [Array [String ,0b1],85];Var N6f_E,$kp_,_C,yf4:Int ;Destructor (){} }''',
                '''Class,_w,{,Val,$08___,,,g,,,$s,,,$6n1,,,_j0,,,$99N,,,$TJ_,,,_,,,$_,,,U,,,L,:,Array,[,Array,[,String,,,0b1,],,,85,],;,Var,N6f_E,,,$kp_,,,_C,,,yf4,:,Int,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_874(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{Var $_,$Jn_:y62E;}Class _6:r_6_{Constructor (){} }Class u{Var $_32,$k_:Array [String ,7];Constructor (w,R,g23XFN:Array [Array [Array [Float ,22],0x5],06_1_637];_3_8,h2vD:Array [Int ,0B1]){} }''',
                '''Class,_,{,},Class,_,{,Var,$_,,,$Jn_,:,y62E,;,},Class,_6,:,r_6_,{,Constructor,(,),{,},},Class,u,{,Var,$_32,,,$k_,:,Array,[,String,,,7,],;,Constructor,(,w,,,R,,,g23XFN,:,Array,[,Array,[,Array,[,Float,,,22,],,,0x5,],,,061637,],;,_3_8,,,h2vD,:,Array,[,Int,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_875(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){Break ;Break ;}Constructor (_:Array [Array [Float ,010],0b110010]){}Var $2:vh_;Destructor (){Continue ;} }Class _6m{}''',
                '''Class,_,{,Constructor,(,),{,Break,;,Break,;,},Constructor,(,_,:,Array,[,Array,[,Float,,,010,],,,0b110010,],),{,},Var,$2,:,vh_,;,Destructor,(,),{,Continue,;,},},Class,_6m,{,},<EOF>''',
                101
            )
        )

    def test_876(self):
        self.assertTrue(
            TestLexer.test(
                '''Class riu{Var q14,$H,$_RN7_lK,$__8__,_,$_,$_:Array [Array [Array [Array [Array [Int ,01],0b10],011_06677_2_4],0X9E],8];Val $__8:Array [Array [Float ,80],0B1];}''',
                '''Class,riu,{,Var,q14,,,$H,,,$_RN7_lK,,,$__8__,,,_,,,$_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,0b10,],,,0110667724,],,,0X9E,],,,8,],;,Val,$__8,:,Array,[,Array,[,Float,,,80,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_877(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _L_:_{Constructor (_D_,T,w:P_;__PV:Array [String ,0x3_2];b,Q:Array [Array [Array [String ,042],0X36],04_6_2_7];_:Int ){} }''',
                '''Class,_L_,:,_,{,Constructor,(,_D_,,,T,,,w,:,P_,;,__PV,:,Array,[,String,,,0x32,],;,b,,,Q,:,Array,[,Array,[,Array,[,String,,,042,],,,0X36,],,,04627,],;,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_878(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{Constructor (o_:Array [Int ,07];_Yj4_,i0_o,_:Array [Float ,0b100]){Var _EK5:Array [Array [Float ,0x50],056];} }Class _a1{}''',
                '''Class,_,{,},Class,_,{,Constructor,(,o_,:,Array,[,Int,,,07,],;,_Yj4_,,,i0_o,,,_,:,Array,[,Float,,,0b100,],),{,Var,_EK5,:,Array,[,Array,[,Float,,,0x50,],,,056,],;,},},Class,_a1,{,},<EOF>''',
                101
            )
        )

    def test_879(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3:o{$_(X_:_;b1:Array [Array [Array [Array [Array [Float ,0xA_5],2],96],7],016];_0:Float ;G4__f,R_:Int ){}a(_:_;_k,__:Float ;__n:Boolean ;n:Int ){Val i0_,r4:Boolean ;} }''',
                '''Class,_3,:,o,{,$_,(,X_,:,_,;,b1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xA5,],,,2,],,,96,],,,7,],,,016,],;,_0,:,Float,;,G4__f,,,R_,:,Int,),{,},a,(,_,:,_,;,_k,,,__,:,Float,;,__n,:,Boolean,;,n,:,Int,),{,Val,i0_,,,r4,:,Boolean,;,},},<EOF>''',
                101
            )
        )

    def test_880(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class M_y:__9V{}Class D2:YM{}Class _U_:_{Constructor (L,_,_:Array [String ,0x3C];__2:Array [String ,32];_GcH2f:Array [Int ,042];I:Array [Float ,0x5];_D:_;_f,_g,x__,_1__4_,_ZX:__){} }''',
                '''Class,__,{,},Class,M_y,:,__9V,{,},Class,D2,:,YM,{,},Class,_U_,:,_,{,Constructor,(,L,,,_,,,_,:,Array,[,String,,,0x3C,],;,__2,:,Array,[,String,,,32,],;,_GcH2f,:,Array,[,Int,,,042,],;,I,:,Array,[,Float,,,0x5,],;,_D,:,_,;,_f,,,_g,,,x__,,,_1__4_,,,_ZX,:,__,),{,},},<EOF>''',
                101
            )
        )

    def test_881(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4Ig:_G_{}Class _:w{Val $a__28_:Float ;}Class ___4:D80_{$r5(_2:Array [Array [Int ,0b1_0],91]){Continue ;Break ;} }''',
                '''Class,_4Ig,:,_G_,{,},Class,_,:,w,{,Val,$a__28_,:,Float,;,},Class,___4,:,D80_,{,$r5,(,_2,:,Array,[,Array,[,Int,,,0b10,],,,91,],),{,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_882(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_:_8{}Class hg_{Destructor (){}Val $_d:Boolean ;Var S,_T,$0,$_s:Array [Array [Array [Array [Int ,0xA],4],0xB],0xA_E_51];}Class i:V{}''',
                '''Class,h_,:,_8,{,},Class,hg_,{,Destructor,(,),{,},Val,$_d,:,Boolean,;,Var,S,,,_T,,,$0,,,$_s,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xA,],,,4,],,,0xB,],,,0xAE51,],;,},Class,i,:,V,{,},<EOF>''',
                101
            )
        )

    def test_883(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g1{Var E_y,__,_,$t:o;}Class _{Val T_,__:String ;$W7(_0,k8X8,_3,_,e:Boolean ){Val O,E,_x:Array [Array [Array [Array [Array [Array [Int ,0135],35],0B10_1],35],0x4A],0b1];} }Class M4_2:_{$0_(_,pR_,N,a,__72_:Float ;U,b,rd,_C,_,v:E5;R_:_J__4){Continue ;} }''',
                '''Class,g1,{,Var,E_y,,,__,,,_,,,$t,:,o,;,},Class,_,{,Val,T_,,,__,:,String,;,$W7,(,_0,,,k8X8,,,_3,,,_,,,e,:,Boolean,),{,Val,O,,,E,,,_x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0135,],,,35,],,,0B101,],,,35,],,,0x4A,],,,0b1,],;,},},Class,M4_2,:,_,{,$0_,(,_,,,pR_,,,N,,,a,,,__72_,:,Float,;,U,,,b,,,rd,,,_C,,,_,,,v,:,E5,;,R_,:,_J__4,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_884(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N__x{}Class X:A{Constructor (Q9967:Array [Array [Float ,027_4_6_2],0B11_1]){} }Class _:_{}Class _{Constructor (){}$_p4WPRyz3(___,l__,v:__;K:Array [Int ,03]){} }''',
                '''Class,N__x,{,},Class,X,:,A,{,Constructor,(,Q9967,:,Array,[,Array,[,Float,,,027462,],,,0B111,],),{,},},Class,_,:,_,{,},Class,_,{,Constructor,(,),{,},$_p4WPRyz3,(,___,,,l__,,,v,:,__,;,K,:,Array,[,Int,,,03,],),{,},},<EOF>''',
                101
            )
        )

    def test_885(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class O:_{$1(_:Array [String ,0b101010]){}J(_:Boolean ){Var y:String ;Continue ;Return ;} }Class F:N{Destructor (){} }Class O0:_{Var $7:Array [Array [String ,0X38],027];Destructor (){} }''',
                '''Class,_,{,},Class,O,:,_,{,$1,(,_,:,Array,[,String,,,0b101010,],),{,},J,(,_,:,Boolean,),{,Var,y,:,String,;,Continue,;,Return,;,},},Class,F,:,N,{,Destructor,(,),{,},},Class,O0,:,_,{,Var,$7,:,Array,[,Array,[,String,,,0X38,],,,027,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_886(self):
        self.assertTrue(
            TestLexer.test(
                '''Class LU:V_M_6{}Class N:E67{}Class _:_{X(){}Var $oD5:Float ;Constructor (___4:Array [Boolean ,0B11010]){} }Class s6:w_{Constructor (){Break ;} }''',
                '''Class,LU,:,V_M_6,{,},Class,N,:,E67,{,},Class,_,:,_,{,X,(,),{,},Var,$oD5,:,Float,;,Constructor,(,___4,:,Array,[,Boolean,,,0B11010,],),{,},},Class,s6,:,w_,{,Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_887(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __75_{Var $a:j;Constructor (K6:M;D_:Array [Array [Array [Array [Boolean ,1],0101],0101],0X5_4BE_3];_by:Float ){Continue ;}Val _6:Array [Array [Array [Float ,0X3_0C],05],0101];}''',
                '''Class,__75_,{,Var,$a,:,j,;,Constructor,(,K6,:,M,;,D_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,1,],,,0101,],,,0101,],,,0X54BE3,],;,_by,:,Float,),{,Continue,;,},Val,_6,:,Array,[,Array,[,Array,[,Float,,,0X30C,],,,05,],,,0101,],;,},<EOF>''',
                101
            )
        )

    def test_888(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class E2_:_Z{Constructor (X:_;s:Int ;_:Array [Array [Array [Boolean ,0b1],7],0b1_1]){Var _,_,q,_,Y6_5:Boolean ;} }''',
                '''Class,_,{,},Class,E2_,:,_Z,{,Constructor,(,X,:,_,;,s,:,Int,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,7,],,,0b11,],),{,Var,_,,,_,,,q,,,_,,,Y6_5,:,Boolean,;,},},<EOF>''',
                101
            )
        )

    def test_889(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y5C{}Class _:_{}Class _10:n{Destructor (){}Constructor (){} }Class _M__ZOE{Constructor (j:Array [Array [Boolean ,4],0131]){} }''',
                '''Class,y5C,{,},Class,_,:,_,{,},Class,_10,:,n,{,Destructor,(,),{,},Constructor,(,),{,},},Class,_M__ZOE,{,Constructor,(,j,:,Array,[,Array,[,Boolean,,,4,],,,0131,],),{,},},<EOF>''',
                101
            )
        )

    def test_890(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{Constructor (){} }Class _N{}Class __9_4I:_{}Class q_cO:__{_(_4t,_6,v,gY,yS_,MI4,_,__24T,__l_:_5){}Constructor (){} }''',
                '''Class,F,{,Constructor,(,),{,},},Class,_N,{,},Class,__9_4I,:,_,{,},Class,q_cO,:,__,{,_,(,_4t,,,_6,,,v,,,gY,,,yS_,,,MI4,,,_,,,__24T,,,__l_,:,_5,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_891(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_CK:_z{Constructor (__0_,P5,_R,_1,AO_,_,_Dq0:_670;_,_5s,N,hG6b,_:_;_,_,t:F_hL;U8u_,_,sw:__){}Destructor (){} }Class XVQ{Constructor (M4,_42,Lb:Array [Array [Array [Float ,0B1_10],076],0b10_0_1]){} }Class _{}''',
                '''Class,v_CK,:,_z,{,Constructor,(,__0_,,,P5,,,_R,,,_1,,,AO_,,,_,,,_Dq0,:,_670,;,_,,,_5s,,,N,,,hG6b,,,_,:,_,;,_,,,_,,,t,:,F_hL,;,U8u_,,,_,,,sw,:,__,),{,},Destructor,(,),{,},},Class,XVQ,{,Constructor,(,M4,,,_42,,,Lb,:,Array,[,Array,[,Array,[,Float,,,0B110,],,,076,],,,0b1001,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_892(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:_u__{}Class h_y6z:k_{}Class I:__{Constructor (_,_:Array [Int ,0B1]){} }Class _10_8:_4{}Class kF:_1{Val $_p_:Boolean ;}''',
                '''Class,_,{,},Class,_,:,_u__,{,},Class,h_y6z,:,k_,{,},Class,I,:,__,{,Constructor,(,_,,,_,:,Array,[,Int,,,0B1,],),{,},},Class,_10_8,:,_4,{,},Class,kF,:,_1,{,Val,$_p_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_893(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val ___,$a_m2:__;}Class _e{Val $6,S:Array [Array [Int ,0X87_E],014];Val $_59,v00:uR_;}Class Xt0:K{}Class _7_2{}Class z:ni{}Class _{}Class w:A9w_{Constructor (Ka:String ;_,_:Boolean ;_0,_9:a_c6g1){}Val Mp:_474;}''',
                '''Class,__,{,Val,___,,,$a_m2,:,__,;,},Class,_e,{,Val,$6,,,S,:,Array,[,Array,[,Int,,,0X87E,],,,014,],;,Val,$_59,,,v00,:,uR_,;,},Class,Xt0,:,K,{,},Class,_7_2,{,},Class,z,:,ni,{,},Class,_,{,},Class,w,:,A9w_,{,Constructor,(,Ka,:,String,;,_,,,_,:,Boolean,;,_0,,,_9,:,a_c6g1,),{,},Val,Mp,:,_474,;,},<EOF>''',
                101
            )
        )

    def test_894(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5J:_{Val g,$_,_,$6_,$O_S,_:Int ;Val $_o:Array [Float ,073];_(_,_v_,e,_:a7_){}Val I:Array [Float ,0106_2_6];}''',
                '''Class,_5J,:,_,{,Val,g,,,$_,,,_,,,$6_,,,$O_S,,,_,:,Int,;,Val,$_o,:,Array,[,Float,,,073,],;,_,(,_,,,_v_,,,e,,,_,:,a7_,),{,},Val,I,:,Array,[,Float,,,010626,],;,},<EOF>''',
                101
            )
        )

    def test_895(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Constructor (_:y_;lG_m38,m,_2_S:Array [Array [Array [Int ,0b10000],0B1_0],056];n:vO9){}Destructor (){Return ;} }Class F{Destructor (){} }''',
                '''Class,_,:,__,{,Constructor,(,_,:,y_,;,lG_m38,,,m,,,_2_S,:,Array,[,Array,[,Array,[,Int,,,0b10000,],,,0B10,],,,056,],;,n,:,vO9,),{,},Destructor,(,),{,Return,;,},},Class,F,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_896(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:w{Constructor (qk_03,__7,V_,_5,m8:Array [Array [Array [String ,4_9],0b11_0],26];N_:Int ){} }Class _:B5{Destructor (){Break ;}Val AU:Int ;}''',
                '''Class,_,:,w,{,Constructor,(,qk_03,,,__7,,,V_,,,_5,,,m8,:,Array,[,Array,[,Array,[,String,,,49,],,,0b110,],,,26,],;,N_,:,Int,),{,},},Class,_,:,B5,{,Destructor,(,),{,Break,;,},Val,AU,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_897(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_5{Val $__:Array [Array [Array [Array [Array [Array [Array [Array [String ,0XB_1],0b1],0b1],01],0B1010110],2],0B1010110],02];}Class ex2:_{}''',
                '''Class,_,:,_5,{,Val,$__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XB1,],,,0b1,],,,0b1,],,,01,],,,0B1010110,],,,2,],,,0B1010110,],,,02,],;,},Class,ex2,:,_,{,},<EOF>''',
                101
            )
        )

    def test_898(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:S{}Class __:b{Val $8L_:Array [Array [Int ,0b100011],0B111110];Val P_,$j6:Array [Array [Float ,0b100011],0X44];}Class p_:S6h{}Class y_:_yI{}''',
                '''Class,_,:,S,{,},Class,__,:,b,{,Val,$8L_,:,Array,[,Array,[,Int,,,0b100011,],,,0B111110,],;,Val,P_,,,$j6,:,Array,[,Array,[,Float,,,0b100011,],,,0X44,],;,},Class,p_,:,S6h,{,},Class,y_,:,_yI,{,},<EOF>''',
                101
            )
        )

    def test_899(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class f:Y_{Val _63,$_,$__1_,J:Array [Array [Float ,59],040];}Class _3:G_{Constructor (_,a:String ){ {{} }} }''',
                '''Class,_,{,Destructor,(,),{,},},Class,f,:,Y_,{,Val,_63,,,$_,,,$__1_,,,J,:,Array,[,Array,[,Float,,,59,],,,040,],;,},Class,_3,:,G_,{,Constructor,(,_,,,a,:,String,),{,{,{,},},},},<EOF>''',
                101
            )
        )

    def test_900(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:bk{Val d_6k,t__4,K4,$_:Array [Array [Array [Array [Array [Float ,0x2F],5],0B1],0b11],0144];}Class iO:R{Val _8V:String ;Var $w_,$_,$F_9:k;Var f:Boolean ;}Class K{Constructor (d:W8){} }Class _:x{}''',
                '''Class,_0,:,bk,{,Val,d_6k,,,t__4,,,K4,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x2F,],,,5,],,,0B1,],,,0b11,],,,0144,],;,},Class,iO,:,R,{,Val,_8V,:,String,;,Var,$w_,,,$_,,,$F_9,:,k,;,Var,f,:,Boolean,;,},Class,K,{,Constructor,(,d,:,W8,),{,},},Class,_,:,x,{,},<EOF>''',
                101
            )
        )

    def test_901(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _EfD:_BR{Var P,_,$S:__;Val __:_;Val $_6,_,_,E,$d:UJ_F;Constructor (x__6:Float ;xy:Array [Array [Int ,0X4F],040]){} }''',
                '''Class,_EfD,:,_BR,{,Var,P,,,_,,,$S,:,__,;,Val,__,:,_,;,Val,$_6,,,_,,,_,,,E,,,$d,:,UJ_F,;,Constructor,(,x__6,:,Float,;,xy,:,Array,[,Array,[,Int,,,0X4F,],,,040,],),{,},},<EOF>''',
                101
            )
        )

    def test_902(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3{}Class A{$_k5(_x:Array [Array [Array [Int ,0xF],0X27],0X27];_L:Array [Array [Array [String ,0x2],0x49],20]){Break ;} }''',
                '''Class,_3,{,},Class,A,{,$_k5,(,_x,:,Array,[,Array,[,Array,[,Int,,,0xF,],,,0X27,],,,0X27,],;,_L,:,Array,[,Array,[,Array,[,String,,,0x2,],,,0x49,],,,20,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_903(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val __t_,$4_,$w2_:Array [Float ,0X3];}Class _{}Class _{Destructor (){} }Class r8k7yf:_{Destructor (){}Val _,$6_:Array [String ,050];Var M_8:Array [Boolean ,36];}''',
                '''Class,_,:,_,{,Val,__t_,,,$4_,,,$w2_,:,Array,[,Float,,,0X3,],;,},Class,_,{,},Class,_,{,Destructor,(,),{,},},Class,r8k7yf,:,_,{,Destructor,(,),{,},Val,_,,,$6_,:,Array,[,String,,,050,],;,Var,M_8,:,Array,[,Boolean,,,36,],;,},<EOF>''',
                101
            )
        )

    def test_904(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $93:Array [Float ,02_1_6];Val $_,$X,f,$_,K_f,_n,$_5_4:m;Var $7_:_;Destructor (){} }Class ___{}Class _:_{}Class _US{}''',
                '''Class,_,:,_,{,Var,$93,:,Array,[,Float,,,0216,],;,Val,$_,,,$X,,,f,,,$_,,,K_f,,,_n,,,$_5_4,:,m,;,Var,$7_,:,_,;,Destructor,(,),{,},},Class,___,{,},Class,_,:,_,{,},Class,_US,{,},<EOF>''',
                101
            )
        )

    def test_905(self):
        self.assertTrue(
            TestLexer.test(
                '''Class CP_:k{Var _4:Array [Array [Array [Array [Float ,0xA],031],0B11000],47];Var d9,$S,$_y,$6,___:m6_OF__4;Val $Q,$__gT__:Array [Boolean ,031];$0(){} }''',
                '''Class,CP_,:,k,{,Var,_4,:,Array,[,Array,[,Array,[,Array,[,Float,,,0xA,],,,031,],,,0B11000,],,,47,],;,Var,d9,,,$S,,,$_y,,,$6,,,___,:,m6_OF__4,;,Val,$Q,,,$__gT__,:,Array,[,Boolean,,,031,],;,$0,(,),{,},},<EOF>''',
                101
            )
        )

    def test_906(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:_w{Constructor (u:Boolean ;__4:Array [Int ,0x48_7_2]){D_::$g9();{}{} }Var oX,__5X,$_:Array [Boolean ,0B1];}''',
                '''Class,m,:,_w,{,Constructor,(,u,:,Boolean,;,__4,:,Array,[,Int,,,0x4872,],),{,D_,::,$g9,(,),;,{,},{,},},Var,oX,,,__5X,,,$_,:,Array,[,Boolean,,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_907(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X4k:_d5{E4(_,_7,X:Array [String ,0B1]){}Var $U:String ;}Class _:u{}Class _:_{Constructor (){} }Class _{$_(_:Array [Array [Array [Int ,38],020],0XF90];_9,I,Z_W,Q7:_;h_:Array [Boolean ,0b110111];hs,C___:_P){}Val _,Z_:String ;}Class _:U9{}Class t:_2g_{}''',
                '''Class,X4k,:,_d5,{,E4,(,_,,,_7,,,X,:,Array,[,String,,,0B1,],),{,},Var,$U,:,String,;,},Class,_,:,u,{,},Class,_,:,_,{,Constructor,(,),{,},},Class,_,{,$_,(,_,:,Array,[,Array,[,Array,[,Int,,,38,],,,020,],,,0XF90,],;,_9,,,I,,,Z_W,,,Q7,:,_,;,h_,:,Array,[,Boolean,,,0b110111,],;,hs,,,C___,:,_P,),{,},Val,_,,,Z_,:,String,;,},Class,_,:,U9,{,},Class,t,:,_2g_,{,},<EOF>''',
                101
            )
        )

    def test_908(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _u__{Val _9,_,_:TCDL;Constructor (v_i0:Boolean ;_,_:Array [Float ,02_120]){} }Class _{Val _:Array [Float ,0B1];}Class o6{}''',
                '''Class,_u__,{,Val,_9,,,_,,,_,:,TCDL,;,Constructor,(,v_i0,:,Boolean,;,_,,,_,:,Array,[,Float,,,02120,],),{,},},Class,_,{,Val,_,:,Array,[,Float,,,0B1,],;,},Class,o6,{,},<EOF>''',
                101
            )
        )

    def test_909(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{_(m,_,R:T;n:_;_c7y,_1z:Array [Array [Array [String ,0B110],0B11],0X6];_K__,S:Boolean ;_C,gf:Array [Int ,0124]){} }Class r:_{}Class __5:_{}Class j{}Class _:_{}''',
                '''Class,l,{,_,(,m,,,_,,,R,:,T,;,n,:,_,;,_c7y,,,_1z,:,Array,[,Array,[,Array,[,String,,,0B110,],,,0B11,],,,0X6,],;,_K__,,,S,:,Boolean,;,_C,,,gf,:,Array,[,Int,,,0124,],),{,},},Class,r,:,_,{,},Class,__5,:,_,{,},Class,j,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_910(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w_:_{h(){}Var lVU_1:Array [Boolean ,0B1_010];Var $B9,Ac,$S:Array [Int ,0X4D];Val $__Y_t_k,_lf_:Boolean ;}Class _{$w___(___,_,M:Array [Array [String ,032],5];_,c__,P_:Array [Float ,0b1100011];_a:_){Break ;}Val $92_yr3,$x_:Array [Float ,7_3];}Class S_8:_{}''',
                '''Class,w_,:,_,{,h,(,),{,},Var,lVU_1,:,Array,[,Boolean,,,0B1010,],;,Var,$B9,,,Ac,,,$S,:,Array,[,Int,,,0X4D,],;,Val,$__Y_t_k,,,_lf_,:,Boolean,;,},Class,_,{,$w___,(,___,,,_,,,M,:,Array,[,Array,[,String,,,032,],,,5,],;,_,,,c__,,,P_,:,Array,[,Float,,,0b1100011,],;,_a,:,_,),{,Break,;,},Val,$92_yr3,,,$x_,:,Array,[,Float,,,73,],;,},Class,S_8,:,_,{,},<EOF>''',
                101
            )
        )

    def test_911(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5{$_(){}Val X_:__64_;Var $s_,$__,$R9:Boolean ;Destructor (){Return ;}Constructor (_4:Boolean ;__L,j0,_,_:Int ){}_(Z,d,rj,__:__F3543){} }''',
                '''Class,_5,{,$_,(,),{,},Val,X_,:,__64_,;,Var,$s_,,,$__,,,$R9,:,Boolean,;,Destructor,(,),{,Return,;,},Constructor,(,_4,:,Boolean,;,__L,,,j0,,,_,,,_,:,Int,),{,},_,(,Z,,,d,,,rj,,,__,:,__F3543,),{,},},<EOF>''',
                101
            )
        )

    def test_912(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{}Class m9w:xL{Destructor (){}Constructor (_:j){} }Class __9O{Val r8,$Z,_2y,WE9g2_3_8,k3:Array [Array [Array [Float ,05],07],0B100011];$_(_:Int ){}Val _6_9_7,O,fff_,$_gk___P:Boolean ;}''',
                '''Class,c,{,},Class,m9w,:,xL,{,Destructor,(,),{,},Constructor,(,_,:,j,),{,},},Class,__9O,{,Val,r8,,,$Z,,,_2y,,,WE9g2_3_8,,,k3,:,Array,[,Array,[,Array,[,Float,,,05,],,,07,],,,0B100011,],;,$_,(,_,:,Int,),{,},Val,_6_9_7,,,O,,,fff_,,,$_gk___P,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_913(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:_{Val $_28:Array [Array [Array [Array [Array [Array [Array [Int ,0x5],0B1],035],0x8],0X7],85_4_3],0x7_B3_8];}Class T{}Class _{}''',
                '''Class,S,:,_,{,Val,$_28,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x5,],,,0B1,],,,035,],,,0x8,],,,0X7,],,,8543,],,,0x7B38,],;,},Class,T,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_914(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A6{Destructor (){} }Class v:_{Var _r,_:Boolean ;Var F_l:Array [Array [Float ,0B1_0_0_1],076];Val $43:k_9;__(){} }''',
                '''Class,A6,{,Destructor,(,),{,},},Class,v,:,_,{,Var,_r,,,_,:,Boolean,;,Var,F_l,:,Array,[,Array,[,Float,,,0B1001,],,,076,],;,Val,$43,:,k_9,;,__,(,),{,},},<EOF>''',
                101
            )
        )

    def test_915(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_1__{}Class _6H:_{$S_(O_0O:V0){Zz_::$17();}Val Iw8U5:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1000000],056],0b1],8],9_2],0X29],6],0b1011100],0b1],0117];Val j_:_;Constructor (W_:String ){Var ____k,_,K__,I,Nv7,f2,_,N_:U;} }''',
                '''Class,_,:,_1__,{,},Class,_6H,:,_,{,$S_,(,O_0O,:,V0,),{,Zz_,::,$17,(,),;,},Val,Iw8U5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1000000,],,,056,],,,0b1,],,,8,],,,92,],,,0X29,],,,6,],,,0b1011100,],,,0b1,],,,0117,],;,Val,j_,:,_,;,Constructor,(,W_,:,String,),{,Var,____k,,,_,,,K__,,,I,,,Nv7,,,f2,,,_,,,N_,:,U,;,},},<EOF>''',
                101
            )
        )

    def test_916(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{$1z(_:_Kr_;_:R_7C6_;t,HW:_;_,_5:Array [Array [Array [Int ,0b101001],0x4],0B1]){} }Class _{}Class hP:_{}Class _3H:_v{}''',
                '''Class,i,{,$1z,(,_,:,_Kr_,;,_,:,R_7C6_,;,t,,,HW,:,_,;,_,,,_5,:,Array,[,Array,[,Array,[,Int,,,0b101001,],,,0x4,],,,0B1,],),{,},},Class,_,{,},Class,hP,:,_,{,},Class,_3H,:,_v,{,},<EOF>''',
                101
            )
        )

    def test_917(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __J{Destructor (){}Val _9_g__:Array [Array [Array [Array [Array [Int ,0x21],354],024],0xC0],0b1010011];Val $_:_;Var $_,$_6Z,$8J:String ;}''',
                '''Class,__J,{,Destructor,(,),{,},Val,_9_g__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x21,],,,354,],,,024,],,,0xC0,],,,0b1010011,],;,Val,$_,:,_,;,Var,$_,,,$_6Z,,,$8J,:,String,;,},<EOF>''',
                101
            )
        )

    def test_918(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W7X2___{Constructor (oC:Array [Float ,54];n8Q__vG:Array [Int ,01_7_16_7];_:S){Return ;DB::$_.Q_1s();}Var $Q:Float ;Var $_,$n,$296:String ;Var $Y:E;Var __49,_v_nj_:Array [Boolean ,0b1];}''',
                '''Class,W7X2___,{,Constructor,(,oC,:,Array,[,Float,,,54,],;,n8Q__vG,:,Array,[,Int,,,017167,],;,_,:,S,),{,Return,;,DB,::,$_,.,Q_1s,(,),;,},Var,$Q,:,Float,;,Var,$_,,,$n,,,$296,:,String,;,Var,$Y,:,E,;,Var,__49,,,_v_nj_,:,Array,[,Boolean,,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_919(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:__7_{_(){Return ;}Constructor (){}Var $o:Array [Array [Array [Float ,0X8_4_7_4B],0B1],0B100101];Destructor (){} }''',
                '''Class,b,:,__7_,{,_,(,),{,Return,;,},Constructor,(,),{,},Var,$o,:,Array,[,Array,[,Array,[,Float,,,0X8474B,],,,0B1,],,,0B100101,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_920(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_0:_6){}Val $__FA:String ;Var $M:Z;Constructor (v_U,g:Array [Array [Float ,0b100001],0x30];_,__,_,_Z,__,d,__,N,Z,_:Array [Array [Array [Boolean ,0x30],04_24_066],0x30];_3:Array [Boolean ,0XA26]){}Var $4:Array [Array [Array [String ,0x30],050],0x4];}''',
                '''Class,_,:,_,{,Constructor,(,_0,:,_6,),{,},Val,$__FA,:,String,;,Var,$M,:,Z,;,Constructor,(,v_U,,,g,:,Array,[,Array,[,Float,,,0b100001,],,,0x30,],;,_,,,__,,,_,,,_Z,,,__,,,d,,,__,,,N,,,Z,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0x30,],,,0424066,],,,0x30,],;,_3,:,Array,[,Boolean,,,0XA26,],),{,},Var,$4,:,Array,[,Array,[,Array,[,String,,,0x30,],,,050,],,,0x4,],;,},<EOF>''',
                101
            )
        )

    def test_921(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:_{}Class __:__1{$8_(__:String ;_,_:__){}Val $2_,_,$q7:F;_(H5,f_,I:Float ){}Val $w:Array [Float ,0B1_10];}''',
                '''Class,___,:,_,{,},Class,__,:,__1,{,$8_,(,__,:,String,;,_,,,_,:,__,),{,},Val,$2_,,,_,,,$q7,:,F,;,_,(,H5,,,f_,,,I,:,Float,),{,},Val,$w,:,Array,[,Float,,,0B110,],;,},<EOF>''',
                101
            )
        )

    def test_922(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_4{}Class O:W_4{}Class H:_{$N(V:Array [Array [Array [Array [Array [Array [Boolean ,0X38],0XF_08],0x29],0b100001],015],03_77];Y2:e){} }''',
                '''Class,_,:,_4,{,},Class,O,:,W_4,{,},Class,H,:,_,{,$N,(,V,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X38,],,,0XF08,],,,0x29,],,,0b100001,],,,015,],,,0377,],;,Y2,:,e,),{,},},<EOF>''',
                101
            )
        )

    def test_923(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:K{Var $1_,d,w:Array [String ,0b1001111];Var n_,$_,$_A_,_,B0:Array [Array [Array [String ,0127],0xF],318_7_6];Destructor (){x9Z::$w_();} }''',
                '''Class,d,:,K,{,Var,$1_,,,d,,,w,:,Array,[,String,,,0b1001111,],;,Var,n_,,,$_,,,$_A_,,,_,,,B0,:,Array,[,Array,[,Array,[,String,,,0127,],,,0xF,],,,31876,],;,Destructor,(,),{,x9Z,::,$w_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_924(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{$__(){Break ;}Destructor (){Return ;}Var $47qy_:Float ;$7(_:IH;_,a9,_:t5_4;_ain7:Array [Float ,0B1];eE:pio){} }''',
                '''Class,_,:,__,{,$__,(,),{,Break,;,},Destructor,(,),{,Return,;,},Var,$47qy_,:,Float,;,$7,(,_,:,IH,;,_,,,a9,,,_,:,t5_4,;,_ain7,:,Array,[,Float,,,0B1,],;,eE,:,pio,),{,},},<EOF>''',
                101
            )
        )

    def test_925(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yH:t_s_B{$P(_:Array [Array [Int ,0b1],0B1001111];_:Array [Array [Array [Array [Array [Array [Boolean ,99],99],012],012],0b1000101],012];_,_6,_t:_6__m){} }Class _q:_3{}Class _9_q__uq{}''',
                '''Class,yH,:,t_s_B,{,$P,(,_,:,Array,[,Array,[,Int,,,0b1,],,,0B1001111,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,99,],,,99,],,,012,],,,012,],,,0b1000101,],,,012,],;,_,,,_6,,,_t,:,_6__m,),{,},},Class,_q,:,_3,{,},Class,_9_q__uq,{,},<EOF>''',
                101
            )
        )

    def test_926(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{}Class FAd:__{Var $_,$9de,$_5_7:Int ;}Class k_a:_{}Class K9{Destructor (){}Var $m:Array [Boolean ,0x9];}Class _2uv{}Class e:R3D_{}Class w93{}''',
                '''Class,x,{,},Class,FAd,:,__,{,Var,$_,,,$9de,,,$_5_7,:,Int,;,},Class,k_a,:,_,{,},Class,K9,{,Destructor,(,),{,},Var,$m,:,Array,[,Boolean,,,0x9,],;,},Class,_2uv,{,},Class,e,:,R3D_,{,},Class,w93,{,},<EOF>''',
                101
            )
        )

    def test_927(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_n{}Class __K:Vm{}Class _:O0{Constructor (__y:Boolean ){Pn::$_U();{Val __:Array [Array [Array [String ,0x3],0122],4192];} }Val $DnI0,_,$_:Array [Array [String ,0XF],0b1000101];}''',
                '''Class,__,:,_n,{,},Class,__K,:,Vm,{,},Class,_,:,O0,{,Constructor,(,__y,:,Boolean,),{,Pn,::,$_U,(,),;,{,Val,__,:,Array,[,Array,[,Array,[,String,,,0x3,],,,0122,],,,4192,],;,},},Val,$DnI0,,,_,,,$_,:,Array,[,Array,[,String,,,0XF,],,,0b1000101,],;,},<EOF>''',
                101
            )
        )

    def test_928(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_:u983{u_(){Return ;}Destructor (){} }Class __:_{Constructor (O,_O,qU_:_;_:Array [Array [Array [Boolean ,0B111000],0b11_11_1],0104];__,_,_:__;_,L_:Array [Array [Array [Int ,0XB_1],0b1],0b101111];_:Array [Float ,0xA];_:String ;_,_8,G:Array [Array [Array [Array [String ,0B1],77],0b1],0B1]){} }Class OC:k8__2_J{Destructor (){} }Class f6U{}Class __{$8(__2:Boolean ){} }Class S{}''',
                '''Class,I_,:,u983,{,u_,(,),{,Return,;,},Destructor,(,),{,},},Class,__,:,_,{,Constructor,(,O,,,_O,,,qU_,:,_,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0B111000,],,,0b11111,],,,0104,],;,__,,,_,,,_,:,__,;,_,,,L_,:,Array,[,Array,[,Array,[,Int,,,0XB1,],,,0b1,],,,0b101111,],;,_,:,Array,[,Float,,,0xA,],;,_,:,String,;,_,,,_8,,,G,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,77,],,,0b1,],,,0B1,],),{,},},Class,OC,:,k8__2_J,{,Destructor,(,),{,},},Class,f6U,{,},Class,__,{,$8,(,__2,:,Boolean,),{,},},Class,S,{,},<EOF>''',
                101
            )
        )

    def test_929(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{Destructor (){}Val __,W_:Array [Array [Boolean ,7],0X2_2];Val $7_,p:d;Destructor (){Break ;Continue ;}Var _:p;}''',
                '''Class,R,{,Destructor,(,),{,},Val,__,,,W_,:,Array,[,Array,[,Boolean,,,7,],,,0X22,],;,Val,$7_,,,p,:,d,;,Destructor,(,),{,Break,;,Continue,;,},Var,_,:,p,;,},<EOF>''',
                101
            )
        )

    def test_930(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (s:Array [Array [Array [Int ,0422],0b1],0101];__6:Array [Array [Float ,0X20],0b1100001];_2,_N:Float ){} }Class _:w{}''',
                '''Class,_,{,Constructor,(,s,:,Array,[,Array,[,Array,[,Int,,,0422,],,,0b1,],,,0101,],;,__6,:,Array,[,Array,[,Float,,,0X20,],,,0b1100001,],;,_2,,,_N,:,Float,),{,},},Class,_,:,w,{,},<EOF>''',
                101
            )
        )

    def test_931(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $_,_,$Yy9h__:r9H;$L(_:Array [Boolean ,02_1];b,V:s;_a_:Int ){}Val _0,$i,$1,_p6_m:Array [Array [Array [Array [Array [Int ,9_4],0102],31],0B1001010],01];Destructor (){} }''',
                '''Class,_,:,_,{,Var,$_,,,_,,,$Yy9h__,:,r9H,;,$L,(,_,:,Array,[,Boolean,,,021,],;,b,,,V,:,s,;,_a_,:,Int,),{,},Val,_0,,,$i,,,$1,,,_p6_m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,94,],,,0102,],,,31,],,,0B1001010,],,,01,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_932(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_{}Class _{Constructor (){}Var $_6X_,$_:Array [Boolean ,0X5F];}Class __{Var $Z:Array [Array [Array [Array [Array [Array [Float ,0b1],0x7],17],0b1],1],0XE];}''',
                '''Class,k_,{,},Class,_,{,Constructor,(,),{,},Var,$_6X_,,,$_,:,Array,[,Boolean,,,0X5F,],;,},Class,__,{,Var,$Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0x7,],,,17,],,,0b1,],,,1,],,,0XE,],;,},<EOF>''',
                101
            )
        )

    def test_933(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __l4{}Class G_8:__{Destructor (){Val __,_i,_,K,g3_6:Float ;} }Class _:_{K(){S__66::$T__().m9();Return ;} }''',
                '''Class,__l4,{,},Class,G_8,:,__,{,Destructor,(,),{,Val,__,,,_i,,,_,,,K,,,g3_6,:,Float,;,},},Class,_,:,_,{,K,(,),{,S__66,::,$T__,(,),.,m9,(,),;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_934(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:P7{}Class _:H{$4_7g(){}Constructor (U,L,o95Y4:Array [String ,86]){}Constructor (s,B3dk,_rG,_:__;u,P_:L3_2){} }''',
                '''Class,A,:,P7,{,},Class,_,:,H,{,$4_7g,(,),{,},Constructor,(,U,,,L,,,o95Y4,:,Array,[,String,,,86,],),{,},Constructor,(,s,,,B3dk,,,_rG,,,_,:,__,;,u,,,P_,:,L3_2,),{,},},<EOF>''',
                101
            )
        )

    def test_935(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _00{}Class _54:N7_{_(K6p:Array [Array [Array [Boolean ,0XF],0B1_010],0XF]){}Val $Jb:Array [Array [Float ,0XB],12];Destructor (){}Val T:_;Constructor (_:Boolean ;_:Float ){} }''',
                '''Class,_00,{,},Class,_54,:,N7_,{,_,(,K6p,:,Array,[,Array,[,Array,[,Boolean,,,0XF,],,,0B1010,],,,0XF,],),{,},Val,$Jb,:,Array,[,Array,[,Float,,,0XB,],,,12,],;,Destructor,(,),{,},Val,T,:,_,;,Constructor,(,_,:,Boolean,;,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_936(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gq{Val $a,_K:Int ;Val $_:String ;}Class G:g_1{q8(q__y5oxN,U:String ;_,_:Array [Array [String ,88],0b1_11]){Break ;Break ;}Constructor (_,_,i_,F2_:Array [String ,0b1_0];_,cW:_;_:O4){} }''',
                '''Class,gq,{,Val,$a,,,_K,:,Int,;,Val,$_,:,String,;,},Class,G,:,g_1,{,q8,(,q__y5oxN,,,U,:,String,;,_,,,_,:,Array,[,Array,[,String,,,88,],,,0b111,],),{,Break,;,Break,;,},Constructor,(,_,,,_,,,i_,,,F2_,:,Array,[,String,,,0b10,],;,_,,,cW,:,_,;,_,:,O4,),{,},},<EOF>''',
                101
            )
        )

    def test_937(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z_:w3{Destructor (){}Destructor (){}$_(){} }Class __1E61:m__{Val _i:Array [Array [Array [Array [Float ,010],0b1],01_26],0x61];}''',
                '''Class,z_,:,w3,{,Destructor,(,),{,},Destructor,(,),{,},$_,(,),{,},},Class,__1E61,:,m__,{,Val,_i,:,Array,[,Array,[,Array,[,Array,[,Float,,,010,],,,0b1,],,,0126,],,,0x61,],;,},<EOF>''',
                101
            )
        )

    def test_938(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:_SK{}Class G{}Class _9wR:k{Constructor (__,_49,H:Array [Float ,24];_y,_,g,_2iB,Q:Array [String ,07];_T0,_:Array [Array [Int ,030],24];_,z,d:Float ;_,_:Array [Boolean ,07];DuH:_3){} }Class __:__{_(){} }Class _4i:_{Val _H:Int ;}Class _4{Destructor (){} }Class _:_71{}Class _{}''',
                '''Class,C,:,_SK,{,},Class,G,{,},Class,_9wR,:,k,{,Constructor,(,__,,,_49,,,H,:,Array,[,Float,,,24,],;,_y,,,_,,,g,,,_2iB,,,Q,:,Array,[,String,,,07,],;,_T0,,,_,:,Array,[,Array,[,Int,,,030,],,,24,],;,_,,,z,,,d,:,Float,;,_,,,_,:,Array,[,Boolean,,,07,],;,DuH,:,_3,),{,},},Class,__,:,__,{,_,(,),{,},},Class,_4i,:,_,{,Val,_H,:,Int,;,},Class,_4,{,Destructor,(,),{,},},Class,_,:,_71,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_939(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_6U4{}Class _6:_2_{$p(_t,n_47,_:Array [Array [Array [Array [String ,0b101000],073],10],0B1010011];EN8i__i7c,_,o5_:Array [String ,1]){} }''',
                '''Class,_,:,_6U4,{,},Class,_6,:,_2_,{,$p,(,_t,,,n_47,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b101000,],,,073,],,,10,],,,0B1010011,],;,EN8i__i7c,,,_,,,o5_,:,Array,[,String,,,1,],),{,},},<EOF>''',
                101
            )
        )

    def test_940(self):
        self.assertTrue(
            TestLexer.test(
                '''Class EN_:_{$__(M:W;a_WJ22:Float ){Continue ;} }Class I{}Class i04__J{}Class t_{_6g(_:Array [Array [Array [Array [String ,0114],0B1],0114],0x43];d:Array [Array [String ,0x43],0x1_C]){}Constructor (){Break ;} }Class _IH5:_{}''',
                '''Class,EN_,:,_,{,$__,(,M,:,W,;,a_WJ22,:,Float,),{,Continue,;,},},Class,I,{,},Class,i04__J,{,},Class,t_,{,_6g,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0114,],,,0B1,],,,0114,],,,0x43,],;,d,:,Array,[,Array,[,String,,,0x43,],,,0x1C,],),{,},Constructor,(,),{,Break,;,},},Class,_IH5,:,_,{,},<EOF>''',
                101
            )
        )

    def test_941(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O__:__{$g1__(){}Val c,$_:Boolean ;_(d7,fk,H6,ZJ8_2,Y7,_,y92,_,_,_,_,_e,M48:Array [Array [Array [String ,0x4B],3_6_00],0b1001]){}Destructor (){} }''',
                '''Class,O__,:,__,{,$g1__,(,),{,},Val,c,,,$_,:,Boolean,;,_,(,d7,,,fk,,,H6,,,ZJ8_2,,,Y7,,,_,,,y92,,,_,,,_,,,_,,,_,,,_e,,,M48,:,Array,[,Array,[,Array,[,String,,,0x4B,],,,3600,],,,0b1001,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_942(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){} }Class _:_S{Var $s,$__,_:Float ;Constructor (Y:Float ){} }Class _{$9(s:Array [Array [Array [String ,01_13_6_7],0b1_1_0],0B101001]){}Var $8,$4:Array [Int ,0B1100_0];}''',
                '''Class,__,{,Destructor,(,),{,},},Class,_,:,_S,{,Var,$s,,,$__,,,_,:,Float,;,Constructor,(,Y,:,Float,),{,},},Class,_,{,$9,(,s,:,Array,[,Array,[,Array,[,String,,,011367,],,,0b110,],,,0B101001,],),{,},Var,$8,,,$4,:,Array,[,Int,,,0B11000,],;,},<EOF>''',
                101
            )
        )

    def test_943(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _t{}Class k_{}Class y:O6{Var A:_F0;Val u:_;}Class _4{Destructor (){Continue ;}Constructor (_2:Array [Array [Array [Array [Float ,0260],04],0B1000],030]){Break ;Var _,R:Array [Array [Array [Array [Array [Float ,0132],0b1001011],92],0B10],03];} }''',
                '''Class,_t,{,},Class,k_,{,},Class,y,:,O6,{,Var,A,:,_F0,;,Val,u,:,_,;,},Class,_4,{,Destructor,(,),{,Continue,;,},Constructor,(,_2,:,Array,[,Array,[,Array,[,Array,[,Float,,,0260,],,,04,],,,0B1000,],,,030,],),{,Break,;,Var,_,,,R,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0132,],,,0b1001011,],,,92,],,,0B10,],,,03,],;,},},<EOF>''',
                101
            )
        )

    def test_944(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Wc:_{}Class N:l0{XB_(){Var T:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B100],77],6_9],0X3],938_8_77],02],0x13],024];Continue ;} }Class q3{}''',
                '''Class,Wc,:,_,{,},Class,N,:,l0,{,XB_,(,),{,Var,T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B100,],,,77,],,,69,],,,0X3,],,,938877,],,,02,],,,0x13,],,,024,],;,Continue,;,},},Class,q3,{,},<EOF>''',
                101
            )
        )

    def test_945(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{Val _:Boolean ;}Class _:_{Constructor (){} }Class _M5{Val I7_Q5___f,w,$G_7:Array [Array [Array [Int ,025],0X2E],06];Destructor (){}Destructor (){Continue ;} }Class _c:__{}''',
                '''Class,x,{,Val,_,:,Boolean,;,},Class,_,:,_,{,Constructor,(,),{,},},Class,_M5,{,Val,I7_Q5___f,,,w,,,$G_7,:,Array,[,Array,[,Array,[,Int,,,025,],,,0X2E,],,,06,],;,Destructor,(,),{,},Destructor,(,),{,Continue,;,},},Class,_c,:,__,{,},<EOF>''',
                101
            )
        )

    def test_946(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class r_14_3_i:_{Val _g7q:Boolean ;Var $_:__;ci(g_9,V,_8:C3;_,y_5_:yxT;m,_,_u_,_B___,_:Array [Array [Int ,0X2B],76]){Return ;}Val $3t,_:__ih__;Ff5H_(){} }''',
                '''Class,_,{,},Class,r_14_3_i,:,_,{,Val,_g7q,:,Boolean,;,Var,$_,:,__,;,ci,(,g_9,,,V,,,_8,:,C3,;,_,,,y_5_,:,yxT,;,m,,,_,,,_u_,,,_B___,,,_,:,Array,[,Array,[,Int,,,0X2B,],,,76,],),{,Return,;,},Val,$3t,,,_,:,__ih__,;,Ff5H_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_947(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _p:__{}Class c__:e{}Class R_:_{Constructor (sF_:Array [Array [Array [Array [Float ,0B1011011],0X3_4_79_82],26],0XD]){}Destructor (){Break ;}Constructor (){}Destructor (){}Val _:__;}Class H:_{}Class _:_{}''',
                '''Class,_p,:,__,{,},Class,c__,:,e,{,},Class,R_,:,_,{,Constructor,(,sF_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1011011,],,,0X347982,],,,26,],,,0XD,],),{,},Destructor,(,),{,Break,;,},Constructor,(,),{,},Destructor,(,),{,},Val,_,:,__,;,},Class,H,:,_,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_948(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _S:P8{}Class cS_:vy{$G(_,__:Array [Array [Boolean ,3_9],0124];x,X_,I:_3;K,_,_8u_,_:Array [Array [Boolean ,0124],0x48]){} }''',
                '''Class,_S,:,P8,{,},Class,cS_,:,vy,{,$G,(,_,,,__,:,Array,[,Array,[,Boolean,,,39,],,,0124,],;,x,,,X_,,,I,:,_3,;,K,,,_,,,_8u_,,,_,:,Array,[,Array,[,Boolean,,,0124,],,,0x48,],),{,},},<EOF>''',
                101
            )
        )

    def test_949(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_r{v(mQ5F_0,c,_r_,_6,z4:Array [Array [Array [String ,05_5],35],0B11];d_y,_:Int ){}Constructor (_:String ;B_,_:Array [Array [String ,0X6],35]){} }Class _{}Class e{}''',
                '''Class,_,:,_r,{,v,(,mQ5F_0,,,c,,,_r_,,,_6,,,z4,:,Array,[,Array,[,Array,[,String,,,055,],,,35,],,,0B11,],;,d_y,,,_,:,Int,),{,},Constructor,(,_,:,String,;,B_,,,_,:,Array,[,Array,[,String,,,0X6,],,,35,],),{,},},Class,_,{,},Class,e,{,},<EOF>''',
                101
            )
        )

    def test_950(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{}Class Vg__I:Jk{Constructor (W_,S:Float ){}Destructor (){}Var $Y8,$5,o__:Array [Array [Int ,0127],23];}Class ___O{}''',
                '''Class,T,{,},Class,Vg__I,:,Jk,{,Constructor,(,W_,,,S,:,Float,),{,},Destructor,(,),{,},Var,$Y8,,,$5,,,o__,:,Array,[,Array,[,Int,,,0127,],,,23,],;,},Class,___O,{,},<EOF>''',
                101
            )
        )

    def test_951(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c9{Destructor (){Continue ;Val _:B;}Val $_wt:Array [Float ,0b10111];}Class V{Constructor (_i:Int ;C,fR_,__,_:String ){} }''',
                '''Class,c9,{,Destructor,(,),{,Continue,;,Val,_,:,B,;,},Val,$_wt,:,Array,[,Float,,,0b10111,],;,},Class,V,{,Constructor,(,_i,:,Int,;,C,,,fR_,,,__,,,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_952(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){ {}Return ;}_(_,s:v2_){Var _:Float ;} }Class u{Val _,$M,$2:Array [String ,0b111000];Destructor (){} }''',
                '''Class,_,{,Destructor,(,),{,{,},Return,;,},_,(,_,,,s,:,v2_,),{,Var,_,:,Float,;,},},Class,u,{,Val,_,,,$M,,,$2,:,Array,[,String,,,0b111000,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_953(self):
        self.assertTrue(
            TestLexer.test(
                '''Class MX:a{Constructor (b:Array [Array [Array [String ,0X30],0B1010010],020];_:Boolean ){Break ;}Destructor (){Break ;Break ;} }''',
                '''Class,MX,:,a,{,Constructor,(,b,:,Array,[,Array,[,Array,[,String,,,0X30,],,,0B1010010,],,,020,],;,_,:,Boolean,),{,Break,;,},Destructor,(,),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_954(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __0{Var __,__K,x:_;$c___7_(q7:Array [String ,8_5_1818];_b_,_1_,_,__:Array [Float ,0B111000]){}Var _s,_30:Array [Array [Boolean ,0b1010111],77];Destructor (){} }''',
                '''Class,__0,{,Var,__,,,__K,,,x,:,_,;,$c___7_,(,q7,:,Array,[,String,,,851818,],;,_b_,,,_1_,,,_,,,__,:,Array,[,Float,,,0B111000,],),{,},Var,_s,,,_30,:,Array,[,Array,[,Boolean,,,0b1010111,],,,77,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_955(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:U_4m{}Class Y{Var $4_5,__,Jz8_:_n;Val Y:_;Val _,N3:Array [Array [Array [Int ,0x14],5],0B11];$_96(_:_){}x(){} }''',
                '''Class,__,:,U_4m,{,},Class,Y,{,Var,$4_5,,,__,,,Jz8_,:,_n,;,Val,Y,:,_,;,Val,_,,,N3,:,Array,[,Array,[,Array,[,Int,,,0x14,],,,5,],,,0B11,],;,$_96,(,_,:,_,),{,},x,(,),{,},},<EOF>''',
                101
            )
        )

    def test_956(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _B3___8g8{Var _V5_:Boolean ;}Class s9{Var $Hq:String ;Val $5v3_,_9,g,$G2l,$_:Array [Array [Array [Array [Array [Int ,0x5B],0X3F],27],0XAE1],0b10];Destructor (){} }''',
                '''Class,_B3___8g8,{,Var,_V5_,:,Boolean,;,},Class,s9,{,Var,$Hq,:,String,;,Val,$5v3_,,,_9,,,g,,,$G2l,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x5B,],,,0X3F,],,,27,],,,0XAE1,],,,0b10,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_957(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7E{Constructor (p,_,L_,_9Y_R:Float ;_:Boolean ;_US,__:Boolean ;_L,dz_M,_:k){}Destructor (){Var T3r9,f1,F_,_sG,_,_r,J8uQG_,_M:Boolean ;}Val $_:_;Var $G5:Int ;}Class U{}Class k{Val _,$_,_,$j1:_;}''',
                '''Class,_7E,{,Constructor,(,p,,,_,,,L_,,,_9Y_R,:,Float,;,_,:,Boolean,;,_US,,,__,:,Boolean,;,_L,,,dz_M,,,_,:,k,),{,},Destructor,(,),{,Var,T3r9,,,f1,,,F_,,,_sG,,,_,,,_r,,,J8uQG_,,,_M,:,Boolean,;,},Val,$_,:,_,;,Var,$G5,:,Int,;,},Class,U,{,},Class,k,{,Val,_,,,$_,,,_,,,$j1,:,_,;,},<EOF>''',
                101
            )
        )

    def test_958(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:h_{}Class _1:_{}Class Y:z_Qf{Destructor (){} }Class U:_{Constructor (__:String ;b,_:Int ){Break ;} }Class __{Val $6jN:Int ;}''',
                '''Class,__,:,h_,{,},Class,_1,:,_,{,},Class,Y,:,z_Qf,{,Destructor,(,),{,},},Class,U,:,_,{,Constructor,(,__,:,String,;,b,,,_,:,Int,),{,Break,;,},},Class,__,{,Val,$6jN,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_959(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pxl:__3{}Class _:T{PB__(__s:Array [Array [String ,0B1001101],3_7_4_7_94]){Val _:Array [Array [Array [Boolean ,0xD7A],015],5_6];}Val $O5:Array [Array [String ,7],0XD_C];Destructor (){}$6(){} }''',
                '''Class,pxl,:,__3,{,},Class,_,:,T,{,PB__,(,__s,:,Array,[,Array,[,String,,,0B1001101,],,,374794,],),{,Val,_,:,Array,[,Array,[,Array,[,Boolean,,,0xD7A,],,,015,],,,56,],;,},Val,$O5,:,Array,[,Array,[,String,,,7,],,,0XDC,],;,Destructor,(,),{,},$6,(,),{,},},<EOF>''',
                101
            )
        )

    def test_960(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _uLj__4_4:y2{_(s,i6,_,__0,pmQW6:Array [Array [Array [Array [Array [Array [String ,07],281],0B1100100],0B1_0],03_6],07]){} }''',
                '''Class,_uLj__4_4,:,y2,{,_,(,s,,,i6,,,_,,,__0,,,pmQW6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,281,],,,0B1100100,],,,0B10,],,,036,],,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_961(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gP:_3{$ae(_,sZl,J_,R:Array [Array [Array [Array [Int ,0x34],1_72_3],03],0B11];___,m_:Array [Array [String ,42],0B11];R:Array [Array [Array [Array [String ,0B11],06],0x34],0X24]){}$5(){} }Class r:B_{}''',
                '''Class,gP,:,_3,{,$ae,(,_,,,sZl,,,J_,,,R,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x34,],,,1723,],,,03,],,,0B11,],;,___,,,m_,:,Array,[,Array,[,String,,,42,],,,0B11,],;,R,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11,],,,06,],,,0x34,],,,0X24,],),{,},$5,(,),{,},},Class,r,:,B_,{,},<EOF>''',
                101
            )
        )

    def test_962(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Var $0:Boolean ;Var $5,$TP0,$0X:Array [Array [Array [Array [Float ,0B11001],9_6],022],0x49];}''',
                '''Class,_,{,Constructor,(,),{,},Var,$0,:,Boolean,;,Var,$5,,,$TP0,,,$0X,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B11001,],,,96,],,,022,],,,0x49,],;,},<EOF>''',
                101
            )
        )

    def test_963(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:X{Constructor (_,W0,X:Array [Array [Array [Boolean ,05_6],0142],0X7];_:Array [Array [Array [Array [Array [Array [Int ,0x3],0x59],0142],01_6],0b100],0b1]){ {} }}''',
                '''Class,m,:,X,{,Constructor,(,_,,,W0,,,X,:,Array,[,Array,[,Array,[,Boolean,,,056,],,,0142,],,,0X7,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x3,],,,0x59,],,,0142,],,,016,],,,0b100,],,,0b1,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_964(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:A{Destructor (){} }Class _jB:_7c4{}Class W_{$__M(_,E_,_40,_q:String ;_6_:_2;_,k573_86:Array [Boolean ,0B1]){} }''',
                '''Class,_,:,A,{,Destructor,(,),{,},},Class,_jB,:,_7c4,{,},Class,W_,{,$__M,(,_,,,E_,,,_40,,,_q,:,String,;,_6_,:,_2,;,_,,,k573_86,:,Array,[,Boolean,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_965(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class m:S_{Constructor (__q43:Array [Array [Array [Array [Array [Boolean ,2_2],0x53],66],0XF],0B1011110]){} }Class y:_a{}''',
                '''Class,_,{,},Class,m,:,S_,{,Constructor,(,__q43,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,22,],,,0x53,],,,66,],,,0XF,],,,0B1011110,],),{,},},Class,y,:,_a,{,},<EOF>''',
                101
            )
        )

    def test_966(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{Var M,$5:Array [Float ,027];Var W_,v_:Float ;Destructor (){} }Class _:_u{}Class W:B{Val $7:Array [Array [Array [Boolean ,0b1],77],0b11011];$n44A__k(c:Int ){}$_(){} }''',
                '''Class,g,{,Var,M,,,$5,:,Array,[,Float,,,027,],;,Var,W_,,,v_,:,Float,;,Destructor,(,),{,},},Class,_,:,_u,{,},Class,W,:,B,{,Val,$7,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,77,],,,0b11011,],;,$n44A__k,(,c,:,Int,),{,},$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_967(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:P{}Class _{Destructor (){}Constructor (v3,___ZO:Array [Array [Float ,10],0X1C];_:String ){Break ;} }Class j{}Class _{}Class __:V__{Destructor (){} }''',
                '''Class,_,:,P,{,},Class,_,{,Destructor,(,),{,},Constructor,(,v3,,,___ZO,:,Array,[,Array,[,Float,,,10,],,,0X1C,],;,_,:,String,),{,Break,;,},},Class,j,{,},Class,_,{,},Class,__,:,V__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_968(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:f_6{Constructor (_F:Array [Int ,021];__:Array [Int ,0B101000];zj,_:Float ;XQ5,_:String ){} }Class _:m{Constructor (){}Val _:Float ;}''',
                '''Class,_,:,f_6,{,Constructor,(,_F,:,Array,[,Int,,,021,],;,__,:,Array,[,Int,,,0B101000,],;,zj,,,_,:,Float,;,XQ5,,,_,:,String,),{,},},Class,_,:,m,{,Constructor,(,),{,},Val,_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_969(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:_{}Class M5_c{Val T5e4:Array [Array [Float ,10],10];Constructor (__:w;_:Array [Array [Array [Boolean ,0110],0X19],0x4];UOd1,ol:c__d){} }Class y{Val $2,$O_:T;}''',
                '''Class,B,:,_,{,},Class,M5_c,{,Val,T5e4,:,Array,[,Array,[,Float,,,10,],,,10,],;,Constructor,(,__,:,w,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0110,],,,0X19,],,,0x4,],;,UOd1,,,ol,:,c__d,),{,},},Class,y,{,Val,$2,,,$O_,:,T,;,},<EOF>''',
                101
            )
        )

    def test_970(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:D3{Val $_,$9,$59_,uE:Array [String ,71];Constructor (){}Destructor (){} }Class z_:_1{Val T_:Array [Array [Float ,0xB],6];}''',
                '''Class,W,:,D3,{,Val,$_,,,$9,,,$59_,,,uE,:,Array,[,String,,,71,],;,Constructor,(,),{,},Destructor,(,),{,},},Class,z_,:,_1,{,Val,T_,:,Array,[,Array,[,Float,,,0xB,],,,6,],;,},<EOF>''',
                101
            )
        )

    def test_971(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6:_{}Class _L{$_fe(_:Boolean ;_hD:Array [String ,0b11];_1:m;r9:Array [Array [Array [Array [Array [Float ,22],0X32],0b11_0],0x1],0B1011101]){} }Class VB1Y_:_{}''',
                '''Class,_6,:,_,{,},Class,_L,{,$_fe,(,_,:,Boolean,;,_hD,:,Array,[,String,,,0b11,],;,_1,:,m,;,r9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,22,],,,0X32,],,,0b110,],,,0x1,],,,0B1011101,],),{,},},Class,VB1Y_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_972(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_o__3:V{}Class w{}Class _D89:_{Constructor (L:Float ){}Constructor (_,b:Array [Array [Float ,0xB3],4];Z:VYu6;Yc,_NK:Array [Float ,0B101101]){J::$__();}Constructor (_:String ;_,e:Array [Array [Array [Int ,0b1],06],0X29]){} }''',
                '''Class,d_o__3,:,V,{,},Class,w,{,},Class,_D89,:,_,{,Constructor,(,L,:,Float,),{,},Constructor,(,_,,,b,:,Array,[,Array,[,Float,,,0xB3,],,,4,],;,Z,:,VYu6,;,Yc,,,_NK,:,Array,[,Float,,,0B101101,],),{,J,::,$__,(,),;,},Constructor,(,_,:,String,;,_,,,e,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,06,],,,0X29,],),{,},},<EOF>''',
                101
            )
        )

    def test_973(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $4:_;}Class _{Var J:Int ;}Class _{Var l_:Array [Boolean ,0X4_63];}Class _{Constructor (_f,__:P;_D:g){Return ;}Constructor (){Continue ;} }Class V9{}''',
                '''Class,_,{,Var,$4,:,_,;,},Class,_,{,Var,J,:,Int,;,},Class,_,{,Var,l_,:,Array,[,Boolean,,,0X463,],;,},Class,_,{,Constructor,(,_f,,,__,:,P,;,_D,:,g,),{,Return,;,},Constructor,(,),{,Continue,;,},},Class,V9,{,},<EOF>''',
                101
            )
        )

    def test_974(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:eQx3{}Class _45V:_{Val A,AD,$_81,__:_;Constructor (Y_,_:Boolean ;U,h4,v,q,R6:Array [Array [Array [Boolean ,0102],36_9_67],0X3]){} }''',
                '''Class,_,:,eQx3,{,},Class,_45V,:,_,{,Val,A,,,AD,,,$_81,,,__,:,_,;,Constructor,(,Y_,,,_,:,Boolean,;,U,,,h4,,,v,,,q,,,R6,:,Array,[,Array,[,Array,[,Boolean,,,0102,],,,36967,],,,0X3,],),{,},},<EOF>''',
                101
            )
        )

    def test_975(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2{Constructor (__9:Float ){}$6(_,LD__5f,_Vw:_n;___,v:String ){} }Class _{}Class __:J{}Class T{}Class e_V:v_3_655P{}''',
                '''Class,_2,{,Constructor,(,__9,:,Float,),{,},$6,(,_,,,LD__5f,,,_Vw,:,_n,;,___,,,v,:,String,),{,},},Class,_,{,},Class,__,:,J,{,},Class,T,{,},Class,e_V,:,v_3_655P,{,},<EOF>''',
                101
            )
        )

    def test_976(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Val _Yb_:Int ;}Class _:_v{Var PS_,_:Boolean ;}Class q4{}Class _{Destructor (){F::$r();}Constructor (bFx4s7:Array [Array [Array [Array [Array [Array [Float ,0B11],0X74],0B1100100],70],04],0x9_B];_,v3,_,__8:_){Continue ;Continue ;} }''',
                '''Class,_,{,Destructor,(,),{,},Val,_Yb_,:,Int,;,},Class,_,:,_v,{,Var,PS_,,,_,:,Boolean,;,},Class,q4,{,},Class,_,{,Destructor,(,),{,F,::,$r,(,),;,},Constructor,(,bFx4s7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B11,],,,0X74,],,,0B1100100,],,,70,],,,04,],,,0x9B,],;,_,,,v3,,,_,,,__8,:,_,),{,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_977(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _x:__y{}Class _7:H{Constructor (Eb:_;p:Array [Array [Array [Array [Float ,6],33],0B101101],0b101_0_0]){} }''',
                '''Class,_,:,_,{,},Class,_x,:,__y,{,},Class,_7,:,H,{,Constructor,(,Eb,:,_,;,p,:,Array,[,Array,[,Array,[,Array,[,Float,,,6,],,,33,],,,0B101101,],,,0b10100,],),{,},},<EOF>''',
                101
            )
        )

    def test_978(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:O__4{}Class k_:_3{Destructor (){}Constructor (F,_:_;_,O:F;_:Array [String ,0X4D]){}Destructor (){}Var $4:Int ;}''',
                '''Class,P,:,O__4,{,},Class,k_,:,_3,{,Destructor,(,),{,},Constructor,(,F,,,_,:,_,;,_,,,O,:,F,;,_,:,Array,[,String,,,0X4D,],),{,},Destructor,(,),{,},Var,$4,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_979(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{Destructor (){}$7np4(N4_,q_:Array [Array [String ,5_6_0],0b110010];Y7:Array [String ,0B11_1];M_:Int ;_:n;_63z:Int ;aO_4:_;x_,_3_,__:_;_:Float ){}Constructor (b:Array [Int ,0B1100010]){} }''',
                '''Class,E,{,Destructor,(,),{,},$7np4,(,N4_,,,q_,:,Array,[,Array,[,String,,,560,],,,0b110010,],;,Y7,:,Array,[,String,,,0B111,],;,M_,:,Int,;,_,:,n,;,_63z,:,Int,;,aO_4,:,_,;,x_,,,_3_,,,__,:,_,;,_,:,Float,),{,},Constructor,(,b,:,Array,[,Int,,,0B1100010,],),{,},},<EOF>''',
                101
            )
        )

    def test_980(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{}Class _7{Var _A:Array [Array [String ,0B1010100],7_569];}Class _{$4(_,X:Float ;_,_4_,g:String ;F,_4:Array [Boolean ,06_31_3_5_5];_,L:_){Break ;}Var _,$GT:__A_1V;}Class _e:_{}''',
                '''Class,m,{,},Class,_7,{,Var,_A,:,Array,[,Array,[,String,,,0B1010100,],,,7569,],;,},Class,_,{,$4,(,_,,,X,:,Float,;,_,,,_4_,,,g,:,String,;,F,,,_4,:,Array,[,Boolean,,,0631355,],;,_,,,L,:,_,),{,Break,;,},Var,_,,,$GT,:,__A_1V,;,},Class,_e,:,_,{,},<EOF>''',
                101
            )
        )

    def test_981(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $53,oL,$_:String ;Destructor (){}Var e:I1;Constructor (){} }Class P:__{Val _Xd1:Array [Array [Boolean ,0B101010],0B10];}''',
                '''Class,_,{,Val,$53,,,oL,,,$_,:,String,;,Destructor,(,),{,},Var,e,:,I1,;,Constructor,(,),{,},},Class,P,:,__,{,Val,_Xd1,:,Array,[,Array,[,Boolean,,,0B101010,],,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_982(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:k{Var $_,qrpM,$E_,$Y_7_eR0:Array [String ,1];Destructor (){}Var $_07,$4__:Array [Array [Boolean ,0B10010],0B1];Destructor (){Continue ;}Var $_,s,$x:Array [Array [Array [Array [Array [Array [Int ,92],0x1B],0b1],060],1],060];}''',
                '''Class,_,:,k,{,Var,$_,,,qrpM,,,$E_,,,$Y_7_eR0,:,Array,[,String,,,1,],;,Destructor,(,),{,},Var,$_07,,,$4__,:,Array,[,Array,[,Boolean,,,0B10010,],,,0B1,],;,Destructor,(,),{,Continue,;,},Var,$_,,,s,,,$x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,92,],,,0x1B,],,,0b1,],,,060,],,,1,],,,060,],;,},<EOF>''',
                101
            )
        )

    def test_983(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_{Destructor (){Break ;Break ;} }Class F908:W{_8(Sk:Array [Array [Array [Boolean ,05_67_1],01_4],0b1];fo_:Array [Boolean ,1]){} }''',
                '''Class,N,:,_,{,Destructor,(,),{,Break,;,Break,;,},},Class,F908,:,W,{,_8,(,Sk,:,Array,[,Array,[,Array,[,Boolean,,,05671,],,,014,],,,0b1,],;,fo_,:,Array,[,Boolean,,,1,],),{,},},<EOF>''',
                101
            )
        )

    def test_984(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{E72(x:Int ;_:Array [Boolean ,0X2];_o2,_,m_,z27:Array [Array [Array [Int ,0B1],0b11],0x33];G:_P_929R__g_;_,l,U,__:Int ;_5:Boolean ){} }''',
                '''Class,_,{,E72,(,x,:,Int,;,_,:,Array,[,Boolean,,,0X2,],;,_o2,,,_,,,m_,,,z27,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,0b11,],,,0x33,],;,G,:,_P_929R__g_,;,_,,,l,,,U,,,__,:,Int,;,_5,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_985(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w{}Class _8{Var $_,_,$1,$L_,$_I:Array [String ,04_5];}Class L{Constructor (_7_:_;_p__7:String ;q,R3_,A,_H__n_:D){} }Class _{Destructor (){Return ;}Constructor (_:_;Q51_N,t,_W,EL6:m){}Var T,$j:Float ;Constructor (_E,__:Boolean ;y:_){Return ;} }''',
                '''Class,w,{,},Class,_8,{,Var,$_,,,_,,,$1,,,$L_,,,$_I,:,Array,[,String,,,045,],;,},Class,L,{,Constructor,(,_7_,:,_,;,_p__7,:,String,;,q,,,R3_,,,A,,,_H__n_,:,D,),{,},},Class,_,{,Destructor,(,),{,Return,;,},Constructor,(,_,:,_,;,Q51_N,,,t,,,_W,,,EL6,:,m,),{,},Var,T,,,$j,:,Float,;,Constructor,(,_E,,,__,:,Boolean,;,y,:,_,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_986(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C39:pq{}Class B{CI_z4(){}Constructor (dZ448:R0_I8__O;A_b,K:Boolean ;__Sg6:Array [String ,0124];pf:Array [Array [String ,01],0x9_DB]){} }''',
                '''Class,C39,:,pq,{,},Class,B,{,CI_z4,(,),{,},Constructor,(,dZ448,:,R0_I8__O,;,A_b,,,K,:,Boolean,;,__Sg6,:,Array,[,String,,,0124,],;,pf,:,Array,[,Array,[,String,,,01,],,,0x9DB,],),{,},},<EOF>''',
                101
            )
        )

    def test_987(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h0{}Class u7q:S{Var _27_:Array [Boolean ,0b111111];Var _,k_645,$_,_b:Array [Array [Int ,7_9],050];}Class _:__4{}''',
                '''Class,h0,{,},Class,u7q,:,S,{,Var,_27_,:,Array,[,Boolean,,,0b111111,],;,Var,_,,,k_645,,,$_,,,_b,:,Array,[,Array,[,Int,,,79,],,,050,],;,},Class,_,:,__4,{,},<EOF>''',
                101
            )
        )

    def test_988(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:k___4{C(o:Array [String ,04];H:Va;C:i;I,_IvJ:Float ;x,j_h:Array [Int ,065];__6_:Boolean ;_,KS:Int ){} }Class Z3{}''',
                '''Class,_,:,k___4,{,C,(,o,:,Array,[,String,,,04,],;,H,:,Va,;,C,:,i,;,I,,,_IvJ,:,Float,;,x,,,j_h,:,Array,[,Int,,,065,],;,__6_,:,Boolean,;,_,,,KS,:,Int,),{,},},Class,Z3,{,},<EOF>''',
                101
            )
        )

    def test_989(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_:_{}Class CQ{Constructor (){Var _G_Z,_k_J,_3:Array [Array [Array [Array [Int ,0x4E],0XC_02],0b1_1],0x82];} }Class _:__D_{}Class _:Q{}''',
                '''Class,J_,:,_,{,},Class,CQ,{,Constructor,(,),{,Var,_G_Z,,,_k_J,,,_3,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x4E,],,,0XC02,],,,0b11,],,,0x82,],;,},},Class,_,:,__D_,{,},Class,_,:,Q,{,},<EOF>''',
                101
            )
        )

    def test_990(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4Y_{Constructor (M,_:Array [Array [Array [Array [Array [Array [Int ,0b101],026],0X44],0b100010],012],026];_3c8:_){} }Class W_6d__7{$2N8(w,_Q:String ;_8:Boolean ){}Var _:n;}''',
                '''Class,_4Y_,{,Constructor,(,M,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b101,],,,026,],,,0X44,],,,0b100010,],,,012,],,,026,],;,_3c8,:,_,),{,},},Class,W_6d__7,{,$2N8,(,w,,,_Q,:,String,;,_8,:,Boolean,),{,},Var,_,:,n,;,},<EOF>''',
                101
            )
        )

    def test_991(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _:Array [Float ,0xD_6];Destructor (){}$e_(){Continue ;}Val __:Array [Array [String ,62],0B111111];$1J_(){} }Class o{Var _:Float ;Val _:_;}''',
                '''Class,_,{,Val,_,:,Array,[,Float,,,0xD6,],;,Destructor,(,),{,},$e_,(,),{,Continue,;,},Val,__,:,Array,[,Array,[,String,,,62,],,,0B111111,],;,$1J_,(,),{,},},Class,o,{,Var,_,:,Float,;,Val,_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_992(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q9{Constructor (){}Val F,Wk8:Int ;}Class __k:r7{$B_(g_:Float ;w_g_:Array [String ,06]){} }Class W:c{_(){}o(N:Int ){} }''',
                '''Class,Q9,{,Constructor,(,),{,},Val,F,,,Wk8,:,Int,;,},Class,__k,:,r7,{,$B_,(,g_,:,Float,;,w_g_,:,Array,[,String,,,06,],),{,},},Class,W,:,c,{,_,(,),{,},o,(,N,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_993(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z_f_:_{Destructor (){}Constructor (__Z:String ){}Val _R5:Array [Array [Array [Array [Boolean ,0b10],0X22],2_0_59],0x18];}Class R{}''',
                '''Class,_Z_f_,:,_,{,Destructor,(,),{,},Constructor,(,__Z,:,String,),{,},Val,_R5,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0X22,],,,2059,],,,0x18,],;,},Class,R,{,},<EOF>''',
                101
            )
        )

    def test_994(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Aw:_{Val $z8:Array [Array [Array [Boolean ,0X16],18],0xE0];K(c,_,____,_,_,s_Kc,_,_X,_34:b;_:m3){}Constructor (){}$2(S:f4;xOl_:Array [String ,07_0_1];_,_,_7_s3:Boolean ;_9:Array [Array [Int ,18],0X16];_,T:Array [Array [Int ,0b1011010],0B1];K,_,_:Float ){} }''',
                '''Class,_Aw,:,_,{,Val,$z8,:,Array,[,Array,[,Array,[,Boolean,,,0X16,],,,18,],,,0xE0,],;,K,(,c,,,_,,,____,,,_,,,_,,,s_Kc,,,_,,,_X,,,_34,:,b,;,_,:,m3,),{,},Constructor,(,),{,},$2,(,S,:,f4,;,xOl_,:,Array,[,String,,,0701,],;,_,,,_,,,_7_s3,:,Boolean,;,_9,:,Array,[,Array,[,Int,,,18,],,,0X16,],;,_,,,T,:,Array,[,Array,[,Int,,,0b1011010,],,,0B1,],;,K,,,_,,,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_995(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:K{Constructor (K:_T_3;_:String ;k:String ;_,G_,M:Array [Array [Array [Float ,017],0b110000],0XD]){} }Class s{}''',
                '''Class,h,:,K,{,Constructor,(,K,:,_T_3,;,_,:,String,;,k,:,String,;,_,,,G_,,,M,:,Array,[,Array,[,Array,[,Float,,,017,],,,0b110000,],,,0XD,],),{,},},Class,s,{,},<EOF>''',
                101
            )
        )

    def test_996(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _08:x{Var $m,_:_F2;Val $4:_2y;}Class tCG:_{Destructor (){Continue ;}Val $3,$_:Boolean ;Var _I_2v2,b,__,$__X,$2_a_:Array [Array [Int ,05],0B11010];}''',
                '''Class,_08,:,x,{,Var,$m,,,_,:,_F2,;,Val,$4,:,_2y,;,},Class,tCG,:,_,{,Destructor,(,),{,Continue,;,},Val,$3,,,$_,:,Boolean,;,Var,_I_2v2,,,b,,,__,,,$__X,,,$2_a_,:,Array,[,Array,[,Int,,,05,],,,0B11010,],;,},<EOF>''',
                101
            )
        )

    def test_997(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{Constructor (_LD,__,yC,I:zQ__789;_,_,x,z4,T:_p;m:Array [Float ,0x52]){} }Class Cs{}Class _{}Class j:__{Var _,_:Array [Array [Array [Array [Array [Float ,0b1],1],0b1],78],022];}Class R{}''',
                '''Class,Y,{,Constructor,(,_LD,,,__,,,yC,,,I,:,zQ__789,;,_,,,_,,,x,,,z4,,,T,:,_p,;,m,:,Array,[,Float,,,0x52,],),{,},},Class,Cs,{,},Class,_,{,},Class,j,:,__,{,Var,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,1,],,,0b1,],,,78,],,,022,],;,},Class,R,{,},<EOF>''',
                101
            )
        )

    def test_998(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g5{Constructor (K,_:Array [String ,0124];B9_H2s57,_6,z:Float ;G:_){} }Class __:v{___P(B8_:Array [Array [Array [Int ,3776],03],4];_C,_bOIX,_:Array [Float ,4];_,J,Q_,o,d,j:Float ;_:String ;K:Int ;_:_;_:Int ;a5__:Array [String ,06]){}$87(OX4_,_,_:Int ;F:P;A29_:Array [Array [Array [Boolean ,0X7],1_9],4];V,_,n_,_5:Boolean ){Val w,_:Array [Boolean ,0B111111];} }''',
                '''Class,g5,{,Constructor,(,K,,,_,:,Array,[,String,,,0124,],;,B9_H2s57,,,_6,,,z,:,Float,;,G,:,_,),{,},},Class,__,:,v,{,___P,(,B8_,:,Array,[,Array,[,Array,[,Int,,,3776,],,,03,],,,4,],;,_C,,,_bOIX,,,_,:,Array,[,Float,,,4,],;,_,,,J,,,Q_,,,o,,,d,,,j,:,Float,;,_,:,String,;,K,:,Int,;,_,:,_,;,_,:,Int,;,a5__,:,Array,[,String,,,06,],),{,},$87,(,OX4_,,,_,,,_,:,Int,;,F,:,P,;,A29_,:,Array,[,Array,[,Array,[,Boolean,,,0X7,],,,19,],,,4,],;,V,,,_,,,n_,,,_5,:,Boolean,),{,Val,w,,,_,:,Array,[,Boolean,,,0B111111,],;,},},<EOF>''',
                101
            )
        )

    def test_999(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Array [String ,0X5A];i_s:Boolean ){}Constructor (e:Boolean ){} }Class Bx:l90{}Class p:_{}Class _{}''',
                '''Class,_,{,Constructor,(,_,:,Array,[,String,,,0X5A,],;,i_s,:,Boolean,),{,},Constructor,(,e,:,Boolean,),{,},},Class,Bx,:,l90,{,},Class,p,:,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1000(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jF__2_{Var $s77_:Array [Float ,036];}Class _:_{}Class _:I_{Val $__,$1_:Array [Array [Array [Array [String ,52],0X4_86_9],0b100000],0B1000001];}''',
                '''Class,jF__2_,{,Var,$s77_,:,Array,[,Float,,,036,],;,},Class,_,:,_,{,},Class,_,:,I_,{,Val,$__,,,$1_,:,Array,[,Array,[,Array,[,Array,[,String,,,52,],,,0X4869,],,,0b100000,],,,0B1000001,],;,},<EOF>''',
                101
            )
        )

    def test_1001(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{$_(_1:Array [Array [Boolean ,1_5],0135];_:O_;n_:Array [Array [String ,34],0X6]){} }Class _rok_{}Class L:Aa{}Class R:W{}Class U:_TH_{}Class __:_{}Class _s:n{}''',
                '''Class,s,{,$_,(,_1,:,Array,[,Array,[,Boolean,,,15,],,,0135,],;,_,:,O_,;,n_,:,Array,[,Array,[,String,,,34,],,,0X6,],),{,},},Class,_rok_,{,},Class,L,:,Aa,{,},Class,R,:,W,{,},Class,U,:,_TH_,{,},Class,__,:,_,{,},Class,_s,:,n,{,},<EOF>''',
                101
            )
        )

    def test_1002(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:s_{$5_(f_:__I4;i,_,_,_,X_1_,H7_,K:Array [Array [Array [Array [Array [Array [Array [Boolean ,1],0X3],98],0137],0B100],846],0xE];B:Boolean ;s7:T;_d,U:Array [Int ,0X3]){} }Class Y:z_w{}Class Y:_{}''',
                '''Class,F,:,s_,{,$5_,(,f_,:,__I4,;,i,,,_,,,_,,,_,,,X_1_,,,H7_,,,K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,1,],,,0X3,],,,98,],,,0137,],,,0B100,],,,846,],,,0xE,],;,B,:,Boolean,;,s7,:,T,;,_d,,,U,:,Array,[,Int,,,0X3,],),{,},},Class,Y,:,z_w,{,},Class,Y,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1003(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{}Class A{Constructor (_,_dk:Array [Array [String ,0b11],031];j_,s,_,Xl:Array [Array [Array [Array [Array [Array [Float ,17],0b1000010],031],0B11_1],17],17];l,__,O,_L:_5){}Constructor (rQ,b:Array [String ,031]){Return ;} }''',
                '''Class,B,{,},Class,A,{,Constructor,(,_,,,_dk,:,Array,[,Array,[,String,,,0b11,],,,031,],;,j_,,,s,,,_,,,Xl,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,17,],,,0b1000010,],,,031,],,,0B111,],,,17,],,,17,],;,l,,,__,,,O,,,_L,:,_5,),{,},Constructor,(,rQ,,,b,:,Array,[,String,,,031,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1004(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H:f8_{}Class UX:_{}Class _kP{Val _:Array [Array [Int ,0b1_1_1],0B10_101_0];$_(M_:Array [Array [Array [Array [Array [Float ,06],0xCC],0b1],0X4E],62];_D_29R_:Array [Array [String ,11],3]){} }''',
                '''Class,H,:,f8_,{,},Class,UX,:,_,{,},Class,_kP,{,Val,_,:,Array,[,Array,[,Int,,,0b111,],,,0B101010,],;,$_,(,M_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,06,],,,0xCC,],,,0b1,],,,0X4E,],,,62,],;,_D_29R_,:,Array,[,Array,[,String,,,11,],,,3,],),{,},},<EOF>''',
                101
            )
        )

    def test_1005(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_F:x{Var $K__4:Array [Boolean ,0b110011];Val e:f;Var __,$3_853:Array [Boolean ,0X64];$R_(){ {} }}Class F:L{Constructor (){}Constructor (h_,_Lt_Ea__:Array [Boolean ,72]){} }Class bO_2{Val $_1:Float ;Val n,_16:N;}''',
                '''Class,b_F,:,x,{,Var,$K__4,:,Array,[,Boolean,,,0b110011,],;,Val,e,:,f,;,Var,__,,,$3_853,:,Array,[,Boolean,,,0X64,],;,$R_,(,),{,{,},},},Class,F,:,L,{,Constructor,(,),{,},Constructor,(,h_,,,_Lt_Ea__,:,Array,[,Boolean,,,72,],),{,},},Class,bO_2,{,Val,$_1,:,Float,;,Val,n,,,_16,:,N,;,},<EOF>''',
                101
            )
        )

    def test_1006(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:z{}Class I:e4{}Class _t_:l{}Class _7_____4_:___49{}Class A_:Y{$_(___:Array [Float ,94];SX:v;J1,_T:Boolean ;_12_,l:Int ;_q:Boolean ;_:Float ;_0z_,_:Int ){} }Class _7_:g4{}Class F___{}Class UYDz4:_{Val B,R8,U,_3__:__;_2V(_,_,y,X,_:_){ {{}Continue ;} }}Class q{}''',
                '''Class,B,:,z,{,},Class,I,:,e4,{,},Class,_t_,:,l,{,},Class,_7_____4_,:,___49,{,},Class,A_,:,Y,{,$_,(,___,:,Array,[,Float,,,94,],;,SX,:,v,;,J1,,,_T,:,Boolean,;,_12_,,,l,:,Int,;,_q,:,Boolean,;,_,:,Float,;,_0z_,,,_,:,Int,),{,},},Class,_7_,:,g4,{,},Class,F___,{,},Class,UYDz4,:,_,{,Val,B,,,R8,,,U,,,_3__,:,__,;,_2V,(,_,,,_,,,y,,,X,,,_,:,_,),{,{,{,},Continue,;,},},},Class,q,{,},<EOF>''',
                101
            )
        )

    def test_1007(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n2{Val $R:Array [Int ,0b101111];Var x_:Array [Array [Array [Array [Array [Array [Boolean ,0115],03],0115],0b101111],0B110],0b1];}Class _{}''',
                '''Class,n2,{,Val,$R,:,Array,[,Int,,,0b101111,],;,Var,x_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0115,],,,03,],,,0115,],,,0b101111,],,,0B110,],,,0b1,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1008(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val B:Array [Boolean ,0x2_D8D7];}Class _:l9{Var $8g8_,i:Array [Array [Boolean ,24],0xCC];}Class P_F:_n{}Class V{}Class _{}''',
                '''Class,_,{,Val,B,:,Array,[,Boolean,,,0x2D8D7,],;,},Class,_,:,l9,{,Var,$8g8_,,,i,:,Array,[,Array,[,Boolean,,,24,],,,0xCC,],;,},Class,P_F,:,_n,{,},Class,V,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1009(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:_8{}Class _:l{_(_76,w8B0_447_,R_:Float ;_:_P;b,R,mK9__7,W:K;_,_,o:Boolean ;_,x0:Array [Int ,0113];fv_:Array [Int ,0113];_B____:String ;_:Float ){}Val _:_;Val $_v:Array [Float ,0X9];}Class _{}''',
                '''Class,S,:,_8,{,},Class,_,:,l,{,_,(,_76,,,w8B0_447_,,,R_,:,Float,;,_,:,_P,;,b,,,R,,,mK9__7,,,W,:,K,;,_,,,_,,,o,:,Boolean,;,_,,,x0,:,Array,[,Int,,,0113,],;,fv_,:,Array,[,Int,,,0113,],;,_B____,:,String,;,_,:,Float,),{,},Val,_,:,_,;,Val,$_v,:,Array,[,Float,,,0X9,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1010(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _C2N84E1_V:g_k_m{Constructor (){}Destructor (){} }Class v{Val H3_,$2:m;Constructor (m:String ;_n5:Array [Array [Array [Array [Array [Boolean ,0B1100011],02],04_1_7_40],0b1],0x6]){} }''',
                '''Class,_C2N84E1_V,:,g_k_m,{,Constructor,(,),{,},Destructor,(,),{,},},Class,v,{,Val,H3_,,,$2,:,m,;,Constructor,(,m,:,String,;,_n5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1100011,],,,02,],,,041740,],,,0b1,],,,0x6,],),{,},},<EOF>''',
                101
            )
        )

    def test_1011(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{Destructor (){}Var $_e,_4,_,_J:Array [Array [Boolean ,79],07_2];}Class j:_{Constructor (b,_,_,DS,_6_:__;m:Array [Array [Float ,0b1],0b10]){}Val $_,$0h9,N_:J;}Class T:Q{}''',
                '''Class,_8,{,Destructor,(,),{,},Var,$_e,,,_4,,,_,,,_J,:,Array,[,Array,[,Boolean,,,79,],,,072,],;,},Class,j,:,_,{,Constructor,(,b,,,_,,,_,,,DS,,,_6_,:,__,;,m,:,Array,[,Array,[,Float,,,0b1,],,,0b10,],),{,},Val,$_,,,$0h9,,,N_,:,J,;,},Class,T,:,Q,{,},<EOF>''',
                101
            )
        )

    def test_1012(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$1s(Y9,f_8_ZG_Q___,L_B:_){}b__(q,_5:String ;Y,_a:Array [Array [Array [Array [Float ,9_29],026],0B110001],0X58]){} }''',
                '''Class,_,{,$1s,(,Y9,,,f_8_ZG_Q___,,,L_B,:,_,),{,},b__,(,q,,,_5,:,String,;,Y,,,_a,:,Array,[,Array,[,Array,[,Array,[,Float,,,929,],,,026,],,,0B110001,],,,0X58,],),{,},},<EOF>''',
                101
            )
        )

    def test_1013(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S1A{Val e:Float ;$i_(Z,_,P_:String ){}$n(qK_2,_,_k,_:b519_9K_g_7_t;l,_:Boolean ;v3t,y:Int ){}Var k3:Float ;Val __,$4_,c0:Array [Array [String ,0B1_011_011_0_0],0B111010];Var _6_P5:_;}''',
                '''Class,S1A,{,Val,e,:,Float,;,$i_,(,Z,,,_,,,P_,:,String,),{,},$n,(,qK_2,,,_,,,_k,,,_,:,b519_9K_g_7_t,;,l,,,_,:,Boolean,;,v3t,,,y,:,Int,),{,},Var,k3,:,Float,;,Val,__,,,$4_,,,c0,:,Array,[,Array,[,String,,,0B101101100,],,,0B111010,],;,Var,_6_P5,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1014(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _q{Val $0Y:Float ;Constructor (_,_,h:_;y,x:Int ;j:Int ;_,_:Float ){} }Class wE{Var it:Array [Float ,03];}Class _V:_2{}''',
                '''Class,_q,{,Val,$0Y,:,Float,;,Constructor,(,_,,,_,,,h,:,_,;,y,,,x,:,Int,;,j,:,Int,;,_,,,_,:,Float,),{,},},Class,wE,{,Var,it,:,Array,[,Float,,,03,],;,},Class,_V,:,_2,{,},<EOF>''',
                101
            )
        )

    def test_1015(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_:k5{Var B:Array [Array [String ,0x5],0B1010001];}Class d{}Class _:F{Var $9_fL_Q,$_6,_,$81HrA_:String ;}Class _SG{}Class _3QZ:_{}Class f:r58{}Class L_:_q4N_{}Class __:w_{}Class _{}''',
                '''Class,b_,:,k5,{,Var,B,:,Array,[,Array,[,String,,,0x5,],,,0B1010001,],;,},Class,d,{,},Class,_,:,F,{,Var,$9_fL_Q,,,$_6,,,_,,,$81HrA_,:,String,;,},Class,_SG,{,},Class,_3QZ,:,_,{,},Class,f,:,r58,{,},Class,L_,:,_q4N_,{,},Class,__,:,w_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1016(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:j_{Constructor (_B,Dz_:Array [Int ,0122_2]){Continue ;} }Class W_:_p{}Class _:E{Val _:Array [Array [Float ,0b1010001],0B100100];Val $_F_:_;}Class HP{Constructor (){} }''',
                '''Class,_,:,j_,{,Constructor,(,_B,,,Dz_,:,Array,[,Int,,,01222,],),{,Continue,;,},},Class,W_,:,_p,{,},Class,_,:,E,{,Val,_,:,Array,[,Array,[,Float,,,0b1010001,],,,0B100100,],;,Val,$_F_,:,_,;,},Class,HP,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1017(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_x_{}Class v:x{Constructor (F5,c,_:_;_,j:Array [Array [Float ,0x2E],0104];P:Array [Array [Float ,0xC_7],0X2B];le,i___:__;q,_5V_:__;q:Array [String ,75]){} }''',
                '''Class,_,:,_x_,{,},Class,v,:,x,{,Constructor,(,F5,,,c,,,_,:,_,;,_,,,j,:,Array,[,Array,[,Float,,,0x2E,],,,0104,],;,P,:,Array,[,Array,[,Float,,,0xC7,],,,0X2B,],;,le,,,i___,:,__,;,q,,,_5V_,:,__,;,q,:,Array,[,String,,,75,],),{,},},<EOF>''',
                101
            )
        )

    def test_1018(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_W__5{}Class MP6N{Destructor (){}Destructor (){}Constructor (t17,B9_,e_:Array [Float ,0B1]){}Val $_l_:Array [Array [Float ,05],12];}''',
                '''Class,__,:,_W__5,{,},Class,MP6N,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,t17,,,B9_,,,e_,:,Array,[,Float,,,0B1,],),{,},Val,$_l_,:,Array,[,Array,[,Float,,,05,],,,12,],;,},<EOF>''',
                101
            )
        )

    def test_1019(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3A{Var $3_:Int ;}Class G:H4{Constructor (_68u,_,H_u:Array [Float ,0B1000001];_,r,_4:Array [Boolean ,05];Q,_,t5_0,R1W_,C0:Int ;__L,__N,_:_;_,__:Array [Array [Array [Int ,19],0b1101],0B1_01_0];b,k8:Int ;__,_sX0,omR,_,L,_39345BE2:cJ;_5,a,_:Array [Int ,05]){} }''',
                '''Class,_3A,{,Var,$3_,:,Int,;,},Class,G,:,H4,{,Constructor,(,_68u,,,_,,,H_u,:,Array,[,Float,,,0B1000001,],;,_,,,r,,,_4,:,Array,[,Boolean,,,05,],;,Q,,,_,,,t5_0,,,R1W_,,,C0,:,Int,;,__L,,,__N,,,_,:,_,;,_,,,__,:,Array,[,Array,[,Array,[,Int,,,19,],,,0b1101,],,,0B1010,],;,b,,,k8,:,Int,;,__,,,_sX0,,,omR,,,_,,,L,,,_39345BE2,:,cJ,;,_5,,,a,,,_,:,Array,[,Int,,,05,],),{,},},<EOF>''',
                101
            )
        )

    def test_1020(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Y{}Class _R{Constructor (_a,_4:Array [Array [Array [Array [Array [String ,0B110001],014],0X21],0b1001000],75];vh:Array [Array [Array [Array [Float ,0B110001],07],13],0X5D5]){}Constructor (){} }''',
                '''Class,_Y,{,},Class,_R,{,Constructor,(,_a,,,_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B110001,],,,014,],,,0X21,],,,0b1001000,],,,75,],;,vh,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B110001,],,,07,],,,13,],,,0X5D5,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1021(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{c(a,_,_P:Array [Float ,05_0];Cs4,_Zq,l,haH,_:Array [Array [Array [Float ,02],0X3],5]){}Destructor (){} }''',
                '''Class,_,{,c,(,a,,,_,,,_P,:,Array,[,Float,,,050,],;,Cs4,,,_Zq,,,l,,,haH,,,_,:,Array,[,Array,[,Array,[,Float,,,02,],,,0X3,],,,5,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1022(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class h___1u:yY{$8_(c3,____,__4,pv:_){} }Class D{Constructor (_V,g_3:String ;_:_;__:Array [Array [String ,96],06_12];_:I){} }''',
                '''Class,_,{,},Class,h___1u,:,yY,{,$8_,(,c3,,,____,,,__4,,,pv,:,_,),{,},},Class,D,{,Constructor,(,_V,,,g_3,:,String,;,_,:,_,;,__,:,Array,[,Array,[,String,,,96,],,,0612,],;,_,:,I,),{,},},<EOF>''',
                101
            )
        )

    def test_1023(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D2:U_Ki__{$6(){}Constructor (_:i;x_,_:Float ;___,__:pP__;b_,__:Float ){}Val $0,$j,$p:U;Val $u,_6,WY,$N:Int ;}''',
                '''Class,D2,:,U_Ki__,{,$6,(,),{,},Constructor,(,_,:,i,;,x_,,,_,:,Float,;,___,,,__,:,pP__,;,b_,,,__,:,Float,),{,},Val,$0,,,$j,,,$p,:,U,;,Val,$u,,,_6,,,WY,,,$N,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1024(self):
        self.assertTrue(
            TestLexer.test(
                '''Class IL{}Class _Y_{Var p,CR2__0_A,$t:c;Constructor (){}Constructor (){y2::$_2();}_I0zX_PN(){Continue ;}Val $P_i:Boolean ;}Class Oej{}Class i{}Class _{}Class _{}''',
                '''Class,IL,{,},Class,_Y_,{,Var,p,,,CR2__0_A,,,$t,:,c,;,Constructor,(,),{,},Constructor,(,),{,y2,::,$_2,(,),;,},_I0zX_PN,(,),{,Continue,;,},Val,$P_i,:,Boolean,;,},Class,Oej,{,},Class,i,{,},Class,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1025(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A_9{Constructor (){ {}Break ;}Destructor (){rg::$_W_3();} }Class _{}Class _4G__3{}Class _:i_68T2{}Class L___:_v{}''',
                '''Class,A_9,{,Constructor,(,),{,{,},Break,;,},Destructor,(,),{,rg,::,$_W_3,(,),;,},},Class,_,{,},Class,_4G__3,{,},Class,_,:,i_68T2,{,},Class,L___,:,_v,{,},<EOF>''',
                101
            )
        )

    def test_1026(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{}Class _:W{}Class _:l{Destructor (){Return ;} }Class __W_:_{Val __a,$__,$u,$_,_,$_,$52,$4_5:Array [Array [String ,036],0B1];}''',
                '''Class,G,{,},Class,_,:,W,{,},Class,_,:,l,{,Destructor,(,),{,Return,;,},},Class,__W_,:,_,{,Val,__a,,,$__,,,$u,,,$_,,,_,,,$_,,,$52,,,$4_5,:,Array,[,Array,[,String,,,036,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_1027(self):
        self.assertTrue(
            TestLexer.test(
                '''Class zF:_{Val $R0:Array [Array [Array [Array [Int ,037_62_6],05_1],0x1B],0B1011011];Val $W:_;}Class _:__{}Class _{Val _:H_q;}Class _F{}''',
                '''Class,zF,:,_,{,Val,$R0,:,Array,[,Array,[,Array,[,Array,[,Int,,,037626,],,,051,],,,0x1B,],,,0B1011011,],;,Val,$W,:,_,;,},Class,_,:,__,{,},Class,_,{,Val,_,:,H_q,;,},Class,_F,{,},<EOF>''',
                101
            )
        )

    def test_1028(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_9C_{Destructor (){}$P(_,_:Array [String ,0xA];_,fL5_,_:C_I_o;_n:Array [Array [Boolean ,3_5],95];f7:Int ){} }''',
                '''Class,N,:,_9C_,{,Destructor,(,),{,},$P,(,_,,,_,:,Array,[,String,,,0xA,],;,_,,,fL5_,,,_,:,C_I_o,;,_n,:,Array,[,Array,[,Boolean,,,35,],,,95,],;,f7,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1029(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ql_{}Class _:__{Constructor (__,T9uF,_:Array [Array [Int ,2_133],0B1_1_1];_:Array [String ,010];XL,a_,i:String ;_,_,UY6:Array [Float ,03]){} }''',
                '''Class,Ql_,{,},Class,_,:,__,{,Constructor,(,__,,,T9uF,,,_,:,Array,[,Array,[,Int,,,2133,],,,0B111,],;,_,:,Array,[,String,,,010,],;,XL,,,a_,,,i,:,String,;,_,,,_,,,UY6,:,Array,[,Float,,,03,],),{,},},<EOF>''',
                101
            )
        )

    def test_1030(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y_r_18{}Class _0:_Z_e__E4___{$2Ku6(g,_96_6LSlvg:t;_9_7,_7,x_i5,__B_K,g_Y:Array [Array [Int ,0B11],0112]){} }''',
                '''Class,Y_r_18,{,},Class,_0,:,_Z_e__E4___,{,$2Ku6,(,g,,,_96_6LSlvg,:,t,;,_9_7,,,_7,,,x_i5,,,__B_K,,,g_Y,:,Array,[,Array,[,Int,,,0B11,],,,0112,],),{,},},<EOF>''',
                101
            )
        )

    def test_1031(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Var $9d__5JS6,$_,_vD:__2;$_(__0:Array [Array [Float ,0B1],0B1];c,_,__,T,_,_:String ;H:_;_,k,_:m;_:String ;_q2:_O;fS_6_,_t,q,_t9_:__;_90:Array [Array [Array [Float ,0X2C],03_16],0B101000]){} }''',
                '''Class,a,{,Var,$9d__5JS6,,,$_,,,_vD,:,__2,;,$_,(,__0,:,Array,[,Array,[,Float,,,0B1,],,,0B1,],;,c,,,_,,,__,,,T,,,_,,,_,:,String,;,H,:,_,;,_,,,k,,,_,:,m,;,_,:,String,;,_q2,:,_O,;,fS_6_,,,_t,,,q,,,_t9_,:,__,;,_90,:,Array,[,Array,[,Array,[,Float,,,0X2C,],,,0316,],,,0B101000,],),{,},},<EOF>''',
                101
            )
        )

    def test_1032(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{d(){}Val c,_:Array [Boolean ,042];}Class _miY:zS{}Class _:Qr{}Class _:H{Val $_61805:I_;}Class y4n{Val _0_0:Array [Array [Boolean ,0X2C],5];Val Yt,O,___g36_:z15_;}''',
                '''Class,_9,{,d,(,),{,},Val,c,,,_,:,Array,[,Boolean,,,042,],;,},Class,_miY,:,zS,{,},Class,_,:,Qr,{,},Class,_,:,H,{,Val,$_61805,:,I_,;,},Class,y4n,{,Val,_0_0,:,Array,[,Array,[,Boolean,,,0X2C,],,,5,],;,Val,Yt,,,O,,,___g36_,:,z15_,;,},<EOF>''',
                101
            )
        )

    def test_1033(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _p_,_X2:Array [String ,5];Val $Y8,$h_2,$u,$_UG_:Array [Boolean ,0x35];Val $__4,$0,$Tk_:_R;Constructor (_g2:X;y4_4:_){} }Class V{}''',
                '''Class,_,{,Val,_p_,,,_X2,:,Array,[,String,,,5,],;,Val,$Y8,,,$h_2,,,$u,,,$_UG_,:,Array,[,Boolean,,,0x35,],;,Val,$__4,,,$0,,,$Tk_,:,_R,;,Constructor,(,_g2,:,X,;,y4_4,:,_,),{,},},Class,V,{,},<EOF>''',
                101
            )
        )

    def test_1034(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _vg0{Constructor (V_,q_35:Array [Array [String ,0134],0B11];SL_:Array [Int ,0XD2];E,X_2,_,_,_,n:_){_::$L.ouMd47e();} }''',
                '''Class,_vg0,{,Constructor,(,V_,,,q_35,:,Array,[,Array,[,String,,,0134,],,,0B11,],;,SL_,:,Array,[,Int,,,0XD2,],;,E,,,X_2,,,_,,,_,,,_,,,n,:,_,),{,_,::,$L,.,ouMd47e,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1035(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _MTi{$__8s(){} }Class _:J_{Var n,$4f_:_;U63(){}_X(_,_,_g,P:_){}Constructor (E1_y4:Array [Array [String ,0XD],4_3]){} }''',
                '''Class,_MTi,{,$__8s,(,),{,},},Class,_,:,J_,{,Var,n,,,$4f_,:,_,;,U63,(,),{,},_X,(,_,,,_,,,_g,,,P,:,_,),{,},Constructor,(,E1_y4,:,Array,[,Array,[,String,,,0XD,],,,43,],),{,},},<EOF>''',
                101
            )
        )

    def test_1036(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_{}Class f9:A{}Class _{Val $5X3:__;}Class j1I{}Class o{$k(_1:Array [String ,100]){} }Class QD:B{Destructor (){} }''',
                '''Class,N,:,_,{,},Class,f9,:,A,{,},Class,_,{,Val,$5X3,:,__,;,},Class,j1I,{,},Class,o,{,$k,(,_1,:,Array,[,String,,,100,],),{,},},Class,QD,:,B,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1037(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class NX_1{}Class d:_{}Class _:t_{Constructor (o,_,N_,_,q_1:Array [Array [Array [Boolean ,057],0X2_3],99];O,a,I:D){ {} }}Class _{}Class XH:J{}Class _Q{}''',
                '''Class,_,{,},Class,NX_1,{,},Class,d,:,_,{,},Class,_,:,t_,{,Constructor,(,o,,,_,,,N_,,,_,,,q_1,:,Array,[,Array,[,Array,[,Boolean,,,057,],,,0X23,],,,99,],;,O,,,a,,,I,:,D,),{,{,},},},Class,_,{,},Class,XH,:,J,{,},Class,_Q,{,},<EOF>''',
                101
            )
        )

    def test_1038(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:W{F_9(a6eN28U_:Array [Array [String ,5_76],9_5]){}Var _c_:Array [Boolean ,0XB];}Class D2_w_8p_:_{}Class _:y{}''',
                '''Class,_,:,W,{,F_9,(,a6eN28U_,:,Array,[,Array,[,String,,,576,],,,95,],),{,},Var,_c_,:,Array,[,Boolean,,,0XB,],;,},Class,D2_w_8p_,:,_,{,},Class,_,:,y,{,},<EOF>''',
                101
            )
        )

    def test_1039(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:H_Z_{Val $K,$_M,$x:Int ;Var _:Array [Array [Array [Array [Array [Array [Array [Boolean ,38],0XE_D],0X6],0b10_111_0_0],54],0X2E],0X2E];Constructor (){} }Class _{Destructor (){} }''',
                '''Class,g,:,H_Z_,{,Val,$K,,,$_M,,,$x,:,Int,;,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,38,],,,0XED,],,,0X6,],,,0b1011100,],,,54,],,,0X2E,],,,0X2E,],;,Constructor,(,),{,},},Class,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1040(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __j:y__{Val $_l,_:Int ;Var _A,s,_P__9_:Array [Boolean ,067];}Class N__3{$45v(y14,__nLvN1_6,_:Float ;_:String ){} }Class __{Val $Dea,J:String ;}''',
                '''Class,__j,:,y__,{,Val,$_l,,,_,:,Int,;,Var,_A,,,s,,,_P__9_,:,Array,[,Boolean,,,067,],;,},Class,N__3,{,$45v,(,y14,,,__nLvN1_6,,,_,:,Float,;,_,:,String,),{,},},Class,__,{,Val,$Dea,,,J,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1041(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D:v{}Class _6_:_V0{}Class clP:i{Destructor (){Break ;}Constructor (y:String ){}Val $p,_:String ;Constructor (__3fy:Array [Array [Float ,58],0X9]){}Var $8,$O,$_,_5_,_41C:Array [Float ,0x3A];}Class d{}Class W{}Class N___{}''',
                '''Class,D,:,v,{,},Class,_6_,:,_V0,{,},Class,clP,:,i,{,Destructor,(,),{,Break,;,},Constructor,(,y,:,String,),{,},Val,$p,,,_,:,String,;,Constructor,(,__3fy,:,Array,[,Array,[,Float,,,58,],,,0X9,],),{,},Var,$8,,,$O,,,$_,,,_5_,,,_41C,:,Array,[,Float,,,0x3A,],;,},Class,d,{,},Class,W,{,},Class,N___,{,},<EOF>''',
                101
            )
        )

    def test_1042(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class gd_7:rn{}Class z3_:Uj_{u(_:Float ;x:Boolean ;_,_:Array [String ,4];UA,T,q:Array [Array [Int ,04_7_7],0xB]){} }Class _:_{}''',
                '''Class,_,{,},Class,gd_7,:,rn,{,},Class,z3_,:,Uj_,{,u,(,_,:,Float,;,x,:,Boolean,;,_,,,_,:,Array,[,String,,,4,],;,UA,,,T,,,q,:,Array,[,Array,[,Int,,,0477,],,,0xB,],),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1043(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A8oY__q_6{}Class _{}Class __7{Constructor (__,V,_0:Float ){} }Class __O:z{Var _,_0__2,$_SJ149,$_,_,_:String ;Val h,$1:Array [Float ,8_1_2_08_05];g__6(){} }''',
                '''Class,A8oY__q_6,{,},Class,_,{,},Class,__7,{,Constructor,(,__,,,V,,,_0,:,Float,),{,},},Class,__O,:,z,{,Var,_,,,_0__2,,,$_SJ149,,,$_,,,_,,,_,:,String,;,Val,h,,,$1,:,Array,[,Float,,,8120805,],;,g__6,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1044(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{Val $2:Array [String ,0b1011010];Var $_At3SQ,d_:Array [Int ,0120];Constructor (_9U,_:T;b:_;___,__,f:String ;_:__;_,_,_5,_,__:___;_:Array [Int ,9_8];F,T:z){}Constructor (){Continue ;Break ;} }''',
                '''Class,i,{,Val,$2,:,Array,[,String,,,0b1011010,],;,Var,$_At3SQ,,,d_,:,Array,[,Int,,,0120,],;,Constructor,(,_9U,,,_,:,T,;,b,:,_,;,___,,,__,,,f,:,String,;,_,:,__,;,_,,,_,,,_5,,,_,,,__,:,___,;,_,:,Array,[,Int,,,98,],;,F,,,T,:,z,),{,},Constructor,(,),{,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1045(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5{}Class yO{Val dx,$g,$_:Array [Array [String ,4],030];}Class _{Val O,IN,$H_Y,___,_,_64,$2:Array [Array [Array [Int ,01_1_05],0b1011101],0XDA_3];}Class _:__0{}Class B{}''',
                '''Class,_5,{,},Class,yO,{,Val,dx,,,$g,,,$_,:,Array,[,Array,[,String,,,4,],,,030,],;,},Class,_,{,Val,O,,,IN,,,$H_Y,,,___,,,_,,,_64,,,$2,:,Array,[,Array,[,Array,[,Int,,,01105,],,,0b1011101,],,,0XDA3,],;,},Class,_,:,__0,{,},Class,B,{,},<EOF>''',
                101
            )
        )

    def test_1046(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Py{}Class TJ8:U{}Class _9c0:_4{}Class u66_:NE{}Class m:OW{_(r2_X,__,_,_57_G_0,x:Boolean ;_,h,__62w:String ;a,__,_d0C,C5,_:V_){}Var _OP5:_;$0_(T_5:Float ){Return ;} }Class m{Destructor (){Var _g,_2a_9,_L,H:Float ;}$V_(RU,__,W_:_x){}Val _Zo0,$_1,$748:_h;}''',
                '''Class,Py,{,},Class,TJ8,:,U,{,},Class,_9c0,:,_4,{,},Class,u66_,:,NE,{,},Class,m,:,OW,{,_,(,r2_X,,,__,,,_,,,_57_G_0,,,x,:,Boolean,;,_,,,h,,,__62w,:,String,;,a,,,__,,,_d0C,,,C5,,,_,:,V_,),{,},Var,_OP5,:,_,;,$0_,(,T_5,:,Float,),{,Return,;,},},Class,m,{,Destructor,(,),{,Var,_g,,,_2a_9,,,_L,,,H,:,Float,;,},$V_,(,RU,,,__,,,W_,:,_x,),{,},Val,_Zo0,,,$_1,,,$748,:,_h,;,},<EOF>''',
                101
            )
        )

    def test_1047(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{Val K,_v,$v:Boolean ;Var $n,$4,q,$2:_;M(_:A_;_:Int ;W6,_c,_z,_z,_:Boolean ){} }Class d_:_E{Destructor (){} }''',
                '''Class,v,{,Val,K,,,_v,,,$v,:,Boolean,;,Var,$n,,,$4,,,q,,,$2,:,_,;,M,(,_,:,A_,;,_,:,Int,;,W6,,,_c,,,_z,,,_z,,,_,:,Boolean,),{,},},Class,d_,:,_E,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1048(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p:q{Val $_,_94:c;Val Y8:Float ;}Class _U_9:Z{}Class z_63f{}Class T{}Class J:z{Val $6:Array [Boolean ,0b110001];}''',
                '''Class,p,:,q,{,Val,$_,,,_94,:,c,;,Val,Y8,:,Float,;,},Class,_U_9,:,Z,{,},Class,z_63f,{,},Class,T,{,},Class,J,:,z,{,Val,$6,:,Array,[,Boolean,,,0b110001,],;,},<EOF>''',
                101
            )
        )

    def test_1049(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_9a4{Constructor (D,_p73:Int ;BB6e:Float ;_:Array [Array [Array [Int ,02_5_31_1_6],0171],8_9]){}Var N_JgB3:Int ;}''',
                '''Class,_,:,_9a4,{,Constructor,(,D,,,_p73,:,Int,;,BB6e,:,Float,;,_,:,Array,[,Array,[,Array,[,Int,,,0253116,],,,0171,],,,89,],),{,},Var,N_JgB3,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1050(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{}Class E_1__9{Destructor (){Return ;}Val $_,$3_:Array [Float ,0b1011111];Var _4,J:___;Var $_605,_,O:Boolean ;}Class _{Val _z,Q,z:Array [Boolean ,0113];}''',
                '''Class,a,{,},Class,E_1__9,{,Destructor,(,),{,Return,;,},Val,$_,,,$3_,:,Array,[,Float,,,0b1011111,],;,Var,_4,,,J,:,___,;,Var,$_605,,,_,,,O,:,Boolean,;,},Class,_,{,Val,_z,,,Q,,,z,:,Array,[,Boolean,,,0113,],;,},<EOF>''',
                101
            )
        )

    def test_1051(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cnZ{}Class _:_x{}Class d:_{Val $_81_:y;qi_(T:Array [Array [Array [Boolean ,80],0X8],0101];___e:w;__,c,t2,_,r,_y:Int ){ {} }Destructor (){} }Class _4__:uP06{}''',
                '''Class,cnZ,{,},Class,_,:,_x,{,},Class,d,:,_,{,Val,$_81_,:,y,;,qi_,(,T,:,Array,[,Array,[,Array,[,Boolean,,,80,],,,0X8,],,,0101,],;,___e,:,w,;,__,,,c,,,t2,,,_,,,r,,,_y,:,Int,),{,{,},},Destructor,(,),{,},},Class,_4__,:,uP06,{,},<EOF>''',
                101
            )
        )

    def test_1052(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _60_____78_:y{}Class n_3Z_:_{$_8(){Return ;Continue ;}Destructor (){} }Class j_:__{Destructor (){_s__::$3();}Val $_78:Array [Int ,0b11000];}Class d{}''',
                '''Class,_60_____78_,:,y,{,},Class,n_3Z_,:,_,{,$_8,(,),{,Return,;,Continue,;,},Destructor,(,),{,},},Class,j_,:,__,{,Destructor,(,),{,_s__,::,$3,(,),;,},Val,$_78,:,Array,[,Int,,,0b11000,],;,},Class,d,{,},<EOF>''',
                101
            )
        )

    def test_1053(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{}Class _:_{$3(_:Array [Boolean ,06];m,l:Array [Float ,0B1]){}Constructor (_:Float ;_,D0:Array [Float ,06];S7__:_264X){} }Class q4{}''',
                '''Class,l,{,},Class,_,:,_,{,$3,(,_,:,Array,[,Boolean,,,06,],;,m,,,l,:,Array,[,Float,,,0B1,],),{,},Constructor,(,_,:,Float,;,_,,,D0,:,Array,[,Float,,,06,],;,S7__,:,_264X,),{,},},Class,q4,{,},<EOF>''',
                101
            )
        )

    def test_1054(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class _5:mHv{}Class C4za_{}Class q:s{Val s__:Array [Array [Array [Array [Int ,7],037],070],99];}''',
                '''Class,_,{,Constructor,(,),{,},},Class,_5,:,mHv,{,},Class,C4za_,{,},Class,q,:,s,{,Val,s__,:,Array,[,Array,[,Array,[,Array,[,Int,,,7,],,,037,],,,070,],,,99,],;,},<EOF>''',
                101
            )
        )

    def test_1055(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $Nr:f_;}Class F{}Class _{Val h_,$LA,A_:Array [Array [Array [Array [Array [Boolean ,0b1],0XB],9_1],0x26],0B11000];}''',
                '''Class,_,:,_,{,Var,$Nr,:,f_,;,},Class,F,{,},Class,_,{,Val,h_,,,$LA,,,A_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0XB,],,,91,],,,0x26,],,,0B11000,],;,},<EOF>''',
                101
            )
        )

    def test_1056(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Constructor (__:Array [String ,063];rOfrY40_:Array [Boolean ,04];_1,__96,__,_,h0Z7,E:Int ;m:Array [Float ,0B11000]){Return ;Return ;Continue ;} }''',
                '''Class,_,:,__,{,Constructor,(,__,:,Array,[,String,,,063,],;,rOfrY40_,:,Array,[,Boolean,,,04,],;,_1,,,__96,,,__,,,_,,,h0Z7,,,E,:,Int,;,m,:,Array,[,Float,,,0B11000,],),{,Return,;,Return,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1057(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:qa6_h_{$5(D,C:_6){}Destructor (){}Constructor (_:Int ;_8__:M;Y:__;_5,f6,__:String ;z:_oO6){Continue ;} }''',
                '''Class,W,:,qa6_h_,{,$5,(,D,,,C,:,_6,),{,},Destructor,(,),{,},Constructor,(,_,:,Int,;,_8__,:,M,;,Y,:,__,;,_5,,,f6,,,__,:,String,;,z,:,_oO6,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1058(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P__:_7_{}Class O_{Destructor (){}$8(Os_3:Array [Array [Int ,16],0x4];_:_){}Val $P_,y,$_5_,$V_1_,_:Float ;}''',
                '''Class,P__,:,_7_,{,},Class,O_,{,Destructor,(,),{,},$8,(,Os_3,:,Array,[,Array,[,Int,,,16,],,,0x4,],;,_,:,_,),{,},Val,$P_,,,y,,,$_5_,,,$V_1_,,,_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1059(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:_{$_(_,__0:Array [Array [String ,0X9],0xC]){}Destructor (){ {} }Var C,$n_,$0_7y:Float ;}Class H4rV{}Class _:_{}''',
                '''Class,F,:,_,{,$_,(,_,,,__0,:,Array,[,Array,[,String,,,0X9,],,,0xC,],),{,},Destructor,(,),{,{,},},Var,C,,,$n_,,,$0_7y,:,Float,;,},Class,H4rV,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1060(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val $2,$g9,_:s3;Destructor (){ {}{} }}Class pB3{$Ek2w(__3,R42_V3,_5m_:Array [String ,0XD_84_2_F_C_DCDF];_:Array [String ,0x3_C8];F4_,_i69,dCI,L,_4U:Int ){} }''',
                '''Class,_,:,_,{,Val,$2,,,$g9,,,_,:,s3,;,Destructor,(,),{,{,},{,},},},Class,pB3,{,$Ek2w,(,__3,,,R42_V3,,,_5m_,:,Array,[,String,,,0XD842FCDCDF,],;,_,:,Array,[,String,,,0x3C8,],;,F4_,,,_i69,,,dCI,,,L,,,_4U,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1061(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _05x_9_{Constructor (){}E(){}Destructor (){}Var $6:__5AN_;U(____c:uc;_,_G_R6:Array [Int ,0106]){Continue ;} }''',
                '''Class,_05x_9_,{,Constructor,(,),{,},E,(,),{,},Destructor,(,),{,},Var,$6,:,__5AN_,;,U,(,____c,:,uc,;,_,,,_G_R6,:,Array,[,Int,,,0106,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1062(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _u_0___{}Class v:o{Var $_:Array [String ,0137];}Class X9:_{Destructor (){}Var _4E,$_,$2,$G__,r_1,$g,Z:Int ;}''',
                '''Class,_u_0___,{,},Class,v,:,o,{,Var,$_,:,Array,[,String,,,0137,],;,},Class,X9,:,_,{,Destructor,(,),{,},Var,_4E,,,$_,,,$2,,,$G__,,,r_1,,,$g,,,Z,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1063(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:t{Val $__:_;E(){}Destructor (){Break ;{} }_(){}Var _:String ;Val $6_:Array [Array [Array [Array [String ,0140],0140],0140],0735];}''',
                '''Class,_,{,},Class,_,:,t,{,Val,$__,:,_,;,E,(,),{,},Destructor,(,),{,Break,;,{,},},_,(,),{,},Var,_,:,String,;,Val,$6_,:,Array,[,Array,[,Array,[,Array,[,String,,,0140,],,,0140,],,,0140,],,,0735,],;,},<EOF>''',
                101
            )
        )

    def test_1064(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y4{}Class H{Destructor (){Break ;Break ;} }Class _:M_{}Class _:_{xf(){}Val _gaV,$5g,_,_:_;Constructor (){} }Class Z:_0f{}''',
                '''Class,y4,{,},Class,H,{,Destructor,(,),{,Break,;,Break,;,},},Class,_,:,M_,{,},Class,_,:,_,{,xf,(,),{,},Val,_gaV,,,$5g,,,_,,,_,:,_,;,Constructor,(,),{,},},Class,Z,:,_0f,{,},<EOF>''',
                101
            )
        )

    def test_1065(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y_7443:_{Destructor (){} }Class r{}Class _k{$4_(_,L_:w;I,_:Float ;GF:Array [String ,061]){Continue ;_::$_();} }''',
                '''Class,Y_7443,:,_,{,Destructor,(,),{,},},Class,r,{,},Class,_k,{,$4_,(,_,,,L_,:,w,;,I,,,_,:,Float,;,GF,:,Array,[,String,,,061,],),{,Continue,;,_,::,$_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1066(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K2{Val $_,_t6HJ_5_:Array [Array [Array [Array [Boolean ,3],22],8],0x57];Val $6v6GP,$3:Array [Float ,0X4A];}''',
                '''Class,K2,{,Val,$_,,,_t6HJ_5_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,3,],,,22,],,,8,],,,0x57,],;,Val,$6v6GP,,,$3,:,Array,[,Float,,,0X4A,],;,},<EOF>''',
                101
            )
        )

    def test_1067(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s{Constructor (){}Constructor (J_:Array [Array [Array [String ,03_4_6_7],80],074]){} }Class __{}Class _NB_:Lo{Var F3,_,$_d:Array [Int ,80];}Class J{__(){} }''',
                '''Class,_s,{,Constructor,(,),{,},Constructor,(,J_,:,Array,[,Array,[,Array,[,String,,,03467,],,,80,],,,074,],),{,},},Class,__,{,},Class,_NB_,:,Lo,{,Var,F3,,,_,,,$_d,:,Array,[,Int,,,80,],;,},Class,J,{,__,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1068(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_:__{Destructor (){}Constructor (){Break ;Break ;} }Class _:O_{$__8(L8_,S,U_,v_w_9__,C_,_0,B,GK_:f){} }Class __2sP5:j_{R_f9(c___,_:Int ;_3,__:_5Z;_:Float ;_:T_Ba){} }''',
                '''Class,k_,:,__,{,Destructor,(,),{,},Constructor,(,),{,Break,;,Break,;,},},Class,_,:,O_,{,$__8,(,L8_,,,S,,,U_,,,v_w_9__,,,C_,,,_0,,,B,,,GK_,:,f,),{,},},Class,__2sP5,:,j_,{,R_f9,(,c___,,,_,:,Int,;,_3,,,__,:,_5Z,;,_,:,Float,;,_,:,T_Ba,),{,},},<EOF>''',
                101
            )
        )

    def test_1069(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:__{}Class X_:_{}Class H:__2_5RSw{Constructor (){ {} }_(){}Val $M__,G,$A,$0:Array [Float ,0B11];Val _7,$cr:Array [Array [Array [Float ,425],0B1011001],0b1_0];Constructor (){} }Class _:g{}''',
                '''Class,P,:,__,{,},Class,X_,:,_,{,},Class,H,:,__2_5RSw,{,Constructor,(,),{,{,},},_,(,),{,},Val,$M__,,,G,,,$A,,,$0,:,Array,[,Float,,,0B11,],;,Val,_7,,,$cr,:,Array,[,Array,[,Array,[,Float,,,425,],,,0B1011001,],,,0b10,],;,Constructor,(,),{,},},Class,_,:,g,{,},<EOF>''',
                101
            )
        )

    def test_1070(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{}Class v__{}Class _I{}Class __:f__{}Class _{Val _:Int ;Constructor (){} }Class ha{Constructor (){}Val _,$5j:_;}''',
                '''Class,Q,{,},Class,v__,{,},Class,_I,{,},Class,__,:,f__,{,},Class,_,{,Val,_,:,Int,;,Constructor,(,),{,},},Class,ha,{,Constructor,(,),{,},Val,_,,,$5j,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1071(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c_:q{Val X,$_:C;Val $_:O;}Class K9:R603{}Class _6_e17{}Class _:_q{Destructor (){}Constructor (_:Float ){}Constructor (___,B__,I_:O;_y__tA,_,_2,_:X){} }''',
                '''Class,_c_,:,q,{,Val,X,,,$_,:,C,;,Val,$_,:,O,;,},Class,K9,:,R603,{,},Class,_6_e17,{,},Class,_,:,_q,{,Destructor,(,),{,},Constructor,(,_,:,Float,),{,},Constructor,(,___,,,B__,,,I_,:,O,;,_y__tA,,,_,,,_2,,,_,:,X,),{,},},<EOF>''',
                101
            )
        )

    def test_1072(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:C9Z{}Class _li9:p{Var g6_____,$W:N;Var $__62,a:__Mo;Val $v44:f;Destructor (){}F(){}Constructor (){} }''',
                '''Class,S,:,C9Z,{,},Class,_li9,:,p,{,Var,g6_____,,,$W,:,N,;,Var,$__62,,,a,:,__Mo,;,Val,$v44,:,f,;,Destructor,(,),{,},F,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1073(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{}Class X:Q{$04(_9:Float ){}Val __:Array [Int ,0B10];}Class _52{Destructor (){}Var $_3,$_,h6a1:Array [Array [String ,0B1],013];Destructor (){} }''',
                '''Class,___,{,},Class,X,:,Q,{,$04,(,_9,:,Float,),{,},Val,__,:,Array,[,Int,,,0B10,],;,},Class,_52,{,Destructor,(,),{,},Var,$_3,,,$_,,,h6a1,:,Array,[,Array,[,String,,,0B1,],,,013,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1074(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d3:P__o{Constructor (f,_,RT_:Array [Array [Array [Array [Boolean ,0B1_0_0100],0b111010],0XF_8_8],5];H,__,E:Float ){}$6n_(){}Var A:Array [Boolean ,0b111010];}''',
                '''Class,d3,:,P__o,{,Constructor,(,f,,,_,,,RT_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B100100,],,,0b111010,],,,0XF88,],,,5,],;,H,,,__,,,E,:,Float,),{,},$6n_,(,),{,},Var,A,:,Array,[,Boolean,,,0b111010,],;,},<EOF>''',
                101
            )
        )

    def test_1075(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _9t:W29{Var _o:Float ;}Class I{$6(){} }Class _O{Val x_,$9Yt:Array [Array [Array [Array [Array [Float ,370],0b1000101],0b1100],0B1_1],0B110100];}''',
                '''Class,_,{,},Class,_9t,:,W29,{,Var,_o,:,Float,;,},Class,I,{,$6,(,),{,},},Class,_O,{,Val,x_,,,$9Yt,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,370,],,,0b1000101,],,,0b1100,],,,0B11,],,,0B110100,],;,},<EOF>''',
                101
            )
        )

    def test_1076(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y1{}Class i37:b7_{Val $2:Array [Float ,0xB];Destructor (){}_4(__:String ;W:U){} }Class _7h:P_G__u_{Var $2Z:String ;Var _4,$7_4:Float ;Val _F9_yr:Int ;}''',
                '''Class,y1,{,},Class,i37,:,b7_,{,Val,$2,:,Array,[,Float,,,0xB,],;,Destructor,(,),{,},_4,(,__,:,String,;,W,:,U,),{,},},Class,_7h,:,P_G__u_,{,Var,$2Z,:,String,;,Var,_4,,,$7_4,:,Float,;,Val,_F9_yr,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1077(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X0_0F{}Class __:P8{Val $_:String ;}Class _9_Y0:_4_SI{}Class _{Destructor (){}_(_,c_,pvR:D;sE:U;e2,_5:Float ){} }''',
                '''Class,X0_0F,{,},Class,__,:,P8,{,Val,$_,:,String,;,},Class,_9_Y0,:,_4_SI,{,},Class,_,{,Destructor,(,),{,},_,(,_,,,c_,,,pvR,:,D,;,sE,:,U,;,e2,,,_5,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1078(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b06:_{}Class _{Constructor (lZ:Array [Array [String ,6],0b110011];___,z,R_:String ;S:_m){ {}Return ;} }Class X_:C{}''',
                '''Class,b06,:,_,{,},Class,_,{,Constructor,(,lZ,:,Array,[,Array,[,String,,,6,],,,0b110011,],;,___,,,z,,,R_,:,String,;,S,:,_m,),{,{,},Return,;,},},Class,X_,:,C,{,},<EOF>''',
                101
            )
        )

    def test_1079(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8:W{Destructor (){} }Class _{}Class _0n971zr_:_d_m{Constructor (_:Array [Array [Array [Array [Array [Boolean ,0B100],02],99],0XE],0B1_0]){ {} }}''',
                '''Class,_8,:,W,{,Destructor,(,),{,},},Class,_,{,},Class,_0n971zr_,:,_d_m,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B100,],,,02,],,,99,],,,0XE,],,,0B10,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1080(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_W7s{}Class _6{Var $65,$04:Array [Array [Array [Boolean ,0b10001],0x23],0b1];Val _55:Int ;Destructor (){Continue ;} }''',
                '''Class,_,:,_W7s,{,},Class,_6,{,Var,$65,,,$04,:,Array,[,Array,[,Array,[,Boolean,,,0b10001,],,,0x23,],,,0b1,],;,Val,_55,:,Int,;,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1081(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:m{_(s,_:Array [Array [Array [Int ,2_5],0b1100000],0X32];M:g_o;_,_2,EA,xH:Float ;_:uJh678){}Constructor (_r8_9,_L:Array [Boolean ,45]){Break ;Break ;} }Class _:xH{}Class _:x1L_7{Constructor (){} }''',
                '''Class,Q,:,m,{,_,(,s,,,_,:,Array,[,Array,[,Array,[,Int,,,25,],,,0b1100000,],,,0X32,],;,M,:,g_o,;,_,,,_2,,,EA,,,xH,:,Float,;,_,:,uJh678,),{,},Constructor,(,_r8_9,,,_L,:,Array,[,Boolean,,,45,],),{,Break,;,Break,;,},},Class,_,:,xH,{,},Class,_,:,x1L_7,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1082(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5:_O{}Class w7:P_9{d__(_7,_,k__,_,_:m){ {} }Destructor (){}Constructor (g:_;c,Sv_,H5:A7l8;R,M47_,_,__s:Boolean ){} }Class _:Z_3{}''',
                '''Class,_5,:,_O,{,},Class,w7,:,P_9,{,d__,(,_7,,,_,,,k__,,,_,,,_,:,m,),{,{,},},Destructor,(,),{,},Constructor,(,g,:,_,;,c,,,Sv_,,,H5,:,A7l8,;,R,,,M47_,,,_,,,__s,:,Boolean,),{,},},Class,_,:,Z_3,{,},<EOF>''',
                101
            )
        )

    def test_1083(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{Constructor (){}_(__,l2:Array [Array [String ,0x5],035];_2_,_,A1oh,_8,_8,_:Array [Int ,02];z_,_:String ){} }Class _{$_(){} }''',
                '''Class,r,{,Constructor,(,),{,},_,(,__,,,l2,:,Array,[,Array,[,String,,,0x5,],,,035,],;,_2_,,,_,,,A1oh,,,_8,,,_8,,,_,:,Array,[,Int,,,02,],;,z_,,,_,:,String,),{,},},Class,_,{,$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1084(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __9:_{_(_9:Array [Array [Array [Array [Boolean ,0b101111],98],98],077];_w:Array [Array [String ,0x6A],98];_,A15:Array [String ,077]){} }Class _:a{}''',
                '''Class,__9,:,_,{,_,(,_9,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101111,],,,98,],,,98,],,,077,],;,_w,:,Array,[,Array,[,String,,,0x6A,],,,98,],;,_,,,A15,:,Array,[,String,,,077,],),{,},},Class,_,:,a,{,},<EOF>''',
                101
            )
        )

    def test_1085(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V:G{Constructor (P,_,d:__C_;_,p_:Int ;J:Array [Boolean ,0b1_0];_01:Array [Array [Boolean ,0x8D],36];___q,H4,B,Ui_Qz,dk:Boolean ){Self .E();} }Class c:_A{}''',
                '''Class,V,:,G,{,Constructor,(,P,,,_,,,d,:,__C_,;,_,,,p_,:,Int,;,J,:,Array,[,Boolean,,,0b10,],;,_01,:,Array,[,Array,[,Boolean,,,0x8D,],,,36,],;,___q,,,H4,,,B,,,Ui_Qz,,,dk,:,Boolean,),{,Self,.,E,(,),;,},},Class,c,:,_A,{,},<EOF>''',
                101
            )
        )

    def test_1086(self):
        self.assertTrue(
            TestLexer.test(
                '''Class LP_0{}Class X1H:k_{}Class _H:P{Val $_,__W4I,_9:__;Destructor (){} }Class PX:d{}Class t:R8_{Destructor (){Continue ;} }''',
                '''Class,LP_0,{,},Class,X1H,:,k_,{,},Class,_H,:,P,{,Val,$_,,,__W4I,,,_9,:,__,;,Destructor,(,),{,},},Class,PX,:,d,{,},Class,t,:,R8_,{,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1087(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{Constructor (){Continue ;} }Class _0_:__0{}Class Z_{Val _:String ;Val $8:U;}Class _{Var _8:Float ;}Class n{}''',
                '''Class,y,{,Constructor,(,),{,Continue,;,},},Class,_0_,:,__0,{,},Class,Z_,{,Val,_,:,String,;,Val,$8,:,U,;,},Class,_,{,Var,_8,:,Float,;,},Class,n,{,},<EOF>''',
                101
            )
        )

    def test_1088(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H:___{$7(_5_:c3;n_,_,_,vX,_,__y,p8,__:Array [Array [Array [Float ,53],53],0X18A_8_E];_,o,O__,_,tG,K_:Float ){}Var F,$_,$h,$23_:Boolean ;}Class c:L{Constructor (___,O:Array [Boolean ,0x6_6EF_E15D];_E_6,_:String ){Break ;Return ;}Destructor (){} }Class __y{_(){}Constructor (_iY_:sl){} }''',
                '''Class,H,:,___,{,$7,(,_5_,:,c3,;,n_,,,_,,,_,,,vX,,,_,,,__y,,,p8,,,__,:,Array,[,Array,[,Array,[,Float,,,53,],,,53,],,,0X18A8E,],;,_,,,o,,,O__,,,_,,,tG,,,K_,:,Float,),{,},Var,F,,,$_,,,$h,,,$23_,:,Boolean,;,},Class,c,:,L,{,Constructor,(,___,,,O,:,Array,[,Boolean,,,0x66EFE15D,],;,_E_6,,,_,:,String,),{,Break,;,Return,;,},Destructor,(,),{,},},Class,__y,{,_,(,),{,},Constructor,(,_iY_,:,sl,),{,},},<EOF>''',
                101
            )
        )

    def test_1089(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{T(G:Array [Array [Array [String ,0133],0b1011011],067];_V04,_u29,_,_,n8R:_X;P_R:Array [Array [Array [Int ,0133],0X9],05];__g:_3;jv:_6){}Var HA:x;}''',
                '''Class,_,{,T,(,G,:,Array,[,Array,[,Array,[,String,,,0133,],,,0b1011011,],,,067,],;,_V04,,,_u29,,,_,,,_,,,n8R,:,_X,;,P_R,:,Array,[,Array,[,Array,[,Int,,,0133,],,,0X9,],,,05,],;,__g,:,_3,;,jv,:,_6,),{,},Var,HA,:,x,;,},<EOF>''',
                101
            )
        )

    def test_1090(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (V,x:_69;_4,Z5_,o:Float ){} }Class A_{}Class fU5_n:cR{Destructor (){}Val _,_,_,u_X:String ;}Class _:g{Destructor (){} }''',
                '''Class,_,{,Constructor,(,V,,,x,:,_69,;,_4,,,Z5_,,,o,:,Float,),{,},},Class,A_,{,},Class,fU5_n,:,cR,{,Destructor,(,),{,},Val,_,,,_,,,_,,,u_X,:,String,;,},Class,_,:,g,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1091(self):
        self.assertTrue(
            TestLexer.test(
                '''Class hZ3:_{}Class K:_Z{Constructor (){}Var $YY:Array [Int ,18];Constructor (N_,j_,_,i__Q2:QB;re,_,_:Boolean ){Continue ;} }''',
                '''Class,hZ3,:,_,{,},Class,K,:,_Z,{,Constructor,(,),{,},Var,$YY,:,Array,[,Int,,,18,],;,Constructor,(,N_,,,j_,,,_,,,i__Q2,:,QB,;,re,,,_,,,_,:,Boolean,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1092(self):
        self.assertTrue(
            TestLexer.test(
                '''Class NF80_{Var $9:Array [Array [Float ,0B110001],382];Constructor (){}Var _:Array [Array [Array [Array [Float ,4_9],030],71],0127];Var $0o5,_4,$_:Array [String ,71];$_(m_,y:String ){}T(j:r;_,t_B7g,G31,l:String ;D,j,N0:z3;O,_i__,Q,_1,z_:Boolean ;_,_4:Array [Array [Boolean ,0B1],0XA]){} }Class u{}Class _:_{_i(_W,__5:_p_;rm__m,__3:t_9){Continue ;}Var _,F,_:i;}Class _{}''',
                '''Class,NF80_,{,Var,$9,:,Array,[,Array,[,Float,,,0B110001,],,,382,],;,Constructor,(,),{,},Var,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,49,],,,030,],,,71,],,,0127,],;,Var,$0o5,,,_4,,,$_,:,Array,[,String,,,71,],;,$_,(,m_,,,y,:,String,),{,},T,(,j,:,r,;,_,,,t_B7g,,,G31,,,l,:,String,;,D,,,j,,,N0,:,z3,;,O,,,_i__,,,Q,,,_1,,,z_,:,Boolean,;,_,,,_4,:,Array,[,Array,[,Boolean,,,0B1,],,,0XA,],),{,},},Class,u,{,},Class,_,:,_,{,_i,(,_W,,,__5,:,_p_,;,rm__m,,,__3,:,t_9,),{,Continue,;,},Var,_,,,F,,,_,:,i,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1093(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2_{}Class _:h{Var T:_;Val $4,$9,$P_,_:Array [String ,0X4];}Class n6_{Val K_c:_;Var $0_B_,$7e06,$y_:Boolean ;}Class w{}''',
                '''Class,_2_,{,},Class,_,:,h,{,Var,T,:,_,;,Val,$4,,,$9,,,$P_,,,_,:,Array,[,String,,,0X4,],;,},Class,n6_,{,Val,K_c,:,_,;,Var,$0_B_,,,$7e06,,,$y_,:,Boolean,;,},Class,w,{,},<EOF>''',
                101
            )
        )

    def test_1094(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I{Constructor (__:Array [Array [Float ,0b1],024];_:Boolean ;Fv,_94_,H,U:Array [Array [Boolean ,0X4],024];_:Boolean ){} }Class _{__g(){Break ;} }Class zv:_9{}''',
                '''Class,I,{,Constructor,(,__,:,Array,[,Array,[,Float,,,0b1,],,,024,],;,_,:,Boolean,;,Fv,,,_94_,,,H,,,U,:,Array,[,Array,[,Boolean,,,0X4,],,,024,],;,_,:,Boolean,),{,},},Class,_,{,__g,(,),{,Break,;,},},Class,zv,:,_9,{,},<EOF>''',
                101
            )
        )

    def test_1095(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:_{$_V(_p8,LH,y,m_:Array [Array [Array [Array [Array [Array [Array [Float ,0x9A],26],030],0b10_1010],6],536],9];z__:Boolean ;__:Array [Boolean ,19];_S28:Float ){Break ;} }''',
                '''Class,n,:,_,{,$_V,(,_p8,,,LH,,,y,,,m_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x9A,],,,26,],,,030,],,,0b101010,],,,6,],,,536,],,,9,],;,z__,:,Boolean,;,__,:,Array,[,Boolean,,,19,],;,_S28,:,Float,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1096(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Z{Var tMk_1:String ;Val j:String ;$_S___(_3,O,_i:__){}Val $_,_6:x09;}Class G7{Var u8,_,__72,$ohWOz:String ;Destructor (){} }Class L{Var $_92,$6c,O:D;}Class _:K_7{}''',
                '''Class,_,:,Z,{,Var,tMk_1,:,String,;,Val,j,:,String,;,$_S___,(,_3,,,O,,,_i,:,__,),{,},Val,$_,,,_6,:,x09,;,},Class,G7,{,Var,u8,,,_,,,__72,,,$ohWOz,:,String,;,Destructor,(,),{,},},Class,L,{,Var,$_92,,,$6c,,,O,:,D,;,},Class,_,:,K_7,{,},<EOF>''',
                101
            )
        )

    def test_1097(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __La:B{Val VMq,q_3T_:Float ;}Class sL:h__51{Var f,e:Array [Array [Array [Array [Float ,05],54],05_05_3],0B100000];Val $6:M_9_;}Class _:___{}Class N16:E_{}Class L_:QH{}Class t:_l_{}''',
                '''Class,__La,:,B,{,Val,VMq,,,q_3T_,:,Float,;,},Class,sL,:,h__51,{,Var,f,,,e,:,Array,[,Array,[,Array,[,Array,[,Float,,,05,],,,54,],,,05053,],,,0B100000,],;,Val,$6,:,M_9_,;,},Class,_,:,___,{,},Class,N16,:,E_,{,},Class,L_,:,QH,{,},Class,t,:,_l_,{,},<EOF>''',
                101
            )
        )

    def test_1098(self):
        self.assertTrue(
            TestLexer.test(
                '''Class HJ{Constructor (_,_2,G:Array [Array [Int ,02],0b1100100];q4_k_,K:U75){Return ;J::$7y_();Return ;Break ;} }Class j:C{}''',
                '''Class,HJ,{,Constructor,(,_,,,_2,,,G,:,Array,[,Array,[,Int,,,02,],,,0b1100100,],;,q4_k_,,,K,:,U75,),{,Return,;,J,::,$7y_,(,),;,Return,;,Break,;,},},Class,j,:,C,{,},<EOF>''',
                101
            )
        )

    def test_1099(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{}Class _:V{$q_(ge73:Int ;T:Boolean ;I,_2_:Array [Array [Array [Int ,0XB_5],0B100000],071];_:Array [Array [Array [Array [Array [Int ,071],7],071],04],0b1011011]){}R(){}Destructor (){} }''',
                '''Class,y,{,},Class,_,:,V,{,$q_,(,ge73,:,Int,;,T,:,Boolean,;,I,,,_2_,:,Array,[,Array,[,Array,[,Int,,,0XB5,],,,0B100000,],,,071,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,071,],,,7,],,,071,],,,04,],,,0b1011011,],),{,},R,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1100(self):
        self.assertTrue(
            TestLexer.test(
                '''Class qF_:w{_(){}Constructor (){Break ;} }Class __A:_{Var H:Int ;}Class z:r_{}Class _{Var $c:_;Val x,$_M_,pR_,_9EP8:Array [Int ,04];}Class x{Var $7,$9:Boolean ;}''',
                '''Class,qF_,:,w,{,_,(,),{,},Constructor,(,),{,Break,;,},},Class,__A,:,_,{,Var,H,:,Int,;,},Class,z,:,r_,{,},Class,_,{,Var,$c,:,_,;,Val,x,,,$_M_,,,pR_,,,_9EP8,:,Array,[,Int,,,04,],;,},Class,x,{,Var,$7,,,$9,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1101(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Uu{Var $M,$p1__2_7F,W,_,JU:_9s67;}Class _8_V:_{}Class _:o_{Constructor (_Kj:Array [Array [Int ,0X2_5_A],0B1];_2:_5){Return ;}Val N:Boolean ;Val yR,$_3,R961:_2;}Class _8_{$_(){} }''',
                '''Class,Uu,{,Var,$M,,,$p1__2_7F,,,W,,,_,,,JU,:,_9s67,;,},Class,_8_V,:,_,{,},Class,_,:,o_,{,Constructor,(,_Kj,:,Array,[,Array,[,Int,,,0X25A,],,,0B1,],;,_2,:,_5,),{,Return,;,},Val,N,:,Boolean,;,Val,yR,,,$_3,,,R961,:,_2,;,},Class,_8_,{,$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1102(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:__{}Class hSM86{}Class _B:_9_{Destructor (){}Var L:Array [Array [Array [Array [String ,0x14],0111],0b1011011],0B1];Val $_v_,$5,$9:JF_;}''',
                '''Class,h,:,__,{,},Class,hSM86,{,},Class,_B,:,_9_,{,Destructor,(,),{,},Var,L,:,Array,[,Array,[,Array,[,Array,[,String,,,0x14,],,,0111,],,,0b1011011,],,,0B1,],;,Val,$_v_,,,$5,,,$9,:,JF_,;,},<EOF>''',
                101
            )
        )

    def test_1103(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___r{Constructor (){}Constructor (_,w,D,_,w:Array [Array [Array [Array [Array [Array [Boolean ,24],0b1],0X35],24],0B1000000],0B1000000];tw:Array [Int ,24];_:Float ;F:String ;_,n,_5:Array [Array [Array [Boolean ,7],0X35],3];__,_:_9){} }''',
                '''Class,_,:,___r,{,Constructor,(,),{,},Constructor,(,_,,,w,,,D,,,_,,,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,24,],,,0b1,],,,0X35,],,,24,],,,0B1000000,],,,0B1000000,],;,tw,:,Array,[,Int,,,24,],;,_,:,Float,;,F,:,String,;,_,,,n,,,_5,:,Array,[,Array,[,Array,[,Boolean,,,7,],,,0X35,],,,3,],;,__,,,_,:,_9,),{,},},<EOF>''',
                101
            )
        )

    def test_1104(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d0:j{$u_(j,__,_,Pe6:Array [Boolean ,0102]){Break ;}Constructor (){}Constructor (j9_,_:Boolean ;V:o;x,d:Array [Int ,0x21];rf:String ;f,h,_:_;_,v:Array [Boolean ,0X6]){} }''',
                '''Class,d0,:,j,{,$u_,(,j,,,__,,,_,,,Pe6,:,Array,[,Boolean,,,0102,],),{,Break,;,},Constructor,(,),{,},Constructor,(,j9_,,,_,:,Boolean,;,V,:,o,;,x,,,d,:,Array,[,Int,,,0x21,],;,rf,:,String,;,f,,,h,,,_,:,_,;,_,,,v,:,Array,[,Boolean,,,0X6,],),{,},},<EOF>''',
                101
            )
        )

    def test_1105(self):
        self.assertTrue(
            TestLexer.test(
                '''Class dq:e96{$_qq6_B(_,__,U,_:Array [Array [Array [Float ,669],0B1111],0b11011]){S::$L();}Destructor (){}Constructor (_,h,B6:String ;_Lz5r_:Float ;S:Array [Boolean ,0B110_0];Us:_){} }Class _kh_{Var $hEK,S,$_,mj:Array [Array [Array [Array [Array [Array [Int ,01],7],24],0102],24],0b11011];}''',
                '''Class,dq,:,e96,{,$_qq6_B,(,_,,,__,,,U,,,_,:,Array,[,Array,[,Array,[,Float,,,669,],,,0B1111,],,,0b11011,],),{,S,::,$L,(,),;,},Destructor,(,),{,},Constructor,(,_,,,h,,,B6,:,String,;,_Lz5r_,:,Float,;,S,:,Array,[,Boolean,,,0B1100,],;,Us,:,_,),{,},},Class,_kh_,{,Var,$hEK,,,S,,,$_,,,mj,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,7,],,,24,],,,0102,],,,24,],,,0b11011,],;,},<EOF>''',
                101
            )
        )

    def test_1106(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g__:P493{Constructor (_5V:l3T30;e,__W_nh:Array [String ,6_5_9_6_0_0]){}Var x,$gQ,_,D6:Array [Float ,035];}''',
                '''Class,g__,:,P493,{,Constructor,(,_5V,:,l3T30,;,e,,,__W_nh,:,Array,[,String,,,659600,],),{,},Var,x,,,$gQ,,,_,,,D6,:,Array,[,Float,,,035,],;,},<EOF>''',
                101
            )
        )

    def test_1107(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:_{g(){} }Class _a629:_{Var i7n_,$31,_Q,$__3:Array [Array [String ,0xC3_284_7_6],0XF];Constructor (_:_9;F,_:_;_5_:Array [String ,0xA_F];Z,K,j:Array [Array [Boolean ,0b1_0],0XF_1]){}Var _,p,$g7s_:Array [Array [String ,5],0x4C];}''',
                '''Class,n,:,_,{,g,(,),{,},},Class,_a629,:,_,{,Var,i7n_,,,$31,,,_Q,,,$__3,:,Array,[,Array,[,String,,,0xC328476,],,,0XF,],;,Constructor,(,_,:,_9,;,F,,,_,:,_,;,_5_,:,Array,[,String,,,0xAF,],;,Z,,,K,,,j,:,Array,[,Array,[,Boolean,,,0b10,],,,0XF1,],),{,},Var,_,,,p,,,$g7s_,:,Array,[,Array,[,String,,,5,],,,0x4C,],;,},<EOF>''',
                101
            )
        )

    def test_1108(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$1(){} }Class E04:_{}Class o7:_k0{}Class S_7:_{Val t_7T:K_X_;Val $_,X:Array [Array [Int ,06],80];}Class I_{}''',
                '''Class,_,:,_,{,$1,(,),{,},},Class,E04,:,_,{,},Class,o7,:,_k0,{,},Class,S_7,:,_,{,Val,t_7T,:,K_X_,;,Val,$_,,,X,:,Array,[,Array,[,Int,,,06,],,,80,],;,},Class,I_,{,},<EOF>''',
                101
            )
        )

    def test_1109(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{}Class _H_:__{}Class _ij:a{}Class H:_{}Class d:U{Destructor (){}Constructor (){}Destructor (){_1__::$E();Break ;} }''',
                '''Class,O,{,},Class,_H_,:,__,{,},Class,_ij,:,a,{,},Class,H,:,_,{,},Class,d,:,U,{,Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,_1__,::,$E,(,),;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1110(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _B__0{}Class _{$N(cX,_:Array [Array [Float ,5],0107]){} }Class O8_:_{Val $c:f;Val $_:o_;}Class K{Destructor (){} }Class _{}''',
                '''Class,_B__0,{,},Class,_,{,$N,(,cX,,,_,:,Array,[,Array,[,Float,,,5,],,,0107,],),{,},},Class,O8_,:,_,{,Val,$c,:,f,;,Val,$_,:,o_,;,},Class,K,{,Destructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1111(self):
        self.assertTrue(
            TestLexer.test(
                '''Class KQ:___{Destructor (){Continue ;Break ;} }Class wL:f{}Class S_:_{Val $_7__PL_:l;Val _:Array [Array [Array [Array [Float ,065],0X28],0x46],69];}Class _{Var z,eS8D4,$4l:j8;}Class d6_k1:hu{}''',
                '''Class,KQ,:,___,{,Destructor,(,),{,Continue,;,Break,;,},},Class,wL,:,f,{,},Class,S_,:,_,{,Val,$_7__PL_,:,l,;,Val,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,065,],,,0X28,],,,0x46,],,,69,],;,},Class,_,{,Var,z,,,eS8D4,,,$4l,:,j8,;,},Class,d6_k1,:,hu,{,},<EOF>''',
                101
            )
        )

    def test_1112(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:E_{Val P,_05E8,$9_:String ;$_W(_q__7K,_0:Array [Array [Array [Array [Int ,0x45],07],0b1_1_0_0],04];_,r_:A){} }''',
                '''Class,w,:,E_,{,Val,P,,,_05E8,,,$9_,:,String,;,$_W,(,_q__7K,,,_0,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x45,],,,07,],,,0b1100,],,,04,],;,_,,,r_,:,A,),{,},},<EOF>''',
                101
            )
        )

    def test_1113(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Var i,$_8:_3tC1;Val $_9:Array [Array [String ,0b111001],062_7];Var $0794x,$x:Array [Array [Boolean ,01],0x22];Var _8m:Array [Int ,0xB];Destructor (){} }Class __:_{Destructor (){} }''',
                '''Class,___,{,Var,i,,,$_8,:,_3tC1,;,Val,$_9,:,Array,[,Array,[,String,,,0b111001,],,,0627,],;,Var,$0794x,,,$x,:,Array,[,Array,[,Boolean,,,01,],,,0x22,],;,Var,_8m,:,Array,[,Int,,,0xB,],;,Destructor,(,),{,},},Class,__,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1114(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val $6:Float ;}Class _{}Class _{}Class _{Var $5a:Array [Array [Array [Array [String ,0B1000_01_0],0123],61],0b100001];}Class U:l{}''',
                '''Class,_,:,_,{,Val,$6,:,Float,;,},Class,_,{,},Class,_,{,},Class,_,{,Var,$5a,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1000010,],,,0123,],,,61,],,,0b100001,],;,},Class,U,:,l,{,},<EOF>''',
                101
            )
        )

    def test_1115(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M:d{Var e6,_,Ss,$1,$_:Float ;Var k_eJ2x:Boolean ;}Class _80{Val $9d,$______:String ;Destructor (){Var MK:_;} }''',
                '''Class,M,:,d,{,Var,e6,,,_,,,Ss,,,$1,,,$_,:,Float,;,Var,k_eJ2x,:,Boolean,;,},Class,_80,{,Val,$9d,,,$______,:,String,;,Destructor,(,),{,Var,MK,:,_,;,},},<EOF>''',
                101
            )
        )

    def test_1116(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O_:O_{}Class _:h{Constructor (k5_P6_:Array [Array [Array [Array [String ,0b1_1_10],8],0b1101],0xA]){___W3O::$__();}Destructor (){} }''',
                '''Class,O_,:,O_,{,},Class,_,:,h,{,Constructor,(,k5_P6_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1110,],,,8,],,,0b1101,],,,0xA,],),{,___W3O,::,$__,(,),;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1117(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:fV46{Var _:Array [Int ,05];}Class Kk4{_(yB36:Boolean ;_9_,_:Array [Array [Float ,81],0X43]){} }Class F_{}Class I:_{}''',
                '''Class,_,:,fV46,{,Var,_,:,Array,[,Int,,,05,],;,},Class,Kk4,{,_,(,yB36,:,Boolean,;,_9_,,,_,:,Array,[,Array,[,Float,,,81,],,,0X43,],),{,},},Class,F_,{,},Class,I,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1118(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6a:o{}Class Ci_{Constructor (_H_,_b,_j,k,_9,j,g,a9Hot9:_;VK_m,_,_:Array [Array [Float ,0x61],0b11110]){}$_J(){} }Class _Kj:X{Val $u51_,$_,$__,IO,$A_:Array [String ,0133];}''',
                '''Class,_6a,:,o,{,},Class,Ci_,{,Constructor,(,_H_,,,_b,,,_j,,,k,,,_9,,,j,,,g,,,a9Hot9,:,_,;,VK_m,,,_,,,_,:,Array,[,Array,[,Float,,,0x61,],,,0b11110,],),{,},$_J,(,),{,},},Class,_Kj,:,X,{,Val,$u51_,,,$_,,,$__,,,IO,,,$A_,:,Array,[,String,,,0133,],;,},<EOF>''',
                101
            )
        )

    def test_1119(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3_p{Constructor (_0,_,_,_:_;d_2,g,xj6d6,A2,DNs,_X_,C:__;n2_,__6,___:___U;t,_:Array [Float ,0B1]){} }''',
                '''Class,_3_p,{,Constructor,(,_0,,,_,,,_,,,_,:,_,;,d_2,,,g,,,xj6d6,,,A2,,,DNs,,,_X_,,,C,:,__,;,n2_,,,__6,,,___,:,___U,;,t,,,_,:,Array,[,Float,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1120(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_69{}Class ___{Constructor (c:d6){Return ;}e(l_:Array [String ,0b1];_:__46;_,_G:Array [String ,0B100011];__,i__,KV:String ;Z,e:e3){} }''',
                '''Class,_,:,_69,{,},Class,___,{,Constructor,(,c,:,d6,),{,Return,;,},e,(,l_,:,Array,[,String,,,0b1,],;,_,:,__46,;,_,,,_G,:,Array,[,String,,,0B100011,],;,__,,,i__,,,KV,:,String,;,Z,,,e,:,e3,),{,},},<EOF>''',
                101
            )
        )

    def test_1121(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_t(_,n:Float ;E_P,za,_:Z_){} }Class __7_{$R(_:Array [Array [Boolean ,0x9_93E9EA],8]){} }Class l_S_:_{Var _,i_N,$_:__;Var _,_:String ;}''',
                '''Class,_,{,_t,(,_,,,n,:,Float,;,E_P,,,za,,,_,:,Z_,),{,},},Class,__7_,{,$R,(,_,:,Array,[,Array,[,Boolean,,,0x993E9EA,],,,8,],),{,},},Class,l_S_,:,_,{,Var,_,,,i_N,,,$_,:,__,;,Var,_,,,_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1122(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:R{Constructor (_,_m0:_b){}Var $_16n6:Int ;}Class _:_3P3{Constructor (hD_,_9,h:Int ;s:_9;p,R,N1B_,i:Array [Array [Int ,0x19],67];_,aZ,D71,v,sy:Array [Array [String ,055],67];_,J:N5;_:_){Continue ;}Val _j9:__Oo;}Class E_{Destructor (){} }''',
                '''Class,y,:,R,{,Constructor,(,_,,,_m0,:,_b,),{,},Var,$_16n6,:,Int,;,},Class,_,:,_3P3,{,Constructor,(,hD_,,,_9,,,h,:,Int,;,s,:,_9,;,p,,,R,,,N1B_,,,i,:,Array,[,Array,[,Int,,,0x19,],,,67,],;,_,,,aZ,,,D71,,,v,,,sy,:,Array,[,Array,[,String,,,055,],,,67,],;,_,,,J,:,N5,;,_,:,_,),{,Continue,;,},Val,_j9,:,__Oo,;,},Class,E_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1123(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $k,_B:Int ;Destructor (){} }Class _J{}Class w1e{}Class _:_3{Destructor (){Continue ;} }Class X:I4B1{}''',
                '''Class,_,{,Var,$k,,,_B,:,Int,;,Destructor,(,),{,},},Class,_J,{,},Class,w1e,{,},Class,_,:,_3,{,Destructor,(,),{,Continue,;,},},Class,X,:,I4B1,{,},<EOF>''',
                101
            )
        )

    def test_1124(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___350i{Var $_:Array [Array [Float ,0x4D],0x1_8_CE19];}Class Oz{$z_9ld(i_G,U,_,v:Boolean ;_IZ0___,_,_0:Array [Array [Array [String ,04],42],01];_,b,x8:R){Continue ;} }''',
                '''Class,___350i,{,Var,$_,:,Array,[,Array,[,Float,,,0x4D,],,,0x18CE19,],;,},Class,Oz,{,$z_9ld,(,i_G,,,U,,,_,,,v,:,Boolean,;,_IZ0___,,,_,,,_0,:,Array,[,Array,[,Array,[,String,,,04,],,,42,],,,01,],;,_,,,b,,,x8,:,R,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1125(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{}Class _7_5:_{Constructor (Q,_0:Int ){ {}{}Val M,w_:Array [String ,016];}Val $1_y_9o:Array [Array [Float ,5],0X47_8_8];}Class N{}Class _8{}Class y7{}Class ____:__{}''',
                '''Class,T,{,},Class,_7_5,:,_,{,Constructor,(,Q,,,_0,:,Int,),{,{,},{,},Val,M,,,w_,:,Array,[,String,,,016,],;,},Val,$1_y_9o,:,Array,[,Array,[,Float,,,5,],,,0X4788,],;,},Class,N,{,},Class,_8,{,},Class,y7,{,},Class,____,:,__,{,},<EOF>''',
                101
            )
        )

    def test_1126(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:wp_2{Var z,_:Array [Array [String ,56_75_5_9],0XF_8];Val a6,$_5,X:String ;Var _,$__uh,$9:Array [Float ,0127];}''',
                '''Class,f,:,wp_2,{,Var,z,,,_,:,Array,[,Array,[,String,,,567559,],,,0XF8,],;,Val,a6,,,$_5,,,X,:,String,;,Var,_,,,$__uh,,,$9,:,Array,[,Float,,,0127,],;,},<EOF>''',
                101
            )
        )

    def test_1127(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ro{j(tN21,_,b,_i:String ;_:_t){Val P__:Int ;}Constructor (o,k__,r:Array [Array [Array [Boolean ,1],0b1011],05337];_,S_,_Y6:Array [String ,07]){} }''',
                '''Class,ro,{,j,(,tN21,,,_,,,b,,,_i,:,String,;,_,:,_t,),{,Val,P__,:,Int,;,},Constructor,(,o,,,k__,,,r,:,Array,[,Array,[,Array,[,Boolean,,,1,],,,0b1011,],,,05337,],;,_,,,S_,,,_Y6,:,Array,[,String,,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_1128(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{}Class t:_{}Class _:_{}Class R__T{Val $P,$_:Array [Array [Array [String ,4],0b10_1_0110],0106];Var ___:_;Var $0,$m_:Array [Float ,6];}Class Q6:W_{}''',
                '''Class,i,{,},Class,t,:,_,{,},Class,_,:,_,{,},Class,R__T,{,Val,$P,,,$_,:,Array,[,Array,[,Array,[,String,,,4,],,,0b1010110,],,,0106,],;,Var,___,:,_,;,Var,$0,,,$m_,:,Array,[,Float,,,6,],;,},Class,Q6,:,W_,{,},<EOF>''',
                101
            )
        )

    def test_1129(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Q_0:_{}Class v:_{}Class s0_:_{_12___VG(E7DR:String ){} }Class ___43j_{}Class _:S_A_{}Class JHywA1p:fk{}Class n{Val $3___S,_N1,m_,_u,$_:Array [Boolean ,0b1_0];}Class _:_PfpE_{}Class lD:Lw__5{}''',
                '''Class,_Q_0,:,_,{,},Class,v,:,_,{,},Class,s0_,:,_,{,_12___VG,(,E7DR,:,String,),{,},},Class,___43j_,{,},Class,_,:,S_A_,{,},Class,JHywA1p,:,fk,{,},Class,n,{,Val,$3___S,,,_N1,,,m_,,,_u,,,$_,:,Array,[,Boolean,,,0b10,],;,},Class,_,:,_PfpE_,{,},Class,lD,:,Lw__5,{,},<EOF>''',
                101
            )
        )

    def test_1130(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y67_855:_{Val D_:R;Var M_W:Array [Array [Array [String ,1],046_535],01];}Class t:T{}Class Y:j{Val _9_,__37:Int ;}''',
                '''Class,y67_855,:,_,{,Val,D_,:,R,;,Var,M_W,:,Array,[,Array,[,Array,[,String,,,1,],,,046535,],,,01,],;,},Class,t,:,T,{,},Class,Y,:,j,{,Val,_9_,,,__37,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1131(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class _:Y_{Constructor (_:Array [Int ,436_0];m,D:U;K_,b:Array [Array [Float ,0b1],015];_:B3_;o_,_,E:Boolean ){Continue ;} }''',
                '''Class,__,:,_,{,},Class,_,:,Y_,{,Constructor,(,_,:,Array,[,Int,,,4360,],;,m,,,D,:,U,;,K_,,,b,:,Array,[,Array,[,Float,,,0b1,],,,015,],;,_,:,B3_,;,o_,,,_,,,E,:,Boolean,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1132(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class M{Destructor (){}Constructor (_2r:Array [Array [Array [Int ,023],0X6],6]){Continue ;} }Class _:x{}''',
                '''Class,__,{,},Class,M,{,Destructor,(,),{,},Constructor,(,_2r,:,Array,[,Array,[,Array,[,Int,,,023,],,,0X6,],,,6,],),{,Continue,;,},},Class,_,:,x,{,},<EOF>''',
                101
            )
        )

    def test_1133(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:V{$q(o___:Int ;M6__,M,lO,t_h:Array [Array [Array [Array [Array [Int ,067],1],13],0XA],06];_,Z7,R:Array [Array [Array [Array [String ,2],03],0x38E],0xF]){} }''',
                '''Class,_,:,V,{,$q,(,o___,:,Int,;,M6__,,,M,,,lO,,,t_h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,067,],,,1,],,,13,],,,0XA,],,,06,],;,_,,,Z7,,,R,:,Array,[,Array,[,Array,[,Array,[,String,,,2,],,,03,],,,0x38E,],,,0xF,],),{,},},<EOF>''',
                101
            )
        )

    def test_1134(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _a8E{Constructor (_1Di,R5:Array [Array [Array [Array [Array [Array [Array [Int ,0b1001110],065],0X5_7],065],2],0x37],0B1001001]){} }Class Z{}Class O{}''',
                '''Class,_a8E,{,Constructor,(,_1Di,,,R5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1001110,],,,065,],,,0X57,],,,065,],,,2,],,,0x37,],,,0B1001001,],),{,},},Class,Z,{,},Class,O,{,},<EOF>''',
                101
            )
        )

    def test_1135(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:h4_{}Class _{Constructor (_,j81T:Array [Int ,0B1010010];_,_R:Array [Array [Array [Array [Boolean ,0B1010010],0b11100],01_5_02],0B1];vc,_:Array [Boolean ,55];m:String ){} }''',
                '''Class,_,:,h4_,{,},Class,_,{,Constructor,(,_,,,j81T,:,Array,[,Int,,,0B1010010,],;,_,,,_R,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1010010,],,,0b11100,],,,01502,],,,0B1,],;,vc,,,_,:,Array,[,Boolean,,,55,],;,m,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_1136(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:P_{}Class _{Destructor (){} }Class N_:_{Val Y:RW8;_7(_mO_:U_6;q:Int ;H9,b,p,w3l_Z,_wc:Array [Boolean ,4_7];LxW:Boolean ;E:Int ;u44,T,UC_,_09b0,__,zRL:d){ {Break ;} }Destructor (){} }''',
                '''Class,S,:,P_,{,},Class,_,{,Destructor,(,),{,},},Class,N_,:,_,{,Val,Y,:,RW8,;,_7,(,_mO_,:,U_6,;,q,:,Int,;,H9,,,b,,,p,,,w3l_Z,,,_wc,:,Array,[,Boolean,,,47,],;,LxW,:,Boolean,;,E,:,Int,;,u44,,,T,,,UC_,,,_09b0,,,__,,,zRL,:,d,),{,{,Break,;,},},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1137(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:b{Constructor (_:Array [Boolean ,8_53_7]){Var B:Array [String ,0xC2];}Var $9,$3,_67_7F6:_k;Destructor (){} }Class __:_{}''',
                '''Class,K,:,b,{,Constructor,(,_,:,Array,[,Boolean,,,8537,],),{,Var,B,:,Array,[,String,,,0xC2,],;,},Var,$9,,,$3,,,_67_7F6,:,_k,;,Destructor,(,),{,},},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1138(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W_{Val $H:Array [Array [Array [Float ,9172],0136],41];Var $DUyh:D_;}Class ow___{}Class f:_7{}Class V3{}Class W{Var _:Array [Array [Boolean ,1],07];}''',
                '''Class,W_,{,Val,$H,:,Array,[,Array,[,Array,[,Float,,,9172,],,,0136,],,,41,],;,Var,$DUyh,:,D_,;,},Class,ow___,{,},Class,f,:,_7,{,},Class,V3,{,},Class,W,{,Var,_,:,Array,[,Array,[,Boolean,,,1,],,,07,],;,},<EOF>''',
                101
            )
        )

    def test_1139(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:_{Var $c:R___;Val _M4,o_,_,$_,z:Array [Array [Array [Array [Array [Float ,0x34],75],0B1_11_1],01_0],065];}''',
                '''Class,___,:,_,{,Var,$c,:,R___,;,Val,_M4,,,o_,,,_,,,$_,,,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x34,],,,75,],,,0B1111,],,,010,],,,065,],;,},<EOF>''',
                101
            )
        )

    def test_1140(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __X_:D{Constructor (N:String ){_I::$8();}E(O,_38:Int ){} }Class x__{Val _6e,h_,$_,$_,$y0:Array [Array [Array [Int ,0B10_0],0X6],0xF];}Class _:sz{}''',
                '''Class,__X_,:,D,{,Constructor,(,N,:,String,),{,_I,::,$8,(,),;,},E,(,O,,,_38,:,Int,),{,},},Class,x__,{,Val,_6e,,,h_,,,$_,,,$_,,,$y0,:,Array,[,Array,[,Array,[,Int,,,0B100,],,,0X6,],,,0xF,],;,},Class,_,:,sz,{,},<EOF>''',
                101
            )
        )

    def test_1141(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M{Var u,$R,$4:Array [Array [Array [Array [Array [Float ,0X4A],0XD],8],4],0b11101];}Class _58{Constructor (C,_,Ng:Array [Array [Boolean ,0B1],0b11101]){} }''',
                '''Class,_M,{,Var,u,,,$R,,,$4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X4A,],,,0XD,],,,8,],,,4,],,,0b11101,],;,},Class,_58,{,Constructor,(,C,,,_,,,Ng,:,Array,[,Array,[,Boolean,,,0B1,],,,0b11101,],),{,},},<EOF>''',
                101
            )
        )

    def test_1142(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:s_U{}Class J4:Q{}Class Gj60:_{Val _,__,o5,_4,$D:Boolean ;}Class _{Var q2_:Array [Array [Array [Float ,0B1000001],0X2D],0B1000001];}''',
                '''Class,F,:,s_U,{,},Class,J4,:,Q,{,},Class,Gj60,:,_,{,Val,_,,,__,,,o5,,,_4,,,$D,:,Boolean,;,},Class,_,{,Var,q2_,:,Array,[,Array,[,Array,[,Float,,,0B1000001,],,,0X2D,],,,0B1000001,],;,},<EOF>''',
                101
            )
        )

    def test_1143(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_0{Constructor (_L,_:Int ;_,_,h:Array [Array [Array [Array [Array [Array [Int ,067],6_2],0X5F],31],31],0b11001];uC:Array [Int ,0X6_F_F_F]){} }''',
                '''Class,_,:,_0,{,Constructor,(,_L,,,_,:,Int,;,_,,,_,,,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,067,],,,62,],,,0X5F,],,,31,],,,31,],,,0b11001,],;,uC,:,Array,[,Int,,,0X6FFF,],),{,},},<EOF>''',
                101
            )
        )

    def test_1144(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_9{$_(CW_9_:W;_:Array [Array [Array [Int ,0b1],0xAF],72];_:Array [Int ,0b1];E2_:Float ;_fn:Float ){Break ;Break ;} }Class _:K54{}''',
                '''Class,_,:,_9,{,$_,(,CW_9_,:,W,;,_,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,0xAF,],,,72,],;,_,:,Array,[,Int,,,0b1,],;,E2_,:,Float,;,_fn,:,Float,),{,Break,;,Break,;,},},Class,_,:,K54,{,},<EOF>''',
                101
            )
        )

    def test_1145(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:_7J{}Class _{}Class __v2{Var f82URi,B_,_mRQ:Array [Array [Float ,0X9613_2],0x6];}Class h7{$_t(l2u:p;t:Int ){} }''',
                '''Class,d,:,_7J,{,},Class,_,{,},Class,__v2,{,Var,f82URi,,,B_,,,_mRQ,:,Array,[,Array,[,Float,,,0X96132,],,,0x6,],;,},Class,h7,{,$_t,(,l2u,:,p,;,t,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1146(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:n{Var _2_TU,$_:String ;Destructor (){}Constructor (v_,H:O;_4f2_:q;_,h:Array [String ,0131];_M:Boolean ){} }''',
                '''Class,_,:,n,{,Var,_2_TU,,,$_,:,String,;,Destructor,(,),{,},Constructor,(,v_,,,H,:,O,;,_4f2_,:,q,;,_,,,h,:,Array,[,String,,,0131,],;,_M,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1147(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:_00{}Class l:_{$_7U(___:_I){}Destructor (){} }Class _S{Destructor (){}_3_0(){Var _C0,U,_:_e__0z_;__3::$A2_1_();} }Class _3{}''',
                '''Class,g,:,_00,{,},Class,l,:,_,{,$_7U,(,___,:,_I,),{,},Destructor,(,),{,},},Class,_S,{,Destructor,(,),{,},_3_0,(,),{,Var,_C0,,,U,,,_,:,_e__0z_,;,__3,::,$A2_1_,(,),;,},},Class,_3,{,},<EOF>''',
                101
            )
        )

    def test_1148(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kSI{_8(_:__;N:Float ;l__,g69,_m_,d9e__:String ;a4,_:Float ;_:Float ;B,xS_:_;L,w:_){} }Class _{Var __79,$3_:Array [Array [Array [Array [Array [Array [Array [Array [Int ,2_4],0X41],01],0X7_3C],0b100110],2],0B1],0B111111];}''',
                '''Class,kSI,{,_8,(,_,:,__,;,N,:,Float,;,l__,,,g69,,,_m_,,,d9e__,:,String,;,a4,,,_,:,Float,;,_,:,Float,;,B,,,xS_,:,_,;,L,,,w,:,_,),{,},},Class,_,{,Var,__79,,,$3_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,24,],,,0X41,],,,01,],,,0X73C,],,,0b100110,],,,2,],,,0B1,],,,0B111111,],;,},<EOF>''',
                101
            )
        )

    def test_1149(self):
        self.assertTrue(
            TestLexer.test(
                '''Class xn:_{Val $65S_,Q,$O_hXC0,$4:Array [Array [String ,102_8],0B1];}Class v:i5{}Class _8Q1{C(){} }Class _:_{}Class _2_:esN1_{}''',
                '''Class,xn,:,_,{,Val,$65S_,,,Q,,,$O_hXC0,,,$4,:,Array,[,Array,[,String,,,1028,],,,0B1,],;,},Class,v,:,i5,{,},Class,_8Q1,{,C,(,),{,},},Class,_,:,_,{,},Class,_2_,:,esN1_,{,},<EOF>''',
                101
            )
        )

    def test_1150(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pqY:__4{Destructor (){} }Class b:e{}Class fv:_{Var $_1r,$ay0,$IP3_,$v:Array [Array [Int ,0X31],57];}Class __:n{Var _58,_:T_6m;}''',
                '''Class,pqY,:,__4,{,Destructor,(,),{,},},Class,b,:,e,{,},Class,fv,:,_,{,Var,$_1r,,,$ay0,,,$IP3_,,,$v,:,Array,[,Array,[,Int,,,0X31,],,,57,],;,},Class,__,:,n,{,Var,_58,,,_,:,T_6m,;,},<EOF>''',
                101
            )
        )

    def test_1151(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_4{}Class _l1:Dk{_(N_:Array [Array [Array [Int ,25],0B1011101],67320]){Continue ;Continue ;}Val _D_:Array [String ,014];}''',
                '''Class,_,:,_4,{,},Class,_l1,:,Dk,{,_,(,N_,:,Array,[,Array,[,Array,[,Int,,,25,],,,0B1011101,],,,67320,],),{,Continue,;,Continue,;,},Val,_D_,:,Array,[,String,,,014,],;,},<EOF>''',
                101
            )
        )

    def test_1152(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (y:D;K_:String ){_62::$t();Return ;}Var u,$b_76,B:Array [Array [Array [Array [Float ,0B1000010],0x8],42_4010_7],03];}Class S{}''',
                '''Class,_,{,Constructor,(,y,:,D,;,K_,:,String,),{,_62,::,$t,(,),;,Return,;,},Var,u,,,$b_76,,,B,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1000010,],,,0x8,],,,4240107,],,,03,],;,},Class,S,{,},<EOF>''',
                101
            )
        )

    def test_1153(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _S7{}Class _:R3{__(){}Val _s,$8_J_:Array [Float ,3_73];Var r,__0_,$79:Array [Array [Int ,7],0x2];$_(_:Int ;u_,_:Int ){} }''',
                '''Class,_S7,{,},Class,_,:,R3,{,__,(,),{,},Val,_s,,,$8_J_,:,Array,[,Float,,,373,],;,Var,r,,,__0_,,,$79,:,Array,[,Array,[,Int,,,7,],,,0x2,],;,$_,(,_,:,Int,;,u_,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1154(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_:S7e__{Val _f,VY,G1:Array [Int ,0b11110];Val __:_;}Class D{Constructor (_:Boolean ;g__,__2,Z,_e17,_,__g2:Int ){Break ;}sa(){} }Class __{}''',
                '''Class,M_,:,S7e__,{,Val,_f,,,VY,,,G1,:,Array,[,Int,,,0b11110,],;,Val,__,:,_,;,},Class,D,{,Constructor,(,_,:,Boolean,;,g__,,,__2,,,Z,,,_e17,,,_,,,__g2,:,Int,),{,Break,;,},sa,(,),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_1155(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_5_{Constructor (A__Yh,_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,2],0B11],065],0x34],046_0_5_2],2],16],0B1];nG:z7){ {Continue ;} }Destructor (){Continue ;} }''',
                '''Class,_,:,_5_,{,Constructor,(,A__Yh,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,2,],,,0B11,],,,065,],,,0x34,],,,046052,],,,2,],,,16,],,,0B1,],;,nG,:,z7,),{,{,Continue,;,},},Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1156(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R5{}Class f_7_:_m_{_8(){}Constructor (){Val _8T1:Array [Array [Int ,0XE],0x44];Continue ;} }Class r{}Class __:Q_8{}Class L_{}''',
                '''Class,R5,{,},Class,f_7_,:,_m_,{,_8,(,),{,},Constructor,(,),{,Val,_8T1,:,Array,[,Array,[,Int,,,0XE,],,,0x44,],;,Continue,;,},},Class,r,{,},Class,__,:,Q_8,{,},Class,L_,{,},<EOF>''',
                101
            )
        )

    def test_1157(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U{Destructor (){Return ;}Constructor (_Z:Array [Int ,07];q7__o,v,a__gy_,_B,_65M4:Array [Int ,3];_:Array [Array [Array [Array [Float ,0b1],0XA],0xB],014]){} }''',
                '''Class,U,{,Destructor,(,),{,Return,;,},Constructor,(,_Z,:,Array,[,Int,,,07,],;,q7__o,,,v,,,a__gy_,,,_B,,,_65M4,:,Array,[,Int,,,3,],;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0XA,],,,0xB,],,,014,],),{,},},<EOF>''',
                101
            )
        )

    def test_1158(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:_{}Class _X:H_4{Val $Y:Array [String ,05];}Class a:_{Val __:Array [Array [Array [Array [Array [Boolean ,0b1],0B1],02],0b1],65];}''',
                '''Class,L,:,_,{,},Class,_X,:,H_4,{,Val,$Y,:,Array,[,String,,,05,],;,},Class,a,:,_,{,Val,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0B1,],,,02,],,,0b1,],,,65,],;,},<EOF>''',
                101
            )
        )

    def test_1159(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:_{}Class _4:j{Constructor (Q,___:Array [Array [Array [String ,0B1_0],0XA],07_7_6_3]){}___L5(){}Constructor (_:Array [Boolean ,0XA];F30C:_68){Break ;} }Class _:_{}''',
                '''Class,e,:,_,{,},Class,_4,:,j,{,Constructor,(,Q,,,___,:,Array,[,Array,[,Array,[,String,,,0B10,],,,0XA,],,,07763,],),{,},___L5,(,),{,},Constructor,(,_,:,Array,[,Boolean,,,0XA,],;,F30C,:,_68,),{,Break,;,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1160(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E46n{}Class w{Val TQ:fe_;Constructor (){} }Class _:s_h{}Class uP_8{Destructor (){ {Val _:Int ;}Continue ;} }Class A:_03_MP{Y(){} }''',
                '''Class,E46n,{,},Class,w,{,Val,TQ,:,fe_,;,Constructor,(,),{,},},Class,_,:,s_h,{,},Class,uP_8,{,Destructor,(,),{,{,Val,_,:,Int,;,},Continue,;,},},Class,A,:,_03_MP,{,Y,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1161(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Array [Boolean ,0B1];O_,_,d_O3,_,_2,C,A6s90_:_;_9:F;_:K){}Constructor (){} }Class Aw{}''',
                '''Class,_,{,Constructor,(,_,:,Array,[,Boolean,,,0B1,],;,O_,,,_,,,d_O3,,,_,,,_2,,,C,,,A6s90_,:,_,;,_9,:,F,;,_,:,K,),{,},Constructor,(,),{,},},Class,Aw,{,},<EOF>''',
                101
            )
        )

    def test_1162(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_:_{}Class _{}Class X{$6(){}Constructor (f,_NS5,_:_;X___0,N,e:Float ){} }Class N6{}Class _:_{$5__P_(wxD_95,_,_S,_R:String ){} }''',
                '''Class,I_,:,_,{,},Class,_,{,},Class,X,{,$6,(,),{,},Constructor,(,f,,,_NS5,,,_,:,_,;,X___0,,,N,,,e,:,Float,),{,},},Class,N6,{,},Class,_,:,_,{,$5__P_,(,wxD_95,,,_,,,_S,,,_R,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_1163(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_u{Constructor (F:_j;rGg,_Yp:Array [Array [Array [Array [Int ,56],060_20],0B11],0113]){}Constructor (e_:w_){} }''',
                '''Class,_,:,_u,{,Constructor,(,F,:,_j,;,rGg,,,_Yp,:,Array,[,Array,[,Array,[,Array,[,Int,,,56,],,,06020,],,,0B11,],,,0113,],),{,},Constructor,(,e_,:,w_,),{,},},<EOF>''',
                101
            )
        )

    def test_1164(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e{}Class __h_{Val ai:_;}Class q:_5T{}Class o{}Class j{Constructor (n,_:Int ;__,_,_:Float ;OL:Float ){} }Class D{Var _0_:Float ;}''',
                '''Class,_e,{,},Class,__h_,{,Val,ai,:,_,;,},Class,q,:,_5T,{,},Class,o,{,},Class,j,{,Constructor,(,n,,,_,:,Int,;,__,,,_,,,_,:,Float,;,OL,:,Float,),{,},},Class,D,{,Var,_0_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1165(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9_{o5(_,_,____,_,_,_,x:Float ;_1__M_46_O:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0x55],23],0B1100],0b1],0xB],1],0X4B],0x55];__,h,_,o__:L_){Continue ;} }''',
                '''Class,_9_,{,o5,(,_,,,_,,,____,,,_,,,_,,,_,,,x,:,Float,;,_1__M_46_O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x55,],,,23,],,,0B1100,],,,0b1,],,,0xB,],,,1,],,,0X4B,],,,0x55,],;,__,,,h,,,_,,,o__,:,L_,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1166(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_l(_2:_dR1XR;R,l_:Array [Array [String ,63],0B101]){_A::$8();}Destructor (){Continue ;}Destructor (){}K(UF:String ;__:Boolean ;q:_){}Val MF_,$r_,S,k63__9:Array [Int ,070];}Class Q:r_{}''',
                '''Class,_,{,_l,(,_2,:,_dR1XR,;,R,,,l_,:,Array,[,Array,[,String,,,63,],,,0B101,],),{,_A,::,$8,(,),;,},Destructor,(,),{,Continue,;,},Destructor,(,),{,},K,(,UF,:,String,;,__,:,Boolean,;,q,:,_,),{,},Val,MF_,,,$r_,,,S,,,k63__9,:,Array,[,Int,,,070,],;,},Class,Q,:,r_,{,},<EOF>''',
                101
            )
        )

    def test_1167(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4{}Class __:_{}Class lH:_{Val C_:Array [Array [Boolean ,06],0x49];Constructor (){Break ;}_d(){}Constructor (_:V;t,hY_,_k,_,nU,_:Uo){} }Class b:A{Var $7_:Boolean ;}''',
                '''Class,_4,{,},Class,__,:,_,{,},Class,lH,:,_,{,Val,C_,:,Array,[,Array,[,Boolean,,,06,],,,0x49,],;,Constructor,(,),{,Break,;,},_d,(,),{,},Constructor,(,_,:,V,;,t,,,hY_,,,_k,,,_,,,nU,,,_,:,Uo,),{,},},Class,b,:,A,{,Var,$7_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1168(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_:P5{_(x_,i,___C:String ;e4S:Array [Array [Array [Array [Float ,0B1001011],0B1_1],04],2];_,dW,dP,_:Boolean ){} }Class s:__5{Constructor (){}_433(){}Var $E_I,$J,$q:Int ;}Class __:I_{}''',
                '''Class,I_,:,P5,{,_,(,x_,,,i,,,___C,:,String,;,e4S,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1001011,],,,0B11,],,,04,],,,2,],;,_,,,dW,,,dP,,,_,:,Boolean,),{,},},Class,s,:,__5,{,Constructor,(,),{,},_433,(,),{,},Var,$E_I,,,$J,,,$q,:,Int,;,},Class,__,:,I_,{,},<EOF>''',
                101
            )
        )

    def test_1169(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $7r:Array [Array [Array [Array [Array [Array [Array [Int ,027_7],0X37],0B1],4],0X8],61_2],0101]=K::$nk._.HA-!--r_::$_;}''',
                '''Class,_,{,Var,$7r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0277,],,,0X37,],,,0B1,],,,4,],,,0X8,],,,612,],,,0101,],=,K,::,$nk,.,_,.,HA,-,!,-,-,r_,::,$_,;,},<EOF>''',
                101
            )
        )

    def test_1170(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$27_(_A:Array [Array [Array [Array [Array [Array [Array [Boolean ,4_4],043],043],043],03],8],9]){} }Class _O:D_F{}''',
                '''Class,_,{,$27_,(,_A,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,44,],,,043,],,,043,],,,043,],,,03,],,,8,],,,9,],),{,},},Class,_O,:,D_F,{,},<EOF>''',
                101
            )
        )

    def test_1171(self):
        self.assertTrue(
            TestLexer.test(
                '''Class zy:PJ{Constructor (){}$Z(nL6I,__np,e,yQ:n;c,__:Array [Array [Array [Boolean ,0b1000110],0B1],0B1010010];F:String ;_,_,_:Int ;I,_,T,_:Float ){Return ;Return ;}Y(___,r0,a_v:Array [Array [Int ,0B1],04]){} }''',
                '''Class,zy,:,PJ,{,Constructor,(,),{,},$Z,(,nL6I,,,__np,,,e,,,yQ,:,n,;,c,,,__,:,Array,[,Array,[,Array,[,Boolean,,,0b1000110,],,,0B1,],,,0B1010010,],;,F,:,String,;,_,,,_,,,_,:,Int,;,I,,,_,,,T,,,_,:,Float,),{,Return,;,Return,;,},Y,(,___,,,r0,,,a_v,:,Array,[,Array,[,Int,,,0B1,],,,04,],),{,},},<EOF>''',
                101
            )
        )

    def test_1172(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E_{Constructor (){Continue ;}Var $__,$4_,$Mw,_I8_2I_:Array [Float ,0b1];Constructor (_B:Array [Float ,0X8_0]){} }''',
                '''Class,E_,{,Constructor,(,),{,Continue,;,},Var,$__,,,$4_,,,$Mw,,,_I8_2I_,:,Array,[,Float,,,0b1,],;,Constructor,(,_B,:,Array,[,Float,,,0X80,],),{,},},<EOF>''',
                101
            )
        )

    def test_1173(self):
        self.assertTrue(
            TestLexer.test(
                '''Class aD:D_{Constructor (b,_5__:Array [Array [String ,03_5_6],0X3_5]){Continue ;Break ;}Val pc:P2;}Class _{Var _3,d,L:Array [Int ,0b1111];}Class z{_(){Continue ;} }''',
                '''Class,aD,:,D_,{,Constructor,(,b,,,_5__,:,Array,[,Array,[,String,,,0356,],,,0X35,],),{,Continue,;,Break,;,},Val,pc,:,P2,;,},Class,_,{,Var,_3,,,d,,,L,:,Array,[,Int,,,0b1111,],;,},Class,z,{,_,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1174(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{}Class _3iF{Constructor (O:Array [Array [Array [Array [Array [Array [Boolean ,04],0X35],064],0x4B],44],04_7]){Continue ;} }''',
                '''Class,F,{,},Class,_3iF,{,Constructor,(,O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,04,],,,0X35,],,,064,],,,0x4B,],,,44,],,,047,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1175(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:n{D(a,a,V59:_;eL,___:Array [Float ,94];H369:Array [Array [Array [Float ,0x75],0x38],0X13];_d91:_6707){}_(Qik,s,_f:Array [Boolean ,0X13];J:k_16){}Destructor (){} }Class _:u__{}''',
                '''Class,_,:,n,{,D,(,a,,,a,,,V59,:,_,;,eL,,,___,:,Array,[,Float,,,94,],;,H369,:,Array,[,Array,[,Array,[,Float,,,0x75,],,,0x38,],,,0X13,],;,_d91,:,_6707,),{,},_,(,Qik,,,s,,,_f,:,Array,[,Boolean,,,0X13,],;,J,:,k_16,),{,},Destructor,(,),{,},},Class,_,:,u__,{,},<EOF>''',
                101
            )
        )

    def test_1176(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___72_{Var u:U_n19;}Class u:_{}Class S_TM{Destructor (){}Val ie:_;}Class _{Var $_0,$_,$_h:Array [Int ,54];}''',
                '''Class,___72_,{,Var,u,:,U_n19,;,},Class,u,:,_,{,},Class,S_TM,{,Destructor,(,),{,},Val,ie,:,_,;,},Class,_,{,Var,$_0,,,$_,,,$_h,:,Array,[,Int,,,54,],;,},<EOF>''',
                101
            )
        )

    def test_1177(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:D_{}Class _C5_{}Class p_62:C_{}Class r{}Class g{}Class __{Destructor (){Break ;} }Class u3:_e{}Class __{}''',
                '''Class,J,:,D_,{,},Class,_C5_,{,},Class,p_62,:,C_,{,},Class,r,{,},Class,g,{,},Class,__,{,Destructor,(,),{,Break,;,},},Class,u3,:,_e,{,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_1178(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_8j{_(rS:_5;_3:Array [Array [Float ,052],18];L_j:Boolean ;V_a_,_:Array [Array [Array [Array [Boolean ,0B1000001],011_3],0B1000001],18]){} }''',
                '''Class,_,:,_8j,{,_,(,rS,:,_5,;,_3,:,Array,[,Array,[,Float,,,052,],,,18,],;,L_j,:,Boolean,;,V_a_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1000001,],,,0113,],,,0B1000001,],,,18,],),{,},},<EOF>''',
                101
            )
        )

    def test_1179(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O2{}Class W{Constructor (zUw7N:Array [Int ,064];c:Array [Array [Array [Array [Boolean ,0b101111],7],7],064]){} }Class HF{Var $T_:Float ;}''',
                '''Class,O2,{,},Class,W,{,Constructor,(,zUw7N,:,Array,[,Int,,,064,],;,c,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101111,],,,7,],,,7,],,,064,],),{,},},Class,HF,{,Var,$T_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1180(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:_{Constructor (y:c_3ju;__w5,p,_6,_7:Array [Array [Array [Array [Array [Int ,072],0X7],0b1000011],0B1000000],0X7];_:Array [Int ,022]){} }''',
                '''Class,A,:,_,{,Constructor,(,y,:,c_3ju,;,__w5,,,p,,,_6,,,_7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,072,],,,0X7,],,,0b1000011,],,,0B1000000,],,,0X7,],;,_,:,Array,[,Int,,,022,],),{,},},<EOF>''',
                101
            )
        )

    def test_1181(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{Constructor (_:Array [Int ,0b1];Yl_,PwZ,_D,_:Array [Array [String ,0135],683_8_4]){}Destructor (){}_aQ0_4(_,_8_g0,_:Boolean ){}Destructor (){}Val $69,_:_;_(C,d:String ;q,____6:Boolean ;_4N,_:Float ){} }''',
                '''Class,_8,{,Constructor,(,_,:,Array,[,Int,,,0b1,],;,Yl_,,,PwZ,,,_D,,,_,:,Array,[,Array,[,String,,,0135,],,,68384,],),{,},Destructor,(,),{,},_aQ0_4,(,_,,,_8_g0,,,_,:,Boolean,),{,},Destructor,(,),{,},Val,$69,,,_,:,_,;,_,(,C,,,d,:,String,;,q,,,____6,:,Boolean,;,_4N,,,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1182(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:J{Constructor (W:C_xs;n:Float ;D,d7I,_,_v_9,o_,C:Array [Array [Int ,03_6_4],0B1];_,o_:Array [Array [Array [Boolean ,0b110110],076],076];_R:x_;_U,lsJ8:_){} }Class _{}''',
                '''Class,g,:,J,{,Constructor,(,W,:,C_xs,;,n,:,Float,;,D,,,d7I,,,_,,,_v_9,,,o_,,,C,:,Array,[,Array,[,Int,,,0364,],,,0B1,],;,_,,,o_,:,Array,[,Array,[,Array,[,Boolean,,,0b110110,],,,076,],,,076,],;,_R,:,x_,;,_U,,,lsJ8,:,_,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1183(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ai_Jfo:___1{Val $2:Array [Array [Int ,0B110],77];_(c,R:_;__,_L,_:Array [Array [Boolean ,0xD],0B110_10_0]){} }''',
                '''Class,ai_Jfo,:,___1,{,Val,$2,:,Array,[,Array,[,Int,,,0B110,],,,77,],;,_,(,c,,,R,:,_,;,__,,,_L,,,_,:,Array,[,Array,[,Boolean,,,0xD,],,,0B110100,],),{,},},<EOF>''',
                101
            )
        )

    def test_1184(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cJB:_{}Class A809:b{Var Xv:Boolean =N::$p()._;}Class _{Val $_,W:Float ;Constructor (_I:Array [Float ,5]){}Constructor (){} }Class _:_{}''',
                '''Class,cJB,:,_,{,},Class,A809,:,b,{,Var,Xv,:,Boolean,=,N,::,$p,(,),.,_,;,},Class,_,{,Val,$_,,,W,:,Float,;,Constructor,(,_I,:,Array,[,Float,,,5,],),{,},Constructor,(,),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1185(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{Var $5v_H:Array [Boolean ,0143];}Class u8:_{Var __H__:Array [Array [Array [Array [Array [Array [Float ,0X52],0B1_0_1],0x51],8_7_2_7],0143],0143];}''',
                '''Class,_1,{,Var,$5v_H,:,Array,[,Boolean,,,0143,],;,},Class,u8,:,_,{,Var,__H__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X52,],,,0B101,],,,0x51,],,,8727,],,,0143,],,,0143,],;,},<EOF>''',
                101
            )
        )

    def test_1186(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{$Lg1m_(){}Destructor (){Break ;}Val $3:Array [Array [Array [Array [Float ,025],0x9],0X6_8],04_4];Var $9_:Float ;}''',
                '''Class,__,{,$Lg1m_,(,),{,},Destructor,(,),{,Break,;,},Val,$3,:,Array,[,Array,[,Array,[,Array,[,Float,,,025,],,,0x9,],,,0X68,],,,044,],;,Var,$9_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1187(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p_{}Class __{Destructor (){}$a0rZ(_,p:Array [Float ,0B1]){Var bN4:Array [Array [Array [Array [Boolean ,0B110110],0b1],80],045];} }''',
                '''Class,p_,{,},Class,__,{,Destructor,(,),{,},$a0rZ,(,_,,,p,:,Array,[,Float,,,0B1,],),{,Var,bN4,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110110,],,,0b1,],,,80,],,,045,],;,},},<EOF>''',
                101
            )
        )

    def test_1188(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z{}Class A:_{}Class K{$6___(__,I,_g_,_:Float ;hL:T;E9:l;__9:Array [Float ,0x5]){}Destructor (){Break ;}Destructor (){Val _:Array [Boolean ,3_9_47];} }''',
                '''Class,z,{,},Class,A,:,_,{,},Class,K,{,$6___,(,__,,,I,,,_g_,,,_,:,Float,;,hL,:,T,;,E9,:,l,;,__9,:,Array,[,Float,,,0x5,],),{,},Destructor,(,),{,Break,;,},Destructor,(,),{,Val,_,:,Array,[,Boolean,,,3947,],;,},},<EOF>''',
                101
            )
        )

    def test_1189(self):
        self.assertTrue(
            TestLexer.test(
                '''Class mI{$7(dsq,H,__1:C;Y__9T,_2P:Array [Array [String ,0B10000],0B10000];_8,Yh1f:A;_,_f0:Float ;n:Boolean ;j5,NZC81:Boolean ;_64_:Boolean ){} }Class _:f{}''',
                '''Class,mI,{,$7,(,dsq,,,H,,,__1,:,C,;,Y__9T,,,_2P,:,Array,[,Array,[,String,,,0B10000,],,,0B10000,],;,_8,,,Yh1f,:,A,;,_,,,_f0,:,Float,;,n,:,Boolean,;,j5,,,NZC81,:,Boolean,;,_64_,:,Boolean,),{,},},Class,_,:,f,{,},<EOF>''',
                101
            )
        )

    def test_1190(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $R:Boolean ;Var E,$V3,$C:_;___(gD,p:Boolean ;j:_;_,_n__8,j6,y3,_,_,_:Array [Float ,0x8]){}Val $A_:Array [Array [Float ,11],01];}Class r:_{}''',
                '''Class,_,{,Var,$R,:,Boolean,;,Var,E,,,$V3,,,$C,:,_,;,___,(,gD,,,p,:,Boolean,;,j,:,_,;,_,,,_n__8,,,j6,,,y3,,,_,,,_,,,_,:,Array,[,Float,,,0x8,],),{,},Val,$A_,:,Array,[,Array,[,Float,,,11,],,,01,],;,},Class,r,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1191(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:t{}Class a5_{Constructor (_,_U,y,x2_,_Y_9:Array [Array [Boolean ,0B11111],0X1]){} }Class L{Val _:Array [String ,0xF2_5];}Class yW:_{}''',
                '''Class,I,:,t,{,},Class,a5_,{,Constructor,(,_,,,_U,,,y,,,x2_,,,_Y_9,:,Array,[,Array,[,Boolean,,,0B11111,],,,0X1,],),{,},},Class,L,{,Val,_,:,Array,[,String,,,0xF25,],;,},Class,yW,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1192(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __2{P(_,H_:Array [Int ,022];rO:Array [Array [Boolean ,0b1],45];__,_L9,_:_3){}Var $9_I07:X3;}Class B:_{Destructor (){Val h:qs;} }Class _{Val $0:String ;Val $_A,_2:_;$L_(_3_w_k,_js,_:u){} }Class MF7k{}''',
                '''Class,__2,{,P,(,_,,,H_,:,Array,[,Int,,,022,],;,rO,:,Array,[,Array,[,Boolean,,,0b1,],,,45,],;,__,,,_L9,,,_,:,_3,),{,},Var,$9_I07,:,X3,;,},Class,B,:,_,{,Destructor,(,),{,Val,h,:,qs,;,},},Class,_,{,Val,$0,:,String,;,Val,$_A,,,_2,:,_,;,$L_,(,_3_w_k,,,_js,,,_,:,u,),{,},},Class,MF7k,{,},<EOF>''',
                101
            )
        )

    def test_1193(self):
        self.assertTrue(
            TestLexer.test(
                '''Class sJ{$_3(KP:Array [Array [Array [Boolean ,0b1_0_1_1_0_0_0_1],6],3];w0_9_Q0:Array [Array [Float ,0B1_0010_000],0b110010]){Break ;} }''',
                '''Class,sJ,{,$_3,(,KP,:,Array,[,Array,[,Array,[,Boolean,,,0b10110001,],,,6,],,,3,],;,w0_9_Q0,:,Array,[,Array,[,Float,,,0B10010000,],,,0b110010,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1194(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s_8:t{Val _9,_Z,$3w,$A_7:Float ;t_(_4_:String ;__:Array [Array [Array [Array [String ,0X35],0x9_4_A],8],0X35];S_70:_){} }Class i__{}Class R{}''',
                '''Class,s_8,:,t,{,Val,_9,,,_Z,,,$3w,,,$A_7,:,Float,;,t_,(,_4_,:,String,;,__,:,Array,[,Array,[,Array,[,Array,[,String,,,0X35,],,,0x94A,],,,8,],,,0X35,],;,S_70,:,_,),{,},},Class,i__,{,},Class,R,{,},<EOF>''',
                101
            )
        )

    def test_1195(self):
        self.assertTrue(
            TestLexer.test(
                '''Class mCr:a89D9_4E6{}Class _:_{}Class u3{}Class _:z{}Class __9:_W{}Class _{}Class _G{Constructor (l_:Array [Boolean ,0x9]){}Destructor (){} }''',
                '''Class,mCr,:,a89D9_4E6,{,},Class,_,:,_,{,},Class,u3,{,},Class,_,:,z,{,},Class,__9,:,_W,{,},Class,_,{,},Class,_G,{,Constructor,(,l_,:,Array,[,Boolean,,,0x9,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1196(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0___{}Class v{}Class p{Destructor (){}Var a:String ;Val R,_,_:Array [Array [Array [Array [Int ,7],0xE],0XA],7];}''',
                '''Class,_0___,{,},Class,v,{,},Class,p,{,Destructor,(,),{,},Var,a,:,String,;,Val,R,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,7,],,,0xE,],,,0XA,],,,7,],;,},<EOF>''',
                101
            )
        )

    def test_1197(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9d:e{Constructor (i,_u,I_Y,a:_;_2EB,_3,WfR_:Array [Array [String ,0B101110],0B101110];__,_6:_9J;S_8,I_:Array [String ,0X51]){} }''',
                '''Class,_9d,:,e,{,Constructor,(,i,,,_u,,,I_Y,,,a,:,_,;,_2EB,,,_3,,,WfR_,:,Array,[,Array,[,String,,,0B101110,],,,0B101110,],;,__,,,_6,:,_9J,;,S_8,,,I_,:,Array,[,String,,,0X51,],),{,},},<EOF>''',
                101
            )
        )

    def test_1198(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w4{Constructor (p:Float ;D,G:Array [Array [Array [Int ,0B100001],0101],0b11111];_,H,S:Array [Float ,042];T_,m_,P:P82){ {} }}''',
                '''Class,w4,{,Constructor,(,p,:,Float,;,D,,,G,:,Array,[,Array,[,Array,[,Int,,,0B100001,],,,0101,],,,0b11111,],;,_,,,H,,,S,:,Array,[,Float,,,042,],;,T_,,,m_,,,P,:,P82,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1199(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W_0{I__f(_,X3h,OV:Z){}$bO8U_(m_8k,y8,R:_){} }Class _{Val a1_n79,$_,$6m:Array [Float ,4];}Class _4n5_:_8{Val wI,_,_:Array [Int ,0xD_AD8];}''',
                '''Class,W_0,{,I__f,(,_,,,X3h,,,OV,:,Z,),{,},$bO8U_,(,m_8k,,,y8,,,R,:,_,),{,},},Class,_,{,Val,a1_n79,,,$_,,,$6m,:,Array,[,Float,,,4,],;,},Class,_4n5_,:,_8,{,Val,wI,,,_,,,_,:,Array,[,Int,,,0xDAD8,],;,},<EOF>''',
                101
            )
        )

    def test_1200(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j_6:_{}Class _:_{Var f_NK3,j8,$_:String ;Constructor (E4:Array [Array [String ,052],0b1]){}Destructor (){}Var $l,$pn_i_Z:r2;}''',
                '''Class,j_6,:,_,{,},Class,_,:,_,{,Var,f_NK3,,,j8,,,$_,:,String,;,Constructor,(,E4,:,Array,[,Array,[,String,,,052,],,,0b1,],),{,},Destructor,(,),{,},Var,$l,,,$pn_i_Z,:,r2,;,},<EOF>''',
                101
            )
        )

    def test_1201(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4{Var _,$O___,$7,$31,$5,$3,_s:String ;Var oUod:Array [Array [Array [Array [Array [Array [Array [Float ,24],2],0X3],0B101],060],9_0_3805],0X3B];}''',
                '''Class,_4,{,Var,_,,,$O___,,,$7,,,$31,,,$5,,,$3,,,_s,:,String,;,Var,oUod,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,24,],,,2,],,,0X3,],,,0B101,],,,060,],,,903805,],,,0X3B,],;,},<EOF>''',
                101
            )
        )

    def test_1202(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class l{Val $_T_:Array [Array [Array [Int ,82],7],02];Var $R,$1_z_,nG,_:_;}Class N7{}Class f7:_{}Class _:O_{}''',
                '''Class,_,{,},Class,l,{,Val,$_T_,:,Array,[,Array,[,Array,[,Int,,,82,],,,7,],,,02,],;,Var,$R,,,$1_z_,,,nG,,,_,:,_,;,},Class,N7,{,},Class,f7,:,_,{,},Class,_,:,O_,{,},<EOF>''',
                101
            )
        )

    def test_1203(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a_{}Class _8{}Class kn_{}Class __{Constructor (_,l0:Boolean ;W3_,_,__45,_:Array [Boolean ,4];z:vs;g5,_p8,_N,SN:_;t7:Array [Int ,0x26]){} }''',
                '''Class,a_,{,},Class,_8,{,},Class,kn_,{,},Class,__,{,Constructor,(,_,,,l0,:,Boolean,;,W3_,,,_,,,__45,,,_,:,Array,[,Boolean,,,4,],;,z,:,vs,;,g5,,,_p8,,,_N,,,SN,:,_,;,t7,:,Array,[,Int,,,0x26,],),{,},},<EOF>''',
                101
            )
        )

    def test_1204(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _{Constructor (q_:String ;_t:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B111],0B11_01],7],0X1],01],0x62],92],92],92];n3,p9,m,i:Int ;_:w;N_:Array [Array [Array [Array [Array [Float ,0b1],1_5_0],01],0b110000],3];_v,R4:Array [Array [Int ,1],0x5F6CC_3_8];_0D,_J_4:_7_;_,y_,C4,I_:Array [Array [Boolean ,0X59],0B1001000]){}Destructor (){} }''',
                '''Class,_,:,_,{,},Class,_,{,Constructor,(,q_,:,String,;,_t,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B111,],,,0B1101,],,,7,],,,0X1,],,,01,],,,0x62,],,,92,],,,92,],,,92,],;,n3,,,p9,,,m,,,i,:,Int,;,_,:,w,;,N_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,150,],,,01,],,,0b110000,],,,3,],;,_v,,,R4,:,Array,[,Array,[,Int,,,1,],,,0x5F6CC38,],;,_0D,,,_J_4,:,_7_,;,_,,,y_,,,C4,,,I_,:,Array,[,Array,[,Boolean,,,0X59,],,,0B1001000,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1205(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j__{}Class _{Destructor (){}Var _:Array [Array [Int ,036],97];}Class A34:_1{}Class Z{i__6_(a:String ){Continue ;}Var _,g:Array [Array [Int ,0xC],0b1011000];}Class h{}''',
                '''Class,j__,{,},Class,_,{,Destructor,(,),{,},Var,_,:,Array,[,Array,[,Int,,,036,],,,97,],;,},Class,A34,:,_1,{,},Class,Z,{,i__6_,(,a,:,String,),{,Continue,;,},Var,_,,,g,:,Array,[,Array,[,Int,,,0xC,],,,0b1011000,],;,},Class,h,{,},<EOF>''',
                101
            )
        )

    def test_1206(self):
        self.assertTrue(
            TestLexer.test(
                '''Class po{Val $9___,q07__5:Array [Array [Array [Array [Array [Array [Array [String ,0B1],2],0b1010100],03],0B11111],8_1],0X56];Constructor (){}Destructor (){Break ;}_(){}Destructor (){} }''',
                '''Class,po,{,Val,$9___,,,q07__5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,2,],,,0b1010100,],,,03,],,,0B11111,],,,81,],,,0X56,],;,Constructor,(,),{,},Destructor,(,),{,Break,;,},_,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1207(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I{Destructor (){hb::$6();Val v_,_634,_30_,e,_,v,A_,__,_,_F,___,T:_;} }Class h86:q{_(__7:Boolean ){} }Class m:A{}''',
                '''Class,_,:,I,{,Destructor,(,),{,hb,::,$6,(,),;,Val,v_,,,_634,,,_30_,,,e,,,_,,,v,,,A_,,,__,,,_,,,_F,,,___,,,T,:,_,;,},},Class,h86,:,q,{,_,(,__7,:,Boolean,),{,},},Class,m,:,A,{,},<EOF>''',
                101
            )
        )

    def test_1208(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{U(N:Array [Array [Array [Array [Boolean ,07],7_0628],5_7],50];_w:Array [String ,0xA]){} }Class Z:__{Val $_I,$4,S:Array [String ,0144];}Class X6_:_{$e4(F,t_27,K46:__){} }Class _7nU4:_{}Class _:r_{}''',
                '''Class,_,:,_,{,U,(,N,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,07,],,,70628,],,,57,],,,50,],;,_w,:,Array,[,String,,,0xA,],),{,},},Class,Z,:,__,{,Val,$_I,,,$4,,,S,:,Array,[,String,,,0144,],;,},Class,X6_,:,_,{,$e4,(,F,,,t_27,,,K46,:,__,),{,},},Class,_7nU4,:,_,{,},Class,_,:,r_,{,},<EOF>''',
                101
            )
        )

    def test_1209(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_1{_1(_,_704,_GC,n8,__lp__,_:Boolean ;jBB_kV_:Array [Array [Array [Array [Array [Array [Int ,65],0X3],0X12],017],017],07]){Break ;}Constructor (){} }''',
                '''Class,z,:,_1,{,_1,(,_,,,_704,,,_GC,,,n8,,,__lp__,,,_,:,Boolean,;,jBB_kV_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,65,],,,0X3,],,,0X12,],,,017,],,,017,],,,07,],),{,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1210(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{}Class _{}Class _Fx_6g:Z_{Constructor (x0:Int ;__:Array [String ,05];M_,_,W_2__:Boolean ;r_,__YT1:EjzJ5_P){} }''',
                '''Class,p,{,},Class,_,{,},Class,_Fx_6g,:,Z_,{,Constructor,(,x0,:,Int,;,__,:,Array,[,String,,,05,],;,M_,,,_,,,W_2__,:,Boolean,;,r_,,,__YT1,:,EjzJ5_P,),{,},},<EOF>''',
                101
            )
        )

    def test_1211(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _h_79{Var $0,$_:__;}Class a1{Constructor (y,xA:Array [Float ,0x5];i0__,_:Array [Array [String ,64],0B100110]){Continue ;}Constructor (){} }''',
                '''Class,_h_79,{,Var,$0,,,$_,:,__,;,},Class,a1,{,Constructor,(,y,,,xA,:,Array,[,Float,,,0x5,],;,i0__,,,_,:,Array,[,Array,[,String,,,64,],,,0B100110,],),{,Continue,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1212(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1s7{Var B9:Array [Int ,23];Var $8_1_Q:Array [Array [Float ,0B11001],0X5_7]=!--_o1_tKc::$_._.k_2&&!!!t_f::$_14.__u_1()._.__()._();}''',
                '''Class,_1s7,{,Var,B9,:,Array,[,Int,,,23,],;,Var,$8_1_Q,:,Array,[,Array,[,Float,,,0B11001,],,,0X57,],=,!,-,-,_o1_tKc,::,$_,.,_,.,k_2,&&,!,!,!,t_f,::,$_14,.,__u_1,(,),.,_,.,__,(,),.,_,(,),;,},<EOF>''',
                101
            )
        )

    def test_1213(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _N:H{}Class _:l{}Class V{$3(___r:String ;_:Float ;_y1:String ){} }Class _:_{Constructor (){} }Class _y{}Class zK{$96H(_:m;_8Y__0_:_){} }''',
                '''Class,_N,:,H,{,},Class,_,:,l,{,},Class,V,{,$3,(,___r,:,String,;,_,:,Float,;,_y1,:,String,),{,},},Class,_,:,_,{,Constructor,(,),{,},},Class,_y,{,},Class,zK,{,$96H,(,_,:,m,;,_8Y__0_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1214(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w{}Class F:W{$0(_:Array [Boolean ,0x1A]){Continue ;}Constructor (Z:Array [Array [Boolean ,036],036];p,b,A,_D:Int ){} }''',
                '''Class,w,{,},Class,F,:,W,{,$0,(,_,:,Array,[,Boolean,,,0x1A,],),{,Continue,;,},Constructor,(,Z,:,Array,[,Array,[,Boolean,,,036,],,,036,],;,p,,,b,,,A,,,_D,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1215(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ci:__W{}Class _{$_7(_:Array [Array [Array [Boolean ,0x65F],0XF_C0_6],86];b,lU,_,_,_,_:Float ){Break ;Continue ;} }''',
                '''Class,ci,:,__W,{,},Class,_,{,$_7,(,_,:,Array,[,Array,[,Array,[,Boolean,,,0x65F,],,,0XFC06,],,,86,],;,b,,,lU,,,_,,,_,,,_,,,_,:,Float,),{,Break,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1216(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_:O{}Class _:o7{S4(_7A:String ;T8,e2:Int ;_g5,Q__,_48:String ;E:Array [Array [String ,0x1C],0X41];_:Array [Array [Array [Array [String ,01_3],0B1],0b1100],0102]){ {} }Destructor (){ {} }Var $3S8:Boolean ;tf(){}Val l,_2w,$7:o1;}''',
                '''Class,h_,:,O,{,},Class,_,:,o7,{,S4,(,_7A,:,String,;,T8,,,e2,:,Int,;,_g5,,,Q__,,,_48,:,String,;,E,:,Array,[,Array,[,String,,,0x1C,],,,0X41,],;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,013,],,,0B1,],,,0b1100,],,,0102,],),{,{,},},Destructor,(,),{,{,},},Var,$3S8,:,Boolean,;,tf,(,),{,},Val,l,,,_2w,,,$7,:,o1,;,},<EOF>''',
                101
            )
        )

    def test_1217(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_2d{}Class lD:wz___eG5{}Class _d{Val $8,$_c517,l:Int ;}Class tK_:_{Constructor (_,E_,__:Array [Array [Array [Int ,05_4],63],0X3B];_,N,C__PB_,__:Float ;RP6:Array [Array [Array [String ,0X2_6],0B1],0x7];_,c:String ){} }''',
                '''Class,_,:,_2d,{,},Class,lD,:,wz___eG5,{,},Class,_d,{,Val,$8,,,$_c517,,,l,:,Int,;,},Class,tK_,:,_,{,Constructor,(,_,,,E_,,,__,:,Array,[,Array,[,Array,[,Int,,,054,],,,63,],,,0X3B,],;,_,,,N,,,C__PB_,,,__,:,Float,;,RP6,:,Array,[,Array,[,Array,[,String,,,0X26,],,,0B1,],,,0x7,],;,_,,,c,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_1218(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__zm{Val E_2Qc,I,_,$V,$z_,$_:String ;Var $_3:Float ;}Class y{Val $8:Boolean ;Destructor (){} }Class a{Val _:String ;}''',
                '''Class,_,:,__zm,{,Val,E_2Qc,,,I,,,_,,,$V,,,$z_,,,$_,:,String,;,Var,$_3,:,Float,;,},Class,y,{,Val,$8,:,Boolean,;,Destructor,(,),{,},},Class,a,{,Val,_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1219(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0v{Val _,$__,_:Array [Boolean ,9_9];Constructor (maE4:__0_G){Break ;Continue ;}a(q:Array [Array [String ,0123],8];_,_5_,l,__,M,_086,_:_N8b;C,_,__:__){Continue ;} }''',
                '''Class,_0v,{,Val,_,,,$__,,,_,:,Array,[,Boolean,,,99,],;,Constructor,(,maE4,:,__0_G,),{,Break,;,Continue,;,},a,(,q,:,Array,[,Array,[,String,,,0123,],,,8,],;,_,,,_5_,,,l,,,__,,,M,,,_086,,,_,:,_N8b,;,C,,,_,,,__,:,__,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1220(self):
        self.assertTrue(
            TestLexer.test(
                '''Class LA{Constructor (_0,r:Boolean ;___:Array [Array [Array [Array [Float ,0X4],0xF63],0X99_1E],0x11];C,P,_,v,_:Array [Array [Float ,0113],0B1];V_,_:TT;_6yB,m___,_f:_){} }Class _G1:c{}Class _lL{}Class _q:_{o_(U,_,__0_8:Float ){} }Class M3{}Class __9:__{Destructor (){} }''',
                '''Class,LA,{,Constructor,(,_0,,,r,:,Boolean,;,___,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X4,],,,0xF63,],,,0X991E,],,,0x11,],;,C,,,P,,,_,,,v,,,_,:,Array,[,Array,[,Float,,,0113,],,,0B1,],;,V_,,,_,:,TT,;,_6yB,,,m___,,,_f,:,_,),{,},},Class,_G1,:,c,{,},Class,_lL,{,},Class,_q,:,_,{,o_,(,U,,,_,,,__0_8,:,Float,),{,},},Class,M3,{,},Class,__9,:,__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1221(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P2{Var $1,$a,_,$_9s:Array [Array [Float ,0121],7];Val P,$_6S:Array [Boolean ,0B1010101];}Class _:_{}Class A:_1{}''',
                '''Class,_P2,{,Var,$1,,,$a,,,_,,,$_9s,:,Array,[,Array,[,Float,,,0121,],,,7,],;,Val,P,,,$_6S,:,Array,[,Boolean,,,0B1010101,],;,},Class,_,:,_,{,},Class,A,:,_1,{,},<EOF>''',
                101
            )
        )

    def test_1222(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{WK8(w,_:Float ;I_,A_xl:Qu__;W:Int ;R,_Pi04607,c:Array [Array [Array [Float ,0XB],07_3_01],0x2]){} }Class ____:Me{}Class X:A6_{Val r,_a__f_,$8v,t_:String ;}''',
                '''Class,_,{,WK8,(,w,,,_,:,Float,;,I_,,,A_xl,:,Qu__,;,W,:,Int,;,R,,,_Pi04607,,,c,:,Array,[,Array,[,Array,[,Float,,,0XB,],,,07301,],,,0x2,],),{,},},Class,____,:,Me,{,},Class,X,:,A6_,{,Val,r,,,_a__f_,,,$8v,,,t_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1223(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_H:Array [Array [Int ,0b1_0],0x38];__7a,_2:Array [Boolean ,0B101100];i,ND:Float ){ {_::$4.U()._3_5._._().S();Continue ;} }}''',
                '''Class,_,{,Constructor,(,_H,:,Array,[,Array,[,Int,,,0b10,],,,0x38,],;,__7a,,,_2,:,Array,[,Boolean,,,0B101100,],;,i,,,ND,:,Float,),{,{,_,::,$4,.,U,(,),.,_3_5,.,_,.,_,(,),.,S,(,),;,Continue,;,},},},<EOF>''',
                101
            )
        )

    def test_1224(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class s:pP1{Constructor (__:Array [Array [Array [Array [Boolean ,0X3F],0B1_0],0B1],4];_,_d,_,_W,_:_kH0;_L,g8__,_,_,y:String ;_:_){} }Class a{}''',
                '''Class,_,{,},Class,s,:,pP1,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X3F,],,,0B10,],,,0B1,],,,4,],;,_,,,_d,,,_,,,_W,,,_,:,_kH0,;,_L,,,g8__,,,_,,,_,,,y,:,String,;,_,:,_,),{,},},Class,a,{,},<EOF>''',
                101
            )
        )

    def test_1225(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __f_:JUwT{Var $4B,Cm,w:L4;Constructor (){}Constructor (){Continue ;}Val $o:Boolean ;Val $__W,f,_:M;}Class _{}''',
                '''Class,__f_,:,JUwT,{,Var,$4B,,,Cm,,,w,:,L4,;,Constructor,(,),{,},Constructor,(,),{,Continue,;,},Val,$o,:,Boolean,;,Val,$__W,,,f,,,_,:,M,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1226(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _q:Ye{Var _,e,$__0:B;Constructor (_:Array [Array [Array [Array [Array [Float ,55],0B1010100],0B1010100],0X2D],06];___I:Array [Array [Array [Array [Boolean ,0125],0125],0B10],55];_,_98,_,_hK,D:i;_:K;F:S7_;kb0p_:Float ;d6:Boolean ;__7,Bsz6_n,Dl:Int ;R:h;__066,_xX:String ;_3,_J,_:_;r:S7b_;_1a:Boolean ){}Destructor (){} }Class ___:t8kb9{}''',
                '''Class,_q,:,Ye,{,Var,_,,,e,,,$__0,:,B,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,55,],,,0B1010100,],,,0B1010100,],,,0X2D,],,,06,],;,___I,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0125,],,,0125,],,,0B10,],,,55,],;,_,,,_98,,,_,,,_hK,,,D,:,i,;,_,:,K,;,F,:,S7_,;,kb0p_,:,Float,;,d6,:,Boolean,;,__7,,,Bsz6_n,,,Dl,:,Int,;,R,:,h,;,__066,,,_xX,:,String,;,_3,,,_J,,,_,:,_,;,r,:,S7b_,;,_1a,:,Boolean,),{,},Destructor,(,),{,},},Class,___,:,t8kb9,{,},<EOF>''',
                101
            )
        )

    def test_1227(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L1{}Class __:R1{Destructor (){} }Class _{}Class _:_{Val Q,_2,$C,__,_:Array [Boolean ,7];}Class vf{Destructor (){}Val t2_1,_:_;}''',
                '''Class,L1,{,},Class,__,:,R1,{,Destructor,(,),{,},},Class,_,{,},Class,_,:,_,{,Val,Q,,,_2,,,$C,,,__,,,_,:,Array,[,Boolean,,,7,],;,},Class,vf,{,Destructor,(,),{,},Val,t2_1,,,_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1228(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __U_8__4:_28{Var $_,$4,E:Array [Boolean ,0b1];Destructor (){}Var $s4_,hU:Float ;}Class K:l7_R{Val $Sr_,R:Array [Array [Boolean ,0B1],01];}''',
                '''Class,__U_8__4,:,_28,{,Var,$_,,,$4,,,E,:,Array,[,Boolean,,,0b1,],;,Destructor,(,),{,},Var,$s4_,,,hU,:,Float,;,},Class,K,:,l7_R,{,Val,$Sr_,,,R,:,Array,[,Array,[,Boolean,,,0B1,],,,01,],;,},<EOF>''',
                101
            )
        )

    def test_1229(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$_3__(_,D_2,_:Array [Array [Array [Array [Int ,0X4],0b111111],0B1],0x32]){} }Class _5:_4{Var _,$3_T,_:Array [Boolean ,0x32];}''',
                '''Class,_,:,_,{,$_3__,(,_,,,D_2,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X4,],,,0b111111,],,,0B1,],,,0x32,],),{,},},Class,_5,:,_4,{,Var,_,,,$3_T,,,_,:,Array,[,Boolean,,,0x32,],;,},<EOF>''',
                101
            )
        )

    def test_1230(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_yp,_7_:cb;tA7_R_,_L,W:BH;L:Int ;_:Array [Array [Array [Int ,064],01],0B10110];_W__:Array [Int ,01_3_40];_,r_,_m_:Boolean ;i:Array [Array [Array [Array [Array [Array [Boolean ,0155],0B10],07],0X9],0x57],064]){} }''',
                '''Class,_,{,Constructor,(,_yp,,,_7_,:,cb,;,tA7_R_,,,_L,,,W,:,BH,;,L,:,Int,;,_,:,Array,[,Array,[,Array,[,Int,,,064,],,,01,],,,0B10110,],;,_W__,:,Array,[,Int,,,01340,],;,_,,,r_,,,_m_,:,Boolean,;,i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0155,],,,0B10,],,,07,],,,0X9,],,,0x57,],,,064,],),{,},},<EOF>''',
                101
            )
        )

    def test_1231(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:_{}Class _:E_{}Class _0:jc{Var i,h2,_,_69,$6:Array [Array [Float ,0B1],0x57];}Class F4{Constructor (){} }''',
                '''Class,y,:,_,{,},Class,_,:,E_,{,},Class,_0,:,jc,{,Var,i,,,h2,,,_,,,_69,,,$6,:,Array,[,Array,[,Float,,,0B1,],,,0x57,],;,},Class,F4,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1232(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0{Constructor (s:d_;_g_,g:Array [String ,061_1];_2,CV,U:Array [Boolean ,016]){}_(_7:Array [Boolean ,016]){} }''',
                '''Class,_0,{,Constructor,(,s,:,d_,;,_g_,,,g,:,Array,[,String,,,0611,],;,_2,,,CV,,,U,:,Array,[,Boolean,,,016,],),{,},_,(,_7,:,Array,[,Boolean,,,016,],),{,},},<EOF>''',
                101
            )
        )

    def test_1233(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:l_632{Destructor (){ {} }Constructor (W:Array [Array [Boolean ,0B10010],8_41];_:Int ;_,y5_:Boolean ;_,_:Array [String ,0xD_C4];o_,d:K;__:_;_EF,g9:Array [String ,0b1]){} }Class _{}''',
                '''Class,P,:,l_632,{,Destructor,(,),{,{,},},Constructor,(,W,:,Array,[,Array,[,Boolean,,,0B10010,],,,841,],;,_,:,Int,;,_,,,y5_,:,Boolean,;,_,,,_,:,Array,[,String,,,0xDC4,],;,o_,,,d,:,K,;,__,:,_,;,_EF,,,g9,:,Array,[,String,,,0b1,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1234(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q_vv_Gt{N(_:Array [Int ,99]){} }Class m3{Val $_G:Array [String ,2];}Class _d0G:k{Val $_:Array [Array [Array [Boolean ,015],3],0x9];}Class pC__{}''',
                '''Class,Q_vv_Gt,{,N,(,_,:,Array,[,Int,,,99,],),{,},},Class,m3,{,Val,$_G,:,Array,[,String,,,2,],;,},Class,_d0G,:,k,{,Val,$_,:,Array,[,Array,[,Array,[,Boolean,,,015,],,,3,],,,0x9,],;,},Class,pC__,{,},<EOF>''',
                101
            )
        )

    def test_1235(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R3{Destructor (){} }Class V:_i{$1(W__21,_,t,p,g:Float ;_UC1,v:Array [Array [Array [Boolean ,0102],100],100]){} }''',
                '''Class,R3,{,Destructor,(,),{,},},Class,V,:,_i,{,$1,(,W__21,,,_,,,t,,,p,,,g,:,Float,;,_UC1,,,v,:,Array,[,Array,[,Array,[,Boolean,,,0102,],,,100,],,,100,],),{,},},<EOF>''',
                101
            )
        )

    def test_1236(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class i:B{}Class __{Destructor (){Val u_:Array [Boolean ,0X7];}Val $2:Array [Array [Array [Array [Float ,0b11000],0X26],6],0XD_2];}''',
                '''Class,_,{,},Class,i,:,B,{,},Class,__,{,Destructor,(,),{,Val,u_,:,Array,[,Boolean,,,0X7,],;,},Val,$2,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b11000,],,,0X26,],,,6,],,,0XD2,],;,},<EOF>''',
                101
            )
        )

    def test_1237(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7{_e(F:l;_dO2,A,_W:Array [Array [String ,0126],0x2D];U_3,a:Array [String ,0126]){}$_(__,_:Array [String ,07]){} }''',
                '''Class,_7,{,_e,(,F,:,l,;,_dO2,,,A,,,_W,:,Array,[,Array,[,String,,,0126,],,,0x2D,],;,U_3,,,a,:,Array,[,String,,,0126,],),{,},$_,(,__,,,_,:,Array,[,String,,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_1238(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Y(V0_,Rm4_:Array [Array [Float ,8],0B1];_,S,Sw_9b:Array [Array [Array [Array [Array [Array [Array [String ,0B100010],0b1010110],027],0xB],06],8],0b10];_,GQ:Array [Boolean ,8]){} }''',
                '''Class,_,{,Y,(,V0_,,,Rm4_,:,Array,[,Array,[,Float,,,8,],,,0B1,],;,_,,,S,,,Sw_9b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B100010,],,,0b1010110,],,,027,],,,0xB,],,,06,],,,8,],,,0b10,],;,_,,,GQ,:,Array,[,Boolean,,,8,],),{,},},<EOF>''',
                101
            )
        )

    def test_1239(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vx2m1:_7_8_{}Class I__{}Class MU{Constructor (){}Var $_,$_:Array [Boolean ,74];Constructor (){}Destructor (){} }''',
                '''Class,vx2m1,:,_7_8_,{,},Class,I__,{,},Class,MU,{,Constructor,(,),{,},Var,$_,,,$_,:,Array,[,Boolean,,,74,],;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1240(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Constructor (Qn:Boolean ){} }Class _4{Constructor (I,__G,_8__:u;Do,N:Array [String ,2_1];z,_,S:Boolean ){} }Class E__{}''',
                '''Class,_,{,Constructor,(,),{,},Constructor,(,Qn,:,Boolean,),{,},},Class,_4,{,Constructor,(,I,,,__G,,,_8__,:,u,;,Do,,,N,:,Array,[,String,,,21,],;,z,,,_,,,S,:,Boolean,),{,},},Class,E__,{,},<EOF>''',
                101
            )
        )

    def test_1241(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _ZG_y__B{$P(_,p_:Array [Array [Array [Array [Float ,4],0x15],0b11101],9_4];z_:Array [Array [Array [Int ,58],58],03_3];_:Y__X){} }''',
                '''Class,_ZG_y__B,{,$P,(,_,,,p_,:,Array,[,Array,[,Array,[,Array,[,Float,,,4,],,,0x15,],,,0b11101,],,,94,],;,z_,:,Array,[,Array,[,Array,[,Int,,,58,],,,58,],,,033,],;,_,:,Y__X,),{,},},<EOF>''',
                101
            )
        )

    def test_1242(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W{}Class _HX_{Constructor (V,_:Array [Array [Array [Array [Boolean ,0b100],0x7D],699],0130]){} }Class _53_:_{}''',
                '''Class,_W,{,},Class,_HX_,{,Constructor,(,V,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b100,],,,0x7D,],,,699,],,,0130,],),{,},},Class,_53_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1243(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $N_:Boolean ;Val _,$5___,$W2e,ETt:j;Destructor (){Var f34F:_3;}$6(I:Array [Array [Array [Array [Array [Array [String ,027],0B1],17],0b11],027],027]){Continue ;Return ;Break ;Break ;} }''',
                '''Class,_,{,Val,$N_,:,Boolean,;,Val,_,,,$5___,,,$W2e,,,ETt,:,j,;,Destructor,(,),{,Var,f34F,:,_3,;,},$6,(,I,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,027,],,,0B1,],,,17,],,,0b11,],,,027,],,,027,],),{,Continue,;,Return,;,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1244(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:_{Destructor (){}Val $_,$s,$01:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,1],0B1011000],0X7],95],0X7],0b1_1],0X6_2_9C],95],0b1_0_0_0],0B1011000];}''',
                '''Class,J,:,_,{,Destructor,(,),{,},Val,$_,,,$s,,,$01,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,1,],,,0B1011000,],,,0X7,],,,95,],,,0X7,],,,0b11,],,,0X629C,],,,95,],,,0b1000,],,,0B1011000,],;,},<EOF>''',
                101
            )
        )

    def test_1245(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F7_y9{Var $_,$x,$_,$_9:Array [Array [Array [Int ,0B100011],0X91],021507001_6];W(_1,V,_K94___,_1_:_;p:Array [Array [Array [Array [Float ,0x51],0x51],67],0x51]){Continue ;} }''',
                '''Class,F7_y9,{,Var,$_,,,$x,,,$_,,,$_9,:,Array,[,Array,[,Array,[,Int,,,0B100011,],,,0X91,],,,0215070016,],;,W,(,_1,,,V,,,_K94___,,,_1_,:,_,;,p,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x51,],,,0x51,],,,67,],,,0x51,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1246(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__20{}Class _:_H356_U3_{Var $_,_,$DK:Array [Array [Float ,0x2],0x2A];Val $98eo65,_,_8,___:R;}Class __0:_6VM{Var $7l:Boolean ;}''',
                '''Class,_,:,__20,{,},Class,_,:,_H356_U3_,{,Var,$_,,,_,,,$DK,:,Array,[,Array,[,Float,,,0x2,],,,0x2A,],;,Val,$98eo65,,,_,,,_8,,,___,:,R,;,},Class,__0,:,_6VM,{,Var,$7l,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1247(self):
        self.assertTrue(
            TestLexer.test(
                '''Class QB{}Class _{}Class _{}Class qJ:_g_3950{}Class lo_{Val $R:Float ;}Class _{}Class c:_5__{Var $V3_,_l__,Nh:_;}Class k{}''',
                '''Class,QB,{,},Class,_,{,},Class,_,{,},Class,qJ,:,_g_3950,{,},Class,lo_,{,Val,$R,:,Float,;,},Class,_,{,},Class,c,:,_5__,{,Var,$V3_,,,_l__,,,Nh,:,_,;,},Class,k,{,},<EOF>''',
                101
            )
        )

    def test_1248(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Sz54_:Z_t{Constructor (l:Array [Boolean ,0b1];J6,_,____2:Float ;n5i,z,_,q_,_:Boolean ;A:Array [Array [Boolean ,07],0130];I,DQq_:Float ){} }''',
                '''Class,Sz54_,:,Z_t,{,Constructor,(,l,:,Array,[,Boolean,,,0b1,],;,J6,,,_,,,____2,:,Float,;,n5i,,,z,,,_,,,q_,,,_,:,Boolean,;,A,:,Array,[,Array,[,Boolean,,,07,],,,0130,],;,I,,,DQq_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1249(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Var _tKX:Array [Boolean ,0B1_11];Val $56:Bm;$5v(){ {} }Val $yfY,_c_0:Array [Array [Array [String ,0X146E7_2],05],0B1_0];Destructor (){} }''',
                '''Class,_,:,__,{,Var,_tKX,:,Array,[,Boolean,,,0B111,],;,Val,$56,:,Bm,;,$5v,(,),{,{,},},Val,$yfY,,,_c_0,:,Array,[,Array,[,Array,[,String,,,0X146E72,],,,05,],,,0B10,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1250(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $_e:Array [Array [Array [Array [Boolean ,48],0x55],0x55],0123];Destructor (){}Var R6F,$__:_;$tN(_7,_,P:Int ;o_29:_7m3;_zH:Array [Array [Array [Boolean ,33],0b1011010],43_3]){}Val _9,_8,P:Array [Array [Int ,5],0123];Var _,$e:_u4O;}''',
                '''Class,_,{,Val,$_e,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,48,],,,0x55,],,,0x55,],,,0123,],;,Destructor,(,),{,},Var,R6F,,,$__,:,_,;,$tN,(,_7,,,_,,,P,:,Int,;,o_29,:,_7m3,;,_zH,:,Array,[,Array,[,Array,[,Boolean,,,33,],,,0b1011010,],,,433,],),{,},Val,_9,,,_8,,,P,:,Array,[,Array,[,Int,,,5,],,,0123,],;,Var,_,,,$e,:,_u4O,;,},<EOF>''',
                101
            )
        )

    def test_1251(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{Constructor (_:Boolean ;_:Int ){}_(ZT25,h:Array [Array [Int ,14],0B1001];_:ey;_,d:Boolean ;f__,A4_:Boolean ;_,m:Array [Array [Array [String ,14],14],0b1]){} }''',
                '''Class,l,{,Constructor,(,_,:,Boolean,;,_,:,Int,),{,},_,(,ZT25,,,h,:,Array,[,Array,[,Int,,,14,],,,0B1001,],;,_,:,ey,;,_,,,d,:,Boolean,;,f__,,,A4_,:,Boolean,;,_,,,m,:,Array,[,Array,[,Array,[,String,,,14,],,,14,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1252(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{$1806(v9,c,v:Array [Array [Array [Array [String ,0b11],030],04_4],37];_:Float ;S:String ){Break ;}Constructor (){} }''',
                '''Class,J,{,$1806,(,v9,,,c,,,v,:,Array,[,Array,[,Array,[,Array,[,String,,,0b11,],,,030,],,,044,],,,37,],;,_,:,Float,;,S,:,String,),{,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1253(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i595:_{Var $_d:Boolean ;Var A,$O,$0J,$88,$_,$S:String ;Constructor (){} }Class wH:_0__{$_E(){}Destructor (){} }Class _:P{}''',
                '''Class,i595,:,_,{,Var,$_d,:,Boolean,;,Var,A,,,$O,,,$0J,,,$88,,,$_,,,$S,:,String,;,Constructor,(,),{,},},Class,wH,:,_0__,{,$_E,(,),{,},Destructor,(,),{,},},Class,_,:,P,{,},<EOF>''',
                101
            )
        )

    def test_1254(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c{Destructor (){Return ;}_(_,B,Q,_3:Array [Float ,0x6_A];B:Int ;_e:Array [Array [Array [String ,0X9DCD0],82],0x16]){} }''',
                '''Class,_c,{,Destructor,(,),{,Return,;,},_,(,_,,,B,,,Q,,,_3,:,Array,[,Float,,,0x6A,],;,B,:,Int,;,_e,:,Array,[,Array,[,Array,[,String,,,0X9DCD0,],,,82,],,,0x16,],),{,},},<EOF>''',
                101
            )
        )

    def test_1255(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:s_9_{N91(s,_,qx_2__:D7){Continue ;Break ;} }Class Z:_V{Z(_q_,Y,q8_N_M,n4:Array [Array [Boolean ,0b1],0B100011]){} }Class utsb{}''',
                '''Class,__,:,s_9_,{,N91,(,s,,,_,,,qx_2__,:,D7,),{,Continue,;,Break,;,},},Class,Z,:,_V,{,Z,(,_q_,,,Y,,,q8_N_M,,,n4,:,Array,[,Array,[,Boolean,,,0b1,],,,0B100011,],),{,},},Class,utsb,{,},<EOF>''',
                101
            )
        )

    def test_1256(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,K:Array [Array [Array [Array [Array [Array [Array [Boolean ,0b1],045_16],0b1001000],0106],0xF],38],0xF]){Break ;} }''',
                '''Class,_,{,Constructor,(,_,,,K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,04516,],,,0b1001000,],,,0106,],,,0xF,],,,38,],,,0xF,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1257(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e_:s{Val oIo:Array [Int ,0B1_0];Constructor (){}Constructor (z,___,U:Array [Array [String ,0B1_0],025_4_6_2];n_1:Array [Int ,72]){}Val $J8:_;}''',
                '''Class,e_,:,s,{,Val,oIo,:,Array,[,Int,,,0B10,],;,Constructor,(,),{,},Constructor,(,z,,,___,,,U,:,Array,[,Array,[,String,,,0B10,],,,025462,],;,n_1,:,Array,[,Int,,,72,],),{,},Val,$J8,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1258(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:a5{Val _,__,$_:U;}Class P{Val $_73,$5_9__Q:Array [Float ,0B101111];$90__u(_,_C,_d_7,G_s:Float ;_:_){}Destructor (){}Destructor (){Z::$Z_2b4_();} }''',
                '''Class,_,:,a5,{,Val,_,,,__,,,$_,:,U,;,},Class,P,{,Val,$_73,,,$5_9__Q,:,Array,[,Float,,,0B101111,],;,$90__u,(,_,,,_C,,,_d_7,,,G_s,:,Float,;,_,:,_,),{,},Destructor,(,),{,},Destructor,(,),{,Z,::,$Z_2b4_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1259(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H6{}Class T07{Constructor (_1q:Array [Array [Float ,0xA],0125];Ww____5:Array [String ,0b100101];f:Array [Array [String ,0125],0125];M:Boolean ){} }''',
                '''Class,H6,{,},Class,T07,{,Constructor,(,_1q,:,Array,[,Array,[,Float,,,0xA,],,,0125,],;,Ww____5,:,Array,[,String,,,0b100101,],;,f,:,Array,[,Array,[,String,,,0125,],,,0125,],;,M,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1260(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b7{Var __:_;Val $t7a,L,$B1_,$o__,$s:Float ;}Class _V{}Class _:_{}Class n{Destructor (){}__(_:i){Return ;} }''',
                '''Class,b7,{,Var,__,:,_,;,Val,$t7a,,,L,,,$B1_,,,$o__,,,$s,:,Float,;,},Class,_V,{,},Class,_,:,_,{,},Class,n,{,Destructor,(,),{,},__,(,_,:,i,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1261(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $W:ct;__K(_:Array [Array [Array [String ,01_0],0x60],83];_7y:Array [Array [Array [Array [Float ,0B100],83],0b1],0X51]){}$8(){ {} }}''',
                '''Class,_,{,Var,$W,:,ct,;,__K,(,_,:,Array,[,Array,[,Array,[,String,,,010,],,,0x60,],,,83,],;,_7y,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B100,],,,83,],,,0b1,],,,0X51,],),{,},$8,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1262(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:b{Val $C_70_,V80:String ;}Class _{Var _:__;Val $7:String ;}Class _12__:A47_t4_{Constructor (M:Float ;C:Array [Float ,54]){ {Continue ;Break ;} }}Class r{}''',
                '''Class,_,:,b,{,Val,$C_70_,,,V80,:,String,;,},Class,_,{,Var,_,:,__,;,Val,$7,:,String,;,},Class,_12__,:,A47_t4_,{,Constructor,(,M,:,Float,;,C,:,Array,[,Float,,,54,],),{,{,Continue,;,Break,;,},},},Class,r,{,},<EOF>''',
                101
            )
        )

    def test_1263(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z{$8(){}Var P:Int ;Var $_2:ob0d1;}Class U{}Class _1:_q{_1(){}Var $t,$8:String ;}Class _ZX{}Class w{Val $r:Array [Array [Boolean ,0x6],9];Destructor (){} }''',
                '''Class,z,{,$8,(,),{,},Var,P,:,Int,;,Var,$_2,:,ob0d1,;,},Class,U,{,},Class,_1,:,_q,{,_1,(,),{,},Var,$t,,,$8,:,String,;,},Class,_ZX,{,},Class,w,{,Val,$r,:,Array,[,Array,[,Boolean,,,0x6,],,,9,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1264(self):
        self.assertTrue(
            TestLexer.test(
                '''Class mq_:_{Constructor (_8__:Array [Array [Array [Array [Array [Array [Array [Int ,0142],96],0X14],0B1],0b101110],03],0x8];_:Int ;_8l,l,_,_f_L,___:Boolean ){} }''',
                '''Class,mq_,:,_,{,Constructor,(,_8__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0142,],,,96,],,,0X14,],,,0B1,],,,0b101110,],,,03,],,,0x8,],;,_,:,Int,;,_8l,,,l,,,_,,,_f_L,,,___,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1265(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s0_:TY{_4(jV,_F_:String ){ {Return ;Continue ;}Var A_G,p:Array [Array [Boolean ,07_1_6],043];Return ;Continue ;} }''',
                '''Class,_s0_,:,TY,{,_4,(,jV,,,_F_,:,String,),{,{,Return,;,Continue,;,},Var,A_G,,,p,:,Array,[,Array,[,Boolean,,,0716,],,,043,],;,Return,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1266(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Constructor (_,n,M,_,_29:Float ;T,k,_,q,_,_,x:Float ){}$_x(_22P:Boolean ;_:r){} }Class bt_____{}Class w:L{}''',
                '''Class,a,{,Constructor,(,_,,,n,,,M,,,_,,,_29,:,Float,;,T,,,k,,,_,,,q,,,_,,,_,,,x,:,Float,),{,},$_x,(,_22P,:,Boolean,;,_,:,r,),{,},},Class,bt_____,{,},Class,w,:,L,{,},<EOF>''',
                101
            )
        )

    def test_1267(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{Constructor (I_:Boolean ;__,_,_,_,_fK1_:Int ){ {Break ;} }}Class rp:U{Val J:Array [Boolean ,06];Destructor (){} }''',
                '''Class,q,{,Constructor,(,I_,:,Boolean,;,__,,,_,,,_,,,_,,,_fK1_,:,Int,),{,{,Break,;,},},},Class,rp,:,U,{,Val,J,:,Array,[,Boolean,,,06,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1268(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _K:_Tw{}Class _o0:N8V{}Class _:j{Var u_Y,k9:Array [Array [String ,0X57],0B10001];$_S(){}Destructor (){}Val $8,Y2nt_:Array [Array [Boolean ,0XF_1E],0B10001];}''',
                '''Class,_K,:,_Tw,{,},Class,_o0,:,N8V,{,},Class,_,:,j,{,Var,u_Y,,,k9,:,Array,[,Array,[,String,,,0X57,],,,0B10001,],;,$_S,(,),{,},Destructor,(,),{,},Val,$8,,,Y2nt_,:,Array,[,Array,[,Boolean,,,0XF1E,],,,0B10001,],;,},<EOF>''',
                101
            )
        )

    def test_1269(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ix{Var Vb5pN1,$2:T86;Val $E,$3z__:Array [Boolean ,01];Val $_,$94:Array [String ,03_2];}Class B_{Destructor (){} }Class e6:_{}''',
                '''Class,ix,{,Var,Vb5pN1,,,$2,:,T86,;,Val,$E,,,$3z__,:,Array,[,Boolean,,,01,],;,Val,$_,,,$94,:,Array,[,String,,,032,],;,},Class,B_,{,Destructor,(,),{,},},Class,e6,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1270(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r_:_{Constructor (qH59,_:Float ;_8,_,_1:Array [Array [Float ,034],0B1111];i6__:_){}Val $_,S,$4,_D0GE22:_1N;}''',
                '''Class,r_,:,_,{,Constructor,(,qH59,,,_,:,Float,;,_8,,,_,,,_1,:,Array,[,Array,[,Float,,,034,],,,0B1111,],;,i6__,:,_,),{,},Val,$_,,,S,,,$4,,,_D0GE22,:,_1N,;,},<EOF>''',
                101
            )
        )

    def test_1271(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class __{}Class _{_A(I,_K6c974,t___42d,_,w:Int ){}Destructor (){}Var ZX,_,_l:W3;Destructor (){} }''',
                '''Class,__,:,_,{,},Class,__,{,},Class,_,{,_A,(,I,,,_K6c974,,,t___42d,,,_,,,w,:,Int,),{,},Destructor,(,),{,},Var,ZX,,,_,,,_l,:,W3,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1272(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j3:P_{Var jC:Array [String ,3];}Class N_buA9:_{}Class _{Val $2:Array [Array [Array [String ,798],0B1],055];}''',
                '''Class,j3,:,P_,{,Var,jC,:,Array,[,String,,,3,],;,},Class,N_buA9,:,_,{,},Class,_,{,Val,$2,:,Array,[,Array,[,Array,[,String,,,798,],,,0B1,],,,055,],;,},<EOF>''',
                101
            )
        )

    def test_1273(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{}Class t:uzf{Var ___5,_8:Int ;$_2(_,BuE:Array [Boolean ,0b10101];_,y,y:Float ){}Var $paV1_,$5:Float ;}Class _M{}Class _:_{}Class _:_{}Class _Y0d:__{}Class __4:_{}''',
                '''Class,F,{,},Class,t,:,uzf,{,Var,___5,,,_8,:,Int,;,$_2,(,_,,,BuE,:,Array,[,Boolean,,,0b10101,],;,_,,,y,,,y,:,Float,),{,},Var,$paV1_,,,$5,:,Float,;,},Class,_M,{,},Class,_,:,_,{,},Class,_,:,_,{,},Class,_Y0d,:,__,{,},Class,__4,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1274(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:_2QG{e0_n(){} }Class _{Destructor (){}Val $1,$O,Gv_,$_0_,_,$5,_,$_o:Array [Array [Array [Array [Array [String ,02],0B1_1],0B1],0x6_0],0b1_1];Val X_v,$6L1:Array [Array [Array [Float ,0b1000010],0b1],0X27];}Class R{Constructor (v__,_,A:_g90){}Destructor (){Return ;} }''',
                '''Class,r,:,_2QG,{,e0_n,(,),{,},},Class,_,{,Destructor,(,),{,},Val,$1,,,$O,,,Gv_,,,$_0_,,,_,,,$5,,,_,,,$_o,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,0B11,],,,0B1,],,,0x60,],,,0b11,],;,Val,X_v,,,$6L1,:,Array,[,Array,[,Array,[,Float,,,0b1000010,],,,0b1,],,,0X27,],;,},Class,R,{,Constructor,(,v__,,,_,,,A,:,_g90,),{,},Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1275(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_9{Constructor (_,Z,B,_,_,F:Array [Int ,0X8]){}$74(_y,_,_,IQ,k,r,RP_9,__:String ;x,m_4:Boolean ;T_,_R5_4,A:Int ;_:Array [Array [String ,0B1],571];_9_:rI){} }''',
                '''Class,_,:,_9,{,Constructor,(,_,,,Z,,,B,,,_,,,_,,,F,:,Array,[,Int,,,0X8,],),{,},$74,(,_y,,,_,,,_,,,IQ,,,k,,,r,,,RP_9,,,__,:,String,;,x,,,m_4,:,Boolean,;,T_,,,_R5_4,,,A,:,Int,;,_,:,Array,[,Array,[,String,,,0B1,],,,571,],;,_9_,:,rI,),{,},},<EOF>''',
                101
            )
        )

    def test_1276(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n_:___{_7B4D(_,_2d_p6,_,_:Array [Array [Array [Array [Array [Float ,55],1],75],064],0x24]){ {}{}Break ;} }Class _:_{}''',
                '''Class,n_,:,___,{,_7B4D,(,_,,,_2d_p6,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,55,],,,1,],,,75,],,,064,],,,0x24,],),{,{,},{,},Break,;,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1277(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:_{}Class __:z{Constructor (_O_,__:String ;_:Array [Array [Float ,0x6],0x3C]){} }Class _{Destructor (){}Destructor (){Return ;} }''',
                '''Class,b,:,_,{,},Class,__,:,z,{,Constructor,(,_O_,,,__,:,String,;,_,:,Array,[,Array,[,Float,,,0x6,],,,0x3C,],),{,},},Class,_,{,Destructor,(,),{,},Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1278(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_{Val $6_9__:Array [Float ,9];_(C_,V:x;_,_,g4Q1_:Array [Int ,0b1];_7G4:Array [Array [Array [String ,0X8_7],07_6_7],0b1100100];G__,__2u,w5:_1_041;_:Float ){} }Class V{}Class _7NR_68_:_{}''',
                '''Class,c,:,_,{,Val,$6_9__,:,Array,[,Float,,,9,],;,_,(,C_,,,V,:,x,;,_,,,_,,,g4Q1_,:,Array,[,Int,,,0b1,],;,_7G4,:,Array,[,Array,[,Array,[,String,,,0X87,],,,0767,],,,0b1100100,],;,G__,,,__2u,,,w5,:,_1_041,;,_,:,Float,),{,},},Class,V,{,},Class,_7NR_68_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1279(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{}Class _18_123__{Constructor (F__,_,Y_06_h,_6:K__;Zl:Array [Float ,0b1001001]){} }Class _Ih{}Class _{}Class Tn_b{}''',
                '''Class,u,{,},Class,_18_123__,{,Constructor,(,F__,,,_,,,Y_06_h,,,_6,:,K__,;,Zl,:,Array,[,Float,,,0b1001001,],),{,},},Class,_Ih,{,},Class,_,{,},Class,Tn_b,{,},<EOF>''',
                101
            )
        )

    def test_1280(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class w:n__{Var $___2_Ej_27,$1ji,$m_2o8_73n:Array [Array [Array [Array [Int ,0B111010],1_2],012],012];$__6_2(){} }''',
                '''Class,_,{,},Class,w,:,n__,{,Var,$___2_Ej_27,,,$1ji,,,$m_2o8_73n,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B111010,],,,12,],,,012,],,,012,],;,$__6_2,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1281(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c4_:_34{Var __1_:Array [Array [Array [Array [Array [Array [Array [Float ,0B1_1_10],56],0X3],15],0X22],0X22],0xC_9A];}''',
                '''Class,c4_,:,_34,{,Var,__1_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1110,],,,56,],,,0X3,],,,15,],,,0X22,],,,0X22,],,,0xC9A,],;,},<EOF>''',
                101
            )
        )

    def test_1282(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jQ:_9l{}Class _3:s6e{}Class V{Constructor (_,l:Boolean ;iM:Float ){Q25T0::$_();}$v(){} }Class _302:s7{}Class _{}''',
                '''Class,jQ,:,_9l,{,},Class,_3,:,s6e,{,},Class,V,{,Constructor,(,_,,,l,:,Boolean,;,iM,:,Float,),{,Q25T0,::,$_,(,),;,},$v,(,),{,},},Class,_302,:,s7,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1283(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N{Val N1,$o:Array [Array [String ,0b10101],83];_(E,A:n4){}Constructor (){Break ;}Constructor (){}Val $_,Q37u,$6,$_:Boolean ;}Class _5:k4{}''',
                '''Class,_,:,N,{,Val,N1,,,$o,:,Array,[,Array,[,String,,,0b10101,],,,83,],;,_,(,E,,,A,:,n4,),{,},Constructor,(,),{,Break,;,},Constructor,(,),{,},Val,$_,,,Q37u,,,$6,,,$_,:,Boolean,;,},Class,_5,:,k4,{,},<EOF>''',
                101
            )
        )

    def test_1284(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:my{Val $9,o,$96_d:Array [Float ,0x3C];Var $3:_;}Class n_g:G{Var _:Boolean ;Var _,_x_:Float ;Var $OP,k1_:Array [Int ,0b1];}''',
                '''Class,__,:,my,{,Val,$9,,,o,,,$96_d,:,Array,[,Float,,,0x3C,],;,Var,$3,:,_,;,},Class,n_g,:,G,{,Var,_,:,Boolean,;,Var,_,,,_x_,:,Float,;,Var,$OP,,,k1_,:,Array,[,Int,,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_1285(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N{Val $Q,_:Array [Boolean ,026];Val $p,$6,$5_,$__:Array [Array [Float ,0x41],026];}Class _:F2w{Constructor (_:C){} }''',
                '''Class,N,{,Val,$Q,,,_,:,Array,[,Boolean,,,026,],;,Val,$p,,,$6,,,$5_,,,$__,:,Array,[,Array,[,Float,,,0x41,],,,026,],;,},Class,_,:,F2w,{,Constructor,(,_,:,C,),{,},},<EOF>''',
                101
            )
        )

    def test_1286(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z8{Constructor (__I:Array [Boolean ,0b1];J,wwH,_,_G:Int ;f,DV_q,_,x,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,01],17],0B1],0103],17],0103],17],05_3_5],5],0X5A];kM6_,_,_:Float ;i_,O:_){} }''',
                '''Class,Z8,{,Constructor,(,__I,:,Array,[,Boolean,,,0b1,],;,J,,,wwH,,,_,,,_G,:,Int,;,f,,,DV_q,,,_,,,x,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01,],,,17,],,,0B1,],,,0103,],,,17,],,,0103,],,,17,],,,0535,],,,5,],,,0X5A,],;,kM6_,,,_,,,_,:,Float,;,i_,,,O,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1287(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:_{}Class _7{Var $0_L,$0:Array [Array [Array [Array [Array [Boolean ,02],0x2_D],0X4B],0x64],0x64];BD(){Break ;} }''',
                '''Class,r,:,_,{,},Class,_7,{,Var,$0_L,,,$0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,02,],,,0x2D,],,,0X4B,],,,0x64,],,,0x64,],;,BD,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1288(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$p46_UL8(_:Boolean ;__:Boolean ;__,T,V,_:Array [Array [String ,0X26],0b110000];l7,g:Array [Boolean ,0b110000]){}Destructor (){} }''',
                '''Class,_,{,$p46_UL8,(,_,:,Boolean,;,__,:,Boolean,;,__,,,T,,,V,,,_,:,Array,[,Array,[,String,,,0X26,],,,0b110000,],;,l7,,,g,:,Array,[,Boolean,,,0b110000,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1289(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{c(q,_0:Int ;f85,_:U){} }Class _{Constructor (E:_S){Break ;}Destructor (){} }Class _WT{}Class j3:_5{}Class H{Val $2I,T_:Boolean ;Val $u,_:Array [String ,1];Val M,$2,$9_:Array [Array [String ,86],0xB];Var _A_i9,$_er,_LQ,$_E:a_;}Class _G:_{}''',
                '''Class,_,:,_,{,c,(,q,,,_0,:,Int,;,f85,,,_,:,U,),{,},},Class,_,{,Constructor,(,E,:,_S,),{,Break,;,},Destructor,(,),{,},},Class,_WT,{,},Class,j3,:,_5,{,},Class,H,{,Val,$2I,,,T_,:,Boolean,;,Val,$u,,,_,:,Array,[,String,,,1,],;,Val,M,,,$2,,,$9_,:,Array,[,Array,[,String,,,86,],,,0xB,],;,Var,_A_i9,,,$_er,,,_LQ,,,$_E,:,a_,;,},Class,_G,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1290(self):
        self.assertTrue(
            TestLexer.test(
                '''Class fz__x:_{Constructor (){Continue ;} }Class U_:jiu{}Class F_0:Ax8{Var $_88:m_xF;Constructor (){}Val d,$21:_u;}''',
                '''Class,fz__x,:,_,{,Constructor,(,),{,Continue,;,},},Class,U_,:,jiu,{,},Class,F_0,:,Ax8,{,Var,$_88,:,m_xF,;,Constructor,(,),{,},Val,d,,,$21,:,_u,;,},<EOF>''',
                101
            )
        )

    def test_1291(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:TS{}Class B{$i(X:Array [Array [Array [String ,0X47],01],0b1000001];w__X14__,_,K_h,_92_:Float ){Continue ;} }Class u8_1L__7{}''',
                '''Class,_,:,TS,{,},Class,B,{,$i,(,X,:,Array,[,Array,[,Array,[,String,,,0X47,],,,01,],,,0b1000001,],;,w__X14__,,,_,,,K_h,,,_92_,:,Float,),{,Continue,;,},},Class,u8_1L__7,{,},<EOF>''',
                101
            )
        )

    def test_1292(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e9_9_:h{Destructor (){}Constructor (r_,_:Array [String ,0b100110];_:Array [Int ,0X3];_:Array [Array [Array [Boolean ,0x51],0b1],39];__,__2_A:_){} }''',
                '''Class,_e9_9_,:,h,{,Destructor,(,),{,},Constructor,(,r_,,,_,:,Array,[,String,,,0b100110,],;,_,:,Array,[,Int,,,0X3,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,0x51,],,,0b1,],,,39,],;,__,,,__2_A,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1293(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Cs{}Class _{}Class mku{}Class N:Uy5{}Class xH64{_(){}__(){_::$_();} }Class k:__{Constructor (_,__:Array [Array [Array [Array [Float ,70],75],0b1010001],0X3C];D_Z,_:Float ){}Constructor (){} }''',
                '''Class,Cs,{,},Class,_,{,},Class,mku,{,},Class,N,:,Uy5,{,},Class,xH64,{,_,(,),{,},__,(,),{,_,::,$_,(,),;,},},Class,k,:,__,{,Constructor,(,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,70,],,,75,],,,0b1010001,],,,0X3C,],;,D_Z,,,_,:,Float,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1294(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __8:l_{}Class z__m:Ya{Val _4_,$Zt___9,$6_,$X8_,twqY3j_72:Array [Boolean ,0xC];}Class z5_:Wk{Destructor (){New m0x().J();{} }$_K(){Break ;} }''',
                '''Class,__8,:,l_,{,},Class,z__m,:,Ya,{,Val,_4_,,,$Zt___9,,,$6_,,,$X8_,,,twqY3j_72,:,Array,[,Boolean,,,0xC,],;,},Class,z5_,:,Wk,{,Destructor,(,),{,New,m0x,(,),.,J,(,),;,{,},},$_K,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1295(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:_T{Constructor (_,qQ,_,_g_,_:_){}$_7z(Y,g:Array [Array [Boolean ,026],0B110];__S,_,Zm,T,X0K_f:Boolean ;EMm:Int ){Return ;} }Class _5___:_{}Class _Q{}''',
                '''Class,s,:,_T,{,Constructor,(,_,,,qQ,,,_,,,_g_,,,_,:,_,),{,},$_7z,(,Y,,,g,:,Array,[,Array,[,Boolean,,,026,],,,0B110,],;,__S,,,_,,,Zm,,,T,,,X0K_f,:,Boolean,;,EMm,:,Int,),{,Return,;,},},Class,_5___,:,_,{,},Class,_Q,{,},<EOF>''',
                101
            )
        )

    def test_1296(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:a_{$__K(U_0,_,__s,_:Float ){}Var $65_:Boolean ;Var $e,$4F,_1,$_C8_4___,$_,b,_Fe4,$_:Array [Int ,74];}Class _{}Class h5o_o____{}Class _0{}''',
                '''Class,W,:,a_,{,$__K,(,U_0,,,_,,,__s,,,_,:,Float,),{,},Var,$65_,:,Boolean,;,Var,$e,,,$4F,,,_1,,,$_C8_4___,,,$_,,,b,,,_Fe4,,,$_,:,Array,[,Int,,,74,],;,},Class,_,{,},Class,h5o_o____,{,},Class,_0,{,},<EOF>''',
                101
            )
        )

    def test_1297(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Val e,$9Z:Array [Array [Array [Array [Array [Array [Array [Float ,16],04],16],0B1_0],0b1],06],0B1];Destructor (){} }''',
                '''Class,S,{,Val,e,,,$9Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,16,],,,04,],,,16,],,,0B10,],,,0b1,],,,06,],,,0B1,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1298(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:i{_(b,_:___;S,_:String ;N:Float ;_B2,T:U){} }Class L{Destructor (){} }Class __T{}Class mscn{Constructor (){Break ;Break ;}Var $2l6,_X,r:A;Var $9pg,$R,_,_x_,q:Array [Boolean ,4_1_0];Var $v__0,$_:Boolean ;}''',
                '''Class,_,:,i,{,_,(,b,,,_,:,___,;,S,,,_,:,String,;,N,:,Float,;,_B2,,,T,:,U,),{,},},Class,L,{,Destructor,(,),{,},},Class,__T,{,},Class,mscn,{,Constructor,(,),{,Break,;,Break,;,},Var,$2l6,,,_X,,,r,:,A,;,Var,$9pg,,,$R,,,_,,,_x_,,,q,:,Array,[,Boolean,,,410,],;,Var,$v__0,,,$_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1299(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{x(_2_,u82:Array [Array [Boolean ,7],017];_,_R:Array [Array [Array [String ,0xB],0XD],9];_:_;l__,a:Array [Array [String ,54],54]){} }''',
                '''Class,__,{,x,(,_2_,,,u82,:,Array,[,Array,[,Boolean,,,7,],,,017,],;,_,,,_R,:,Array,[,Array,[,Array,[,String,,,0xB,],,,0XD,],,,9,],;,_,:,_,;,l__,,,a,:,Array,[,Array,[,String,,,54,],,,54,],),{,},},<EOF>''',
                101
            )
        )

    def test_1300(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __6_{Constructor (_V:Array [Array [Boolean ,0B1011111],0b11]){}Val a,$_,_,U,$3,Z:Array [Float ,2_29_8];}Class _7:S{}Class y6_:Y{Constructor (){}Destructor (){}Constructor (){}Destructor (){} }''',
                '''Class,__6_,{,Constructor,(,_V,:,Array,[,Array,[,Boolean,,,0B1011111,],,,0b11,],),{,},Val,a,,,$_,,,_,,,U,,,$3,,,Z,:,Array,[,Float,,,2298,],;,},Class,_7,:,S,{,},Class,y6_,:,Y,{,Constructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1301(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val pN:___9;Val $_,$12_o:V;Destructor (){F::$_();} }Class l{}Class _j:__{Var _,M:Boolean ;}Class O8:k{Destructor (){} }''',
                '''Class,_,{,Val,pN,:,___9,;,Val,$_,,,$12_o,:,V,;,Destructor,(,),{,F,::,$_,(,),;,},},Class,l,{,},Class,_j,:,__,{,Var,_,,,M,:,Boolean,;,},Class,O8,:,k,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1302(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__i{}Class _a_:g__e_1{Destructor (){}$B(){Break ;Return ;Return ;}Val $6_4:Array [Array [Array [Boolean ,035],26],0X4];}''',
                '''Class,_,:,__i,{,},Class,_a_,:,g__e_1,{,Destructor,(,),{,},$B,(,),{,Break,;,Return,;,Return,;,},Val,$6_4,:,Array,[,Array,[,Array,[,Boolean,,,035,],,,26,],,,0X4,],;,},<EOF>''',
                101
            )
        )

    def test_1303(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X:m_W3H{}Class _:m{Constructor (_,D_:Array [Int ,0B110101];W,_:N;_F:Int ;a,y_:Array [Int ,045]){}Destructor (){}Var b,$3_:String ;}''',
                '''Class,X,:,m_W3H,{,},Class,_,:,m,{,Constructor,(,_,,,D_,:,Array,[,Int,,,0B110101,],;,W,,,_,:,N,;,_F,:,Int,;,a,,,y_,:,Array,[,Int,,,045,],),{,},Destructor,(,),{,},Var,b,,,$3_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1304(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{_s(_:Boolean ;_,m,_:Array [Array [String ,0b1001001],0103];T_,_,_3,_H:Array [Array [Array [Float ,0b1001001],0103],0103];_:Array [Int ,0B111];_:R;S,_6:Float ){} }Class o{}''',
                '''Class,g,{,_s,(,_,:,Boolean,;,_,,,m,,,_,:,Array,[,Array,[,String,,,0b1001001,],,,0103,],;,T_,,,_,,,_3,,,_H,:,Array,[,Array,[,Array,[,Float,,,0b1001001,],,,0103,],,,0103,],;,_,:,Array,[,Int,,,0B111,],;,_,:,R,;,S,,,_6,:,Float,),{,},},Class,o,{,},<EOF>''',
                101
            )
        )

    def test_1305(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val _,$_S9,$22p8_U,t,V_:ojp;}Class Nok{$V(Pd:Array [Array [Array [Array [Array [Array [Boolean ,2_100],0X3],025],4],27],01_6]){} }''',
                '''Class,_,:,_,{,Val,_,,,$_S9,,,$22p8_U,,,t,,,V_,:,ojp,;,},Class,Nok,{,$V,(,Pd,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,2100,],,,0X3,],,,025,],,,4,],,,27,],,,016,],),{,},},<EOF>''',
                101
            )
        )

    def test_1306(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{Val $__:Array [Array [Int ,032],0b100011];}Class q{Var F,_812:_;}Class _{}Class _N1N_{Val $Q,$t,_,E7,_t5:B_;}''',
                '''Class,l,{,Val,$__,:,Array,[,Array,[,Int,,,032,],,,0b100011,],;,},Class,q,{,Var,F,,,_812,:,_,;,},Class,_,{,},Class,_N1N_,{,Val,$Q,,,$t,,,_,,,E7,,,_t5,:,B_,;,},<EOF>''',
                101
            )
        )

    def test_1307(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:c{}Class a:d_4{}Class K_{Val O9,$_c,t6,_6__:Array [Array [String ,024],0X5A];$_(){}Val $w__:Boolean ;}Class __E_4O0{}''',
                '''Class,_,:,c,{,},Class,a,:,d_4,{,},Class,K_,{,Val,O9,,,$_c,,,t6,,,_6__,:,Array,[,Array,[,String,,,024,],,,0X5A,],;,$_,(,),{,},Val,$w__,:,Boolean,;,},Class,__E_4O0,{,},<EOF>''',
                101
            )
        )

    def test_1308(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class Q{}Class uu4{}Class Z2D{}Class e{}Class _t_:_{Val _,_,G:String ;}Class __{}Class _{Destructor (){} }Class __T:__43_{}''',
                '''Class,_,:,_,{,},Class,Q,{,},Class,uu4,{,},Class,Z2D,{,},Class,e,{,},Class,_t_,:,_,{,Val,_,,,_,,,G,:,String,;,},Class,__,{,},Class,_,{,Destructor,(,),{,},},Class,__T,:,__43_,{,},<EOF>''',
                101
            )
        )

    def test_1309(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N{Destructor (){} }Class Fw{}Class _YpW:S{Constructor (q_:Boolean ;_M_,x7,A6:Float ;h_7_h_,K:Array [String ,41];_4:__04){}Destructor (){} }Class q0E_:c_68_{}''',
                '''Class,_,:,N,{,Destructor,(,),{,},},Class,Fw,{,},Class,_YpW,:,S,{,Constructor,(,q_,:,Boolean,;,_M_,,,x7,,,A6,:,Float,;,h_7_h_,,,K,:,Array,[,String,,,41,],;,_4,:,__04,),{,},Destructor,(,),{,},},Class,q0E_,:,c_68_,{,},<EOF>''',
                101
            )
        )

    def test_1310(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __27{Val $7:Boolean ;Constructor (_:Array [Int ,056];b_8:n__WZ6;_:_cD;_,_:Array [Array [Array [Array [String ,0X13],0B10_0],65],056]){}Val __:Boolean ;}Class g{}''',
                '''Class,__27,{,Val,$7,:,Boolean,;,Constructor,(,_,:,Array,[,Int,,,056,],;,b_8,:,n__WZ6,;,_,:,_cD,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X13,],,,0B100,],,,65,],,,056,],),{,},Val,__,:,Boolean,;,},Class,g,{,},<EOF>''',
                101
            )
        )

    def test_1311(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_d:_{}Class m:T_{Destructor (){} }Class Y{}Class Xx{Var m,$0,c:Array [Array [Boolean ,0B1_0],0B11];Var $T9_,$0:_;}Class _:CUR{}''',
                '''Class,h_d,:,_,{,},Class,m,:,T_,{,Destructor,(,),{,},},Class,Y,{,},Class,Xx,{,Var,m,,,$0,,,c,:,Array,[,Array,[,Boolean,,,0B10,],,,0B11,],;,Var,$T9_,,,$0,:,_,;,},Class,_,:,CUR,{,},<EOF>''',
                101
            )
        )

    def test_1312(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class s{}Class _{}Class _7{}Class P:_6{Constructor (sKx_23l,__,z,q2Bm,Q,_:Array [Array [Array [Array [Boolean ,0x35],0B11],0X62],01];_8:_;T,_:d7){}Destructor (){}Constructor (S,_,z__,sO:Float ;b,km,_V,_:String ){} }Class _P{}Class LYR_h9:_{}Class __{}''',
                '''Class,__,{,},Class,s,{,},Class,_,{,},Class,_7,{,},Class,P,:,_6,{,Constructor,(,sKx_23l,,,__,,,z,,,q2Bm,,,Q,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x35,],,,0B11,],,,0X62,],,,01,],;,_8,:,_,;,T,,,_,:,d7,),{,},Destructor,(,),{,},Constructor,(,S,,,_,,,z__,,,sO,:,Float,;,b,,,km,,,_V,,,_,:,String,),{,},},Class,_P,{,},Class,LYR_h9,:,_,{,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_1313(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (f5:Array [Array [Float ,73],0B10010];w:__01;_,V:Array [Array [Array [Array [Array [String ,0B10010],0b1],02_7_4],0B10010],03_7_6_0]){} }''',
                '''Class,_,{,Constructor,(,f5,:,Array,[,Array,[,Float,,,73,],,,0B10010,],;,w,:,__01,;,_,,,V,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B10010,],,,0b1,],,,0274,],,,0B10010,],,,03760,],),{,},},<EOF>''',
                101
            )
        )

    def test_1314(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __1{}Class _:sb_{}Class __:S{Var $__7,_7V_:Array [Array [Array [Array [String ,07],0x47],0x47],0b111001];}Class _{Var $g:String ;}Class O{}''',
                '''Class,__1,{,},Class,_,:,sb_,{,},Class,__,:,S,{,Var,$__7,,,_7V_,:,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,0x47,],,,0x47,],,,0b111001,],;,},Class,_,{,Var,$g,:,String,;,},Class,O,{,},<EOF>''',
                101
            )
        )

    def test_1315(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __Ka_T{Destructor (){}Constructor (j:Array [Boolean ,0B1110];_,__1K3:Array [String ,0B1_10_1101];l,g_T:Float ){} }Class _{Val _,_:Array [Array [String ,55],046];}Class _{}''',
                '''Class,__Ka_T,{,Destructor,(,),{,},Constructor,(,j,:,Array,[,Boolean,,,0B1110,],;,_,,,__1K3,:,Array,[,String,,,0B1101101,],;,l,,,g_T,:,Float,),{,},},Class,_,{,Val,_,,,_,:,Array,[,Array,[,String,,,55,],,,046,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1316(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h{Destructor (){Var ___46___:Array [Array [Array [Array [Float ,0X5F],0X5],97],07];}tL(){}Var __a:String ;}''',
                '''Class,h,{,Destructor,(,),{,Var,___46___,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X5F,],,,0X5,],,,97,],,,07,],;,},tL,(,),{,},Var,__a,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1317(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (_,j:Array [Array [Array [Boolean ,0X26],0B11],2];Y,Q:Array [Boolean ,0b1110];_Mci_:String ;Q,yX3x:Array [String ,0B110101];_e:Array [Array [Array [Int ,0X26],0133],0B111];A1,x33c_:Array [Array [Int ,6],0xF_C];L3,_:Float ){} }''',
                '''Class,__,{,Constructor,(,_,,,j,:,Array,[,Array,[,Array,[,Boolean,,,0X26,],,,0B11,],,,2,],;,Y,,,Q,:,Array,[,Boolean,,,0b1110,],;,_Mci_,:,String,;,Q,,,yX3x,:,Array,[,String,,,0B110101,],;,_e,:,Array,[,Array,[,Array,[,Int,,,0X26,],,,0133,],,,0B111,],;,A1,,,x33c_,:,Array,[,Array,[,Int,,,6,],,,0xFC,],;,L3,,,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1318(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{}Class _:__y{Destructor (){}$_(__bt64,S,_:Array [Float ,062];_9:D5f7_;_T:Array [Boolean ,0B1111]){} }Class _:_T_{$_(_8:String ){Break ;} }Class _{}''',
                '''Class,x,{,},Class,_,:,__y,{,Destructor,(,),{,},$_,(,__bt64,,,S,,,_,:,Array,[,Float,,,062,],;,_9,:,D5f7_,;,_T,:,Array,[,Boolean,,,0B1111,],),{,},},Class,_,:,_T_,{,$_,(,_8,:,String,),{,Break,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1319(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_6{_(h5:Float ;A:_;m:Y;_,_,_bW,___:Array [Boolean ,6482_1];Z:Int ;_:h;m2,_52,___:Array [String ,29];Q:Array [String ,0B1]){} }''',
                '''Class,_,:,_6,{,_,(,h5,:,Float,;,A,:,_,;,m,:,Y,;,_,,,_,,,_bW,,,___,:,Array,[,Boolean,,,64821,],;,Z,:,Int,;,_,:,h,;,m2,,,_52,,,___,:,Array,[,String,,,29,],;,Q,:,Array,[,String,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1320(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _OM:_{_(_:Array [Array [Int ,030],0x2];jw92,r04:Float ;_:_;_hfp26,B1X:Q_3_){}Constructor (){Break ;Break ;} }''',
                '''Class,_OM,:,_,{,_,(,_,:,Array,[,Array,[,Int,,,030,],,,0x2,],;,jw92,,,r04,:,Float,;,_,:,_,;,_hfp26,,,B1X,:,Q_3_,),{,},Constructor,(,),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1321(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:S3_{}Class _{}Class _5{Val b19:Int ;Constructor (_2Hf:h_Fg){} }Class _v7{}Class _{Constructor (y83,w:Boolean ;wi:Array [Array [Boolean ,0b1000111],03];hK:Array [Array [String ,55],0B1001010];_oa:Array [Array [Array [Array [Int ,03],55],84],9]){Val _7e:Float ;} }Class u{}Class e{Destructor (){ {Continue ;}Return ;} }''',
                '''Class,_,:,S3_,{,},Class,_,{,},Class,_5,{,Val,b19,:,Int,;,Constructor,(,_2Hf,:,h_Fg,),{,},},Class,_v7,{,},Class,_,{,Constructor,(,y83,,,w,:,Boolean,;,wi,:,Array,[,Array,[,Boolean,,,0b1000111,],,,03,],;,hK,:,Array,[,Array,[,String,,,55,],,,0B1001010,],;,_oa,:,Array,[,Array,[,Array,[,Array,[,Int,,,03,],,,55,],,,84,],,,9,],),{,Val,_7e,:,Float,;,},},Class,u,{,},Class,e,{,Destructor,(,),{,{,Continue,;,},Return,;,},},<EOF>''',
                101
            )
        )

    def test_1322(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:_C3{W(_0:Array [Array [Array [String ,0X63],0b1_0],0b11]){} }Class _6_{Var e0,$_:Array [Float ,0XB_DC_3_8];}''',
                '''Class,K,:,_C3,{,W,(,_0,:,Array,[,Array,[,Array,[,String,,,0X63,],,,0b10,],,,0b11,],),{,},},Class,_6_,{,Var,e0,,,$_,:,Array,[,Float,,,0XBDC38,],;,},<EOF>''',
                101
            )
        )

    def test_1323(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c67:_f{Var $4,$08,f:_;Destructor (){} }Class _:_8_{Val A_:Array [Array [Array [Array [Array [String ,0B1],0B1000111],0xB5],0X32_05],0x2B];Var j,$_,$_:__ud;}''',
                '''Class,c67,:,_f,{,Var,$4,,,$08,,,f,:,_,;,Destructor,(,),{,},},Class,_,:,_8_,{,Val,A_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0B1000111,],,,0xB5,],,,0X3205,],,,0x2B,],;,Var,j,,,$_,,,$_,:,__ud,;,},<EOF>''',
                101
            )
        )

    def test_1324(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _,$_:Array [Array [Array [Array [Array [Boolean ,0B1_0],0x2D],0x2D],88],0B1];}Class S8{Var $l19t_:fn3;}''',
                '''Class,_,{,Val,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10,],,,0x2D,],,,0x2D,],,,88,],,,0B1,],;,},Class,S8,{,Var,$l19t_,:,fn3,;,},<EOF>''',
                101
            )
        )

    def test_1325(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{}Class Q5:_{Val N3:Eb;Constructor (){Continue ;} }Class _:H{Val _:Array [Array [Float ,06],025];Constructor (){}h2_(){} }Class _:_KI_{}Class y:__VEl_{Constructor (_,_:String ;_,L,_:Array [Float ,0B1_0]){} }''',
                '''Class,Q,{,},Class,Q5,:,_,{,Val,N3,:,Eb,;,Constructor,(,),{,Continue,;,},},Class,_,:,H,{,Val,_,:,Array,[,Array,[,Float,,,06,],,,025,],;,Constructor,(,),{,},h2_,(,),{,},},Class,_,:,_KI_,{,},Class,y,:,__VEl_,{,Constructor,(,_,,,_,:,String,;,_,,,L,,,_,:,Array,[,Float,,,0B10,],),{,},},<EOF>''',
                101
            )
        )

    def test_1326(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B6{$_T(wH1k_68,j:Array [Float ,9]){}Destructor (){} }Class y:n__{}Class _:l{}Class _:__2{Destructor (){}Val $v8_:Array [Array [Boolean ,0b1001010],0B1];}''',
                '''Class,B6,{,$_T,(,wH1k_68,,,j,:,Array,[,Float,,,9,],),{,},Destructor,(,),{,},},Class,y,:,n__,{,},Class,_,:,l,{,},Class,_,:,__2,{,Destructor,(,),{,},Val,$v8_,:,Array,[,Array,[,Boolean,,,0b1001010,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_1327(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:b{Constructor (_qC__,__d7_Q:Array [String ,0xBE]){Continue ;} }Class __8:a_738{Var $_:Array [Boolean ,0B1];Constructor (Q_01,l:Boolean ;_,_:_;__,_59:_){} }''',
                '''Class,L,:,b,{,Constructor,(,_qC__,,,__d7_Q,:,Array,[,String,,,0xBE,],),{,Continue,;,},},Class,__8,:,a_738,{,Var,$_,:,Array,[,Boolean,,,0B1,],;,Constructor,(,Q_01,,,l,:,Boolean,;,_,,,_,:,_,;,__,,,_59,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1328(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vUR{S64_O(_:Array [Array [String ,0xB_B],0x7];_,_:Int ;j:String ;__G:_){}Var $_y_,$1,$8:__;Destructor (){} }''',
                '''Class,vUR,{,S64_O,(,_,:,Array,[,Array,[,String,,,0xBB,],,,0x7,],;,_,,,_,:,Int,;,j,:,String,;,__G,:,_,),{,},Var,$_y_,,,$1,,,$8,:,__,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1329(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P_8g{Var $0:Array [Array [Array [Array [String ,0b1000100],0B1_00],041],0B1100100];}Class o{}Class _{Constructor (_1_,_:K92){Continue ;Break ;} }Class aT{Constructor (_,r:Int ){}zN(){} }Class Z:RE{}''',
                '''Class,P_8g,{,Var,$0,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1000100,],,,0B100,],,,041,],,,0B1100100,],;,},Class,o,{,},Class,_,{,Constructor,(,_1_,,,_,:,K92,),{,Continue,;,Break,;,},},Class,aT,{,Constructor,(,_,,,r,:,Int,),{,},zN,(,),{,},},Class,Z,:,RE,{,},<EOF>''',
                101
            )
        )

    def test_1330(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Constructor (){} }Class _N4:_{}Class r{}Class z:___{Var $F,_46_,$5,_,$_y5A:Array [Array [String ,0b111011],4];Destructor (){Val _O_n3J:Array [Array [String ,050],5];} }''',
                '''Class,d,{,Constructor,(,),{,},},Class,_N4,:,_,{,},Class,r,{,},Class,z,:,___,{,Var,$F,,,_46_,,,$5,,,_,,,$_y5A,:,Array,[,Array,[,String,,,0b111011,],,,4,],;,Destructor,(,),{,Val,_O_n3J,:,Array,[,Array,[,String,,,050,],,,5,],;,},},<EOF>''',
                101
            )
        )

    def test_1331(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:o{}Class _:_{$71n(){Var Y1Y,_V,A,x_6__:Array [Array [Array [Array [Array [Int ,0b1],07226],0X85_3A],25],06];} }''',
                '''Class,_,:,o,{,},Class,_,:,_,{,$71n,(,),{,Var,Y1Y,,,_V,,,A,,,x_6__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,07226,],,,0X853A,],,,25,],,,06,],;,},},<EOF>''',
                101
            )
        )

    def test_1332(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _b:_{$b(C_4i3:z;JR8,____2BM:Array [Array [Array [Array [Boolean ,0114],0735],06],6];w_:Array [Array [Boolean ,0xF],0X40];s0,_b,C,X,_,_1,_,_M6:__;x___D:Float ;_,_:_8;aF,__:E;J:Float ){} }Class s:_{}''',
                '''Class,_b,:,_,{,$b,(,C_4i3,:,z,;,JR8,,,____2BM,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0114,],,,0735,],,,06,],,,6,],;,w_,:,Array,[,Array,[,Boolean,,,0xF,],,,0X40,],;,s0,,,_b,,,C,,,X,,,_,,,_1,,,_,,,_M6,:,__,;,x___D,:,Float,;,_,,,_,:,_8,;,aF,,,__,:,E,;,J,:,Float,),{,},},Class,s,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1333(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jj:_3_{Constructor (_NFG7,_T:v){}Var _8_:Array [Array [Array [Array [Boolean ,9],1],0123],9];}Class _B:_ey4{}''',
                '''Class,jj,:,_3_,{,Constructor,(,_NFG7,,,_T,:,v,),{,},Var,_8_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,9,],,,1,],,,0123,],,,9,],;,},Class,_B,:,_ey4,{,},<EOF>''',
                101
            )
        )

    def test_1334(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:C1_{Var f_f,__:_;Var e:s;Var wEo,_,$41,N:Float ;}Class x15q0{Val $_16,F,_:Boolean ;}Class as{K(n71FY,q,A_,o__6:Array [Array [Array [Array [Array [Array [String ,0X52],0b1_0_11],0b11_0],05],0X52],0b10]){} }''',
                '''Class,_,:,C1_,{,Var,f_f,,,__,:,_,;,Var,e,:,s,;,Var,wEo,,,_,,,$41,,,N,:,Float,;,},Class,x15q0,{,Val,$_16,,,F,,,_,:,Boolean,;,},Class,as,{,K,(,n71FY,,,q,,,A_,,,o__6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X52,],,,0b1011,],,,0b110,],,,05,],,,0X52,],,,0b10,],),{,},},<EOF>''',
                101
            )
        )

    def test_1335(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:__4X5{}Class rn:t{Destructor (){}Var $o_Y6_9_,__:Array [Boolean ,0B110001];Val _,$_,$0i3,L:Array [Array [Array [Array [Boolean ,0b1100001],07],0135],01];}Class _:u{$3(_:Boolean ;_,_,K,K40:Array [Array [Float ,0x579],8];_G_,_V:Array [Array [Array [String ,5],0xD7],0X61]){} }''',
                '''Class,k,:,__4X5,{,},Class,rn,:,t,{,Destructor,(,),{,},Var,$o_Y6_9_,,,__,:,Array,[,Boolean,,,0B110001,],;,Val,_,,,$_,,,$0i3,,,L,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1100001,],,,07,],,,0135,],,,01,],;,},Class,_,:,u,{,$3,(,_,:,Boolean,;,_,,,_,,,K,,,K40,:,Array,[,Array,[,Float,,,0x579,],,,8,],;,_G_,,,_V,:,Array,[,Array,[,Array,[,String,,,5,],,,0xD7,],,,0X61,],),{,},},<EOF>''',
                101
            )
        )

    def test_1336(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{Constructor (F,_:Array [Array [Array [Int ,0X3],0b1100000],0x4C];K:Boolean ;w3_,_U6:Array [String ,02];G_1,a:Q){}Var $_,__:_;}Class _4_E{}Class T40{}Class _:xX_{}Class O{}''',
                '''Class,o,{,Constructor,(,F,,,_,:,Array,[,Array,[,Array,[,Int,,,0X3,],,,0b1100000,],,,0x4C,],;,K,:,Boolean,;,w3_,,,_U6,:,Array,[,String,,,02,],;,G_1,,,a,:,Q,),{,},Var,$_,,,__,:,_,;,},Class,_4_E,{,},Class,T40,{,},Class,_,:,xX_,{,},Class,O,{,},<EOF>''',
                101
            )
        )

    def test_1337(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _R:B{}Class __:_3svK{}Class P:_{_(N:Array [Float ,032];_,__,__,_,Z:__){}_(){} }Class __9{Val _:Array [Float ,05_7_6_4];}''',
                '''Class,_R,:,B,{,},Class,__,:,_3svK,{,},Class,P,:,_,{,_,(,N,:,Array,[,Float,,,032,],;,_,,,__,,,__,,,_,,,Z,:,__,),{,},_,(,),{,},},Class,__9,{,Val,_,:,Array,[,Float,,,05764,],;,},<EOF>''',
                101
            )
        )

    def test_1338(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2n:_{}Class _c{}Class n0_{}Class _{Var $_:Array [Array [Array [Float ,0B10000],0x4A],49];Val $_4:Array [Array [Array [Int ,0X8_0_9A41],0X23],0b1001111];}''',
                '''Class,_2n,:,_,{,},Class,_c,{,},Class,n0_,{,},Class,_,{,Var,$_,:,Array,[,Array,[,Array,[,Float,,,0B10000,],,,0x4A,],,,49,],;,Val,$_4,:,Array,[,Array,[,Array,[,Int,,,0X809A41,],,,0X23,],,,0b1001111,],;,},<EOF>''',
                101
            )
        )

    def test_1339(self):
        self.assertTrue(
            TestLexer.test(
                '''Class PVR:jq4{Var $_,_N_,_U:Array [Array [Array [Int ,0X39],45],035];Var $3H,$_:String ;Val $3,$_,$D,__X,_:Int ;Constructor (){} }''',
                '''Class,PVR,:,jq4,{,Var,$_,,,_N_,,,_U,:,Array,[,Array,[,Array,[,Int,,,0X39,],,,45,],,,035,],;,Var,$3H,,,$_,:,String,;,Val,$3,,,$_,,,$D,,,__X,,,_,:,Int,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1340(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I5{$2_h9_Y(){}Var _7V4_:String ;}Class _{Val $1:Array [String ,0X4B];}Class _{Val _:_;Var $_:Of;$6(){}Constructor (K_,w:Boolean ;_:Array [Array [Array [Float ,6],0x5E],0xF_A]){} }''',
                '''Class,I5,{,$2_h9_Y,(,),{,},Var,_7V4_,:,String,;,},Class,_,{,Val,$1,:,Array,[,String,,,0X4B,],;,},Class,_,{,Val,_,:,_,;,Var,$_,:,Of,;,$6,(,),{,},Constructor,(,K_,,,w,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Float,,,6,],,,0x5E,],,,0xFA,],),{,},},<EOF>''',
                101
            )
        )

    def test_1341(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Destructor (){}__J_(_0_:Array [Array [Float ,0x7D],04];HV,_d,_,_:Array [Array [String ,0XD],0X42];l:Array [Int ,0b100110];__3:Int ){} }Class f{}''',
                '''Class,M,{,Destructor,(,),{,},__J_,(,_0_,:,Array,[,Array,[,Float,,,0x7D,],,,04,],;,HV,,,_d,,,_,,,_,:,Array,[,Array,[,String,,,0XD,],,,0X42,],;,l,:,Array,[,Int,,,0b100110,],;,__3,:,Int,),{,},},Class,f,{,},<EOF>''',
                101
            )
        )

    def test_1342(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (__:U){} }Class _{}Class _l:_2{}Class _{}Class c:_5_{}Class d:h_x{Var R_,d,$_,$_,$E:Array [Boolean ,0b1_010];Destructor (){Break ;} }''',
                '''Class,_,:,_,{,Constructor,(,__,:,U,),{,},},Class,_,{,},Class,_l,:,_2,{,},Class,_,{,},Class,c,:,_5_,{,},Class,d,:,h_x,{,Var,R_,,,d,,,$_,,,$_,,,$E,:,Array,[,Boolean,,,0b1010,],;,Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1343(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U6:__{}Class _T9{Destructor (){}M(s,q,c,_:String ;_:Boolean ){Continue ;Return ;Break ;}Val $_,G57__:_;}''',
                '''Class,U6,:,__,{,},Class,_T9,{,Destructor,(,),{,},M,(,s,,,q,,,c,,,_,:,String,;,_,:,Boolean,),{,Continue,;,Return,;,Break,;,},Val,$_,,,G57__,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1344(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z0y:i{Var $n:Boolean ;Ew_(O38_:_;fk,pt,y,_:Boolean ){} }Class i{Var $9f_93:Array [Boolean ,0b10];}Class _{}''',
                '''Class,_Z0y,:,i,{,Var,$n,:,Boolean,;,Ew_,(,O38_,:,_,;,fk,,,pt,,,y,,,_,:,Boolean,),{,},},Class,i,{,Var,$9f_93,:,Array,[,Boolean,,,0b10,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1345(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{_(__:Float ;_:E0;I_e3r0__:Int ;_z:_O__m;l,_40:String ;_:Float ;G:e2W;_,G,__,g,_,___:Boolean ){}g(){}Destructor (){} }Class _{}''',
                '''Class,_,{,},Class,_,{,_,(,__,:,Float,;,_,:,E0,;,I_e3r0__,:,Int,;,_z,:,_O__m,;,l,,,_40,:,String,;,_,:,Float,;,G,:,e2W,;,_,,,G,,,__,,,g,,,_,,,___,:,Boolean,),{,},g,(,),{,},Destructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1346(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{Destructor (){}Val $z:Float ;}Class ig{Constructor (E,x:Array [Array [Array [Boolean ,27],27],047]){Continue ;}Var _,SV,_,$_62_,$2,Y13_,A2,p:Array [Array [Array [Boolean ,27],27],0X3C];}''',
                '''Class,F,{,Destructor,(,),{,},Val,$z,:,Float,;,},Class,ig,{,Constructor,(,E,,,x,:,Array,[,Array,[,Array,[,Boolean,,,27,],,,27,],,,047,],),{,Continue,;,},Var,_,,,SV,,,_,,,$_62_,,,$2,,,Y13_,,,A2,,,p,:,Array,[,Array,[,Array,[,Boolean,,,27,],,,27,],,,0X3C,],;,},<EOF>''',
                101
            )
        )

    def test_1347(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t__:K{Val $3:Array [Array [Int ,061],0X27];q(_:_;Jt:__;k:String ){}Constructor (){}D(){}Constructor (){} }Class F_{}Class _2{}''',
                '''Class,t__,:,K,{,Val,$3,:,Array,[,Array,[,Int,,,061,],,,0X27,],;,q,(,_,:,_,;,Jt,:,__,;,k,:,String,),{,},Constructor,(,),{,},D,(,),{,},Constructor,(,),{,},},Class,F_,{,},Class,_2,{,},<EOF>''',
                101
            )
        )

    def test_1348(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3w3:L{Constructor (J,U:j7_9y;__:Int ;v,_,K_Sv:Array [Array [Int ,0b100],8_6_7];eu,C,p:U){}Destructor (){} }''',
                '''Class,_3w3,:,L,{,Constructor,(,J,,,U,:,j7_9y,;,__,:,Int,;,v,,,_,,,K_Sv,:,Array,[,Array,[,Int,,,0b100,],,,867,],;,eu,,,C,,,p,:,U,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1349(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_:_Ev{Var $Y0:Array [Float ,0X4_7_0];Val $lG5,K,i:Int ;Val _R:Array [Boolean ,077];}Class z{}Class _9__:a{}''',
                '''Class,_0_,:,_Ev,{,Var,$Y0,:,Array,[,Float,,,0X470,],;,Val,$lG5,,,K,,,i,:,Int,;,Val,_R,:,Array,[,Boolean,,,077,],;,},Class,z,{,},Class,_9__,:,a,{,},<EOF>''',
                101
            )
        )

    def test_1350(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:_{Constructor (w___,o93:String ){}Constructor (_2,B5_,__8g,_r,I,p_,Z7C:Array [Array [Boolean ,07_5_4],68];_:Float ;_,__,J:V;n:Array [String ,7]){}__(j:Float ;I0:Boolean ){} }Class J{}Class A{Constructor (){} }Class _3X_i8u{Destructor (){}Var VS,$7:_F8;}Class _8{g_6(N:Boolean ;_,_:U;_:Array [Array [Boolean ,0X1C],0b101011]){}Val $_,$6,$77_:Boolean ;q91(_1_8:Boolean ){} }''',
                '''Class,C,:,_,{,Constructor,(,w___,,,o93,:,String,),{,},Constructor,(,_2,,,B5_,,,__8g,,,_r,,,I,,,p_,,,Z7C,:,Array,[,Array,[,Boolean,,,0754,],,,68,],;,_,:,Float,;,_,,,__,,,J,:,V,;,n,:,Array,[,String,,,7,],),{,},__,(,j,:,Float,;,I0,:,Boolean,),{,},},Class,J,{,},Class,A,{,Constructor,(,),{,},},Class,_3X_i8u,{,Destructor,(,),{,},Var,VS,,,$7,:,_F8,;,},Class,_8,{,g_6,(,N,:,Boolean,;,_,,,_,:,U,;,_,:,Array,[,Array,[,Boolean,,,0X1C,],,,0b101011,],),{,},Val,$_,,,$6,,,$77_,:,Boolean,;,q91,(,_1_8,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1351(self):
        self.assertTrue(
            TestLexer.test(
                '''Class aL{}Class fjL:Q{}Class _C3:e{Var $_:Array [Array [Array [Array [Boolean ,0X9E_6C],06_76],0X6A_7_E_A_4],20];}''',
                '''Class,aL,{,},Class,fjL,:,Q,{,},Class,_C3,:,e,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X9E6C,],,,0676,],,,0X6A7EA4,],,,20,],;,},<EOF>''',
                101
            )
        )

    def test_1352(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (e,_v,y6,_,e:Int ;_:Array [Array [Array [Float ,0B1],0b1_1_1_1],0X4F];W,V87:_;S:Array [Array [String ,0b1],0XC];l:Array [Array [Int ,76],0B1010101]){}Val $_,$_w:Array [Array [Array [Array [Float ,0130],0xB],0B1],1];Val pihm7B,_,$_982:_;$5FF_(){Val _1:String ;Return ;} }''',
                '''Class,_,{,Constructor,(,e,,,_v,,,y6,,,_,,,e,:,Int,;,_,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0b1111,],,,0X4F,],;,W,,,V87,:,_,;,S,:,Array,[,Array,[,String,,,0b1,],,,0XC,],;,l,:,Array,[,Array,[,Int,,,76,],,,0B1010101,],),{,},Val,$_,,,$_w,:,Array,[,Array,[,Array,[,Array,[,Float,,,0130,],,,0xB,],,,0B1,],,,1,],;,Val,pihm7B,,,_,,,$_982,:,_,;,$5FF_,(,),{,Val,_1,:,String,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1353(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ijb{l(uh18__V4,_,_:Array [Array [Array [String ,1],064],31];Py3:c;G,K_:Array [String ,07_15];_v:Array [Array [Float ,3],31]){Return ;}Constructor (b:_4){Val Xaf_:Array [Array [Array [Array [Array [Int ,31],064],07],0x8],0x20];} }''',
                '''Class,ijb,{,l,(,uh18__V4,,,_,,,_,:,Array,[,Array,[,Array,[,String,,,1,],,,064,],,,31,],;,Py3,:,c,;,G,,,K_,:,Array,[,String,,,0715,],;,_v,:,Array,[,Array,[,Float,,,3,],,,31,],),{,Return,;,},Constructor,(,b,:,_4,),{,Val,Xaf_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,31,],,,064,],,,07,],,,0x8,],,,0x20,],;,},},<EOF>''',
                101
            )
        )

    def test_1354(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:_{Destructor (){}Constructor (){} }Class C{Var t:Array [String ,02];}Class B2{Var $990_,___y:Array [Array [String ,0B110110],0B1_011];}''',
                '''Class,q,:,_,{,Destructor,(,),{,},Constructor,(,),{,},},Class,C,{,Var,t,:,Array,[,String,,,02,],;,},Class,B2,{,Var,$990_,,,___y,:,Array,[,Array,[,String,,,0B110110,],,,0B1011,],;,},<EOF>''',
                101
            )
        )

    def test_1355(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{Var $5_:_;Constructor (){} }Class gg_{Val $3_,_,_UK:Array [Array [Array [Array [Array [Array [Array [Array [String ,78],5],0b1],78],78],02],0B10110],3];}''',
                '''Class,B,{,Var,$5_,:,_,;,Constructor,(,),{,},},Class,gg_,{,Val,$3_,,,_,,,_UK,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,78,],,,5,],,,0b1,],,,78,],,,78,],,,02,],,,0B10110,],,,3,],;,},<EOF>''',
                101
            )
        )

    def test_1356(self):
        self.assertTrue(
            TestLexer.test(
                '''Class By Q:E{Destructor (){} }Class T9:_{Constructor (_2:Int ;_:S5Y){} }Class _B:_{Var $H,u__,$6,__:_;}Class _{}Class v:fe{}Class G6{$_2(){Break ;} }Class n{}Class c1:_{}''',
                '''Class,By,Q,:,E,{,Destructor,(,),{,},},Class,T9,:,_,{,Constructor,(,_2,:,Int,;,_,:,S5Y,),{,},},Class,_B,:,_,{,Var,$H,,,u__,,,$6,,,__,:,_,;,},Class,_,{,},Class,v,:,fe,{,},Class,G6,{,$_2,(,),{,Break,;,},},Class,n,{,},Class,c1,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1357(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Io:_{Var w_Ac4_,J6,L,vfG,$_8_,$_,$__7,__:Array [Int ,065];_(r__,_3X:Array [Array [Boolean ,0B1],0XF]){Return ;} }''',
                '''Class,Io,:,_,{,Var,w_Ac4_,,,J6,,,L,,,vfG,,,$_8_,,,$_,,,$__7,,,__,:,Array,[,Int,,,065,],;,_,(,r__,,,_3X,:,Array,[,Array,[,Boolean,,,0B1,],,,0XF,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1358(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __j{Var d__:G;Var _X,$_8_:Float ;Var P_98T,$3O55:Boolean ;C(u,_91:uP_y_;y_:T;E,_N9O:Array [Array [String ,0B100101],0b10]){} }''',
                '''Class,__j,{,Var,d__,:,G,;,Var,_X,,,$_8_,:,Float,;,Var,P_98T,,,$3O55,:,Boolean,;,C,(,u,,,_91,:,uP_y_,;,y_,:,T,;,E,,,_N9O,:,Array,[,Array,[,String,,,0B100101,],,,0b10,],),{,},},<EOF>''',
                101
            )
        )

    def test_1359(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_s{_7P_(s:Array [Array [Array [Array [Array [String ,0B1],4],0b1100011],023],1];_:Array [Boolean ,0X7]){Return ;} }''',
                '''Class,_,:,_s,{,_7P_,(,s,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,4,],,,0b1100011,],,,023,],,,1,],;,_,:,Array,[,Boolean,,,0X7,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1360(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{Constructor (_:Array [Array [Array [Array [Array [Array [Boolean ,0X9_5],0b1001000],0B1011001],0x28],43],0b10]){} }''',
                '''Class,_,{,},Class,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X95,],,,0b1001000,],,,0B1011001,],,,0x28,],,,43,],,,0b10,],),{,},},<EOF>''',
                101
            )
        )

    def test_1361(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3__{}Class __{Val $_2D:Array [Int ,48];Constructor (){}Constructor (z70_:K;K_,o,b0f,_,_:Array [Array [Array [Array [Array [Float ,48],0B1001010],0x40],0X55],0B1001010]){Break ;P::$I0Z.F_F();} }''',
                '''Class,_3__,{,},Class,__,{,Val,$_2D,:,Array,[,Int,,,48,],;,Constructor,(,),{,},Constructor,(,z70_,:,K,;,K_,,,o,,,b0f,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,48,],,,0B1001010,],,,0x40,],,,0X55,],,,0B1001010,],),{,Break,;,P,::,$I0Z,.,F_F,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1362(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:_{Var _d:o;Constructor (_WQ,ZQ:Float ;_,_7_8D:Array [Array [Array [Float ,0x5C_2_7],5],0b1010010]){}Destructor (){} }Class k:U_{Val _1:B_7;}''',
                '''Class,q,:,_,{,Var,_d,:,o,;,Constructor,(,_WQ,,,ZQ,:,Float,;,_,,,_7_8D,:,Array,[,Array,[,Array,[,Float,,,0x5C27,],,,5,],,,0b1010010,],),{,},Destructor,(,),{,},},Class,k,:,U_,{,Val,_1,:,B_7,;,},<EOF>''',
                101
            )
        )

    def test_1363(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:BQAR7E{Destructor (){Break ;Break ;{} }Var $h_o__,_4:Array [Array [Array [Array [String ,03],1_4],037],0X6AE5];}Class va_{}Class _{}Class __2:FY_u_6{RI(R,_M00,_,_9,__O,__,V:Y){} }''',
                '''Class,_,:,BQAR7E,{,Destructor,(,),{,Break,;,Break,;,{,},},Var,$h_o__,,,_4,:,Array,[,Array,[,Array,[,Array,[,String,,,03,],,,14,],,,037,],,,0X6AE5,],;,},Class,va_,{,},Class,_,{,},Class,__2,:,FY_u_6,{,RI,(,R,,,_M00,,,_,,,_9,,,__O,,,__,,,V,:,Y,),{,},},<EOF>''',
                101
            )
        )

    def test_1364(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{D(_24:y;_,g,_:Array [Array [Array [Array [Array [Array [Boolean ,0X50],0125],9],0125],326],5];__H_z:Array [Array [String ,0b1000],04_7]){}Constructor (){Continue ;} }''',
                '''Class,_,{,D,(,_24,:,y,;,_,,,g,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X50,],,,0125,],,,9,],,,0125,],,,326,],,,5,],;,__H_z,:,Array,[,Array,[,String,,,0b1000,],,,047,],),{,},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1365(self):
        self.assertTrue(
            TestLexer.test(
                '''Class wxr:_{Val _,_:Array [Array [Int ,06],0B1];Destructor (){}Val $b_:Float ;}Class _p{}Class d_7:M4Q{}Class _e{$E_(L:N;d0v_Xw_,lNj_,t:Int ;_:Array [Boolean ,0b111110];Wts:_){} }''',
                '''Class,wxr,:,_,{,Val,_,,,_,:,Array,[,Array,[,Int,,,06,],,,0B1,],;,Destructor,(,),{,},Val,$b_,:,Float,;,},Class,_p,{,},Class,d_7,:,M4Q,{,},Class,_e,{,$E_,(,L,:,N,;,d0v_Xw_,,,lNj_,,,t,:,Int,;,_,:,Array,[,Boolean,,,0b111110,],;,Wts,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1366(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:__c_{$I(__,L:Array [Boolean ,0B10];_:Array [Array [Array [Boolean ,0x6],03_012_4],0X5A_2];_,_m:Float ){_::$y();Continue ;} }''',
                '''Class,v,:,__c_,{,$I,(,__,,,L,:,Array,[,Boolean,,,0B10,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,0x6,],,,030124,],,,0X5A2,],;,_,,,_m,:,Float,),{,_,::,$y,(,),;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1367(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(_9,_9,__,__,_d_,G8_6:_){}Val __,$j:Array [Array [Int ,0X1E],02_17_1];}Class Xr{}Class I5{}Class P23u_17:_{_(){} }''',
                '''Class,_,{,_,(,_9,,,_9,,,__,,,__,,,_d_,,,G8_6,:,_,),{,},Val,__,,,$j,:,Array,[,Array,[,Int,,,0X1E,],,,02171,],;,},Class,Xr,{,},Class,I5,{,},Class,P23u_17,:,_,{,_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1368(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __a6{Val $98f2O,$1JR_:Int ;}Class _J:__{_30(_2ZRIE4e4,S5:String ;_d:Array [String ,0b1000];_:Array [Array [Int ,054],054];_:Array [Array [Array [String ,11],0X5A],054];G:_;f_,D:Array [Array [Boolean ,0x53],054];B:Int ;sr:Array [Array [Boolean ,0B111_111_0_0],0B1011011];J7fC:Px){} }''',
                '''Class,__a6,{,Val,$98f2O,,,$1JR_,:,Int,;,},Class,_J,:,__,{,_30,(,_2ZRIE4e4,,,S5,:,String,;,_d,:,Array,[,String,,,0b1000,],;,_,:,Array,[,Array,[,Int,,,054,],,,054,],;,_,:,Array,[,Array,[,Array,[,String,,,11,],,,0X5A,],,,054,],;,G,:,_,;,f_,,,D,:,Array,[,Array,[,Boolean,,,0x53,],,,054,],;,B,:,Int,;,sr,:,Array,[,Array,[,Boolean,,,0B11111100,],,,0B1011011,],;,J7fC,:,Px,),{,},},<EOF>''',
                101
            )
        )

    def test_1369(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _Y,$_:_0;}Class _{Constructor (){}Constructor (F78,_82_V:Array [Array [String ,0XC],0XC];_:cz9P){} }''',
                '''Class,_,{,Var,_Y,,,$_,:,_0,;,},Class,_,{,Constructor,(,),{,},Constructor,(,F78,,,_82_V,:,Array,[,Array,[,String,,,0XC,],,,0XC,],;,_,:,cz9P,),{,},},<EOF>''',
                101
            )
        )

    def test_1370(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f_:J{Var $f:Array [Array [Array [Array [Float ,03_7_7],0b101110],0B100001],06];}Class _X9E:RKo{_(_v:Array [Array [String ,1],0x76];q7:String ;O:_){} }''',
                '''Class,f_,:,J,{,Var,$f,:,Array,[,Array,[,Array,[,Array,[,Float,,,0377,],,,0b101110,],,,0B100001,],,,06,],;,},Class,_X9E,:,RKo,{,_,(,_v,:,Array,[,Array,[,String,,,1,],,,0x76,],;,q7,:,String,;,O,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1371(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:KCO{$6_(c:Float ){}Constructor (_,_L,e:R;E7:String ;T:Array [Array [Array [Array [String ,11],11],0b1],7_6_8_0];__:Array [Array [Float ,0X5_B],0B1];_:O){Return ;Return ;Continue ;} }''',
                '''Class,__,:,KCO,{,$6_,(,c,:,Float,),{,},Constructor,(,_,,,_L,,,e,:,R,;,E7,:,String,;,T,:,Array,[,Array,[,Array,[,Array,[,String,,,11,],,,11,],,,0b1,],,,7680,],;,__,:,Array,[,Array,[,Float,,,0X5B,],,,0B1,],;,_,:,O,),{,Return,;,Return,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1372(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N{}Class cvs{}Class o{}Class _0{Val _:Array [Array [Array [Array [Array [Float ,1],0b1000100],0x22],0B11_1_0],51];Constructor (){}Val $7b,$91S989r0:__0;}''',
                '''Class,_,:,N,{,},Class,cvs,{,},Class,o,{,},Class,_0,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,1,],,,0b1000100,],,,0x22,],,,0B1110,],,,51,],;,Constructor,(,),{,},Val,$7b,,,$91S989r0,:,__0,;,},<EOF>''',
                101
            )
        )

    def test_1373(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{}Class _0{Val $0a___302:_;Val $_:Array [Array [Array [Array [Array [Array [String ,6],0x32],77],4],077],0140];Var y1w_5:f;}Class _{}Class c{}''',
                '''Class,___,{,},Class,_0,{,Val,$0a___302,:,_,;,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,6,],,,0x32,],,,77,],,,4,],,,077,],,,0140,],;,Var,y1w_5,:,f,;,},Class,_,{,},Class,c,{,},<EOF>''',
                101
            )
        )

    def test_1374(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _84:_{Var _Uu:Int ;Destructor (){} }Class h:__n{Val $_:Array [Float ,07];Constructor (wi,z,_,_3___:Ck_;Bf,__,u3z9Z_14,a:Array [String ,02_0];_z:_4;_F:Float ;_:Int ){}Constructor (N,l:R_24;_:String ;d,M:Array [Int ,032]){}Destructor (){New _().V_vo4();}Constructor (b_,L,_:Array [Float ,89];_df8102G:Array [Int ,0X9]){Continue ;} }Class _{}''',
                '''Class,_84,:,_,{,Var,_Uu,:,Int,;,Destructor,(,),{,},},Class,h,:,__n,{,Val,$_,:,Array,[,Float,,,07,],;,Constructor,(,wi,,,z,,,_,,,_3___,:,Ck_,;,Bf,,,__,,,u3z9Z_14,,,a,:,Array,[,String,,,020,],;,_z,:,_4,;,_F,:,Float,;,_,:,Int,),{,},Constructor,(,N,,,l,:,R_24,;,_,:,String,;,d,,,M,:,Array,[,Int,,,032,],),{,},Destructor,(,),{,New,_,(,),.,V_vo4,(,),;,},Constructor,(,b_,,,L,,,_,:,Array,[,Float,,,89,],;,_df8102G,:,Array,[,Int,,,0X9,],),{,Continue,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1375(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e4:_{Constructor (){} }Class h:_{}Class v_{Var _h_H_:Array [Int ,0x4_12];}Class Q{Destructor (){Break ;}$0(){} }''',
                '''Class,e4,:,_,{,Constructor,(,),{,},},Class,h,:,_,{,},Class,v_,{,Var,_h_H_,:,Array,[,Int,,,0x412,],;,},Class,Q,{,Destructor,(,),{,Break,;,},$0,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1376(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _43{}Class _6_:x6{$v(i_,_,_d,_,Q__:_6;zY:Array [Array [Array [Boolean ,063_6],0X3_9_D_1D],0x41];Ec_7_:Boolean ){} }Class aA:c{}Class _:M{}''',
                '''Class,_43,{,},Class,_6_,:,x6,{,$v,(,i_,,,_,,,_d,,,_,,,Q__,:,_6,;,zY,:,Array,[,Array,[,Array,[,Boolean,,,0636,],,,0X39D1D,],,,0x41,],;,Ec_7_,:,Boolean,),{,},},Class,aA,:,c,{,},Class,_,:,M,{,},<EOF>''',
                101
            )
        )

    def test_1377(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k__{Constructor (_3:_41){}Val $2_P:String ;}Class a:_v4{}Class Ivj:nfq6{Val q,$_58_8:Array [Array [Array [Int ,012],0b11101],0X17_A];}Class _:__o{}Class a_:_Q3tj{}''',
                '''Class,k__,{,Constructor,(,_3,:,_41,),{,},Val,$2_P,:,String,;,},Class,a,:,_v4,{,},Class,Ivj,:,nfq6,{,Val,q,,,$_58_8,:,Array,[,Array,[,Array,[,Int,,,012,],,,0b11101,],,,0X17A,],;,},Class,_,:,__o,{,},Class,a_,:,_Q3tj,{,},<EOF>''',
                101
            )
        )

    def test_1378(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l3__{_g1(_,_:Array [Int ,0xE]){}Var _q:Float ;Constructor (gS__:Array [Array [Array [String ,0X25],0B101100],01];rVv_,_,_:L){} }''',
                '''Class,l3__,{,_g1,(,_,,,_,:,Array,[,Int,,,0xE,],),{,},Var,_q,:,Float,;,Constructor,(,gS__,:,Array,[,Array,[,Array,[,String,,,0X25,],,,0B101100,],,,01,],;,rVv_,,,_,,,_,:,L,),{,},},<EOF>''',
                101
            )
        )

    def test_1379(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __1{}Class P{Var S,e,_,_8:r_NJd__;}Class __{}Class v{Constructor (x,R,_:Array [Int ,0X39];_:y;_ew,_N:_){} }''',
                '''Class,__1,{,},Class,P,{,Var,S,,,e,,,_,,,_8,:,r_NJd__,;,},Class,__,{,},Class,v,{,Constructor,(,x,,,R,,,_,:,Array,[,Int,,,0X39,],;,_,:,y,;,_ew,,,_N,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1380(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:K{__(v,k,_,ea:Array [Boolean ,0b110110];Z,_9xf__,__9o4:Array [String ,0X45];_:Array [Array [Array [Boolean ,0b1],41],2_541]){} }''',
                '''Class,_,:,K,{,__,(,v,,,k,,,_,,,ea,:,Array,[,Boolean,,,0b110110,],;,Z,,,_9xf__,,,__9o4,:,Array,[,String,,,0X45,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,41,],,,2541,],),{,},},<EOF>''',
                101
            )
        )

    def test_1381(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __Cw:H__r0{Var _t_K2g,_d_,_z,_Zy,L:String ;Constructor (){} }Class _:_{}Class _I8c7:_{Destructor (){} }Class R:k{}''',
                '''Class,__Cw,:,H__r0,{,Var,_t_K2g,,,_d_,,,_z,,,_Zy,,,L,:,String,;,Constructor,(,),{,},},Class,_,:,_,{,},Class,_I8c7,:,_,{,Destructor,(,),{,},},Class,R,:,k,{,},<EOF>''',
                101
            )
        )

    def test_1382(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{_(i,_:Boolean ;_y:S;_,N41:Int ){Continue ;}u(_9W_YI,__36_,K:V3Ja;__,_0r:Int ;h_U,_:Int ;O:Boolean ){}Val $3,$W:String ;}''',
                '''Class,V,{,_,(,i,,,_,:,Boolean,;,_y,:,S,;,_,,,N41,:,Int,),{,Continue,;,},u,(,_9W_YI,,,__36_,,,K,:,V3Ja,;,__,,,_0r,:,Int,;,h_U,,,_,:,Int,;,O,:,Boolean,),{,},Val,$3,,,$W,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1383(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __s{___9(C1v,_:Array [Array [Array [Float ,0B1_0],0b1_1_0],0B1];_:_;_x5l_2:__;c_N,___:Q;_:Array [String ,0b10_0_1_0];__:Array [Array [Array [String ,0x5D],0xB],0X31]){} }Class _:V{Val ___:Float ;}Class J:c__jw__{}''',
                '''Class,__s,{,___9,(,C1v,,,_,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,0b110,],,,0B1,],;,_,:,_,;,_x5l_2,:,__,;,c_N,,,___,:,Q,;,_,:,Array,[,String,,,0b10010,],;,__,:,Array,[,Array,[,Array,[,String,,,0x5D,],,,0xB,],,,0X31,],),{,},},Class,_,:,V,{,Val,___,:,Float,;,},Class,J,:,c__jw__,{,},<EOF>''',
                101
            )
        )

    def test_1384(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L_:_{$_4I5_(_,_:String ;X,_:Unv;_,Y2:Boolean ;y,OQ0:Array [Array [Array [Float ,0x8],32],0xC]){Break ;} }''',
                '''Class,L_,:,_,{,$_4I5_,(,_,,,_,:,String,;,X,,,_,:,Unv,;,_,,,Y2,:,Boolean,;,y,,,OQ0,:,Array,[,Array,[,Array,[,Float,,,0x8,],,,32,],,,0xC,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1385(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{Val $b:Array [Array [Array [String ,074],0b101101],15];Val $_:Array [Int ,0b1];Destructor (){Break ;}Var _585:String ;}''',
                '''Class,Y,{,Val,$b,:,Array,[,Array,[,Array,[,String,,,074,],,,0b101101,],,,15,],;,Val,$_,:,Array,[,Int,,,0b1,],;,Destructor,(,),{,Break,;,},Var,_585,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1386(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{Constructor (_,__:String ;_:Array [Array [Array [Boolean ,0X59],033_3],9];I76m,_,Y,a,__:Array [Array [Array [Float ,3_54_8_5],66],021];_,_,B,zr,N:P){Val Y,_,_A,_1F_,__:_75;Return ;Break ;}Constructor (X,j,_:b_3;_w2,___b_:_0;u:_){}Destructor (){ {{Var _:Z;} }} }Class A:_3{}''',
                '''Class,O,{,Constructor,(,_,,,__,:,String,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0X59,],,,0333,],,,9,],;,I76m,,,_,,,Y,,,a,,,__,:,Array,[,Array,[,Array,[,Float,,,35485,],,,66,],,,021,],;,_,,,_,,,B,,,zr,,,N,:,P,),{,Val,Y,,,_,,,_A,,,_1F_,,,__,:,_75,;,Return,;,Break,;,},Constructor,(,X,,,j,,,_,:,b_3,;,_w2,,,___b_,:,_0,;,u,:,_,),{,},Destructor,(,),{,{,{,Var,_,:,Z,;,},},},},Class,A,:,_3,{,},<EOF>''',
                101
            )
        )

    def test_1387(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:b8_{Val $80,$8A2_:Array [Int ,0125];Val $270_48_,$x,_:Float ;Var $_:q_;}Class _zq6:_pY{Val $8,$s1F,u,$_,$_:_0;}''',
                '''Class,__,:,b8_,{,Val,$80,,,$8A2_,:,Array,[,Int,,,0125,],;,Val,$270_48_,,,$x,,,_,:,Float,;,Var,$_,:,q_,;,},Class,_zq6,:,_pY,{,Val,$8,,,$s1F,,,u,,,$_,,,$_,:,_0,;,},<EOF>''',
                101
            )
        )

    def test_1388(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T_{}Class _49:ON{}Class n5{Var $_:Float ;_(o1P2,_3_h,__L,_:_6){}Var _C:String ;}Class YT:E{}Class A9{}Class a{}''',
                '''Class,T_,{,},Class,_49,:,ON,{,},Class,n5,{,Var,$_,:,Float,;,_,(,o1P2,,,_3_h,,,__L,,,_,:,_6,),{,},Var,_C,:,String,;,},Class,YT,:,E,{,},Class,A9,{,},Class,a,{,},<EOF>''',
                101
            )
        )

    def test_1389(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (Yz__,__:Array [String ,97]){}Val t_veF_:String ;$r_(_:String ;_9___,r:Float ;__,_:D4;m,_w,Y,Pm:Array [Int ,0x29_F]){}Var __:Boolean ;}Class _:MM{}''',
                '''Class,_,{,Constructor,(,Yz__,,,__,:,Array,[,String,,,97,],),{,},Val,t_veF_,:,String,;,$r_,(,_,:,String,;,_9___,,,r,:,Float,;,__,,,_,:,D4,;,m,,,_w,,,Y,,,Pm,:,Array,[,Int,,,0x29F,],),{,},Var,__,:,Boolean,;,},Class,_,:,MM,{,},<EOF>''',
                101
            )
        )

    def test_1390(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z17:W{Constructor (E:_39;_h:Int ;_n0:Float ;_,__,_,_F:Array [String ,0B1]){}Var $5_9:Array [Boolean ,0b1001000];}''',
                '''Class,Z17,:,W,{,Constructor,(,E,:,_39,;,_h,:,Int,;,_n0,:,Float,;,_,,,__,,,_,,,_F,:,Array,[,String,,,0B1,],),{,},Var,$5_9,:,Array,[,Boolean,,,0b1001000,],;,},<EOF>''',
                101
            )
        )

    def test_1391(self):
        self.assertTrue(
            TestLexer.test(
                '''Class KL_64_{Val _,bA:Array [Float ,55];Constructor (__N6_:Int ){}Var $_,$2J,$3:_X_q9bvs__;yk7M(v,P:Int ){} }Class _kqK{Destructor (){}__7(G,s4,_4:Array [String ,03];__sv6_0:Array [Boolean ,0424_4];_,H__,_,n___Iq3v,I____J,t,_t,__:String ;mc,l_,__74W4,K_6oGkS:String ){} }Class s_{}Class _{}''',
                '''Class,KL_64_,{,Val,_,,,bA,:,Array,[,Float,,,55,],;,Constructor,(,__N6_,:,Int,),{,},Var,$_,,,$2J,,,$3,:,_X_q9bvs__,;,yk7M,(,v,,,P,:,Int,),{,},},Class,_kqK,{,Destructor,(,),{,},__7,(,G,,,s4,,,_4,:,Array,[,String,,,03,],;,__sv6_0,:,Array,[,Boolean,,,04244,],;,_,,,H__,,,_,,,n___Iq3v,,,I____J,,,t,,,_t,,,__,:,String,;,mc,,,l_,,,__74W4,,,K_6oGkS,:,String,),{,},},Class,s_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1392(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ll:u{Val _:Int ;_(I:O;p_3S,__x,___,_M16_,I0i:__;_r_,_g___,u_w,__,J5_:String ){}$X(_,_:Boolean ){Break ;}Var l_,$_,T2C:_;Var _:String ;}''',
                '''Class,Ll,:,u,{,Val,_,:,Int,;,_,(,I,:,O,;,p_3S,,,__x,,,___,,,_M16_,,,I0i,:,__,;,_r_,,,_g___,,,u_w,,,__,,,J5_,:,String,),{,},$X,(,_,,,_,:,Boolean,),{,Break,;,},Var,l_,,,$_,,,T2C,:,_,;,Var,_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1393(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{V(_0_:Ta_;_,_:Array [Boolean ,0x7];w:_;_,_,b_:String ){}Val $L,$1,$g3,$q_6,$1_7:Boolean ;Val _,$Ac:Array [Array [Boolean ,0143],0X50];}''',
                '''Class,_,{,V,(,_0_,:,Ta_,;,_,,,_,:,Array,[,Boolean,,,0x7,],;,w,:,_,;,_,,,_,,,b_,:,String,),{,},Val,$L,,,$1,,,$g3,,,$q_6,,,$1_7,:,Boolean,;,Val,_,,,$Ac,:,Array,[,Array,[,Boolean,,,0143,],,,0X50,],;,},<EOF>''',
                101
            )
        )

    def test_1394(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{}Class Y15C:_7b_5{G(){ {} }$5(B18:_g){}Constructor (_i,_U9:_56LW__;_y:Array [Array [String ,0xF],7];__:Int ;_F8,N:Array [Array [Float ,0X26],0b11000];H:G_;_0_,N:sf){} }Class _:p{}''',
                '''Class,F,{,},Class,Y15C,:,_7b_5,{,G,(,),{,{,},},$5,(,B18,:,_g,),{,},Constructor,(,_i,,,_U9,:,_56LW__,;,_y,:,Array,[,Array,[,String,,,0xF,],,,7,],;,__,:,Int,;,_F8,,,N,:,Array,[,Array,[,Float,,,0X26,],,,0b11000,],;,H,:,G_,;,_0_,,,N,:,sf,),{,},},Class,_,:,p,{,},<EOF>''',
                101
            )
        )

    def test_1395(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O:r{$07(){} }Class R{Constructor (){} }Class _d7:_{Var _E,$U:Boolean ;Var $4,$qW,$_,$___xM:w;}Class s:_{}Class _:G973{Constructor (w_6W1:String ;_,__,f,J:Boolean ;f0,_,PK5:Array [Array [String ,0x32],441]){}Val U,_,_E:String ;}Class z4{}Class S:_{}''',
                '''Class,O,:,r,{,$07,(,),{,},},Class,R,{,Constructor,(,),{,},},Class,_d7,:,_,{,Var,_E,,,$U,:,Boolean,;,Var,$4,,,$qW,,,$_,,,$___xM,:,w,;,},Class,s,:,_,{,},Class,_,:,G973,{,Constructor,(,w_6W1,:,String,;,_,,,__,,,f,,,J,:,Boolean,;,f0,,,_,,,PK5,:,Array,[,Array,[,String,,,0x32,],,,441,],),{,},Val,U,,,_,,,_E,:,String,;,},Class,z4,{,},Class,S,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1396(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_3{Constructor (s_,N4:Array [Array [Array [Boolean ,5_2184],0100],1_423];h5:Boolean ){Continue ;}Var $_,$_j:Float ;}Class A7:_{Var _H3_:Array [Array [String ,052],06];}Class Ru:_9Do1O{Val $k____,$F,_8t,nM_,$_:Array [Float ,5_99];}''',
                '''Class,N,:,_3,{,Constructor,(,s_,,,N4,:,Array,[,Array,[,Array,[,Boolean,,,52184,],,,0100,],,,1423,],;,h5,:,Boolean,),{,Continue,;,},Var,$_,,,$_j,:,Float,;,},Class,A7,:,_,{,Var,_H3_,:,Array,[,Array,[,String,,,052,],,,06,],;,},Class,Ru,:,_9Do1O,{,Val,$k____,,,$F,,,_8t,,,nM_,,,$_,:,Array,[,Float,,,599,],;,},<EOF>''',
                101
            )
        )

    def test_1397(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yK2:G0{}Class NI:_{$r_(){}Constructor (_:String ){ {} }lV(l,_:Array [Float ,0X45];_:Float ){}Destructor (){} }Class _A{}''',
                '''Class,yK2,:,G0,{,},Class,NI,:,_,{,$r_,(,),{,},Constructor,(,_,:,String,),{,{,},},lV,(,l,,,_,:,Array,[,Float,,,0X45,],;,_,:,Float,),{,},Destructor,(,),{,},},Class,_A,{,},<EOF>''',
                101
            )
        )

    def test_1398(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x15l:M{Val $9g:Array [Array [Array [Float ,0b110100],53],53];}Class _w:___9_8V_{$04(_:__U){Continue ;Return ;Return ;} }''',
                '''Class,x15l,:,M,{,Val,$9g,:,Array,[,Array,[,Array,[,Float,,,0b110100,],,,53,],,,53,],;,},Class,_w,:,___9_8V_,{,$04,(,_,:,__U,),{,Continue,;,Return,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1399(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:H{}Class l_{Val $_:_;Constructor (M,_k,o_:k_3;I,_,G,hm_31_a:Array [Float ,061]){Continue ;} }Class _4{}''',
                '''Class,e,:,H,{,},Class,l_,{,Val,$_,:,_,;,Constructor,(,M,,,_k,,,o_,:,k_3,;,I,,,_,,,G,,,hm_31_a,:,Array,[,Float,,,061,],),{,Continue,;,},},Class,_4,{,},<EOF>''',
                101
            )
        )

    def test_1400(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W9{Destructor (){} }Class __2_n___:P8M{Val _:Array [Array [Array [Array [Int ,0B11_0_0_1],0133],0X5],0133];Constructor (){} }''',
                '''Class,_W9,{,Destructor,(,),{,},},Class,__2_n___,:,P8M,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B11001,],,,0133,],,,0X5,],,,0133,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1401(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V1GX:B{Destructor (){}Constructor (){} }Class O{}Class _:c_{}Class O{Val $_5,M:Array [Array [Int ,0B11111],0b1];}''',
                '''Class,V1GX,:,B,{,Destructor,(,),{,},Constructor,(,),{,},},Class,O,{,},Class,_,:,c_,{,},Class,O,{,Val,$_5,,,M,:,Array,[,Array,[,Int,,,0B11111,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_1402(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$_U(__:F_6C;j:Float ;_,_n,_,G:__8;M,Q__J:Array [String ,0111];_,_:Array [Array [Boolean ,0X2E],06];_:Boolean ){Break ;} }Class _:L{}''',
                '''Class,_,{,$_U,(,__,:,F_6C,;,j,:,Float,;,_,,,_n,,,_,,,G,:,__8,;,M,,,Q__J,:,Array,[,String,,,0111,],;,_,,,_,:,Array,[,Array,[,Boolean,,,0X2E,],,,06,],;,_,:,Boolean,),{,Break,;,},},Class,_,:,L,{,},<EOF>''',
                101
            )
        )

    def test_1403(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:_C{}Class _:_{Constructor (U,o3vM,_6:Array [Boolean ,0B1_0];KEw_,_e,z,s__,U,T,__4,g,H,Z__:_;_:_){} }''',
                '''Class,_0,:,_C,{,},Class,_,:,_,{,Constructor,(,U,,,o3vM,,,_6,:,Array,[,Boolean,,,0B10,],;,KEw_,,,_e,,,z,,,s__,,,U,,,T,,,__4,,,g,,,H,,,Z__,:,_,;,_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1404(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:V{}Class _:_Q_{Constructor (_,g,l:Int ;_0,_5:Array [Float ,0X3E];__:_;p3:Array [Array [Array [Float ,3],88],0x1];J,_,J:_L;_:Float ){ {} }}''',
                '''Class,_,:,V,{,},Class,_,:,_Q_,{,Constructor,(,_,,,g,,,l,:,Int,;,_0,,,_5,:,Array,[,Float,,,0X3E,],;,__,:,_,;,p3,:,Array,[,Array,[,Array,[,Float,,,3,],,,88,],,,0x1,],;,J,,,_,,,J,:,_L,;,_,:,Float,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1405(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k__7{_MC(J,i3___p:__;_5O,__:_;d,_:mHv94;y:Array [Array [String ,0B1],0b1];s,_178:Array [Int ,053]){Return ;} }''',
                '''Class,k__7,{,_MC,(,J,,,i3___p,:,__,;,_5O,,,__,:,_,;,d,,,_,:,mHv94,;,y,:,Array,[,Array,[,String,,,0B1,],,,0b1,],;,s,,,_178,:,Array,[,Int,,,053,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1406(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h3:a{Constructor (_:Array [Int ,747]){}Val $R,_7,_,Z2,$6X:String ;Destructor (){}Val $_:eJ5;_01(){} }Class _{}''',
                '''Class,h3,:,a,{,Constructor,(,_,:,Array,[,Int,,,747,],),{,},Val,$R,,,_7,,,_,,,Z2,,,$6X,:,String,;,Destructor,(,),{,},Val,$_,:,eJ5,;,_01,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1407(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_{Constructor (_:Boolean ){}$O(){}Constructor (__W7:Int ){}$Js(v:SVd;_:Float ;___:Array [String ,6_730_4]){Continue ;} }''',
                '''Class,v_,{,Constructor,(,_,:,Boolean,),{,},$O,(,),{,},Constructor,(,__W7,:,Int,),{,},$Js,(,v,:,SVd,;,_,:,Float,;,___,:,Array,[,String,,,67304,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1408(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _XI:Q6P{Constructor (_6:Array [Array [Array [Array [Boolean ,0xB],0b1100],7_59],92_4];h4__,N_:Array [Array [Float ,48],48];_:Array [String ,6];Q,z46:Array [String ,0X2];tc:Array [Int ,0X13]){} }''',
                '''Class,_XI,:,Q6P,{,Constructor,(,_6,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xB,],,,0b1100,],,,759,],,,924,],;,h4__,,,N_,:,Array,[,Array,[,Float,,,48,],,,48,],;,_,:,Array,[,String,,,6,],;,Q,,,z46,:,Array,[,String,,,0X2,],;,tc,:,Array,[,Int,,,0X13,],),{,},},<EOF>''',
                101
            )
        )

    def test_1409(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E6:_{}Class _{Destructor (){Break ;{} }}Class _o6:__{Val $_:Array [Array [Int ,0x2],0X57];Constructor (_h:Array [String ,0x2];o:Array [Array [Boolean ,034],0B1]){} }Class _BS{}Class f__:_I{Val _3j,$_X,$5,_z,_W,t:u6;}Class _4d:R{}Class q{}Class Z_q77{}Class I_{$_(){} }''',
                '''Class,E6,:,_,{,},Class,_,{,Destructor,(,),{,Break,;,{,},},},Class,_o6,:,__,{,Val,$_,:,Array,[,Array,[,Int,,,0x2,],,,0X57,],;,Constructor,(,_h,:,Array,[,String,,,0x2,],;,o,:,Array,[,Array,[,Boolean,,,034,],,,0B1,],),{,},},Class,_BS,{,},Class,f__,:,_I,{,Val,_3j,,,$_X,,,$5,,,_z,,,_W,,,t,:,u6,;,},Class,_4d,:,R,{,},Class,q,{,},Class,Z_q77,{,},Class,I_,{,$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1410(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:q_7R{C(_,_:Array [Array [Boolean ,17],17];_W,q_J,__O7:Int ;__:Float ;_:DRt){} }Class _128:_{Constructor (){}Constructor (){} }''',
                '''Class,k,:,q_7R,{,C,(,_,,,_,:,Array,[,Array,[,Boolean,,,17,],,,17,],;,_W,,,q_J,,,__O7,:,Int,;,__,:,Float,;,_,:,DRt,),{,},},Class,_128,:,_,{,Constructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1411(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j:__{APMb(I:Array [Int ,0X6D_E_5_F9_6];E_:Array [Boolean ,39];P,H:Array [Array [String ,0B1],0b101_0]){Return ;}L(YD7___,_,__2U,L:Float ){Return ;}Val V_,$9S_:Array [String ,0X6_D8];}''',
                '''Class,_j,:,__,{,APMb,(,I,:,Array,[,Int,,,0X6DE5F96,],;,E_,:,Array,[,Boolean,,,39,],;,P,,,H,:,Array,[,Array,[,String,,,0B1,],,,0b1010,],),{,Return,;,},L,(,YD7___,,,_,,,__2U,,,L,:,Float,),{,Return,;,},Val,V_,,,$9S_,:,Array,[,String,,,0X6D8,],;,},<EOF>''',
                101
            )
        )

    def test_1412(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V__mx:_8{}Class _:j__{}Class l:r4A{Destructor (){} }Class EAX:H3{Val c,__:Array [Array [Array [Array [Array [String ,0x13],0B100101],0x4],0X33],82];Val $_e:Float ;}Class _:_{}''',
                '''Class,_V__mx,:,_8,{,},Class,_,:,j__,{,},Class,l,:,r4A,{,Destructor,(,),{,},},Class,EAX,:,H3,{,Val,c,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x13,],,,0B100101,],,,0x4,],,,0X33,],,,82,],;,Val,$_e,:,Float,;,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1413(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Rc_2:c8{Var _:a_;Constructor (wO_:Boolean ;_,tT,j__g:Array [Boolean ,0x7];_1,SQ:Boolean ;d4:Boolean ){} }''',
                '''Class,Rc_2,:,c8,{,Var,_,:,a_,;,Constructor,(,wO_,:,Boolean,;,_,,,tT,,,j__g,:,Array,[,Boolean,,,0x7,],;,_1,,,SQ,:,Boolean,;,d4,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1414(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{Val $_,$___,_7,$2_:Array [Float ,036];}Class _:_{}Class u{$M0V_(_:S1l0;_1_,_Q24:Array [Boolean ,8]){} }''',
                '''Class,K,{,Val,$_,,,$___,,,_7,,,$2_,:,Array,[,Float,,,036,],;,},Class,_,:,_,{,},Class,u,{,$M0V_,(,_,:,S1l0,;,_1_,,,_Q24,:,Array,[,Boolean,,,8,],),{,},},<EOF>''',
                101
            )
        )

    def test_1415(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gi_:i_{Val $_,$K,$_,$tLIR,_:Array [Array [Int ,86],03];$eI(_,spl,_:_;_,P,Q,K,_k:Array [String ,0b1];L3:V){Return ;}Var j7:g_T__;Val v,V:Boolean ;Constructor (){} }Class _F_rrgI:b9_{}''',
                '''Class,gi_,:,i_,{,Val,$_,,,$K,,,$_,,,$tLIR,,,_,:,Array,[,Array,[,Int,,,86,],,,03,],;,$eI,(,_,,,spl,,,_,:,_,;,_,,,P,,,Q,,,K,,,_k,:,Array,[,String,,,0b1,],;,L3,:,V,),{,Return,;,},Var,j7,:,g_T__,;,Val,v,,,V,:,Boolean,;,Constructor,(,),{,},},Class,_F_rrgI,:,b9_,{,},<EOF>''',
                101
            )
        )

    def test_1416(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_6_(_:_){} }Class _:G{Var s6x,b:Array [Array [Array [Array [String ,057],0215],0b101111],2];}Class X:__2Q{$X(_:_){} }Class _:_{Destructor (){} }''',
                '''Class,_,{,_6_,(,_,:,_,),{,},},Class,_,:,G,{,Var,s6x,,,b,:,Array,[,Array,[,Array,[,Array,[,String,,,057,],,,0215,],,,0b101111,],,,2,],;,},Class,X,:,__2Q,{,$X,(,_,:,_,),{,},},Class,_,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1417(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{Var _:lc;}Class _:q{}Class Z:_{}Class x_97Js:___3b_2Y{Destructor (){}Var $7K34,$_,__,$5:Array [Array [Array [Boolean ,053],060],060];}''',
                '''Class,F,{,Var,_,:,lc,;,},Class,_,:,q,{,},Class,Z,:,_,{,},Class,x_97Js,:,___3b_2Y,{,Destructor,(,),{,},Var,$7K34,,,$_,,,__,,,$5,:,Array,[,Array,[,Array,[,Boolean,,,053,],,,060,],,,060,],;,},<EOF>''',
                101
            )
        )

    def test_1418(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:_9{Destructor (){Continue ;Break ;} }Class _8{Val $_0g:Array [Boolean ,0X3_CB_F59];}Class _{}Class diP42:_{}''',
                '''Class,L,:,_9,{,Destructor,(,),{,Continue,;,Break,;,},},Class,_8,{,Val,$_0g,:,Array,[,Boolean,,,0X3CBF59,],;,},Class,_,{,},Class,diP42,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1419(self):
        self.assertTrue(
            TestLexer.test(
                '''Class bX3{Var Y:String ;$8(D,_:Boolean ;o,_:V7_f;g_7:Boolean ;_,_:Array [String ,0B10];_:String ){}Var _,w:p2;}Class k_:_3nj{}''',
                '''Class,bX3,{,Var,Y,:,String,;,$8,(,D,,,_,:,Boolean,;,o,,,_,:,V7_f,;,g_7,:,Boolean,;,_,,,_,:,Array,[,String,,,0B10,],;,_,:,String,),{,},Var,_,,,w,:,p2,;,},Class,k_,:,_3nj,{,},<EOF>''',
                101
            )
        )

    def test_1420(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{$6_(e:t8_;o_:B){}Var $8_2,_42,$3_,$08q,e,u,$H_4,$_,$P3:Array [String ,0x4C];Destructor (){} }Class m:_L{}Class W:__{}Class b{Var $c__,d,_,$o:Z1Q6_V;$_(){} }''',
                '''Class,Y,{,$6_,(,e,:,t8_,;,o_,:,B,),{,},Var,$8_2,,,_42,,,$3_,,,$08q,,,e,,,u,,,$H_4,,,$_,,,$P3,:,Array,[,String,,,0x4C,],;,Destructor,(,),{,},},Class,m,:,_L,{,},Class,W,:,__,{,},Class,b,{,Var,$c__,,,d,,,_,,,$o,:,Z1Q6_V,;,$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1421(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $q:Int ;}Class i7{Val $t,$xc,$t:Array [Array [Boolean ,0140],0xD_9];$4(__Q_37,_0,f,s,_19_B,____:v;_5:Float ){} }Class _7:W{Var $c603_,$qg_j:Array [Array [Array [Float ,0B1],0B1000100],0140];}''',
                '''Class,_,{,Var,$q,:,Int,;,},Class,i7,{,Val,$t,,,$xc,,,$t,:,Array,[,Array,[,Boolean,,,0140,],,,0xD9,],;,$4,(,__Q_37,,,_0,,,f,,,s,,,_19_B,,,____,:,v,;,_5,:,Float,),{,},},Class,_7,:,W,{,Var,$c603_,,,$qg_j,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0B1000100,],,,0140,],;,},<EOF>''',
                101
            )
        )

    def test_1422(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b{Constructor (_nBP_:Array [Array [Array [Array [Array [Array [Int ,0X3C],03_2],0XF2],11],055],11];c,j,_,o_R,v_,IQ_w81,_:Array [Array [Boolean ,0B10],0X3C];_0_W,z,_:Int ){Continue ;}Val $D,$4__09,$_f_,_:Array [Array [Int ,11],0x2E];}''',
                '''Class,b,{,Constructor,(,_nBP_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X3C,],,,032,],,,0XF2,],,,11,],,,055,],,,11,],;,c,,,j,,,_,,,o_R,,,v_,,,IQ_w81,,,_,:,Array,[,Array,[,Boolean,,,0B10,],,,0X3C,],;,_0_W,,,z,,,_,:,Int,),{,Continue,;,},Val,$D,,,$4__09,,,$_f_,,,_,:,Array,[,Array,[,Int,,,11,],,,0x2E,],;,},<EOF>''',
                101
            )
        )

    def test_1423(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Var e:Int ;u(){}$_nV(){}Constructor (S,_,K:Array [Int ,0x3];_E3,_53:Float ;e:Array [Boolean ,0B10_0];i:Array [Array [Array [Int ,44],0B1],01_565_0_2];J,x9Z,aT:_8f;H,U__,_,T_:Boolean ;___:_pX;Eit,X:Array [Boolean ,0B1]){ {} }}Class w:V{}''',
                '''Class,Q,{,Var,e,:,Int,;,u,(,),{,},$_nV,(,),{,},Constructor,(,S,,,_,,,K,:,Array,[,Int,,,0x3,],;,_E3,,,_53,:,Float,;,e,:,Array,[,Boolean,,,0B100,],;,i,:,Array,[,Array,[,Array,[,Int,,,44,],,,0B1,],,,0156502,],;,J,,,x9Z,,,aT,:,_8f,;,H,,,U__,,,_,,,T_,:,Boolean,;,___,:,_pX,;,Eit,,,X,:,Array,[,Boolean,,,0B1,],),{,{,},},},Class,w,:,V,{,},<EOF>''',
                101
            )
        )

    def test_1424(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z8:_{Val y:Array [Array [Float ,0XC],01_2];}Class _R{}Class _F{Val F,$B_,C:Array [Array [Array [Array [Boolean ,0x8_3],0137],0b1110],0b11];}''',
                '''Class,_Z8,:,_,{,Val,y,:,Array,[,Array,[,Float,,,0XC,],,,012,],;,},Class,_R,{,},Class,_F,{,Val,F,,,$B_,,,C,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x83,],,,0137,],,,0b1110,],,,0b11,],;,},<EOF>''',
                101
            )
        )

    def test_1425(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:_5{Destructor (){}Destructor (){}Val Q:Array [Array [Array [Boolean ,74],0b1],0b101111];}Class _{}Class _q:__{}Class __{Destructor (){}Destructor (){} }''',
                '''Class,y,:,_5,{,Destructor,(,),{,},Destructor,(,),{,},Val,Q,:,Array,[,Array,[,Array,[,Boolean,,,74,],,,0b1,],,,0b101111,],;,},Class,_,{,},Class,_q,:,__,{,},Class,__,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1426(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _q_:_{Destructor (){}Var $6:Array [Array [Array [Array [Float ,0b1],0B1],0x3C],72_08];Constructor (_T,D,_:P;Y:Array [Array [Boolean ,04],061];_,j:__;_5,e_8_8GOk,jD,_,_Y,_:N4;_,S,_:k4;i_,__9,_:Array [Array [String ,071],04]){}__P(){} }''',
                '''Class,_q_,:,_,{,Destructor,(,),{,},Var,$6,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0B1,],,,0x3C,],,,7208,],;,Constructor,(,_T,,,D,,,_,:,P,;,Y,:,Array,[,Array,[,Boolean,,,04,],,,061,],;,_,,,j,:,__,;,_5,,,e_8_8GOk,,,jD,,,_,,,_Y,,,_,:,N4,;,_,,,S,,,_,:,k4,;,i_,,,__9,,,_,:,Array,[,Array,[,String,,,071,],,,04,],),{,},__P,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1427(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:s_{Constructor (){Var _:Float ;}Destructor (){ {}Break ;Return ;}Constructor (o_,_:_;_:M;F,__,s_,__6:String ;w3:m;D:Array [String ,02]){} }Class Z:_{}''',
                '''Class,_,:,s_,{,Constructor,(,),{,Var,_,:,Float,;,},Destructor,(,),{,{,},Break,;,Return,;,},Constructor,(,o_,,,_,:,_,;,_,:,M,;,F,,,__,,,s_,,,__6,:,String,;,w3,:,m,;,D,:,Array,[,String,,,02,],),{,},},Class,Z,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1428(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z_{Var I8_2,$_,_2C,$f:J;$38(){} }Class l:t{}Class CE_{$_(M8__,z1,_h,f_:Float ;_,Ow__:Array [Float ,0141]){} }Class A{}''',
                '''Class,z_,{,Var,I8_2,,,$_,,,_2C,,,$f,:,J,;,$38,(,),{,},},Class,l,:,t,{,},Class,CE_,{,$_,(,M8__,,,z1,,,_h,,,f_,:,Float,;,_,,,Ow__,:,Array,[,Float,,,0141,],),{,},},Class,A,{,},<EOF>''',
                101
            )
        )

    def test_1429(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class s:__59{}Class _:H{Constructor (D__,__g,A,f_4_3,_3,__,__,_:String ){Break ;} }Class _f:S{Val $P:A;}''',
                '''Class,_,{,},Class,s,:,__59,{,},Class,_,:,H,{,Constructor,(,D__,,,__g,,,A,,,f_4_3,,,_3,,,__,,,__,,,_,:,String,),{,Break,;,},},Class,_f,:,S,{,Val,$P,:,A,;,},<EOF>''',
                101
            )
        )

    def test_1430(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P7{_(_,Z,j,a,jk:_){} }Class _:X021{_(_,__:Array [Array [Boolean ,97_9],65_4];_G,__:Array [Float ,0B10001]){}Constructor (){Self ._();}Var _8L8:O;}''',
                '''Class,P7,{,_,(,_,,,Z,,,j,,,a,,,jk,:,_,),{,},},Class,_,:,X021,{,_,(,_,,,__,:,Array,[,Array,[,Boolean,,,979,],,,654,],;,_G,,,__,:,Array,[,Float,,,0B10001,],),{,},Constructor,(,),{,Self,.,_,(,),;,},Var,_8L8,:,O,;,},<EOF>''',
                101
            )
        )

    def test_1431(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:qp{Constructor (_:__y;X_:Array [Array [Array [Array [Boolean ,0x7],1_2_689],062],88];P,J,z,_C:_R;o:o_;d:Array [Boolean ,88]){} }''',
                '''Class,_,:,qp,{,Constructor,(,_,:,__y,;,X_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x7,],,,12689,],,,062,],,,88,],;,P,,,J,,,z,,,_C,:,_R,;,o,:,o_,;,d,:,Array,[,Boolean,,,88,],),{,},},<EOF>''',
                101
            )
        )

    def test_1432(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Array [Array [Array [Int ,0x27],0b100011],0B1];_2_l1,__cub:Boolean ;u_,_,_:Array [Array [Boolean ,0X37_8],36]){Break ;}Destructor (){Return ;}Val u:Array [String ,0X6];Var $Y:Array [Int ,0x60];}''',
                '''Class,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,0x27,],,,0b100011,],,,0B1,],;,_2_l1,,,__cub,:,Boolean,;,u_,,,_,,,_,:,Array,[,Array,[,Boolean,,,0X378,],,,36,],),{,Break,;,},Destructor,(,),{,Return,;,},Val,u,:,Array,[,String,,,0X6,],;,Var,$Y,:,Array,[,Int,,,0x60,],;,},<EOF>''',
                101
            )
        )

    def test_1433(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u:M_{Constructor (){}$P___B_(){Break ;Break ;{} }}Class m:R{Val $Le_9,____5h,__,$n:Int ;Constructor (){}R_7(){} }Class y50__{Constructor (){} }Class i4:q{Constructor (_,oZ,_:String ;_:Boolean ){} }''',
                '''Class,u,:,M_,{,Constructor,(,),{,},$P___B_,(,),{,Break,;,Break,;,{,},},},Class,m,:,R,{,Val,$Le_9,,,____5h,,,__,,,$n,:,Int,;,Constructor,(,),{,},R_7,(,),{,},},Class,y50__,{,Constructor,(,),{,},},Class,i4,:,q,{,Constructor,(,_,,,oZ,,,_,:,String,;,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1434(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:__m_{Constructor (e,_,__D_7:q5;ln:_H){} }Class b3_:m6__{}Class l2:_0{}Class Vx:o{}Class _:i{_8(){}Var __,A,$6,U2,$__5:String ;Val $k__,$_,$8,$K6:Float ;}Class l:A4{}''',
                '''Class,d,:,__m_,{,Constructor,(,e,,,_,,,__D_7,:,q5,;,ln,:,_H,),{,},},Class,b3_,:,m6__,{,},Class,l2,:,_0,{,},Class,Vx,:,o,{,},Class,_,:,i,{,_8,(,),{,},Var,__,,,A,,,$6,,,U2,,,$__5,:,String,;,Val,$k__,,,$_,,,$8,,,$K6,:,Float,;,},Class,l,:,A4,{,},<EOF>''',
                101
            )
        )

    def test_1435(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g20_7{Destructor (){Break ;} }Class _5_{$_(g6s,_,__R____,_:Array [Int ,0b1];_:Array [Array [String ,0115],0B1101]){Var p:_;}Val H_:Array [Int ,05];Destructor (){} }''',
                '''Class,g20_7,{,Destructor,(,),{,Break,;,},},Class,_5_,{,$_,(,g6s,,,_,,,__R____,,,_,:,Array,[,Int,,,0b1,],;,_,:,Array,[,Array,[,String,,,0115,],,,0B1101,],),{,Var,p,:,_,;,},Val,H_,:,Array,[,Int,,,05,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1436(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _91:J{$0(Y73t__l:hgZ;C_H,s_6S_:Int ;W_4:_;__:Array [Array [Array [Float ,0B10],0b101010],0b101010]){ {} }Val _R9A:Array [String ,0b101010];X2(h3_H:Boolean ;b,e9:Int ){ {}Self ._().__().k();Return ;} }''',
                '''Class,_91,:,J,{,$0,(,Y73t__l,:,hgZ,;,C_H,,,s_6S_,:,Int,;,W_4,:,_,;,__,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,0b101010,],,,0b101010,],),{,{,},},Val,_R9A,:,Array,[,String,,,0b101010,],;,X2,(,h3_H,:,Boolean,;,b,,,e9,:,Int,),{,{,},Self,.,_,(,),.,__,(,),.,k,(,),;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1437(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7_:d{}Class _e{Destructor (){} }Class Z{Val $J,$Y:Array [Array [String ,05],0B10000];}Class i4:I0V{}Class _E{}Class _2{Val $U:Float ;}''',
                '''Class,_7_,:,d,{,},Class,_e,{,Destructor,(,),{,},},Class,Z,{,Val,$J,,,$Y,:,Array,[,Array,[,String,,,05,],,,0B10000,],;,},Class,i4,:,I0V,{,},Class,_E,{,},Class,_2,{,Val,$U,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1438(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2j{Destructor (){Var i:Array [Array [Array [Array [Array [Boolean ,7_9],0B100001],03],067],0b1];}Constructor (l,r,X_4_,__:String ){Break ;Continue ;} }''',
                '''Class,_2j,{,Destructor,(,),{,Var,i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,79,],,,0B100001,],,,03,],,,067,],,,0b1,],;,},Constructor,(,l,,,r,,,X_4_,,,__,:,String,),{,Break,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1439(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_____{Val _k_7,_6,e,$6_,x:o;}Class _{Constructor (y:C;E_6,s,d,___0Y,_,_:Array [Array [Boolean ,035],035];_,d,S_:r_){} }Class _6_3{$I(K:Array [Array [Array [String ,0X12],9],0x12];_,__:Array [Float ,0X12];__,_Z_:_8;h:_;_EFzh_Z,__:Float ;_M_ON,w:Array [Int ,88]){} }''',
                '''Class,d_____,{,Val,_k_7,,,_6,,,e,,,$6_,,,x,:,o,;,},Class,_,{,Constructor,(,y,:,C,;,E_6,,,s,,,d,,,___0Y,,,_,,,_,:,Array,[,Array,[,Boolean,,,035,],,,035,],;,_,,,d,,,S_,:,r_,),{,},},Class,_6_3,{,$I,(,K,:,Array,[,Array,[,Array,[,String,,,0X12,],,,9,],,,0x12,],;,_,,,__,:,Array,[,Float,,,0X12,],;,__,,,_Z_,:,_8,;,h,:,_,;,_EFzh_Z,,,__,:,Float,;,_M_ON,,,w,:,Array,[,Int,,,88,],),{,},},<EOF>''',
                101
            )
        )

    def test_1440(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{r(Gj_:Int ;_:F___2;e:Float ){Return ;} }Class c{Var $_,$_:Array [Array [String ,0XD],0x7C];Var N_9,__:_;}Class I{}Class _:O4{}Class F:__19{}Class t_:_9{}Class _U{}Class _:n_7{}''',
                '''Class,_,{,},Class,_,{,r,(,Gj_,:,Int,;,_,:,F___2,;,e,:,Float,),{,Return,;,},},Class,c,{,Var,$_,,,$_,:,Array,[,Array,[,String,,,0XD,],,,0x7C,],;,Var,N_9,,,__,:,_,;,},Class,I,{,},Class,_,:,O4,{,},Class,F,:,__19,{,},Class,t_,:,_9,{,},Class,_U,{,},Class,_,:,n_7,{,},<EOF>''',
                101
            )
        )

    def test_1441(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p:V{Constructor (cy6,X,_,_:_;__:Float ){Var _:_;} }Class s{}Class S{Destructor (){Continue ;Continue ;Break ;} }''',
                '''Class,p,:,V,{,Constructor,(,cy6,,,X,,,_,,,_,:,_,;,__,:,Float,),{,Var,_,:,_,;,},},Class,s,{,},Class,S,{,Destructor,(,),{,Continue,;,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1442(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5:Q6{}Class _{Val _,$3_,$uvQ,R,$F289:Array [Boolean ,0x1B];Var $o_:Array [Array [Boolean ,0b1],0X83_6];}''',
                '''Class,_5,:,Q6,{,},Class,_,{,Val,_,,,$3_,,,$uvQ,,,R,,,$F289,:,Array,[,Boolean,,,0x1B,],;,Var,$o_,:,Array,[,Array,[,Boolean,,,0b1,],,,0X836,],;,},<EOF>''',
                101
            )
        )

    def test_1443(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Destructor (){}Destructor (){Break ;Val Yk:s;}Destructor (){Break ;}Constructor (){Return ;}Val $Q:Array [Boolean ,01_7_3];}Class n{Destructor (){} }''',
                '''Class,M,{,Destructor,(,),{,},Destructor,(,),{,Break,;,Val,Yk,:,s,;,},Destructor,(,),{,Break,;,},Constructor,(,),{,Return,;,},Val,$Q,:,Array,[,Boolean,,,0173,],;,},Class,n,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1444(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i:t{C(r,K,m_:Array [Float ,0xB_77];_,__:Array [Int ,07]){}Constructor (k_4z:Array [Array [Array [Array [Array [Array [String ,0103],0B1],04_36],7_3682],0103],0X2];Z629__T68,So:Array [Array [Int ,0103],0b1];_6_,_W4_W:Float ;_:_F;J0C:_;j_,o3,_:Array [Boolean ,5]){ {Var p,_:Array [Float ,5];} }}''',
                '''Class,i,:,t,{,C,(,r,,,K,,,m_,:,Array,[,Float,,,0xB77,],;,_,,,__,:,Array,[,Int,,,07,],),{,},Constructor,(,k_4z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0103,],,,0B1,],,,0436,],,,73682,],,,0103,],,,0X2,],;,Z629__T68,,,So,:,Array,[,Array,[,Int,,,0103,],,,0b1,],;,_6_,,,_W4_W,:,Float,;,_,:,_F,;,J0C,:,_,;,j_,,,o3,,,_,:,Array,[,Boolean,,,5,],),{,{,Var,p,,,_,:,Array,[,Float,,,5,],;,},},},<EOF>''',
                101
            )
        )

    def test_1445(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (h,Y,K,W29:Array [Array [Array [Array [Int ,81],0b1],052],9];Y8:Array [Int ,0b1_11];J:_;_,L:_0;B,__:String ){Break ;{}Break ;}Var $T,_1A:Int ;}''',
                '''Class,_,{,Constructor,(,h,,,Y,,,K,,,W29,:,Array,[,Array,[,Array,[,Array,[,Int,,,81,],,,0b1,],,,052,],,,9,],;,Y8,:,Array,[,Int,,,0b111,],;,J,:,_,;,_,,,L,:,_0,;,B,,,__,:,String,),{,Break,;,{,},Break,;,},Var,$T,,,_1A,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1446(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W{D_0_(){Val C:Array [Array [String ,93],7_3];} }Class _P6:iV{hm(){} }Class jk_:V{}Class q___:__{}Class __o:_{Destructor (){}Val $2X:Boolean ;Var b:Array [Array [Boolean ,0xF],056];}''',
                '''Class,W,{,D_0_,(,),{,Val,C,:,Array,[,Array,[,String,,,93,],,,73,],;,},},Class,_P6,:,iV,{,hm,(,),{,},},Class,jk_,:,V,{,},Class,q___,:,__,{,},Class,__o,:,_,{,Destructor,(,),{,},Val,$2X,:,Boolean,;,Var,b,:,Array,[,Array,[,Boolean,,,0xF,],,,056,],;,},<EOF>''',
                101
            )
        )

    def test_1447(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:O2{_(_q:__4R;f,_5,H:Array [Array [Array [Array [Array [Array [String ,0b10],0b101110],0112],75],0B101],074_1]){ {} }Constructor (){}Constructor (z1C:Array [String ,0b101110];_1,U:Array [Boolean ,75];D261p86,h8_,Q7,_:Array [Array [Array [Boolean ,175],02],0x1]){}Constructor (){ {New _().z()._B7_();} }}''',
                '''Class,_,:,O2,{,_,(,_q,:,__4R,;,f,,,_5,,,H,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b10,],,,0b101110,],,,0112,],,,75,],,,0B101,],,,0741,],),{,{,},},Constructor,(,),{,},Constructor,(,z1C,:,Array,[,String,,,0b101110,],;,_1,,,U,:,Array,[,Boolean,,,75,],;,D261p86,,,h8_,,,Q7,,,_,:,Array,[,Array,[,Array,[,Boolean,,,175,],,,02,],,,0x1,],),{,},Constructor,(,),{,{,New,_,(,),.,z,(,),.,_B7_,(,),;,},},},<EOF>''',
                101
            )
        )

    def test_1448(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,__:Array [Float ,0112];_,pV_6_,w,yKQ:Array [Int ,0b1_11];ba:Array [Array [Boolean ,0b1],0XC];D,__2,V,_,f:Array [Float ,0112];_2_:Array [Float ,0XC]){} }''',
                '''Class,_,{,Constructor,(,_,,,__,:,Array,[,Float,,,0112,],;,_,,,pV_6_,,,w,,,yKQ,:,Array,[,Int,,,0b111,],;,ba,:,Array,[,Array,[,Boolean,,,0b1,],,,0XC,],;,D,,,__2,,,V,,,_,,,f,:,Array,[,Float,,,0112,],;,_2_,:,Array,[,Float,,,0XC,],),{,},},<EOF>''',
                101
            )
        )

    def test_1449(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u_9V:l{}Class _{Var $66,_,$c:Boolean ;Var _,H,$_Q:Array [Float ,0X16];Destructor (){}$SM(Y1,_4bL:Array [Array [Array [Array [String ,7],0b101100],03],0b1]){} }''',
                '''Class,u_9V,:,l,{,},Class,_,{,Var,$66,,,_,,,$c,:,Boolean,;,Var,_,,,H,,,$_Q,:,Array,[,Float,,,0X16,],;,Destructor,(,),{,},$SM,(,Y1,,,_4bL,:,Array,[,Array,[,Array,[,Array,[,String,,,7,],,,0b101100,],,,03,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1450(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _H{Destructor (){}Val $6,$_o_,$_,___E_:Array [Array [String ,014],0x6];Var X:String ;Var L,T:Array [Int ,0x56];}''',
                '''Class,_H,{,Destructor,(,),{,},Val,$6,,,$_o_,,,$_,,,___E_,:,Array,[,Array,[,String,,,014,],,,0x6,],;,Var,X,:,String,;,Var,L,,,T,:,Array,[,Int,,,0x56,],;,},<EOF>''',
                101
            )
        )

    def test_1451(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class X3:__{Constructor (__:Array [Float ,5_70]){}$_(_9:_;_h,_:String ;v:String ;__05,_:Float ){} }Class A{Constructor (){}Destructor (){} }Class _R_n:_{Constructor (_:Array [Array [Array [Int ,0B1000000],23],037];_0:Array [Boolean ,23];_,z6,Da9,_2:Int ;S_:Array [Array [Float ,32],23];_:_;_x8_,q8:Array [Float ,23];_:Array [Int ,23];_:Array [String ,0B1_1]){} }''',
                '''Class,_,{,},Class,X3,:,__,{,Constructor,(,__,:,Array,[,Float,,,570,],),{,},$_,(,_9,:,_,;,_h,,,_,:,String,;,v,:,String,;,__05,,,_,:,Float,),{,},},Class,A,{,Constructor,(,),{,},Destructor,(,),{,},},Class,_R_n,:,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,0B1000000,],,,23,],,,037,],;,_0,:,Array,[,Boolean,,,23,],;,_,,,z6,,,Da9,,,_2,:,Int,;,S_,:,Array,[,Array,[,Float,,,32,],,,23,],;,_,:,_,;,_x8_,,,q8,:,Array,[,Float,,,23,],;,_,:,Array,[,Int,,,23,],;,_,:,Array,[,String,,,0B11,],),{,},},<EOF>''',
                101
            )
        )

    def test_1452(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Uc{}Class _Ab_:v6_7_{Var $__:Array [Array [Boolean ,0x48],8];}Class __y{}Class __{Var lAr,$5,K,$3,$_w,$C,$4_,$3M8,_V9__:Array [Int ,1_35_6];}''',
                '''Class,Uc,{,},Class,_Ab_,:,v6_7_,{,Var,$__,:,Array,[,Array,[,Boolean,,,0x48,],,,8,],;,},Class,__y,{,},Class,__,{,Var,lAr,,,$5,,,K,,,$3,,,$_w,,,$C,,,$4_,,,$3M8,,,_V9__,:,Array,[,Int,,,1356,],;,},<EOF>''',
                101
            )
        )

    def test_1453(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V:_{Val $p__:U_;}Class ____{}Class N154Q5:bP{Constructor (wH9:Boolean ;t,E83s:String ;N,_O28O_8X1:G){} }''',
                '''Class,_V,:,_,{,Val,$p__,:,U_,;,},Class,____,{,},Class,N154Q5,:,bP,{,Constructor,(,wH9,:,Boolean,;,t,,,E83s,:,String,;,N,,,_O28O_8X1,:,G,),{,},},<EOF>''',
                101
            )
        )

    def test_1454(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{Constructor (d_B1:Array [Array [Array [String ,0B10010_11],05_4],073];_:Int ;J_0:Array [Array [Array [Int ,0B1],0b100001],04]){} }''',
                '''Class,B,{,Constructor,(,d_B1,:,Array,[,Array,[,Array,[,String,,,0B1001011,],,,054,],,,073,],;,_,:,Int,;,J_0,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,0b100001,],,,04,],),{,},},<EOF>''',
                101
            )
        )

    def test_1455(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6X2{}Class __:j_{}Class _7{Constructor (){}Var b,$46_:Array [Array [Array [Array [Int ,1_43],27_8],9],0b1011110];Destructor (){} }''',
                '''Class,_6X2,{,},Class,__,:,j_,{,},Class,_7,{,Constructor,(,),{,},Var,b,,,$46_,:,Array,[,Array,[,Array,[,Array,[,Int,,,143,],,,278,],,,9,],,,0b1011110,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1456(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Var rP,_3:Array [Float ,0b1];iO5(_,_2d_0_47C,t,_,_:__;_,d_:Float ){} }Class _:U22S_{}Class _D:o_0{Val $5:Array [String ,026];}''',
                '''Class,_,:,__,{,Var,rP,,,_3,:,Array,[,Float,,,0b1,],;,iO5,(,_,,,_2d_0_47C,,,t,,,_,,,_,:,__,;,_,,,d_,:,Float,),{,},},Class,_,:,U22S_,{,},Class,_D,:,o_0,{,Val,$5,:,Array,[,String,,,026,],;,},<EOF>''',
                101
            )
        )

    def test_1457(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class v:_{$6_25k(_,C,_:Array [Array [Array [Array [Float ,0131],0b1],8],0xF_F]){}Val $0:Array [Int ,68];Var $3,E,$6_0:Int ;Destructor (){} }''',
                '''Class,_,{,},Class,v,:,_,{,$6_25k,(,_,,,C,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0131,],,,0b1,],,,8,],,,0xFF,],),{,},Val,$0,:,Array,[,Int,,,68,],;,Var,$3,,,E,,,$6_0,:,Int,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1458(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{Destructor (){} }Class S:_V7_{Destructor (){}Var $l0H,_,$3o:Array [Float ,045];$_(_3:Array [Float ,0B1]){} }''',
                '''Class,p,{,Destructor,(,),{,},},Class,S,:,_V7_,{,Destructor,(,),{,},Var,$l0H,,,_,,,$3o,:,Array,[,Float,,,045,],;,$_,(,_3,:,Array,[,Float,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1459(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7{Var yc,$_,$2:Array [Int ,0B1];Val _:Array [Array [Array [Array [Array [String ,0B100001],0B100001],02],0b1000100],01_66_3_45];}Class _R{}''',
                '''Class,_7,{,Var,yc,,,$_,,,$2,:,Array,[,Int,,,0B1,],;,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B100001,],,,0B100001,],,,02,],,,0b1000100,],,,0166345,],;,},Class,_R,{,},<EOF>''',
                101
            )
        )

    def test_1460(self):
        self.assertTrue(
            TestLexer.test(
                '''Class FP95:_vfG_{}Class Nw{Val _:Array [String ,0B1];$3Bh(wh,u00:_){}Destructor (){} }Class _3_:r{Var _:Boolean ;}''',
                '''Class,FP95,:,_vfG_,{,},Class,Nw,{,Val,_,:,Array,[,String,,,0B1,],;,$3Bh,(,wh,,,u00,:,_,),{,},Destructor,(,),{,},},Class,_3_,:,r,{,Var,_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1461(self):
        self.assertTrue(
            TestLexer.test(
                '''Class sf{Constructor (__,_,s1d__8_,_1,_,_:String ){_4::$2();Var G_f8,a_:Boolean ;}Var $Z,_:Float ;Var $87,$_:Array [Boolean ,0XC];}''',
                '''Class,sf,{,Constructor,(,__,,,_,,,s1d__8_,,,_1,,,_,,,_,:,String,),{,_4,::,$2,(,),;,Var,G_f8,,,a_,:,Boolean,;,},Var,$Z,,,_,:,Float,;,Var,$87,,,$_,:,Array,[,Boolean,,,0XC,],;,},<EOF>''',
                101
            )
        )

    def test_1462(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{}Class _:w8{Var $_:tB;_7(_:String ){} }Class _:_89{Constructor (__N4:_e87;__7c_:String ){Var P__:Float ;} }''',
                '''Class,M,{,},Class,_,:,w8,{,Var,$_,:,tB,;,_7,(,_,:,String,),{,},},Class,_,:,_89,{,Constructor,(,__N4,:,_e87,;,__7c_,:,String,),{,Var,P__,:,Float,;,},},<EOF>''',
                101
            )
        )

    def test_1463(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c_:__{J_(U___,h,_,_:String ;d:String ;ekoD_,H,E,c,D:Ob56;_,b4:String ){}$_(T_:Array [Boolean ,0B110111]){} }Class C:_{}Class _py{}''',
                '''Class,c_,:,__,{,J_,(,U___,,,h,,,_,,,_,:,String,;,d,:,String,;,ekoD_,,,H,,,E,,,c,,,D,:,Ob56,;,_,,,b4,:,String,),{,},$_,(,T_,:,Array,[,Boolean,,,0B110111,],),{,},},Class,C,:,_,{,},Class,_py,{,},<EOF>''',
                101
            )
        )

    def test_1464(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:q8_3_{Constructor (g,_O:Int ;oW_,_,_:Boolean ;D,_N:b;_,m,C,U:Array [Float ,014_3];__:Array [String ,0B1001];r,r53,t_l01,__d2_,Wi:Array [Boolean ,0B1001]){_::$9__3_();} }Class c{Constructor (){} }Class y:_{}''',
                '''Class,W,:,q8_3_,{,Constructor,(,g,,,_O,:,Int,;,oW_,,,_,,,_,:,Boolean,;,D,,,_N,:,b,;,_,,,m,,,C,,,U,:,Array,[,Float,,,0143,],;,__,:,Array,[,String,,,0B1001,],;,r,,,r53,,,t_l01,,,__d2_,,,Wi,:,Array,[,Boolean,,,0B1001,],),{,_,::,$9__3_,(,),;,},},Class,c,{,Constructor,(,),{,},},Class,y,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1465(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:Q_{Constructor (Qe,_03_,_,B:FX;C,g:String ;k,j:Array [String ,06]){}Val $6_:x;}Class b:V{Destructor (){} }Class _r{}''',
                '''Class,r,:,Q_,{,Constructor,(,Qe,,,_03_,,,_,,,B,:,FX,;,C,,,g,:,String,;,k,,,j,:,Array,[,String,,,06,],),{,},Val,$6_,:,x,;,},Class,b,:,V,{,Destructor,(,),{,},},Class,_r,{,},<EOF>''',
                101
            )
        )

    def test_1466(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_06{__u9(EGF,_:Array [Array [String ,0x2B],0x2B];_3_:S;_7_d_,Mm_,f_z_:_){} }Class _:_{}Class D:g1{}Class Q__{}''',
                '''Class,d_06,{,__u9,(,EGF,,,_,:,Array,[,Array,[,String,,,0x2B,],,,0x2B,],;,_3_,:,S,;,_7_d_,,,Mm_,,,f_z_,:,_,),{,},},Class,_,:,_,{,},Class,D,:,g1,{,},Class,Q__,{,},<EOF>''',
                101
            )
        )

    def test_1467(self):
        self.assertTrue(
            TestLexer.test(
                '''Class qA{Val _,__0_7I,$_,$5_,vxj:_;Val __n,_3:Array [String ,90];Var _:Boolean ;Var h:R674_3;Var A:Array [Int ,04];}Class Cw{}Class _{}''',
                '''Class,qA,{,Val,_,,,__0_7I,,,$_,,,$5_,,,vxj,:,_,;,Val,__n,,,_3,:,Array,[,String,,,90,],;,Var,_,:,Boolean,;,Var,h,:,R674_3,;,Var,A,:,Array,[,Int,,,04,],;,},Class,Cw,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1468(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class ___:mHX{j_L5(z,F,_Y,Eh_,o4_5,_a:Array [Array [Array [Float ,0b10100],0110],15];Dg:String ;k4S,l42,o_Dk_e,R,_:d;O,_c_,h__,_,E24:Boolean ;g:Int ){Continue ;}Var _:Array [Array [Int ,03],0x4];}''',
                '''Class,_,{,},Class,___,:,mHX,{,j_L5,(,z,,,F,,,_Y,,,Eh_,,,o4_5,,,_a,:,Array,[,Array,[,Array,[,Float,,,0b10100,],,,0110,],,,15,],;,Dg,:,String,;,k4S,,,l42,,,o_Dk_e,,,R,,,_,:,d,;,O,,,_c_,,,h__,,,_,,,E24,:,Boolean,;,g,:,Int,),{,Continue,;,},Var,_,:,Array,[,Array,[,Int,,,03,],,,0x4,],;,},<EOF>''',
                101
            )
        )

    def test_1469(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:_1{$_r7(_,C,m_,___,__,c:Array [Array [Array [Array [Array [Int ,0B100001],0X4D],0X5],0b1],8]){}$_7_(){Var _:bk_M;} }''',
                '''Class,e,:,_1,{,$_r7,(,_,,,C,,,m_,,,___,,,__,,,c,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B100001,],,,0X4D,],,,0X5,],,,0b1,],,,8,],),{,},$_7_,(,),{,Var,_,:,bk_M,;,},},<EOF>''',
                101
            )
        )

    def test_1470(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_m{}Class _m_{}Class x2G_3:mc{}Class _T5{Var __q:Boolean ;Constructor (_bu:Array [Array [Array [String ,07_3_2_7_6],0x1],0x58]){} }''',
                '''Class,__,:,_m,{,},Class,_m_,{,},Class,x2G_3,:,mc,{,},Class,_T5,{,Var,__q,:,Boolean,;,Constructor,(,_bu,:,Array,[,Array,[,Array,[,String,,,073276,],,,0x1,],,,0x58,],),{,},},<EOF>''',
                101
            )
        )

    def test_1471(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v{}Class s:_{Var _,_s_5z6:Array [Array [Array [Array [Array [String ,0X37],05],0X87],03],65];$W5_0(_,T,__:Array [Boolean ,0b1011]){} }''',
                '''Class,_v,{,},Class,s,:,_,{,Var,_,,,_s_5z6,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X37,],,,05,],,,0X87,],,,03,],,,65,],;,$W5_0,(,_,,,T,,,__,:,Array,[,Boolean,,,0b1011,],),{,},},<EOF>''',
                101
            )
        )

    def test_1472(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ex{}Class __{}Class b:_{}Class _2_{}Class Zb{Var $_:Array [Float ,40];}Class p:_e{Val G271,_:Int ;}Class __:_{$N5_(){} }''',
                '''Class,ex,{,},Class,__,{,},Class,b,:,_,{,},Class,_2_,{,},Class,Zb,{,Var,$_,:,Array,[,Float,,,40,],;,},Class,p,:,_e,{,Val,G271,,,_,:,Int,;,},Class,__,:,_,{,$N5_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1473(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7{___h(i1,_:Array [String ,01];_,_,_zr_,_,p_,a_0:_0;q_4,V7,___,P:Array [Array [Array [Array [String ,7],0x63],011],05];Yol:Int ;s,_G8,l_:Array [Array [Boolean ,0b1_0],0x3_C]){} }''',
                '''Class,_7,{,___h,(,i1,,,_,:,Array,[,String,,,01,],;,_,,,_,,,_zr_,,,_,,,p_,,,a_0,:,_0,;,q_4,,,V7,,,___,,,P,:,Array,[,Array,[,Array,[,Array,[,String,,,7,],,,0x63,],,,011,],,,05,],;,Yol,:,Int,;,s,,,_G8,,,l_,:,Array,[,Array,[,Boolean,,,0b10,],,,0x3C,],),{,},},<EOF>''',
                101
            )
        )

    def test_1474(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D0:_S{Var D7:q;Var _L:Array [Array [Array [Array [Array [Array [Array [Array [Float ,94],0b1],0B1000000],052],052],88],0B1_00],0b11100];Val r:String ;}''',
                '''Class,D0,:,_S,{,Var,D7,:,q,;,Var,_L,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,94,],,,0b1,],,,0B1000000,],,,052,],,,052,],,,88,],,,0B100,],,,0b11100,],;,Val,r,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1475(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__9F3{Destructor (){Continue ;Var fp,h1,p,_,___:Array [Array [Array [String ,0126],7_3],0b1_011_00];} }Class _:C{}''',
                '''Class,_,:,__9F3,{,Destructor,(,),{,Continue,;,Var,fp,,,h1,,,p,,,_,,,___,:,Array,[,Array,[,Array,[,String,,,0126,],,,73,],,,0b101100,],;,},},Class,_,:,C,{,},<EOF>''',
                101
            )
        )

    def test_1476(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5x{Var $__2:Boolean ;}Class R_{Val $_h:Float ;Destructor (){Continue ;} }Class K8m3:__{_7e(x_:Boolean ;_,_:Array [Int ,127]){} }''',
                '''Class,_5x,{,Var,$__2,:,Boolean,;,},Class,R_,{,Val,$_h,:,Float,;,Destructor,(,),{,Continue,;,},},Class,K8m3,:,__,{,_7e,(,x_,:,Boolean,;,_,,,_,:,Array,[,Int,,,127,],),{,},},<EOF>''',
                101
            )
        )

    def test_1477(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}fB_9(g_:dL5_A33Hd){} }Class O:i{}Class _:U{Destructor (){} }Class Pp:__4xnO{Var $q:t;}''',
                '''Class,_,{,Constructor,(,),{,},fB_9,(,g_,:,dL5_A33Hd,),{,},},Class,O,:,i,{,},Class,_,:,U,{,Destructor,(,),{,},},Class,Pp,:,__4xnO,{,Var,$q,:,t,;,},<EOF>''',
                101
            )
        )

    def test_1478(self):
        self.assertTrue(
            TestLexer.test(
                '''Class wI_w:Uk_0E9___4{}Class l:S__3v_{}Class gY{}Class _v:c_9jB4{}Class _{Var $M:Array [Array [Int ,0X1A7],0X31];Var S_9:Array [Float ,06];}''',
                '''Class,wI_w,:,Uk_0E9___4,{,},Class,l,:,S__3v_,{,},Class,gY,{,},Class,_v,:,c_9jB4,{,},Class,_,{,Var,$M,:,Array,[,Array,[,Int,,,0X1A7,],,,0X31,],;,Var,S_9,:,Array,[,Float,,,06,],;,},<EOF>''',
                101
            )
        )

    def test_1479(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:rH{Val _:_;}Class _:_{Var $_,L4,$y4J,D__g,$_K,$E,$_,$_,_:Q;}Class _{Destructor (){} }Class _25:_n_{}Class _:__{}Class _:q{}''',
                '''Class,_1,:,rH,{,Val,_,:,_,;,},Class,_,:,_,{,Var,$_,,,L4,,,$y4J,,,D__g,,,$_K,,,$E,,,$_,,,$_,,,_,:,Q,;,},Class,_,{,Destructor,(,),{,},},Class,_25,:,_n_,{,},Class,_,:,__,{,},Class,_,:,q,{,},<EOF>''',
                101
            )
        )

    def test_1480(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{Var _:String ;Destructor (){Break ;}Constructor (_,_,_:Array [Array [String ,25],0B1100001]){}Var Xp:Array [Array [Boolean ,0XF],829];}''',
                '''Class,s,{,Var,_,:,String,;,Destructor,(,),{,Break,;,},Constructor,(,_,,,_,,,_,:,Array,[,Array,[,String,,,25,],,,0B1100001,],),{,},Var,Xp,:,Array,[,Array,[,Boolean,,,0XF,],,,829,],;,},<EOF>''',
                101
            )
        )

    def test_1481(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H{}Class J{Var _4kT:Array [Array [Array [Array [String ,15],0X3D],0B1001010],0100];$25_F(_81:Float ){ {}Continue ;} }''',
                '''Class,H,{,},Class,J,{,Var,_4kT,:,Array,[,Array,[,Array,[,Array,[,String,,,15,],,,0X3D,],,,0B1001010,],,,0100,],;,$25_F,(,_81,:,Float,),{,{,},Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1482(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){Break ;} }Class _:_{}Class l1P_:_l{$_25(_,y3D:Array [Array [Float ,0x29],1];__s8:Array [Array [Array [Float ,8_5_8],0X2_2],034]){} }''',
                '''Class,_,{,Constructor,(,),{,Break,;,},},Class,_,:,_,{,},Class,l1P_,:,_l,{,$_25,(,_,,,y3D,:,Array,[,Array,[,Float,,,0x29,],,,1,],;,__s8,:,Array,[,Array,[,Array,[,Float,,,858,],,,0X22,],,,034,],),{,},},<EOF>''',
                101
            )
        )

    def test_1483(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5:_{}Class ___{Q8k(){} }Class _2r:c_g{Constructor (_:L96xK_n_;L0m:Float ){Return ;} }Class _{}Class __{}''',
                '''Class,_5,:,_,{,},Class,___,{,Q8k,(,),{,},},Class,_2r,:,c_g,{,Constructor,(,_,:,L96xK_n_,;,L0m,:,Float,),{,Return,;,},},Class,_,{,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_1484(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _:_a{Val _3_:z;Val Nr_,B,_2__,$j:n;Val $l,D,$13,_8c:Array [Array [Array [Int ,0x8_7_2_B_4_0],0XA9],0x37];}''',
                '''Class,_,:,_,{,},Class,_,:,_a,{,Val,_3_,:,z,;,Val,Nr_,,,B,,,_2__,,,$j,:,n,;,Val,$l,,,D,,,$13,,,_8c,:,Array,[,Array,[,Array,[,Int,,,0x872B40,],,,0XA9,],,,0x37,],;,},<EOF>''',
                101
            )
        )

    def test_1485(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8_:i{Destructor (){_5_::$o();}Constructor (_,b0__:B_){Var _3:Array [Array [Array [Array [Int ,14],0b10000],05_2],0x11];{Continue ;Continue ;} }$__(TB,S7:Array [Array [Boolean ,0B1_010_00],14];J,_1:Float ){} }Class _{}''',
                '''Class,_8_,:,i,{,Destructor,(,),{,_5_,::,$o,(,),;,},Constructor,(,_,,,b0__,:,B_,),{,Var,_3,:,Array,[,Array,[,Array,[,Array,[,Int,,,14,],,,0b10000,],,,052,],,,0x11,],;,{,Continue,;,Continue,;,},},$__,(,TB,,,S7,:,Array,[,Array,[,Boolean,,,0B101000,],,,14,],;,J,,,_1,:,Float,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1486(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:Q2_{}Class _0:L{}Class __3{Constructor (__,_L__,L:Array [Array [Array [String ,0x10],034],72_2_0_91];y_,v:Int ){} }''',
                '''Class,W,:,Q2_,{,},Class,_0,:,L,{,},Class,__3,{,Constructor,(,__,,,_L__,,,L,:,Array,[,Array,[,Array,[,String,,,0x10,],,,034,],,,722091,],;,y_,,,v,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1487(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:_{}Class _O:_{Constructor (b1:Int ;_:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B10010],36],0b111100],7_6],024],024],0XC],024]){} }''',
                '''Class,Q,:,_,{,},Class,_O,:,_,{,Constructor,(,b1,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B10010,],,,36,],,,0b111100,],,,76,],,,024,],,,024,],,,0XC,],,,024,],),{,},},<EOF>''',
                101
            )
        )

    def test_1488(self):
        self.assertTrue(
            TestLexer.test(
                '''Class xf_{}Class Tl6M:d{Val $a_A,$_d_C,$_:Array [String ,0b111010];Constructor (){Val E,_,X_:jQ;Return ;__::$_();Continue ;} }Class h:_D_T{Var $N:Int ;$_(){} }Class _C_:_k{$3(Zw:Array [Array [Float ,0B11_11_1_0_1],0b111010];_6:Boolean ){}Constructor (){Return ;} }Class f{}Class __{}''',
                '''Class,xf_,{,},Class,Tl6M,:,d,{,Val,$a_A,,,$_d_C,,,$_,:,Array,[,String,,,0b111010,],;,Constructor,(,),{,Val,E,,,_,,,X_,:,jQ,;,Return,;,__,::,$_,(,),;,Continue,;,},},Class,h,:,_D_T,{,Var,$N,:,Int,;,$_,(,),{,},},Class,_C_,:,_k,{,$3,(,Zw,:,Array,[,Array,[,Float,,,0B1111101,],,,0b111010,],;,_6,:,Boolean,),{,},Constructor,(,),{,Return,;,},},Class,f,{,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_1489(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __0:_{Val $c,_8:Array [Array [Array [Array [Float ,0B1_0],0x8B],047],13];}Class _{Constructor (_IU_,s,X,_1:r){} }Class _:o9Yd_{}''',
                '''Class,__0,:,_,{,Val,$c,,,_8,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B10,],,,0x8B,],,,047,],,,13,],;,},Class,_,{,Constructor,(,_IU_,,,s,,,X,,,_1,:,r,),{,},},Class,_,:,o9Yd_,{,},<EOF>''',
                101
            )
        )

    def test_1490(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:r_{}Class __t:W{$_(_,_R:r;_g:Array [Array [Array [Array [Array [Int ,0b11100],0xB],0436_3],03_7],077];D92:Array [Array [String ,0B10100],0XD_2_D]){Continue ;} }Class _:l4{}''',
                '''Class,_,{,},Class,_,:,r_,{,},Class,__t,:,W,{,$_,(,_,,,_R,:,r,;,_g,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b11100,],,,0xB,],,,04363,],,,037,],,,077,],;,D92,:,Array,[,Array,[,String,,,0B10100,],,,0XD2D,],),{,Continue,;,},},Class,_,:,l4,{,},<EOF>''',
                101
            )
        )

    def test_1491(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class _6__:__{$aQ(SE_:String ;h5:Boolean ){}Var $_,$_u_,$6Je,$1E67_:Boolean ;Constructor (__:Int ){} }''',
                '''Class,_,{,Destructor,(,),{,},},Class,_6__,:,__,{,$aQ,(,SE_,:,String,;,h5,:,Boolean,),{,},Var,$_,,,$_u_,,,$6Je,,,$1E67_,:,Boolean,;,Constructor,(,__,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1492(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w_2_579:_{Var ___8__3O94,$_9426W,$_:w_4M_40;}Class _:_hm{Constructor (_8__,_:_;_,Z04,_g,R:Array [Array [Int ,0102],01]){} }''',
                '''Class,w_2_579,:,_,{,Var,___8__3O94,,,$_9426W,,,$_,:,w_4M_40,;,},Class,_,:,_hm,{,Constructor,(,_8__,,,_,:,_,;,_,,,Z04,,,_g,,,R,:,Array,[,Array,[,Int,,,0102,],,,01,],),{,},},<EOF>''',
                101
            )
        )

    def test_1493(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_n65{}Class Uy:_{Constructor (WV,_,jt,zJ:Array [Boolean ,3];_qL708N8H:_){} }Class o6_Q{}Class BS{}Class __{}Class _67xZx:__M{}''',
                '''Class,_,:,_n65,{,},Class,Uy,:,_,{,Constructor,(,WV,,,_,,,jt,,,zJ,:,Array,[,Boolean,,,3,],;,_qL708N8H,:,_,),{,},},Class,o6_Q,{,},Class,BS,{,},Class,__,{,},Class,_67xZx,:,__M,{,},<EOF>''',
                101
            )
        )

    def test_1494(self):
        self.assertTrue(
            TestLexer.test(
                '''Class FL_:Se_{Var _,$2,$V_,Y:Array [Float ,2_732];}Class y{Destructor (){} }Class _{Constructor (_Q_:_5K;T,_,__,O49__4:Array [Array [Array [Array [Array [Int ,0133],0133],0x95],04_6_6_7],59]){} }''',
                '''Class,FL_,:,Se_,{,Var,_,,,$2,,,$V_,,,Y,:,Array,[,Float,,,2732,],;,},Class,y,{,Destructor,(,),{,},},Class,_,{,Constructor,(,_Q_,:,_5K,;,T,,,_,,,__,,,O49__4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0133,],,,0133,],,,0x95,],,,04667,],,,59,],),{,},},<EOF>''',
                101
            )
        )

    def test_1495(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___Dl:T{Constructor (){}Val __,$_:Int ;Var $__1b:_;Var _,$u:_;Val $r,$__:r;Constructor (H_:String ){} }Class _:_{}Class _{}''',
                '''Class,___Dl,:,T,{,Constructor,(,),{,},Val,__,,,$_,:,Int,;,Var,$__1b,:,_,;,Var,_,,,$u,:,_,;,Val,$r,,,$__,:,r,;,Constructor,(,H_,:,String,),{,},},Class,_,:,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1496(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W{Val F:o_;Val $_3,g0D:_20_c_;}Class _{}Class v{}Class n{Constructor (e,T:Array [Array [Float ,07],0B10_1]){} }''',
                '''Class,_W,{,Val,F,:,o_,;,Val,$_3,,,g0D,:,_20_c_,;,},Class,_,{,},Class,v,{,},Class,n,{,Constructor,(,e,,,T,:,Array,[,Array,[,Float,,,07,],,,0B101,],),{,},},<EOF>''',
                101
            )
        )

    def test_1497(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6:_k6{Constructor (Mo_9_:Array [String ,05_7]){} }Class _{Constructor (_7,_XW_K:Float ;_I2gw,_e:v85;__,_k:_T;P:Array [Array [Array [Array [String ,16],0X43],16],2_1_4];_,_,_:Boolean ;rH,__,Z,_:Float ){Break ;} }''',
                '''Class,_6,:,_k6,{,Constructor,(,Mo_9_,:,Array,[,String,,,057,],),{,},},Class,_,{,Constructor,(,_7,,,_XW_K,:,Float,;,_I2gw,,,_e,:,v85,;,__,,,_k,:,_T,;,P,:,Array,[,Array,[,Array,[,Array,[,String,,,16,],,,0X43,],,,16,],,,214,],;,_,,,_,,,_,:,Boolean,;,rH,,,__,,,Z,,,_,:,Float,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1498(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$U(__V,_,H,_:___hXj;_:l){}Var $_,$vy,a:G7E2;Constructor (z,__sM_K_:_U;i,__:Array [Boolean ,0B1011001];p,__,_:F;vy,_:Int ;S,e,L9_,t_,U,_:Int ;ID_7_,__,k_:_){Var _KRW:_;} }''',
                '''Class,_,{,$U,(,__V,,,_,,,H,,,_,:,___hXj,;,_,:,l,),{,},Var,$_,,,$vy,,,a,:,G7E2,;,Constructor,(,z,,,__sM_K_,:,_U,;,i,,,__,:,Array,[,Boolean,,,0B1011001,],;,p,,,__,,,_,:,F,;,vy,,,_,:,Int,;,S,,,e,,,L9_,,,t_,,,U,,,_,:,Int,;,ID_7_,,,__,,,k_,:,_,),{,Var,_KRW,:,_,;,},},<EOF>''',
                101
            )
        )

    def test_1499(self):
        self.assertTrue(
            TestLexer.test(
                '''Class GK:_D{__8(_:Array [Int ,0B1_1_0_1];q91b:_6_V;_:Boolean ;_,__:H_;KD:Array [Float ,0b1];_9,Z:String ){} }Class __1_:X{Var l77,$dz:String ;}''',
                '''Class,GK,:,_D,{,__8,(,_,:,Array,[,Int,,,0B1101,],;,q91b,:,_6_V,;,_,:,Boolean,;,_,,,__,:,H_,;,KD,:,Array,[,Float,,,0b1,],;,_9,,,Z,:,String,),{,},},Class,__1_,:,X,{,Var,l77,,,$dz,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1500(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P2uU:__{_____m__(_:Array [Float ,0X62];L,_,Zg:String ;y:M5__;p,j,a,k0,H:Array [Boolean ,0X47];__3,_5:h__;l,R_,B:String ;XB:Int ){Break ;} }Class __5:n{}Class __7:____4{}Class I{Constructor (){Continue ;} }''',
                '''Class,P2uU,:,__,{,_____m__,(,_,:,Array,[,Float,,,0X62,],;,L,,,_,,,Zg,:,String,;,y,:,M5__,;,p,,,j,,,a,,,k0,,,H,:,Array,[,Boolean,,,0X47,],;,__3,,,_5,:,h__,;,l,,,R_,,,B,:,String,;,XB,:,Int,),{,Break,;,},},Class,__5,:,n,{,},Class,__7,:,____4,{,},Class,I,{,Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1501(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j{G_(V7,_:Int ;e,y:Array [Float ,02]){} }Class s_bs:W{Val $_:Float ;}Class _W8{}Class M_:Per_{}Class _{}Class _____:_{}''',
                '''Class,j,{,G_,(,V7,,,_,:,Int,;,e,,,y,:,Array,[,Float,,,02,],),{,},},Class,s_bs,:,W,{,Val,$_,:,Float,;,},Class,_W8,{,},Class,M_,:,Per_,{,},Class,_,{,},Class,_____,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1502(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z{Constructor (__6_53:String ;_ei_:Array [Array [String ,0136],0136]){Continue ;}Constructor (_:_M2;W_,k:_){} }''',
                '''Class,_Z,{,Constructor,(,__6_53,:,String,;,_ei_,:,Array,[,Array,[,String,,,0136,],,,0136,],),{,Continue,;,},Constructor,(,_,:,_M2,;,W_,,,k,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1503(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _R:j3_{}Class _{Val n:_;$3(G,z_,__f,b_:Array [Array [Int ,0X2],0X31];B___0,D6B,_:Array [Boolean ,27];_u6S,p,_f_:Float ){}Constructor (){Var _5,_3:R6du;} }''',
                '''Class,_R,:,j3_,{,},Class,_,{,Val,n,:,_,;,$3,(,G,,,z_,,,__f,,,b_,:,Array,[,Array,[,Int,,,0X2,],,,0X31,],;,B___0,,,D6B,,,_,:,Array,[,Boolean,,,27,],;,_u6S,,,p,,,_f_,:,Float,),{,},Constructor,(,),{,Var,_5,,,_3,:,R6du,;,},},<EOF>''',
                101
            )
        )

    def test_1504(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class _t:_{}Class O{}Class _:A{}Class _:_{__(_5_,_:Float ;_,_,__x8:Ec_){} }Class Nz18_Y4{}''',
                '''Class,_,{,Constructor,(,),{,},},Class,_t,:,_,{,},Class,O,{,},Class,_,:,A,{,},Class,_,:,_,{,__,(,_5_,,,_,:,Float,;,_,,,_,,,__x8,:,Ec_,),{,},},Class,Nz18_Y4,{,},<EOF>''',
                101
            )
        )

    def test_1505(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k0:f0{Var G4:Array [Array [String ,0x4B],01];}Class R{}Class _:__{$a7(_i,f,_e_:___;q:w;_:Int ;__2F,_71_:_;ro,P:C;_d,_:Float ){} }Class P{}''',
                '''Class,k0,:,f0,{,Var,G4,:,Array,[,Array,[,String,,,0x4B,],,,01,],;,},Class,R,{,},Class,_,:,__,{,$a7,(,_i,,,f,,,_e_,:,___,;,q,:,w,;,_,:,Int,;,__2F,,,_71_,:,_,;,ro,,,P,:,C,;,_d,,,_,:,Float,),{,},},Class,P,{,},<EOF>''',
                101
            )
        )

    def test_1506(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x1{_o_(_,m,g5_,s_:Float ){g_y3_::$6();VS33_::$2();} }Class kz:r{Constructor (){Continue ;} }Class _:yt{}''',
                '''Class,x1,{,_o_,(,_,,,m,,,g5_,,,s_,:,Float,),{,g_y3_,::,$6,(,),;,VS33_,::,$2,(,),;,},},Class,kz,:,r,{,Constructor,(,),{,Continue,;,},},Class,_,:,yt,{,},<EOF>''',
                101
            )
        )

    def test_1507(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val $3:Array [Array [Array [Array [Float ,0x1F],03_1],043],0x1F];Val $d3,_,R,_3_:Array [Array [Array [String ,32],0b1],0x1];Val _,_:r_;}Class _i{}''',
                '''Class,_,:,_,{,Val,$3,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x1F,],,,031,],,,043,],,,0x1F,],;,Val,$d3,,,_,,,R,,,_3_,:,Array,[,Array,[,Array,[,String,,,32,],,,0b1,],,,0x1,],;,Val,_,,,_,:,r_,;,},Class,_i,{,},<EOF>''',
                101
            )
        )

    def test_1508(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U{Var $5,OU:Array [Int ,0XC_E];}Class O:_{}Class y{$_(I:Array [Array [Int ,0x4C],0X20_5_1];_,_0_92,v,__8,_3:Float ){}Var $6:Boolean ;}''',
                '''Class,U,{,Var,$5,,,OU,:,Array,[,Int,,,0XCE,],;,},Class,O,:,_,{,},Class,y,{,$_,(,I,:,Array,[,Array,[,Int,,,0x4C,],,,0X2051,],;,_,,,_0_92,,,v,,,__8,,,_3,:,Float,),{,},Var,$6,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1509(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _x5_3:B__2{Val $2:Array [Array [Boolean ,0X7],0X24];Destructor (){}_(){}Val $_,$_,$8:Array [Array [Array [Boolean ,3_65],50],0b110010];}Class G_:_v_q{}''',
                '''Class,_x5_3,:,B__2,{,Val,$2,:,Array,[,Array,[,Boolean,,,0X7,],,,0X24,],;,Destructor,(,),{,},_,(,),{,},Val,$_,,,$_,,,$8,:,Array,[,Array,[,Array,[,Boolean,,,365,],,,50,],,,0b110010,],;,},Class,G_,:,_v_q,{,},<EOF>''',
                101
            )
        )

    def test_1510(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{}Class _{Val $4,$61,Y:q;Destructor (){}Val H:Array [Float ,13];Destructor (){}Val $91X,_,_C:Array [Float ,015];}''',
                '''Class,J,{,},Class,_,{,Val,$4,,,$61,,,Y,:,q,;,Destructor,(,),{,},Val,H,:,Array,[,Float,,,13,],;,Destructor,(,),{,},Val,$91X,,,_,,,_C,:,Array,[,Float,,,015,],;,},<EOF>''',
                101
            )
        )

    def test_1511(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Val a_4_4:Array [Array [Array [Array [Array [Array [Boolean ,0x2],0B1010110],8],0b1_1],0B1],0b1];$5(s_:Array [Array [String ,0b1000000],076]){} }''',
                '''Class,__,:,_,{,Val,a_4_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x2,],,,0B1010110,],,,8,],,,0b11,],,,0B1,],,,0b1,],;,$5,(,s_,:,Array,[,Array,[,String,,,0b1000000,],,,076,],),{,},},<EOF>''',
                101
            )
        )

    def test_1512(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e{$5(I6_,_r,D4_,j81_:Boolean ;_:Array [Array [Int ,0x16],0x7_9];_8P_,LL:Array [Array [Float ,0X7],0x39_A];_:Array [Float ,0b1011110];___D__,G,__:Array [Array [Array [Int ,7],0XDFD],17];s,SS,_:String ){}Destructor (){} }''',
                '''Class,_e,{,$5,(,I6_,,,_r,,,D4_,,,j81_,:,Boolean,;,_,:,Array,[,Array,[,Int,,,0x16,],,,0x79,],;,_8P_,,,LL,:,Array,[,Array,[,Float,,,0X7,],,,0x39A,],;,_,:,Array,[,Float,,,0b1011110,],;,___D__,,,G,,,__,:,Array,[,Array,[,Array,[,Int,,,7,],,,0XDFD,],,,17,],;,s,,,SS,,,_,:,String,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1513(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (I,_8_,__:_;l1_Uh:c;dG:Array [Array [Array [Array [String ,89],0xC911],0X2],6];__,_,_,DC,S7:_;_k,_,_h:Boolean ){} }''',
                '''Class,_,{,Constructor,(,I,,,_8_,,,__,:,_,;,l1_Uh,:,c,;,dG,:,Array,[,Array,[,Array,[,Array,[,String,,,89,],,,0xC911,],,,0X2,],,,6,],;,__,,,_,,,_,,,DC,,,S7,:,_,;,_k,,,_,,,_h,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1514(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___T3S{}Class T0:_{$f(){}Constructor (G3:Array [String ,77];_,x,B,o:BF;B9n:_;_,_q67,__,qP,_7:Array [Array [Int ,0116],0b111110]){} }Class J{}''',
                '''Class,___T3S,{,},Class,T0,:,_,{,$f,(,),{,},Constructor,(,G3,:,Array,[,String,,,77,],;,_,,,x,,,B,,,o,:,BF,;,B9n,:,_,;,_,,,_q67,,,__,,,qP,,,_7,:,Array,[,Array,[,Int,,,0116,],,,0b111110,],),{,},},Class,J,{,},<EOF>''',
                101
            )
        )

    def test_1515(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var $0:Array [Array [Float ,05_7_5_0],0XC];Constructor (X:Int ){}Constructor (){Return ;Break ;} }Class o_o_995:_{Constructor (){} }''',
                '''Class,__,{,Var,$0,:,Array,[,Array,[,Float,,,05750,],,,0XC,],;,Constructor,(,X,:,Int,),{,},Constructor,(,),{,Return,;,Break,;,},},Class,o_o_995,:,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1516(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class O0V:X_{Constructor (_b1_0,N:String ;c,f_:Array [Array [Array [Float ,0101],4_00_00_2_1],0x7]){Continue ;} }''',
                '''Class,_,:,_,{,},Class,O0V,:,X_,{,Constructor,(,_b1_0,,,N,:,String,;,c,,,f_,:,Array,[,Array,[,Array,[,Float,,,0101,],,,4000021,],,,0x7,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1517(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1c{}Class g:s{}Class _:_5{Constructor (){} }Class _0{Destructor (){Break ;}Destructor (){} }Class gOD7:g{Val $n_,_,l9:String ;}''',
                '''Class,_1c,{,},Class,g,:,s,{,},Class,_,:,_5,{,Constructor,(,),{,},},Class,_0,{,Destructor,(,),{,Break,;,},Destructor,(,),{,},},Class,gOD7,:,g,{,Val,$n_,,,_,,,l9,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1518(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:__{Val $9EAuY,H,$_:Array [Array [Array [Int ,0B10111],0XF],0XB];Constructor (){Continue ;Continue ;} }''',
                '''Class,_,{,},Class,_,:,__,{,Val,$9EAuY,,,H,,,$_,:,Array,[,Array,[,Array,[,Int,,,0B10111,],,,0XF,],,,0XB,],;,Constructor,(,),{,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1519(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o3{Var _9__:Boolean ;}Class __{Constructor (L,J2_:Array [Float ,0X1_8];W:Array [Array [Array [Float ,0X7],0B1],01_4_74_64_7];z20U:Array [Array [Int ,070],02]){Break ;{Break ;} }$iT(){} }''',
                '''Class,o3,{,Var,_9__,:,Boolean,;,},Class,__,{,Constructor,(,L,,,J2_,:,Array,[,Float,,,0X18,],;,W,:,Array,[,Array,[,Array,[,Float,,,0X7,],,,0B1,],,,01474647,],;,z20U,:,Array,[,Array,[,Int,,,070,],,,02,],),{,Break,;,{,Break,;,},},$iT,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1520(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class __{}Class _8_{Val G8_,uB9,_j,$9:Array [Array [Array [Array [String ,8_6_9],05],0XD6],0b101110];Val _,$3T9_4C:c5;}''',
                '''Class,_,:,_,{,},Class,__,{,},Class,_8_,{,Val,G8_,,,uB9,,,_j,,,$9,:,Array,[,Array,[,Array,[,Array,[,String,,,869,],,,05,],,,0XD6,],,,0b101110,],;,Val,_,,,$3T9_4C,:,c5,;,},<EOF>''',
                101
            )
        )

    def test_1521(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _R{Destructor (){} }Class _oLl:_4{Constructor (_k_:Boolean ){}Val u_7,$8:_;}Class _:_{_(){}$S(l,o,_,_:Array [String ,99]){} }Class I{}''',
                '''Class,_R,{,Destructor,(,),{,},},Class,_oLl,:,_4,{,Constructor,(,_k_,:,Boolean,),{,},Val,u_7,,,$8,:,_,;,},Class,_,:,_,{,_,(,),{,},$S,(,l,,,o,,,_,,,_,:,Array,[,String,,,99,],),{,},},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_1522(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __3j__1_{Var $8:Boolean ;Val ut:Boolean ;Var $_:Array [Array [Boolean ,5],065];}Class _:_3_{Destructor (){}Constructor (_1,h9R_q:h;_:Float ){} }Class _{}Class _0_{}Class p9:_{}''',
                '''Class,_,{,},Class,__3j__1_,{,Var,$8,:,Boolean,;,Val,ut,:,Boolean,;,Var,$_,:,Array,[,Array,[,Boolean,,,5,],,,065,],;,},Class,_,:,_3_,{,Destructor,(,),{,},Constructor,(,_1,,,h9R_q,:,h,;,_,:,Float,),{,},},Class,_,{,},Class,_0_,{,},Class,p9,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1523(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g_:_{}Class __0yj_{Val _3:Array [Int ,0X1];Var $9:Array [Int ,0102];}Class tm4{Destructor (){}Var $Ix,_:Array [Int ,0b1];Var i:_;}''',
                '''Class,g_,:,_,{,},Class,__0yj_,{,Val,_3,:,Array,[,Int,,,0X1,],;,Var,$9,:,Array,[,Int,,,0102,],;,},Class,tm4,{,Destructor,(,),{,},Var,$Ix,,,_,:,Array,[,Int,,,0b1,],;,Var,i,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1524(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __Dj99:_{}Class y{Val kO7:Array [Int ,023];Constructor (_,a_,i,K:Int ){ {Var eoNN26,__:Array [String ,0X11];} }}Class _{}''',
                '''Class,__Dj99,:,_,{,},Class,y,{,Val,kO7,:,Array,[,Int,,,023,],;,Constructor,(,_,,,a_,,,i,,,K,:,Int,),{,{,Var,eoNN26,,,__,:,Array,[,String,,,0X11,],;,},},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1525(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{g_2b(_i_,p,_8Di,Bad_:u_;a:__;j4,H_j2,_,B:b;_ge:Array [Array [Array [String ,0X2A],0b1000],0xE];_4:a){} }''',
                '''Class,_,{,g_2b,(,_i_,,,p,,,_8Di,,,Bad_,:,u_,;,a,:,__,;,j4,,,H_j2,,,_,,,B,:,b,;,_ge,:,Array,[,Array,[,Array,[,String,,,0X2A,],,,0b1000,],,,0xE,],;,_4,:,a,),{,},},<EOF>''',
                101
            )
        )

    def test_1526(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{_(C88929tI,m,_,_,_:_;F,o,_:Array [Float ,0134];ks,_9,_:Array [Array [Array [Array [Array [Array [Array [Int ,0XD_7],0b1],0134],0x45],2],0X8],0xD62];Jy,x:Array [Array [String ,07],0B110101]){Return ;}___3D(){}Destructor (){}Var $8,$_:Float ;}Class h{}''',
                '''Class,X,{,_,(,C88929tI,,,m,,,_,,,_,,,_,:,_,;,F,,,o,,,_,:,Array,[,Float,,,0134,],;,ks,,,_9,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XD7,],,,0b1,],,,0134,],,,0x45,],,,2,],,,0X8,],,,0xD62,],;,Jy,,,x,:,Array,[,Array,[,String,,,07,],,,0B110101,],),{,Return,;,},___3D,(,),{,},Destructor,(,),{,},Var,$8,,,$_,:,Float,;,},Class,h,{,},<EOF>''',
                101
            )
        )

    def test_1527(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _qig__{Constructor (O:Array [String ,0x22];_,_U,_J,eM:Array [Array [Int ,0X10],0107];I9__R:Z;_:Int ){}Val TL_,W__,_82R,$z_,__5,$5_1:Int ;}''',
                '''Class,_qig__,{,Constructor,(,O,:,Array,[,String,,,0x22,],;,_,,,_U,,,_J,,,eM,:,Array,[,Array,[,Int,,,0X10,],,,0107,],;,I9__R,:,Z,;,_,:,Int,),{,},Val,TL_,,,W__,,,_82R,,,$z_,,,__5,,,$5_1,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1528(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:t{Var _,$_:Array [Boolean ,95_04];$q(){}_(){Continue ;Continue ;}Val $_:Y;M_(){}Destructor (){Return ;}Var _m:Array [Array [Array [Array [String ,06],01],0x7_40],0x2];}''',
                '''Class,Q,:,t,{,Var,_,,,$_,:,Array,[,Boolean,,,9504,],;,$q,(,),{,},_,(,),{,Continue,;,Continue,;,},Val,$_,:,Y,;,M_,(,),{,},Destructor,(,),{,Return,;,},Var,_m,:,Array,[,Array,[,Array,[,Array,[,String,,,06,],,,01,],,,0x740,],,,0x2,],;,},<EOF>''',
                101
            )
        )

    def test_1529(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _72b5{}Class r{r(y:Int ;_,__,U,_2K_93,_:Boolean ;x:_3;_8_z,W_N0:VP_B;p_:Array [String ,88];_C:Array [Float ,0b1010100];n:n;_7_K4,n:Array [Array [Array [Int ,0XE_5],0B111110],88]){}Val $_6_18,$_U_4:Y;}''',
                '''Class,_72b5,{,},Class,r,{,r,(,y,:,Int,;,_,,,__,,,U,,,_2K_93,,,_,:,Boolean,;,x,:,_3,;,_8_z,,,W_N0,:,VP_B,;,p_,:,Array,[,String,,,88,],;,_C,:,Array,[,Float,,,0b1010100,],;,n,:,n,;,_7_K4,,,n,:,Array,[,Array,[,Array,[,Int,,,0XE5,],,,0B111110,],,,88,],),{,},Val,$_6_18,,,$_U_4,:,Y,;,},<EOF>''',
                101
            )
        )

    def test_1530(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E_7:rj8c{}Class _:_{}Class _:_{Constructor (){}fZT(_7,EDc:Array [Array [Int ,0101],0B100110]){}Destructor (){} }''',
                '''Class,E_7,:,rj8c,{,},Class,_,:,_,{,},Class,_,:,_,{,Constructor,(,),{,},fZT,(,_7,,,EDc,:,Array,[,Array,[,Int,,,0101,],,,0B100110,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1531(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:E_G{Constructor (b,J62:Boolean ){}Val $XO,oq_7_,b:Float ;}Class d{Val _:__;Var T:Array [Array [Array [Array [Float ,30],0B1_0],017],0b1_1];$3(){}Constructor (){} }Class H_A:w_{}Class V{Destructor (){}Val Gt:Float ;}Class _:Y{}''',
                '''Class,b,:,E_G,{,Constructor,(,b,,,J62,:,Boolean,),{,},Val,$XO,,,oq_7_,,,b,:,Float,;,},Class,d,{,Val,_,:,__,;,Var,T,:,Array,[,Array,[,Array,[,Array,[,Float,,,30,],,,0B10,],,,017,],,,0b11,],;,$3,(,),{,},Constructor,(,),{,},},Class,H_A,:,w_,{,},Class,V,{,Destructor,(,),{,},Val,Gt,:,Float,;,},Class,_,:,Y,{,},<EOF>''',
                101
            )
        )

    def test_1532(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{}Class _Ng{}Class O_{Val $_:Array [Array [Float ,0X6_1],0b10];}Class C6w74y49:__{}Class y:w2{}Class A:k_0{$I(){} }''',
                '''Class,y,{,},Class,_Ng,{,},Class,O_,{,Val,$_,:,Array,[,Array,[,Float,,,0X61,],,,0b10,],;,},Class,C6w74y49,:,__,{,},Class,y,:,w2,{,},Class,A,:,k_0,{,$I,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1533(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q0{Constructor (x:Float ;_:_;Zp:Array [Array [Boolean ,0B100010],0B1];_:Array [Array [Array [Array [Array [Int ,0xA],0XF2F_3],42],0B100010],42];_O6:_){} }''',
                '''Class,q0,{,Constructor,(,x,:,Float,;,_,:,_,;,Zp,:,Array,[,Array,[,Boolean,,,0B100010,],,,0B1,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xA,],,,0XF2F3,],,,42,],,,0B100010,],,,42,],;,_O6,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1534(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5:_4{$734(S,j5a:ZS__;Q:Array [Array [Array [Array [Array [String ,9],54],0125],0x2],0125];_:Int ;z_H:Int ;R:Array [Array [String ,0X2C],0125]){}_(L:Array [Int ,0b1];W,I:Array [Array [Array [Float ,54],1_9],6];lE,j:Int ){} }''',
                '''Class,_5,:,_4,{,$734,(,S,,,j5a,:,ZS__,;,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,9,],,,54,],,,0125,],,,0x2,],,,0125,],;,_,:,Int,;,z_H,:,Int,;,R,:,Array,[,Array,[,String,,,0X2C,],,,0125,],),{,},_,(,L,:,Array,[,Int,,,0b1,],;,W,,,I,:,Array,[,Array,[,Array,[,Float,,,54,],,,19,],,,6,],;,lE,,,j,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1535(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Qs{Var _,_t:_;Var _0L2_:Int ;Val V:Array [Array [Float ,0x1_C5],0xD];Constructor (_:_;f47,t,_,a8,_1:Array [Int ,8_6_58];CB,_,_,_:Float ){Continue ;}Var V:_;}Class _{}''',
                '''Class,_,:,Qs,{,Var,_,,,_t,:,_,;,Var,_0L2_,:,Int,;,Val,V,:,Array,[,Array,[,Float,,,0x1C5,],,,0xD,],;,Constructor,(,_,:,_,;,f47,,,t,,,_,,,a8,,,_1,:,Array,[,Int,,,8658,],;,CB,,,_,,,_,,,_,:,Float,),{,Continue,;,},Var,V,:,_,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1536(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M_u:f67sR{Constructor (p:j;_:Array [Array [Array [Array [Boolean ,0B1010101],03],0B1],7];z_,k,w:Int ;Z:C){Break ;}Destructor (){} }Class _{}Class _{}''',
                '''Class,_M_u,:,f67sR,{,Constructor,(,p,:,j,;,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1010101,],,,03,],,,0B1,],,,7,],;,z_,,,k,,,w,:,Int,;,Z,:,C,),{,Break,;,},Destructor,(,),{,},},Class,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1537(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n6{__6l(_C,jSa,__,C__72:Array [Array [Float ,0x3],0B1011100];v:Array [Array [Array [Int ,40],035],0B1011100]){ {} }}Class _U1:__{Val $8:Float ;Destructor (){Return ;}Var m_,$2,$_:Array [Boolean ,062_0_3];}''',
                '''Class,n6,{,__6l,(,_C,,,jSa,,,__,,,C__72,:,Array,[,Array,[,Float,,,0x3,],,,0B1011100,],;,v,:,Array,[,Array,[,Array,[,Int,,,40,],,,035,],,,0B1011100,],),{,{,},},},Class,_U1,:,__,{,Val,$8,:,Float,;,Destructor,(,),{,Return,;,},Var,m_,,,$2,,,$_,:,Array,[,Boolean,,,06203,],;,},<EOF>''',
                101
            )
        )

    def test_1538(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:Y{Destructor (){}Var $_,_,$8:Array [Int ,0b10_0];Val __3_,$_7:Float ;Destructor (){}Constructor (_:_x1){} }''',
                '''Class,___,:,Y,{,Destructor,(,),{,},Var,$_,,,_,,,$8,:,Array,[,Int,,,0b100,],;,Val,__3_,,,$_7,:,Float,;,Destructor,(,),{,},Constructor,(,_,:,_x1,),{,},},<EOF>''',
                101
            )
        )

    def test_1539(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W:o{Var $y,$WB:Array [Array [Array [Array [Array [Int ,0B1],0x1_81],063],03],39_6];Var $6__p0_M:Array [Int ,0XB];}''',
                '''Class,_W,:,o,{,Var,$y,,,$WB,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0x181,],,,063,],,,03,],,,396,],;,Var,$6__p0_M,:,Array,[,Int,,,0XB,],;,},<EOF>''',
                101
            )
        )

    def test_1540(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vb:_{Constructor (r__:Array [Array [Array [Boolean ,03_7],03_7_7_5_2],0135];_:String ;u_:Boolean ;o7:_9){} }Class p:D_I{}Class F:R{}''',
                '''Class,vb,:,_,{,Constructor,(,r__,:,Array,[,Array,[,Array,[,Boolean,,,037,],,,037752,],,,0135,],;,_,:,String,;,u_,:,Boolean,;,o7,:,_9,),{,},},Class,p,:,D_I,{,},Class,F,:,R,{,},<EOF>''',
                101
            )
        )

    def test_1541(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{Val $M:i_E3;Destructor (){} }Class L_:_{Val $U5_:K___y2;$wG_T(){}Var $C,$_:String ;}Class _{}Class _:_{Var _:Array [Array [String ,0B1_1_0],06_32_46];}Class _{}''',
                '''Class,E,{,Val,$M,:,i_E3,;,Destructor,(,),{,},},Class,L_,:,_,{,Val,$U5_,:,K___y2,;,$wG_T,(,),{,},Var,$C,,,$_,:,String,;,},Class,_,{,},Class,_,:,_,{,Var,_,:,Array,[,Array,[,String,,,0B110,],,,063246,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1542(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c_:_{Var $_,rKm6:Array [String ,0x5B];Constructor (H:Array [Float ,0115]){} }Class X:_73{}Class _W:_q{Destructor (){} }Class u9R{}''',
                '''Class,c_,:,_,{,Var,$_,,,rKm6,:,Array,[,String,,,0x5B,],;,Constructor,(,H,:,Array,[,Float,,,0115,],),{,},},Class,X,:,_73,{,},Class,_W,:,_q,{,Destructor,(,),{,},},Class,u9R,{,},<EOF>''',
                101
            )
        )

    def test_1543(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:_{}Class c{Constructor (_k,_Z27:Array [Array [Array [String ,0x40],59],59]){}Destructor (){}Constructor (){} }''',
                '''Class,L,:,_,{,},Class,c,{,Constructor,(,_k,,,_Z27,:,Array,[,Array,[,Array,[,String,,,0x40,],,,59,],,,59,],),{,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1544(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_{Val $Vuy5,_,$a,$_,_:XP;Var __l,_,$o,$_,__:Int ;}Class _:Z7{$3(_s:Float ;q_X3G,Z,_,_L:Float ){} }Class yw{Destructor (){} }Class _{}Class _:_{}''',
                '''Class,N,:,_,{,Val,$Vuy5,,,_,,,$a,,,$_,,,_,:,XP,;,Var,__l,,,_,,,$o,,,$_,,,__,:,Int,;,},Class,_,:,Z7,{,$3,(,_s,:,Float,;,q_X3G,,,Z,,,_,,,_L,:,Float,),{,},},Class,yw,{,Destructor,(,),{,},},Class,_,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1545(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v_:r9__{}Class E:_{Constructor (){}Destructor (){}Val r_7_915_8q,_,$_95p,a3Lce_,N_:Array [String ,070];}Class _{}''',
                '''Class,_v_,:,r9__,{,},Class,E,:,_,{,Constructor,(,),{,},Destructor,(,),{,},Val,r_7_915_8q,,,_,,,$_95p,,,a3Lce_,,,N_,:,Array,[,String,,,070,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1546(self):
        self.assertTrue(
            TestLexer.test(
                '''Class SY_:__{Val _po_t:Array [Array [Array [Array [Array [Array [String ,015162_0],0b1],0b1001100],0B10],0B1_1],29];}''',
                '''Class,SY_,:,__,{,Val,_po_t,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0151620,],,,0b1,],,,0b1001100,],,,0B10,],,,0B11,],,,29,],;,},<EOF>''',
                101
            )
        )

    def test_1547(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$1(_:Array [Array [Array [Array [Int ,0X3],0111],0b11_01111],0b100];F2:Array [String ,86]){} }Class _V11_4n:_{}''',
                '''Class,_,:,_,{,$1,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X3,],,,0111,],,,0b1101111,],,,0b100,],;,F2,:,Array,[,String,,,86,],),{,},},Class,_V11_4n,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1548(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k2WUr0:_{}Class P{}Class _{Constructor (x2,C,__,d:p_7T;m:Array [Array [Array [Int ,93],054],0X3E]){} }Class __{Destructor (){} }''',
                '''Class,_k2WUr0,:,_,{,},Class,P,{,},Class,_,{,Constructor,(,x2,,,C,,,__,,,d,:,p_7T,;,m,:,Array,[,Array,[,Array,[,Int,,,93,],,,054,],,,0X3E,],),{,},},Class,__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1549(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:gJ_0I1{}Class _:rJ0z{Var $R3__,$_,_4,$6:Array [Array [Array [Array [Array [String ,0B100010],0x54],05],0B1],0b1];_(){} }Class _{}''',
                '''Class,_,:,gJ_0I1,{,},Class,_,:,rJ0z,{,Var,$R3__,,,$_,,,_4,,,$6,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B100010,],,,0x54,],,,05,],,,0B1,],,,0b1,],;,_,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1550(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$8(lF2:Array [Array [String ,0XD],02_3_0_7_34_04];_S,__1,_,mu,r_:String ){Break ;} }Class _{}Class C_:__{}''',
                '''Class,_,{,$8,(,lF2,:,Array,[,Array,[,String,,,0XD,],,,023073404,],;,_S,,,__1,,,_,,,mu,,,r_,:,String,),{,Break,;,},},Class,_,{,},Class,C_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_1551(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:A_{}Class A5:__{$0(){}K3(_tW_Dw,jw:_c_18;_8,u,m_xp6,q:Array [Array [Array [Boolean ,0141],05],07]){} }''',
                '''Class,_,{,},Class,_,:,A_,{,},Class,A5,:,__,{,$0,(,),{,},K3,(,_tW_Dw,,,jw,:,_c_18,;,_8,,,u,,,m_xp6,,,q,:,Array,[,Array,[,Array,[,Boolean,,,0141,],,,05,],,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_1552(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m6:_{Constructor (){Var _7__:Float ;} }Class _:_4{$x(x,__:Array [Boolean ,01]){}Constructor (_2,__,x9n_:Array [Boolean ,0XD];_R,_,_9_0L,_:Array [String ,0X4A];U,IO__p:Array [Array [Int ,4],0X9];_O_xim_R4:Boolean ;o,_F3:String ){}Destructor (){} }''',
                '''Class,m6,:,_,{,Constructor,(,),{,Var,_7__,:,Float,;,},},Class,_,:,_4,{,$x,(,x,,,__,:,Array,[,Boolean,,,01,],),{,},Constructor,(,_2,,,__,,,x9n_,:,Array,[,Boolean,,,0XD,],;,_R,,,_,,,_9_0L,,,_,:,Array,[,String,,,0X4A,],;,U,,,IO__p,:,Array,[,Array,[,Int,,,4,],,,0X9,],;,_O_xim_R4,:,Boolean,;,o,,,_F3,:,String,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1553(self):
        self.assertTrue(
            TestLexer.test(
                '''Class HO:k4i_0{Destructor (){Return ;}Val $94:Array [Boolean ,8];Var $6:_o;}Class _{Destructor (){}m_8_(GE4:C){} }''',
                '''Class,HO,:,k4i_0,{,Destructor,(,),{,Return,;,},Val,$94,:,Array,[,Boolean,,,8,],;,Var,$6,:,_o,;,},Class,_,{,Destructor,(,),{,},m_8_,(,GE4,:,C,),{,},},<EOF>''',
                101
            )
        )

    def test_1554(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class j:E5{}Class _48:_{Constructor (P1:String ;c___,z_,O,_:Array [Array [Int ,0x73],5_3];sx:Array [Int ,0X2_4_DA];_:_){} }''',
                '''Class,_,:,_,{,},Class,j,:,E5,{,},Class,_48,:,_,{,Constructor,(,P1,:,String,;,c___,,,z_,,,O,,,_,:,Array,[,Array,[,Int,,,0x73,],,,53,],;,sx,:,Array,[,Int,,,0X24DA,],;,_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1555(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:W__{Var Q_,_:__;Destructor (){} }Class TK{$_9(T2n,C_:String ;i:Array [Float ,0b1]){}Val __:String ;Var Wv2:_V;}''',
                '''Class,_,:,W__,{,Var,Q_,,,_,:,__,;,Destructor,(,),{,},},Class,TK,{,$_9,(,T2n,,,C_,:,String,;,i,:,Array,[,Float,,,0b1,],),{,},Val,__,:,String,;,Var,Wv2,:,_V,;,},<EOF>''',
                101
            )
        )

    def test_1556(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:_82z{}Class _t6{Var dW:Array [Float ,0xD];$_(_91,_z5,wA,_,_,V,_c:k;_x:Array [Array [Array [Float ,0116],0x1B],0X64];K,v,h,b6j5P0:Array [Array [Array [Boolean ,7],0367],36]){} }''',
                '''Class,a,:,_82z,{,},Class,_t6,{,Var,dW,:,Array,[,Float,,,0xD,],;,$_,(,_91,,,_z5,,,wA,,,_,,,_,,,V,,,_c,:,k,;,_x,:,Array,[,Array,[,Array,[,Float,,,0116,],,,0x1B,],,,0X64,],;,K,,,v,,,h,,,b6j5P0,:,Array,[,Array,[,Array,[,Boolean,,,7,],,,0367,],,,36,],),{,},},<EOF>''',
                101
            )
        )

    def test_1557(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Zg{Destructor (){}Constructor (F,_,___:Boolean ;gu5:__0g;__,t,_89iW4:Array [Int ,07_2]){} }Class _{}Class E{$8_(_1_381M:String ;_r:Array [Array [Float ,0B1],14];A,_g,m6_,_:Q4){} }''',
                '''Class,Zg,{,Destructor,(,),{,},Constructor,(,F,,,_,,,___,:,Boolean,;,gu5,:,__0g,;,__,,,t,,,_89iW4,:,Array,[,Int,,,072,],),{,},},Class,_,{,},Class,E,{,$8_,(,_1_381M,:,String,;,_r,:,Array,[,Array,[,Float,,,0B1,],,,14,],;,A,,,_g,,,m6_,,,_,:,Q4,),{,},},<EOF>''',
                101
            )
        )

    def test_1558(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Destructor (){}Var $8B_:Array [Array [Boolean ,0b100101],90];_(){} }Class _:_{}Class ___:__{}Class _780{}Class V:_5{Destructor (){}Destructor (){Break ;} }''',
                '''Class,_,{,Destructor,(,),{,},Destructor,(,),{,},Var,$8B_,:,Array,[,Array,[,Boolean,,,0b100101,],,,90,],;,_,(,),{,},},Class,_,:,_,{,},Class,___,:,__,{,},Class,_780,{,},Class,V,:,_5,{,Destructor,(,),{,},Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1559(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _I{Constructor (p:Array [Array [Array [Array [String ,0X5_3_4410],06],0b1_111],0XB_30_D];v:String ;g:Int ){} }''',
                '''Class,_I,{,Constructor,(,p,:,Array,[,Array,[,Array,[,Array,[,String,,,0X534410,],,,06,],,,0b1111,],,,0XB30D,],;,v,:,String,;,g,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1560(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ok_:_{_2fO2(_,_:Array [Array [Int ,34],34];_8_b1_,__9,n__0,E:String ;e,_,_1,_,G,m,g:Array [Int ,050];c_:Array [Array [Array [Array [Array [Array [Int ,0b110011],050],0B110110],0X1B],0b110011],0x1A]){}Val $__v_:Float ;Constructor (_1,___U_:_){} }''',
                '''Class,Ok_,:,_,{,_2fO2,(,_,,,_,:,Array,[,Array,[,Int,,,34,],,,34,],;,_8_b1_,,,__9,,,n__0,,,E,:,String,;,e,,,_,,,_1,,,_,,,G,,,m,,,g,:,Array,[,Int,,,050,],;,c_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b110011,],,,050,],,,0B110110,],,,0X1B,],,,0b110011,],,,0x1A,],),{,},Val,$__v_,:,Float,;,Constructor,(,_1,,,___U_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1561(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4_C_:FQJ41{Destructor (){Break ;}Var $D0,__G:Array [Array [Array [Boolean ,063],0b11_1_1_1],0b1_1_1_1];}Class O01:x{}''',
                '''Class,_4_C_,:,FQJ41,{,Destructor,(,),{,Break,;,},Var,$D0,,,__G,:,Array,[,Array,[,Array,[,Boolean,,,063,],,,0b11111,],,,0b1111,],;,},Class,O01,:,x,{,},<EOF>''',
                101
            )
        )

    def test_1562(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{Var $_:Array [Array [Float ,062],9];w5(_8,_7G_,__rU,_:M){ {}_::$A();}Destructor (){New _()._1();Break ;} }''',
                '''Class,e,{,Var,$_,:,Array,[,Array,[,Float,,,062,],,,9,],;,w5,(,_8,,,_7G_,,,__rU,,,_,:,M,),{,{,},_,::,$A,(,),;,},Destructor,(,),{,New,_,(,),.,_1,(,),;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1563(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __o{$3(_sh10,b,F,Kw0I2_,N_,_,_z3XN8,y8:__2;_:w_;i:_4_;D:Array [String ,0b1];_,___,_7_,_,_K,H,_:_y){Break ;} }Class _j{Val $4:Array [Float ,04];}''',
                '''Class,_,{,},Class,__o,{,$3,(,_sh10,,,b,,,F,,,Kw0I2_,,,N_,,,_,,,_z3XN8,,,y8,:,__2,;,_,:,w_,;,i,:,_4_,;,D,:,Array,[,String,,,0b1,],;,_,,,___,,,_7_,,,_,,,_K,,,H,,,_,:,_y,),{,Break,;,},},Class,_j,{,Val,$4,:,Array,[,Float,,,04,],;,},<EOF>''',
                101
            )
        )

    def test_1564(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_4m{Constructor (_0:_;_B:Array [Float ,0x60_F1FC_A];_,H1,N7_,__9,_,U2,_:_;_:Array [Array [Boolean ,0B1000],0B1]){} }''',
                '''Class,_,:,_4m,{,Constructor,(,_0,:,_,;,_B,:,Array,[,Float,,,0x60F1FCA,],;,_,,,H1,,,N7_,,,__9,,,_,,,U2,,,_,:,_,;,_,:,Array,[,Array,[,Boolean,,,0B1000,],,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1565(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{}Class _O:L01s{$1_(_:A;j_:Array [Array [String ,0b1001001],050]){ {} }Constructor (){}Var $_,$_2,I,_:String ;}Class J_:V_{}Class q8_{}''',
                '''Class,Q,{,},Class,_O,:,L01s,{,$1_,(,_,:,A,;,j_,:,Array,[,Array,[,String,,,0b1001001,],,,050,],),{,{,},},Constructor,(,),{,},Var,$_,,,$_2,,,I,,,_,:,String,;,},Class,J_,:,V_,{,},Class,q8_,{,},<EOF>''',
                101
            )
        )

    def test_1566(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B6:_{}Class _0_6{Constructor (l:Array [Array [Array [Boolean ,076],39],0b1000011];p:Array [Array [Int ,0132],0b100]){} }''',
                '''Class,B6,:,_,{,},Class,_0_6,{,Constructor,(,l,:,Array,[,Array,[,Array,[,Boolean,,,076,],,,39,],,,0b1000011,],;,p,:,Array,[,Array,[,Int,,,0132,],,,0b100,],),{,},},<EOF>''',
                101
            )
        )

    def test_1567(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$04g(_:Array [Array [Boolean ,3],05_54];J,YN,_:Int ;z:String ;I04:Array [Array [Array [String ,3],0b10001],0b100];_83_u,W_G9:Array [Array [Array [String ,0XF],0106],0106];_:Array [Boolean ,0B11011]){}Constructor (J__,r:_;_,_H,o,BI,V_,A:Boolean ;e,_T,O:String ;p,F86,_:Int ;_,Qy_e,j,w_:Array [Int ,3];o,_F_,_,X,u__0:Boolean ;_:Array [Array [Array [Boolean ,0b1_1_0],0X2F],0B11011];_:Float ){Var _o_:Z;}Var $5,$5:_8;}Class l:Jjr9w_L_{}''',
                '''Class,_,{,$04g,(,_,:,Array,[,Array,[,Boolean,,,3,],,,0554,],;,J,,,YN,,,_,:,Int,;,z,:,String,;,I04,:,Array,[,Array,[,Array,[,String,,,3,],,,0b10001,],,,0b100,],;,_83_u,,,W_G9,:,Array,[,Array,[,Array,[,String,,,0XF,],,,0106,],,,0106,],;,_,:,Array,[,Boolean,,,0B11011,],),{,},Constructor,(,J__,,,r,:,_,;,_,,,_H,,,o,,,BI,,,V_,,,A,:,Boolean,;,e,,,_T,,,O,:,String,;,p,,,F86,,,_,:,Int,;,_,,,Qy_e,,,j,,,w_,:,Array,[,Int,,,3,],;,o,,,_F_,,,_,,,X,,,u__0,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0b110,],,,0X2F,],,,0B11011,],;,_,:,Float,),{,Var,_o_,:,Z,;,},Var,$5,,,$5,:,_8,;,},Class,l,:,Jjr9w_L_,{,},<EOF>''',
                101
            )
        )

    def test_1568(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F_:R6{Constructor (_,h,x:U_W){}Val $5_,F7,R__,g:Boolean ;}Class _{}Class B:__C{Val _67t,Yj,$7,j,$7,$K2:Array [Boolean ,0B11011];Constructor (){} }''',
                '''Class,F_,:,R6,{,Constructor,(,_,,,h,,,x,:,U_W,),{,},Val,$5_,,,F7,,,R__,,,g,:,Boolean,;,},Class,_,{,},Class,B,:,__C,{,Val,_67t,,,Yj,,,$7,,,j,,,$7,,,$K2,:,Array,[,Boolean,,,0B11011,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1569(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:gV{$p(q:Int ;V,_:String ;_:Array [Array [Array [Float ,043],0X880],0B111]){Break ;}Destructor (){} }Class _{X(){}Var Vw36I:Float ;Destructor (){} }''',
                '''Class,__,:,gV,{,$p,(,q,:,Int,;,V,,,_,:,String,;,_,:,Array,[,Array,[,Array,[,Float,,,043,],,,0X880,],,,0B111,],),{,Break,;,},Destructor,(,),{,},},Class,_,{,X,(,),{,},Var,Vw36I,:,Float,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1570(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{_(Y,W_3,_,_p_:bh;a,__1_:Int ;_1,__N_,_d,p,_7,K:Boolean ){Return ;}Constructor (__:Boolean ){} }Class S7:_{}''',
                '''Class,F,{,_,(,Y,,,W_3,,,_,,,_p_,:,bh,;,a,,,__1_,:,Int,;,_1,,,__N_,,,_d,,,p,,,_7,,,K,:,Boolean,),{,Return,;,},Constructor,(,__,:,Boolean,),{,},},Class,S7,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1571(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pV:_{}Class k:s__{Var $53_:Array [Array [Array [Array [Array [Boolean ,0xCE],60_419_6],06_4],27],0b1011110];}Class _:n3_{Val _95_8v:f;}Class _{$C(){} }''',
                '''Class,pV,:,_,{,},Class,k,:,s__,{,Var,$53_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xCE,],,,604196,],,,064,],,,27,],,,0b1011110,],;,},Class,_,:,n3_,{,Val,_95_8v,:,f,;,},Class,_,{,$C,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1572(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $W_3_61,_,$_:Float ;Destructor (){}X(H68,k_:Boolean ;_CKDX__,_,_:__){}Val F_,$796,bb_Cm,$_,$_,_pc:_;}''',
                '''Class,_,:,_,{,Var,$W_3_61,,,_,,,$_,:,Float,;,Destructor,(,),{,},X,(,H68,,,k_,:,Boolean,;,_CKDX__,,,_,,,_,:,__,),{,},Val,F_,,,$796,,,bb_Cm,,,$_,,,$_,,,_pc,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1573(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I{}Class _{}Class t84:i0{}Class W:A6{Val $5YY3:_;$n__k_10(M_,___7:v_I){} }Class Lg___{}Class ZM{Val $_:Array [Array [Boolean ,01_55],7];}''',
                '''Class,_,:,I,{,},Class,_,{,},Class,t84,:,i0,{,},Class,W,:,A6,{,Val,$5YY3,:,_,;,$n__k_10,(,M_,,,___7,:,v_I,),{,},},Class,Lg___,{,},Class,ZM,{,Val,$_,:,Array,[,Array,[,Boolean,,,0155,],,,7,],;,},<EOF>''',
                101
            )
        )

    def test_1574(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{Destructor (){} }Class _:_{}Class A{Var _74:Array [Array [Array [Boolean ,0B1100100],28],28];}Class V__FEf9{Val $M,_C9Y5_:c7;}''',
                '''Class,G,{,Destructor,(,),{,},},Class,_,:,_,{,},Class,A,{,Var,_74,:,Array,[,Array,[,Array,[,Boolean,,,0B1100100,],,,28,],,,28,],;,},Class,V__FEf9,{,Val,$M,,,_C9Y5_,:,c7,;,},<EOF>''',
                101
            )
        )

    def test_1575(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_x{}Class _2_:X{Var $5,$0:Array [Array [Array [Array [Array [Boolean ,010],0X1_A],010],1199_46_9_5],0b111001];Var $2:Array [Array [Boolean ,0xB],010];}Class F{Constructor (){} }Class N{}''',
                '''Class,M_x,{,},Class,_2_,:,X,{,Var,$5,,,$0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,010,],,,0X1A,],,,010,],,,11994695,],,,0b111001,],;,Var,$2,:,Array,[,Array,[,Boolean,,,0xB,],,,010,],;,},Class,F,{,Constructor,(,),{,},},Class,N,{,},<EOF>''',
                101
            )
        )

    def test_1576(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o_{___(G,Tl_o,Ay:Array [Array [Float ,5],01]){}_5(x__u:_3;_39:Array [Array [Array [Array [Boolean ,0b1011110],063],0B1],063];g___D_Y:Array [Array [String ,063],063]){}Val $9_j:Boolean ;}''',
                '''Class,o_,{,___,(,G,,,Tl_o,,,Ay,:,Array,[,Array,[,Float,,,5,],,,01,],),{,},_5,(,x__u,:,_3,;,_39,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1011110,],,,063,],,,0B1,],,,063,],;,g___D_Y,:,Array,[,Array,[,String,,,063,],,,063,],),{,},Val,$9_j,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1577(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i:__{Val $7R:String ;Var g_:Boolean ;Constructor (R:Array [Array [Int ,0b10001],02]){}Var $D3Y6F,XKV:Array [Array [Float ,0X3],0126];}''',
                '''Class,i,:,__,{,Val,$7R,:,String,;,Var,g_,:,Boolean,;,Constructor,(,R,:,Array,[,Array,[,Int,,,0b10001,],,,02,],),{,},Var,$D3Y6F,,,XKV,:,Array,[,Array,[,Float,,,0X3,],,,0126,],;,},<EOF>''',
                101
            )
        )

    def test_1578(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C_:_4{Constructor (yE,Y_,_:Array [Int ,0x62];FI2n_544,_4U__:Array [Array [Array [String ,0B1011111],7],04];a__,_3M:B3_W;xd,_,O9_,t,v_4_,_l7S,_:Int ){}Var $4,_:r;}''',
                '''Class,C_,:,_4,{,Constructor,(,yE,,,Y_,,,_,:,Array,[,Int,,,0x62,],;,FI2n_544,,,_4U__,:,Array,[,Array,[,Array,[,String,,,0B1011111,],,,7,],,,04,],;,a__,,,_3M,:,B3_W,;,xd,,,_,,,O9_,,,t,,,v_4_,,,_l7S,,,_,:,Int,),{,},Var,$4,,,_,:,r,;,},<EOF>''',
                101
            )
        )

    def test_1579(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{}Class W:__m{m(){} }Class q2:g{Var $g,Z4,P,$_:Float ;$8(_,_R_,_U,_cv1v5,_63,P,_5_:Array [Int ,061];O:p_;t_:Boolean ){} }''',
                '''Class,v,{,},Class,W,:,__m,{,m,(,),{,},},Class,q2,:,g,{,Var,$g,,,Z4,,,P,,,$_,:,Float,;,$8,(,_,,,_R_,,,_U,,,_cv1v5,,,_63,,,P,,,_5_,:,Array,[,Int,,,061,],;,O,:,p_,;,t_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1580(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:_{Constructor (_:r;_,_,___V:Array [Array [String ,05],04];T,_:__nV;_,__50,O:String ){Break ;} }Class S408w2:r{}''',
                '''Class,n,:,_,{,Constructor,(,_,:,r,;,_,,,_,,,___V,:,Array,[,Array,[,String,,,05,],,,04,],;,T,,,_,:,__nV,;,_,,,__50,,,O,:,String,),{,Break,;,},},Class,S408w2,:,r,{,},<EOF>''',
                101
            )
        )

    def test_1581(self):
        self.assertTrue(
            TestLexer.test(
                '''Class uj2{Constructor (){} }Class __{Constructor (_54k,_fOE:Array [Array [Array [String ,53_3],6],0X3];d,R_:_t){} }''',
                '''Class,uj2,{,Constructor,(,),{,},},Class,__,{,Constructor,(,_54k,,,_fOE,:,Array,[,Array,[,Array,[,String,,,533,],,,6,],,,0X3,],;,d,,,R_,:,_t,),{,},},<EOF>''',
                101
            )
        )

    def test_1582(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Constructor (){} }Class m{}Class _{}Class A:G{}Class b_2:O{a(){Break ;Val CH,w2_3,_,_:X;Return ;Break ;}Constructor (p:Int ){} }''',
                '''Class,_,{,Destructor,(,),{,},Constructor,(,),{,},},Class,m,{,},Class,_,{,},Class,A,:,G,{,},Class,b_2,:,O,{,a,(,),{,Break,;,Val,CH,,,w2_3,,,_,,,_,:,X,;,Return,;,Break,;,},Constructor,(,p,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1583(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Lr{}Class DupB:a9H_X{}Class __J6{Var $_,$l:Array [Array [Array [Array [Int ,16],0x33],0B100100],16];Var _,_:Int ;}''',
                '''Class,Lr,{,},Class,DupB,:,a9H_X,{,},Class,__J6,{,Var,$_,,,$l,:,Array,[,Array,[,Array,[,Array,[,Int,,,16,],,,0x33,],,,0B100100,],,,16,],;,Var,_,,,_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1584(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:t{Var _,$D:__;Val $21:Array [Array [Array [Boolean ,0b1],0x41],0x41];}Class _M_:_{}Class p_{}Class K{}Class _g6{}Class _{Var _,_:Boolean ;}Class _{}''',
                '''Class,_,:,t,{,Var,_,,,$D,:,__,;,Val,$21,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0x41,],,,0x41,],;,},Class,_M_,:,_,{,},Class,p_,{,},Class,K,{,},Class,_g6,{,},Class,_,{,Var,_,,,_,:,Boolean,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1585(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h9:__{}Class M_k{Val $____:Array [Array [Array [Float ,0b110001],0b110001],0X62];Val _:Array [Int ,0B1];$5(_8X,t,__:_){} }Class W{}''',
                '''Class,h9,:,__,{,},Class,M_k,{,Val,$____,:,Array,[,Array,[,Array,[,Float,,,0b110001,],,,0b110001,],,,0X62,],;,Val,_,:,Array,[,Int,,,0B1,],;,$5,(,_8X,,,t,,,__,:,_,),{,},},Class,W,{,},<EOF>''',
                101
            )
        )

    def test_1586(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_8:Array [Array [Int ,05],0X44]){Val _9:Array [Array [Array [Int ,10],07_60_7],35_1_6];Break ;}Constructor (){} }Class _{}Class M0:_C{Var v,$u4:Y_;}''',
                '''Class,_,{,Constructor,(,_8,:,Array,[,Array,[,Int,,,05,],,,0X44,],),{,Val,_9,:,Array,[,Array,[,Array,[,Int,,,10,],,,07607,],,,3516,],;,Break,;,},Constructor,(,),{,},},Class,_,{,},Class,M0,:,_C,{,Var,v,,,$u4,:,Y_,;,},<EOF>''',
                101
            )
        )

    def test_1587(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y_:_5_{Constructor (g6X_,_Y:Array [Boolean ,0b1];OC:Array [Int ,06];s47:r){} }Class E:_{Val Q,$v,$0,$_,$r_,_p,$Q__F:Array [Float ,0b1];}Class jw_:p{Destructor (){} }Class P:_50{}''',
                '''Class,y_,:,_5_,{,Constructor,(,g6X_,,,_Y,:,Array,[,Boolean,,,0b1,],;,OC,:,Array,[,Int,,,06,],;,s47,:,r,),{,},},Class,E,:,_,{,Val,Q,,,$v,,,$0,,,$_,,,$r_,,,_p,,,$Q__F,:,Array,[,Float,,,0b1,],;,},Class,jw_,:,p,{,Destructor,(,),{,},},Class,P,:,_50,{,},<EOF>''',
                101
            )
        )

    def test_1588(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z__:nM_{Constructor (w,s,Z,Mrr2:v;o:Boolean ){Val I:F6;}Constructor (){}_0(N,_8:Int ;_,BZ_d:b_;_,__2_,H0,__:_){} }Class K:_{}Class K{Var $h2,s55__70,y,$r_,$_:Array [Array [Array [Boolean ,0b111_0],06],04_66_6];}Class n_QPs7{Constructor (){}$0(){Return ;Continue ;__::$ftn.v86U();Break ;} }Class _:h{Val _,$4,$_:String ;}Class _J2:t{Destructor (){} }''',
                '''Class,z__,:,nM_,{,Constructor,(,w,,,s,,,Z,,,Mrr2,:,v,;,o,:,Boolean,),{,Val,I,:,F6,;,},Constructor,(,),{,},_0,(,N,,,_8,:,Int,;,_,,,BZ_d,:,b_,;,_,,,__2_,,,H0,,,__,:,_,),{,},},Class,K,:,_,{,},Class,K,{,Var,$h2,,,s55__70,,,y,,,$r_,,,$_,:,Array,[,Array,[,Array,[,Boolean,,,0b1110,],,,06,],,,04666,],;,},Class,n_QPs7,{,Constructor,(,),{,},$0,(,),{,Return,;,Continue,;,__,::,$ftn,.,v86U,(,),;,Break,;,},},Class,_,:,h,{,Val,_,,,$4,,,$_,:,String,;,},Class,_J2,:,t,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1589(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ed_{}Class __L_:_{Val C,$_,p,$nT,$30,$a_l:Array [Float ,0X7];Val _:Array [Float ,065];}Class _{}Class _S{}Class M7r:y{}''',
                '''Class,Ed_,{,},Class,__L_,:,_,{,Val,C,,,$_,,,p,,,$nT,,,$30,,,$a_l,:,Array,[,Float,,,0X7,],;,Val,_,:,Array,[,Float,,,065,],;,},Class,_,{,},Class,_S,{,},Class,M7r,:,y,{,},<EOF>''',
                101
            )
        )

    def test_1590(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Var $Dq,$5:s;Destructor (){Break ;{}Return ;}Val _,$re:Array [Array [Array [String ,14],0B110_0],0b110];}''',
                '''Class,Q,{,Var,$Dq,,,$5,:,s,;,Destructor,(,),{,Break,;,{,},Return,;,},Val,_,,,$re,:,Array,[,Array,[,Array,[,String,,,14,],,,0B1100,],,,0b110,],;,},<EOF>''',
                101
            )
        )

    def test_1591(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4{Constructor (y:String ;_8,_W,__f,i_,sj,P:Array [Float ,8];__12E:Array [Array [Int ,6],0X63]){}Val $335,d:_q2;Destructor (){ {} }}''',
                '''Class,_4,{,Constructor,(,y,:,String,;,_8,,,_W,,,__f,,,i_,,,sj,,,P,:,Array,[,Float,,,8,],;,__12E,:,Array,[,Array,[,Int,,,6,],,,0X63,],),{,},Val,$335,,,d,:,_q2,;,Destructor,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1592(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _K9__:_n_{Constructor (o0:O;o,g8:Array [Array [Array [Boolean ,0x2],0x11],021]){}Constructor (_46:kK;_:Array [String ,0b1]){}Destructor (){} }''',
                '''Class,_K9__,:,_n_,{,Constructor,(,o0,:,O,;,o,,,g8,:,Array,[,Array,[,Array,[,Boolean,,,0x2,],,,0x11,],,,021,],),{,},Constructor,(,_46,:,kK,;,_,:,Array,[,String,,,0b1,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1593(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:L_L{}Class _{}Class q6_3:P_8{Destructor (){} }Class D9:UR{}Class _{}Class _9{}Class W6:_{Destructor (){} }Class Y{}''',
                '''Class,h,:,L_L,{,},Class,_,{,},Class,q6_3,:,P_8,{,Destructor,(,),{,},},Class,D9,:,UR,{,},Class,_,{,},Class,_9,{,},Class,W6,:,_,{,Destructor,(,),{,},},Class,Y,{,},<EOF>''',
                101
            )
        )

    def test_1594(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{Var $_,_:gq;}Class _I{}Class _{Val _:Array [Array [Boolean ,0B110_101],055];}Class UD{}Class ___{Var $3,d,$e,b8:Array [Array [Array [Array [Array [Array [String ,0b1_0],0x51],0b10000],0B1],0x51],07];}''',
                '''Class,x,{,Var,$_,,,_,:,gq,;,},Class,_I,{,},Class,_,{,Val,_,:,Array,[,Array,[,Boolean,,,0B110101,],,,055,],;,},Class,UD,{,},Class,___,{,Var,$3,,,d,,,$e,,,b8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b10,],,,0x51,],,,0b10000,],,,0B1,],,,0x51,],,,07,],;,},<EOF>''',
                101
            )
        )

    def test_1595(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{}Class _:q{}Class _{}Class _{}Class _B{Val $68,m,_58C,L_:N;Val $_i_JM_,_,__,$_589,_,$7,_85,_r,_431_:Float ;}Class e_:K{}''',
                '''Class,u,{,},Class,_,:,q,{,},Class,_,{,},Class,_,{,},Class,_B,{,Val,$68,,,m,,,_58C,,,L_,:,N,;,Val,$_i_JM_,,,_,,,__,,,$_589,,,_,,,$7,,,_85,,,_r,,,_431_,:,Float,;,},Class,e_,:,K,{,},<EOF>''',
                101
            )
        )

    def test_1596(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Constructor (Z_:Float ;A_,U,_9:_;E_63s,Q_t1:j_;j,_,V:Array [Boolean ,0b1011001];_ZKj:Array [Int ,014]){Break ;Break ;} }''',
                '''Class,_,{,Destructor,(,),{,},Constructor,(,Z_,:,Float,;,A_,,,U,,,_9,:,_,;,E_63s,,,Q_t1,:,j_,;,j,,,_,,,V,:,Array,[,Boolean,,,0b1011001,],;,_ZKj,:,Array,[,Int,,,014,],),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1597(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{}Class t_:Q6{}Class _1j2m{}Class _{Destructor (){}Constructor (rE:Array [String ,0x7_4F_7F_A716];_:String ){} }Class MY_0yD{}''',
                '''Class,l,{,},Class,t_,:,Q6,{,},Class,_1j2m,{,},Class,_,{,Destructor,(,),{,},Constructor,(,rE,:,Array,[,String,,,0x74F7FA716,],;,_,:,String,),{,},},Class,MY_0yD,{,},<EOF>''',
                101
            )
        )

    def test_1598(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3L900L:_{Destructor (){Continue ;Return ;} }Class _{Var U,N,h4_,$_P:Array [Array [Boolean ,3],0B1];Constructor (f_,_:Array [Int ,27];_:Array [Array [Array [Float ,05],010],0xE];_:String ;_W1:Boolean ;_:__1;W5b,_3:Array [Boolean ,27]){}Destructor (){Break ;}Val $__:Array [Array [String ,0B1110],27];Constructor (){} }''',
                '''Class,_3L900L,:,_,{,Destructor,(,),{,Continue,;,Return,;,},},Class,_,{,Var,U,,,N,,,h4_,,,$_P,:,Array,[,Array,[,Boolean,,,3,],,,0B1,],;,Constructor,(,f_,,,_,:,Array,[,Int,,,27,],;,_,:,Array,[,Array,[,Array,[,Float,,,05,],,,010,],,,0xE,],;,_,:,String,;,_W1,:,Boolean,;,_,:,__1,;,W5b,,,_3,:,Array,[,Boolean,,,27,],),{,},Destructor,(,),{,Break,;,},Val,$__,:,Array,[,Array,[,String,,,0B1110,],,,27,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1599(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _q020_{Var _:Array [Array [Array [Array [Array [Array [Array [Array [Int ,01],0B1000101],065_1],0X7D_F2_4_B],0x22],0X12],055_51],075];Val $_4,$_:H__4_;Constructor (){} }''',
                '''Class,_q020_,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,0B1000101,],,,0651,],,,0X7DF24B,],,,0x22,],,,0X12,],,,05551,],,,075,],;,Val,$_4,,,$_,:,H__4_,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1600(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:w{$Iv9(_:String ;_,_,a6S5_,r:Array [String ,0B100110];R,_,_p,_z6_:String ){Val u_1h_J_,_,_:Int ;} }Class R{}''',
                '''Class,_,:,w,{,$Iv9,(,_,:,String,;,_,,,_,,,a6S5_,,,r,:,Array,[,String,,,0B100110,],;,R,,,_,,,_p,,,_z6_,:,String,),{,Val,u_1h_J_,,,_,,,_,:,Int,;,},},Class,R,{,},<EOF>''',
                101
            )
        )

    def test_1601(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L_7_3:D8c4u{}Class _{Constructor (_Z,d28:_K3;_:Array [Array [Array [Array [Int ,0112],0112],0B1],0b11100];_zky,E:String ){}Val $M:Array [String ,0x4D];}''',
                '''Class,L_7_3,:,D8c4u,{,},Class,_,{,Constructor,(,_Z,,,d28,:,_K3,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0112,],,,0112,],,,0B1,],,,0b11100,],;,_zky,,,E,:,String,),{,},Val,$M,:,Array,[,String,,,0x4D,],;,},<EOF>''',
                101
            )
        )

    def test_1602(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6{Constructor (J,P,_:Array [Array [Float ,10],0b1_1];K_7,Dy:String ;G:Array [Array [Array [Float ,0B10],0xD],0B1_10];r_:_){}Constructor (){} }''',
                '''Class,_6,{,Constructor,(,J,,,P,,,_,:,Array,[,Array,[,Float,,,10,],,,0b11,],;,K_7,,,Dy,:,String,;,G,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,0xD,],,,0B110,],;,r_,:,_,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1603(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Destructor (){}$5(_:Array [Array [Array [Array [Float ,0x80D],0B11101],26],073];_,i__:Array [Int ,0b1010011];Q:F21_){} }Class _5KB:C_{}Class F{}''',
                '''Class,_,:,_,{,Destructor,(,),{,},$5,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x80D,],,,0B11101,],,,26,],,,073,],;,_,,,i__,:,Array,[,Int,,,0b1010011,],;,Q,:,F21_,),{,},},Class,_5KB,:,C_,{,},Class,F,{,},<EOF>''',
                101
            )
        )

    def test_1604(self):
        self.assertTrue(
            TestLexer.test(
                '''Class bq:_{Var V:Array [Array [Int ,0B1_0],0b100111];}Class F:_l3{}Class _:_{}Class _uR4P{Val _:Array [Array [Array [Array [Int ,0b1],0x57],56],0b100111];}''',
                '''Class,bq,:,_,{,Var,V,:,Array,[,Array,[,Int,,,0B10,],,,0b100111,],;,},Class,F,:,_l3,{,},Class,_,:,_,{,},Class,_uR4P,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0x57,],,,56,],,,0b100111,],;,},<EOF>''',
                101
            )
        )

    def test_1605(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _396T:_k14{}Class _L_{Val $_,$DtK0_a,$8_4Jq,y,$E_:C;}Class _:_9{Val $u5,w,$___4t,$13751,____,_:Boolean ;}''',
                '''Class,_396T,:,_k14,{,},Class,_L_,{,Val,$_,,,$DtK0_a,,,$8_4Jq,,,y,,,$E_,:,C,;,},Class,_,:,_9,{,Val,$u5,,,w,,,$___4t,,,$13751,,,____,,,_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1606(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{b(){} }Class KY_PR1{}Class _:_{}Class _{Val $_Tl,$_,$_y0,_:j;Destructor (){Continue ;} }Class wL:I217{}''',
                '''Class,_,{,b,(,),{,},},Class,KY_PR1,{,},Class,_,:,_,{,},Class,_,{,Val,$_Tl,,,$_,,,$_y0,,,_,:,j,;,Destructor,(,),{,Continue,;,},},Class,wL,:,I217,{,},<EOF>''',
                101
            )
        )

    def test_1607(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7_0{Constructor (){}Constructor (_:B;_3:__1_;l_:Float ;_7_yyG:Boolean ){ {} }Val t0V:Array [String ,0B1011011];}''',
                '''Class,_7_0,{,Constructor,(,),{,},Constructor,(,_,:,B,;,_3,:,__1_,;,l_,:,Float,;,_7_yyG,:,Boolean,),{,{,},},Val,t0V,:,Array,[,String,,,0B1011011,],;,},<EOF>''',
                101
            )
        )

    def test_1608(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{}Class z{}Class _:n{u__2(_,a:Array [Array [Float ,050],0X40];b_R9,___,___:_;_,__8n:Array [Array [Array [Int ,045_2],050],0X40];P__:o2_){}Constructor (){} }''',
                '''Class,_,:,__,{,},Class,z,{,},Class,_,:,n,{,u__2,(,_,,,a,:,Array,[,Array,[,Float,,,050,],,,0X40,],;,b_R9,,,___,,,___,:,_,;,_,,,__8n,:,Array,[,Array,[,Array,[,Int,,,0452,],,,050,],,,0X40,],;,P__,:,o2_,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1609(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class d:q_{$J06_(r9,__K:Boolean ;K_:Array [Array [Boolean ,02_1],0XE];yp9_,_,_9:Boolean ){}Var ___6X,_,$4:String ;}''',
                '''Class,_,{,},Class,d,:,q_,{,$J06_,(,r9,,,__K,:,Boolean,;,K_,:,Array,[,Array,[,Boolean,,,021,],,,0XE,],;,yp9_,,,_,,,_9,:,Boolean,),{,},Var,___6X,,,_,,,$4,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1610(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_4:_kTa{Val __8:Array [Boolean ,38];Var $__1,Z:String ;$1(_,_Z:Array [Array [Array [Array [Array [Boolean ,0b10],0B1011111],38],0136],0B1_0_1_1];w:Array [String ,0X47];_,C:Boolean ){} }''',
                '''Class,v_4,:,_kTa,{,Val,__8,:,Array,[,Boolean,,,38,],;,Var,$__1,,,Z,:,String,;,$1,(,_,,,_Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0B1011111,],,,38,],,,0136,],,,0B1011,],;,w,:,Array,[,String,,,0X47,],;,_,,,C,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1611(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __R_:TB__{Constructor (){Continue ;} }Class z89:_n{Destructor (){}Constructor (_,__v__,_:Array [Array [Array [Array [Array [Float ,0B1],0xE],0b1001],0b1001],07]){} }''',
                '''Class,__R_,:,TB__,{,Constructor,(,),{,Continue,;,},},Class,z89,:,_n,{,Destructor,(,),{,},Constructor,(,_,,,__v__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0xE,],,,0b1001,],,,0b1001,],,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_1612(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m_S:c{}Class _81_8{}Class i{}Class R4{}Class o:q{Constructor (C8_3:String ){} }Class __1:__3_1{}Class N2{}''',
                '''Class,m_S,:,c,{,},Class,_81_8,{,},Class,i,{,},Class,R4,{,},Class,o,:,q,{,Constructor,(,C8_3,:,String,),{,},},Class,__1,:,__3_1,{,},Class,N2,{,},<EOF>''',
                101
            )
        )

    def test_1613(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Constructor (h:Float ;q3,b_tdr,h5:_4O;m4:Boolean ;q8,l4:_n){} }Class _:_{}Class x:o{$_(_,Z,F:Array [Int ,0b1]){} }Class rj0:tu_{}''',
                '''Class,___,{,Constructor,(,h,:,Float,;,q3,,,b_tdr,,,h5,:,_4O,;,m4,:,Boolean,;,q8,,,l4,:,_n,),{,},},Class,_,:,_,{,},Class,x,:,o,{,$_,(,_,,,Z,,,F,:,Array,[,Int,,,0b1,],),{,},},Class,rj0,:,tu_,{,},<EOF>''',
                101
            )
        )

    def test_1614(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8__:o{}Class _i:t{}Class y:ap59{Val U_,dD07V,_:_2;$9(_,MZ7:Array [Int ,0b1]){} }Class _8__{}Class _:Js{_n(){} }''',
                '''Class,_8__,:,o,{,},Class,_i,:,t,{,},Class,y,:,ap59,{,Val,U_,,,dD07V,,,_,:,_2,;,$9,(,_,,,MZ7,:,Array,[,Int,,,0b1,],),{,},},Class,_8__,{,},Class,_,:,Js,{,_n,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1615(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4E_{}Class _Z{}Class ___4l9{Var $Z23:String ;Var _6,$H,$_,$_11E:Array [Array [Int ,0x3_4],77];Destructor (){}Destructor (){} }''',
                '''Class,_4E_,{,},Class,_Z,{,},Class,___4l9,{,Var,$Z23,:,String,;,Var,_6,,,$H,,,$_,,,$_11E,:,Array,[,Array,[,Int,,,0x34,],,,77,],;,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1616(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g781:k_u{}Class _:_{}Class a52:R____{}Class _{Destructor (){} }Class GY2N:X4{Var $9,$w:Array [String ,0115];}''',
                '''Class,g781,:,k_u,{,},Class,_,:,_,{,},Class,a52,:,R____,{,},Class,_,{,Destructor,(,),{,},},Class,GY2N,:,X4,{,Var,$9,,,$w,:,Array,[,String,,,0115,],;,},<EOF>''',
                101
            )
        )

    def test_1617(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:_{Var Q_,Fu:Array [Array [Array [Int ,0x62],7],0B100111];Var $mC:Array [Array [String ,0132],0132];}Class _{Destructor (){}Destructor (){}Var _a,i,r,$4y:Int ;}''',
                '''Class,x,:,_,{,Var,Q_,,,Fu,:,Array,[,Array,[,Array,[,Int,,,0x62,],,,7,],,,0B100111,],;,Var,$mC,:,Array,[,Array,[,String,,,0132,],,,0132,],;,},Class,_,{,Destructor,(,),{,},Destructor,(,),{,},Var,_a,,,i,,,r,,,$4y,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1618(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:Z{$S(_,_,t,US_:Int ;_,Y:Array [Array [Array [String ,76],0b1_0_0],0B1];__:KV;J,_W:Array [Array [Float ,0B10000],0XC];BX2L_:r;_i:F_;ES,_:Boolean ;D:String ){} }Class O:Q{Val $_9_:Int ;Val __:_;Val $7_:Array [Array [Array [Int ,063],063],0X4_0];}''',
                '''Class,o,:,Z,{,$S,(,_,,,_,,,t,,,US_,:,Int,;,_,,,Y,:,Array,[,Array,[,Array,[,String,,,76,],,,0b100,],,,0B1,],;,__,:,KV,;,J,,,_W,:,Array,[,Array,[,Float,,,0B10000,],,,0XC,],;,BX2L_,:,r,;,_i,:,F_,;,ES,,,_,:,Boolean,;,D,:,String,),{,},},Class,O,:,Q,{,Val,$_9_,:,Int,;,Val,__,:,_,;,Val,$7_,:,Array,[,Array,[,Array,[,Int,,,063,],,,063,],,,0X40,],;,},<EOF>''',
                101
            )
        )

    def test_1619(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$65_(_p,u,E,p,_:Array [Array [Float ,77],05656];__:String ;e,w5,O7__:Int ;_3,_d7:Int ;N:_G;_3:_){} }Class _:s{}Class _O_:w{$4(Y:Array [Boolean ,0X2E];_,__6,_:u;_,_:Array [Array [Array [Int ,4542],9_3_4_807],071_36_6_0]){} }Class __5{}Class D{Val __,b:_;}''',
                '''Class,_,{,$65_,(,_p,,,u,,,E,,,p,,,_,:,Array,[,Array,[,Float,,,77,],,,05656,],;,__,:,String,;,e,,,w5,,,O7__,:,Int,;,_3,,,_d7,:,Int,;,N,:,_G,;,_3,:,_,),{,},},Class,_,:,s,{,},Class,_O_,:,w,{,$4,(,Y,:,Array,[,Boolean,,,0X2E,],;,_,,,__6,,,_,:,u,;,_,,,_,:,Array,[,Array,[,Array,[,Int,,,4542,],,,934807,],,,0713660,],),{,},},Class,__5,{,},Class,D,{,Val,__,,,b,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1620(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L{Constructor (_,_,G5,n4mh7:_s51B_){} }Class A{}Class _480Wg{}Class no:j_{}Class K81:C{$5(_n6:Array [String ,0XF]){}Constructor (){}Var $w8_:k;}''',
                '''Class,L,{,Constructor,(,_,,,_,,,G5,,,n4mh7,:,_s51B_,),{,},},Class,A,{,},Class,_480Wg,{,},Class,no,:,j_,{,},Class,K81,:,C,{,$5,(,_n6,:,Array,[,String,,,0XF,],),{,},Constructor,(,),{,},Var,$w8_,:,k,;,},<EOF>''',
                101
            )
        )

    def test_1621(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Pw:___{Destructor (){Var B17,_,_,_:String ;}Destructor (){}Val $_,$Ue,__:Boolean ;Val $9_S_,$G,T,$U_,$Ih_,h:Array [Float ,0127];Constructor (_,Br,L:Array [Array [Boolean ,0127],7];z:Array [Float ,0b101110]){} }''',
                '''Class,Pw,:,___,{,Destructor,(,),{,Var,B17,,,_,,,_,,,_,:,String,;,},Destructor,(,),{,},Val,$_,,,$Ue,,,__,:,Boolean,;,Val,$9_S_,,,$G,,,T,,,$U_,,,$Ih_,,,h,:,Array,[,Float,,,0127,],;,Constructor,(,_,,,Br,,,L,:,Array,[,Array,[,Boolean,,,0127,],,,7,],;,z,:,Array,[,Float,,,0b101110,],),{,},},<EOF>''',
                101
            )
        )

    def test_1622(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:_{Constructor (W60___:Int ;_:Array [Array [Float ,0B111],0X38];x:_;O_,_f,_,e,_Y3e3ZA_:Int ;_:y){ {} }}Class vA1N{}Class I____W{Val _a,e8:Float ;}''',
                '''Class,_1,:,_,{,Constructor,(,W60___,:,Int,;,_,:,Array,[,Array,[,Float,,,0B111,],,,0X38,],;,x,:,_,;,O_,,,_f,,,_,,,e,,,_Y3e3ZA_,:,Int,;,_,:,y,),{,{,},},},Class,vA1N,{,},Class,I____W,{,Val,_a,,,e8,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1623(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __x:_{Val $_C,$_,$Lr:String ;Destructor (){}Destructor (){}Val _3:Float ;}Class _O_7:_{Destructor (){} }Class f{}''',
                '''Class,__x,:,_,{,Val,$_C,,,$_,,,$Lr,:,String,;,Destructor,(,),{,},Destructor,(,),{,},Val,_3,:,Float,;,},Class,_O_7,:,_,{,Destructor,(,),{,},},Class,f,{,},<EOF>''',
                101
            )
        )

    def test_1624(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{Var $B__,Ld,$_0:Array [Array [Array [Boolean ,51],0b1],040];Var _____,_:Int ;}Class _:e99{Val $_,v8,_2,__2Z_k:Boolean ;Var _7,$Y,__:Int ;Constructor (){}Var $_:Float ;Destructor (){} }''',
                '''Class,R,{,Var,$B__,,,Ld,,,$_0,:,Array,[,Array,[,Array,[,Boolean,,,51,],,,0b1,],,,040,],;,Var,_____,,,_,:,Int,;,},Class,_,:,e99,{,Val,$_,,,v8,,,_2,,,__2Z_k,:,Boolean,;,Var,_7,,,$Y,,,__,:,Int,;,Constructor,(,),{,},Var,$_,:,Float,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1625(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _ad:G_{}Class Q:n5n{U(G_z2_,__A:Array [Array [Int ,15],0x49];_:Array [Float ,15];ma_:f;u47_:Boolean ;W01,_R_,F,_,__3,l,b:Array [Array [Array [Array [Array [Boolean ,0x55F],15],0b1],067],0xAE]){} }''',
                '''Class,_ad,:,G_,{,},Class,Q,:,n5n,{,U,(,G_z2_,,,__A,:,Array,[,Array,[,Int,,,15,],,,0x49,],;,_,:,Array,[,Float,,,15,],;,ma_,:,f,;,u47_,:,Boolean,;,W01,,,_R_,,,F,,,_,,,__3,,,l,,,b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x55F,],,,15,],,,0b1,],,,067,],,,0xAE,],),{,},},<EOF>''',
                101
            )
        )

    def test_1626(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h{Val _:Int ;__(s:Float ;_v:Float ;_,N,_i,d9:z;B:Array [Array [Boolean ,0B1],0b10]){} }Class s064v{}Class N5{Constructor (){}Destructor (){} }''',
                '''Class,h,{,Val,_,:,Int,;,__,(,s,:,Float,;,_v,:,Float,;,_,,,N,,,_i,,,d9,:,z,;,B,:,Array,[,Array,[,Boolean,,,0B1,],,,0b10,],),{,},},Class,s064v,{,},Class,N5,{,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1627(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s9P:___{e(_x_o:Array [Array [Array [Boolean ,49],0X45F],0X45];YT:Array [Array [Array [Array [Boolean ,0b101110],0111],0b1],89_76];_v:Array [Array [Array [Array [Array [Array [Array [Boolean ,49],86],02_2],0B1001001],4],06],0B1_00]){} }Class V_{}''',
                '''Class,s9P,:,___,{,e,(,_x_o,:,Array,[,Array,[,Array,[,Boolean,,,49,],,,0X45F,],,,0X45,],;,YT,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101110,],,,0111,],,,0b1,],,,8976,],;,_v,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,49,],,,86,],,,022,],,,0B1001001,],,,4,],,,06,],,,0B100,],),{,},},Class,V_,{,},<EOF>''',
                101
            )
        )

    def test_1628(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Fr{Val $_:Array [String ,061];$_G(_W:O;t_:__;z_:Array [Float ,04];_u_:G___;_Cn2:iL;_:C){Break ;} }Class A:r{}Class _{}''',
                '''Class,Fr,{,Val,$_,:,Array,[,String,,,061,],;,$_G,(,_W,:,O,;,t_,:,__,;,z_,:,Array,[,Float,,,04,],;,_u_,:,G___,;,_Cn2,:,iL,;,_,:,C,),{,Break,;,},},Class,A,:,r,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1629(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g__{}Class _{Destructor (){}Var $43f,_v1,_y_:d_2;}Class _e__:V_{}Class o:W{}Class _2_0{}Class _:_I_6{}Class l9:_{Destructor (){} }Class d:_{}''',
                '''Class,g__,{,},Class,_,{,Destructor,(,),{,},Var,$43f,,,_v1,,,_y_,:,d_2,;,},Class,_e__,:,V_,{,},Class,o,:,W,{,},Class,_2_0,{,},Class,_,:,_I_6,{,},Class,l9,:,_,{,Destructor,(,),{,},},Class,d,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1630(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:L{Destructor (){}Destructor (){}Constructor (__t2d9X_,l,_P:Array [Float ,40]){Continue ;Continue ;Break ;Break ;Var K:Array [Int ,06];} }''',
                '''Class,_1,:,L,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,__t2d9X_,,,l,,,_P,:,Array,[,Float,,,40,],),{,Continue,;,Continue,;,Break,;,Break,;,Var,K,:,Array,[,Int,,,06,],;,},},<EOF>''',
                101
            )
        )

    def test_1631(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j5:w{Destructor (){}Constructor (x:Array [Array [Array [Array [Array [Boolean ,0B1000101],0B1],0X4],0x7],0140];ce:B){} }''',
                '''Class,j5,:,w,{,Destructor,(,),{,},Constructor,(,x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1000101,],,,0B1,],,,0X4,],,,0x7,],,,0140,],;,ce,:,B,),{,},},<EOF>''',
                101
            )
        )

    def test_1632(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:_F{Val __,__,$2h,$b:Array [Array [Float ,0X5],0b1];}Class _:o_6{Constructor (E:Array [Array [Float ,4],0b1_00001_0]){ {} }}''',
                '''Class,A,:,_F,{,Val,__,,,__,,,$2h,,,$b,:,Array,[,Array,[,Float,,,0X5,],,,0b1,],;,},Class,_,:,o_6,{,Constructor,(,E,:,Array,[,Array,[,Float,,,4,],,,0b1000010,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1633(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _57L:G_Z{_(v,F_,_,_:Float ;_,__,d,_9p,_:Array [Array [Array [String ,0x43],0B11011],0B1_0];Y,JW3,T3:_;o,_,v_:String ){} }Class X:I_0{Constructor (){} }Class _:u{Var $7:_;Var t:_n;Constructor (){} }''',
                '''Class,_57L,:,G_Z,{,_,(,v,,,F_,,,_,,,_,:,Float,;,_,,,__,,,d,,,_9p,,,_,:,Array,[,Array,[,Array,[,String,,,0x43,],,,0B11011,],,,0B10,],;,Y,,,JW3,,,T3,:,_,;,o,,,_,,,v_,:,String,),{,},},Class,X,:,I_0,{,Constructor,(,),{,},},Class,_,:,u,{,Var,$7,:,_,;,Var,t,:,_n,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1634(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{Constructor (_,Sk_4:Array [Array [Array [Boolean ,0x5F],010_71],03];T2,y,P,_,_4:_;ub_,G:Boolean ){} }Class _A{Var $I__:Array [Array [Int ,015],73];}Class _3{Destructor (){} }''',
                '''Class,k,{,Constructor,(,_,,,Sk_4,:,Array,[,Array,[,Array,[,Boolean,,,0x5F,],,,01071,],,,03,],;,T2,,,y,,,P,,,_,,,_4,:,_,;,ub_,,,G,:,Boolean,),{,},},Class,_A,{,Var,$I__,:,Array,[,Array,[,Int,,,015,],,,73,],;,},Class,_3,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1635(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){Continue ;}$9(n,_,N:String ;i_7_Z6:Array [Array [Array [Array [Array [Int ,3],01],0b1100100],2_39],0B10011];gruGD,j_,_,_,_:Zl;_,_:Array [Array [Int ,0x6],47];_:Array [Int ,0b1];_:Boolean ;_:_H_Z){} }Class X_7mEf_{}''',
                '''Class,_,{,Destructor,(,),{,Continue,;,},$9,(,n,,,_,,,N,:,String,;,i_7_Z6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,3,],,,01,],,,0b1100100,],,,239,],,,0B10011,],;,gruGD,,,j_,,,_,,,_,,,_,:,Zl,;,_,,,_,:,Array,[,Array,[,Int,,,0x6,],,,47,],;,_,:,Array,[,Int,,,0b1,],;,_,:,Boolean,;,_,:,_H_Z,),{,},},Class,X_7mEf_,{,},<EOF>''',
                101
            )
        )

    def test_1636(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ve:V{Val i_____L8:Array [Array [Array [Array [Array [Boolean ,0144],5_8_4_3_2],0b1],0B10],67];Var $4,$__n_:Int ;}''',
                '''Class,Ve,:,V,{,Val,i_____L8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0144,],,,58432,],,,0b1,],,,0B10,],,,67,],;,Var,$4,,,$__n_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1637(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:_{}Class _{Val $_2dd:Float ;}Class _2W:_{Var $__3_9_,$1_9_1N,E:X8tR;Var $5__,$M_:Array [Boolean ,8_0];}Class M{}''',
                '''Class,b,:,_,{,},Class,_,{,Val,$_2dd,:,Float,;,},Class,_2W,:,_,{,Var,$__3_9_,,,$1_9_1N,,,E,:,X8tR,;,Var,$5__,,,$M_,:,Array,[,Boolean,,,80,],;,},Class,M,{,},<EOF>''',
                101
            )
        )

    def test_1638(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:U{Val $m:qB;Destructor (){}$MsDGC_(PP,_Z3,_e_,E_,R,vyqPBRN:String ){ {} }$_99s(){}Destructor (){}Destructor (){}Destructor (){} }Class _1{}Class KC79:t1_{}''',
                '''Class,__,:,U,{,Val,$m,:,qB,;,Destructor,(,),{,},$MsDGC_,(,PP,,,_Z3,,,_e_,,,E_,,,R,,,vyqPBRN,:,String,),{,{,},},$_99s,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},Class,_1,{,},Class,KC79,:,t1_,{,},<EOF>''',
                101
            )
        )

    def test_1639(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Rh_{Constructor (s:Array [Array [Array [Array [Boolean ,03],05],3],4];_,_gf,_,_,_4:Boolean ;_c,_R:Boolean ){} }Class _e9r_{Var Y_:Array [Array [Array [Array [Float ,0b11010],040],62],62];}''',
                '''Class,Rh_,{,Constructor,(,s,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,03,],,,05,],,,3,],,,4,],;,_,,,_gf,,,_,,,_,,,_4,:,Boolean,;,_c,,,_R,:,Boolean,),{,},},Class,_e9r_,{,Var,Y_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b11010,],,,040,],,,62,],,,62,],;,},<EOF>''',
                101
            )
        )

    def test_1640(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{y(SoY,n:Array [Boolean ,0x48];__T,_sW__,___,J:__){}Constructor (){__::$w();{} }Destructor (){} }Class HZ_i47_l__:O_O7s{$b1(){} }Class Q:_{}''',
                '''Class,_,{,y,(,SoY,,,n,:,Array,[,Boolean,,,0x48,],;,__T,,,_sW__,,,___,,,J,:,__,),{,},Constructor,(,),{,__,::,$w,(,),;,{,},},Destructor,(,),{,},},Class,HZ_i47_l__,:,O_O7s,{,$b1,(,),{,},},Class,Q,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1641(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{Constructor (){Continue ;Break ;}Var r:Boolean ;Var X,$98,$o:Array [Array [Array [String ,0b110110],9_8],0b110110];}''',
                '''Class,o,{,Constructor,(,),{,Continue,;,Break,;,},Var,r,:,Boolean,;,Var,X,,,$98,,,$o,:,Array,[,Array,[,Array,[,String,,,0b110110,],,,98,],,,0b110110,],;,},<EOF>''',
                101
            )
        )

    def test_1642(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _50_c:_2{}Class JW{}Class o_{$_8(qw_4:Array [Array [Array [Array [Array [Boolean ,3_7_7],067],0x4A],0xFEE],0b1]){}Val $NG:Int ;Var c,$__U,$6,$3,$_:Array [Array [Boolean ,067],07_4];Constructor (_,__d:W__;_4:Array [String ,35];_:Array [Array [String ,0B11],0XE];__:Int ){} }Class _s{}Class p{Var $_9_:Array [Boolean ,9];_C_3(){} }''',
                '''Class,_50_c,:,_2,{,},Class,JW,{,},Class,o_,{,$_8,(,qw_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,377,],,,067,],,,0x4A,],,,0xFEE,],,,0b1,],),{,},Val,$NG,:,Int,;,Var,c,,,$__U,,,$6,,,$3,,,$_,:,Array,[,Array,[,Boolean,,,067,],,,074,],;,Constructor,(,_,,,__d,:,W__,;,_4,:,Array,[,String,,,35,],;,_,:,Array,[,Array,[,String,,,0B11,],,,0XE,],;,__,:,Int,),{,},},Class,_s,{,},Class,p,{,Var,$_9_,:,Array,[,Boolean,,,9,],;,_C_3,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1643(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jZ:s{}Class m{}Class J{}Class I:_v__{Constructor (){}Var $Z_D_k,sw:Array [Float ,52];}Class A{}Class __b_1:_{}Class a__:ip{}''',
                '''Class,jZ,:,s,{,},Class,m,{,},Class,J,{,},Class,I,:,_v__,{,Constructor,(,),{,},Var,$Z_D_k,,,sw,:,Array,[,Float,,,52,],;,},Class,A,{,},Class,__b_1,:,_,{,},Class,a__,:,ip,{,},<EOF>''',
                101
            )
        )

    def test_1644(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k{Constructor (_8:Array [String ,044];U7:Array [Array [Array [Array [String ,0X3C],0x2F],0b1000010],06];_0:Array [Array [Array [Array [Array [Boolean ,044],044],6],0b1],0X3C];y:Boolean ;p73:_T5_;m:Boolean ;_,__,sH_:V;_R,wa,x:Array [Int ,99];_,_:Array [Array [Int ,99],99];d3:n;_:Float ){} }''',
                '''Class,_k,{,Constructor,(,_8,:,Array,[,String,,,044,],;,U7,:,Array,[,Array,[,Array,[,Array,[,String,,,0X3C,],,,0x2F,],,,0b1000010,],,,06,],;,_0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,044,],,,044,],,,6,],,,0b1,],,,0X3C,],;,y,:,Boolean,;,p73,:,_T5_,;,m,:,Boolean,;,_,,,__,,,sH_,:,V,;,_R,,,wa,,,x,:,Array,[,Int,,,99,],;,_,,,_,:,Array,[,Array,[,Int,,,99,],,,99,],;,d3,:,n,;,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1645(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2ec:_{Val z:Boolean ;Var $5:Array [Array [Array [Array [Array [Array [Array [Boolean ,5],040],01],040],0X8],0XC],040]=!___::$_;}''',
                '''Class,_2ec,:,_,{,Val,z,:,Boolean,;,Var,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,5,],,,040,],,,01,],,,040,],,,0X8,],,,0XC,],,,040,],=,!,___,::,$_,;,},<EOF>''',
                101
            )
        )

    def test_1646(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Y_(){}Constructor (L_:String ){}Var _:Array [Int ,0x9D_D];}Class F_:_2{Constructor (){} }Class R:_{$0(){}Val $5:Float ;}Class __{}''',
                '''Class,_,{,Y_,(,),{,},Constructor,(,L_,:,String,),{,},Var,_,:,Array,[,Int,,,0x9DD,],;,},Class,F_,:,_2,{,Constructor,(,),{,},},Class,R,:,_,{,$0,(,),{,},Val,$5,:,Float,;,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_1647(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ZPz{K(_,j2,Xio,_,Q:_;_5J0,__h:Array [Array [Array [Array [Boolean ,0xD],0x32],0B111010],0B111010]){}Destructor (){} }''',
                '''Class,ZPz,{,K,(,_,,,j2,,,Xio,,,_,,,Q,:,_,;,_5J0,,,__h,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xD,],,,0x32,],,,0B111010,],,,0B111010,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1648(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class x:O6{Val $b0,$_M2,$D:Array [Array [Array [Float ,057],0117],0b1_11];$E_9(_:Array [Boolean ,5]){} }''',
                '''Class,_,{,},Class,x,:,O6,{,Val,$b0,,,$_M2,,,$D,:,Array,[,Array,[,Array,[,Float,,,057,],,,0117,],,,0b111,],;,$E_9,(,_,:,Array,[,Boolean,,,5,],),{,},},<EOF>''',
                101
            )
        )

    def test_1649(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _:_c{Constructor (__,_:Array [String ,0b1100001];_,ez7r:G){}$TZL(_,J:Array [Array [Array [Array [String ,016],0x5],0B1001011],0X2_4];_:Array [Array [Int ,0x13],0x13]){} }''',
                '''Class,__,{,},Class,_,:,_c,{,Constructor,(,__,,,_,:,Array,[,String,,,0b1100001,],;,_,,,ez7r,:,G,),{,},$TZL,(,_,,,J,:,Array,[,Array,[,Array,[,Array,[,String,,,016,],,,0x5,],,,0B1001011,],,,0X24,],;,_,:,Array,[,Array,[,Int,,,0x13,],,,0x13,],),{,},},<EOF>''',
                101
            )
        )

    def test_1650(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U9{}Class _{Val OI:Array [Array [Array [Array [Array [Array [Boolean ,04],3],53],0X4F],0X4F],044];}Class _:__{Destructor (){} }''',
                '''Class,U9,{,},Class,_,{,Val,OI,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,04,],,,3,],,,53,],,,0X4F,],,,0X4F,],,,044,],;,},Class,_,:,__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1651(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Constructor (k3q:String ;_,___:Array [String ,0B1];_08__q,_7,__,l,_,_4,_:Boolean ;_R_:String ;_w,_,D:_8;B,_R_v_,T_:String ;_H:Int ){} }Class ___{}''',
                '''Class,_,:,__,{,Constructor,(,k3q,:,String,;,_,,,___,:,Array,[,String,,,0B1,],;,_08__q,,,_7,,,__,,,l,,,_,,,_4,,,_,:,Boolean,;,_R_,:,String,;,_w,,,_,,,D,:,_8,;,B,,,_R_v_,,,T_,:,String,;,_H,:,Int,),{,},},Class,___,{,},<EOF>''',
                101
            )
        )

    def test_1652(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_6t,_:J;_:Float ;_:_;V_,d3:Boolean ;q:Boolean ;q:Int ;WSM9:Array [Array [Array [Boolean ,0b1_0],0b1000001],0B100010]){} }''',
                '''Class,_,{,Constructor,(,_6t,,,_,:,J,;,_,:,Float,;,_,:,_,;,V_,,,d3,:,Boolean,;,q,:,Boolean,;,q,:,Int,;,WSM9,:,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0b1000001,],,,0B100010,],),{,},},<EOF>''',
                101
            )
        )

    def test_1653(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Constructor (_:p;_:Array [Float ,0b1001000];_1:Array [Array [Array [Array [Array [Array [Int ,1],36],06],36],0B1],0144];_8:Boolean ){}Val f:__;}''',
                '''Class,a,{,Constructor,(,_,:,p,;,_,:,Array,[,Float,,,0b1001000,],;,_1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,1,],,,36,],,,06,],,,36,],,,0B1,],,,0144,],;,_8,:,Boolean,),{,},Val,f,:,__,;,},<EOF>''',
                101
            )
        )

    def test_1654(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v__{Constructor (_:Array [Array [Array [Array [Int ,0B1],042],0B11],0B1001111]){} }Class k{$7(_,_:String ;_,W5:_;D_:Int ;g6:h_x){} }''',
                '''Class,v__,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,042,],,,0B11,],,,0B1001111,],),{,},},Class,k,{,$7,(,_,,,_,:,String,;,_,,,W5,:,_,;,D_,:,Int,;,g6,:,h_x,),{,},},<EOF>''',
                101
            )
        )

    def test_1655(self):
        self.assertTrue(
            TestLexer.test(
                '''Class zi{Constructor (J_:Array [Array [Boolean ,0b110101],2];D__3_3:Array [Boolean ,977];_G,_,T,f,G_:_8;d8_1_l_:Boolean ){}Destructor (){} }''',
                '''Class,zi,{,Constructor,(,J_,:,Array,[,Array,[,Boolean,,,0b110101,],,,2,],;,D__3_3,:,Array,[,Boolean,,,977,],;,_G,,,_,,,T,,,f,,,G_,:,_8,;,d8_1_l_,:,Boolean,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1656(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X_{Val $s:_;}Class __x:o{}Class Sh_{_d(qyt:R;Y:Array [Int ,05];Rv,_8_,g__9:Array [Array [String ,0b1_0_11],05]){}Constructor (_,_k1J4R:Float ;i,j:Float ){} }Class ___W_:i_92{Destructor (){}Destructor (){}Destructor (){Continue ;Val _:C;}Val $8:Array [Array [Int ,075],0X63];}''',
                '''Class,_,:,X_,{,Val,$s,:,_,;,},Class,__x,:,o,{,},Class,Sh_,{,_d,(,qyt,:,R,;,Y,:,Array,[,Int,,,05,],;,Rv,,,_8_,,,g__9,:,Array,[,Array,[,String,,,0b1011,],,,05,],),{,},Constructor,(,_,,,_k1J4R,:,Float,;,i,,,j,:,Float,),{,},},Class,___W_,:,i_92,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,Continue,;,Val,_,:,C,;,},Val,$8,:,Array,[,Array,[,Int,,,075,],,,0X63,],;,},<EOF>''',
                101
            )
        )

    def test_1657(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a__{Destructor (){}Constructor (_0_2__:__;_:Int ;_3_,Lp:Array [Array [Array [Int ,4],066],066]){} }Class b:p{}''',
                '''Class,a__,{,Destructor,(,),{,},Constructor,(,_0_2__,:,__,;,_,:,Int,;,_3_,,,Lp,:,Array,[,Array,[,Array,[,Int,,,4,],,,066,],,,066,],),{,},},Class,b,:,p,{,},<EOF>''',
                101
            )
        )

    def test_1658(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:Ez{}Class P:_4T_{$M(Pv:Boolean ;iF:String ;_,_,_,_:Array [String ,1];_9:Array [Array [String ,02],0555_7_0]){} }''',
                '''Class,E,:,Ez,{,},Class,P,:,_4T_,{,$M,(,Pv,:,Boolean,;,iF,:,String,;,_,,,_,,,_,,,_,:,Array,[,String,,,1,],;,_9,:,Array,[,Array,[,String,,,02,],,,055570,],),{,},},<EOF>''',
                101
            )
        )

    def test_1659(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:_{Var _:h79;Constructor (){Var _,o,_:Array [Array [Array [Int ,047],0X5_7_4A],02];Continue ;} }Class __:_{}Class _:n{Val f,$j:k;}''',
                '''Class,_,{,},Class,_,:,_,{,Var,_,:,h79,;,Constructor,(,),{,Var,_,,,o,,,_,:,Array,[,Array,[,Array,[,Int,,,047,],,,0X574A,],,,02,],;,Continue,;,},},Class,__,:,_,{,},Class,_,:,n,{,Val,f,,,$j,:,k,;,},<EOF>''',
                101
            )
        )

    def test_1660(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{Constructor (v:__;b9_7:L;_2:Float ){Break ;}Val $_40fF__U:Float ;}Class I:_{Var z_6,$_,$_:_WV7;Destructor (){}Val _,$_4Z:Array [Array [Array [Array [Array [Array [String ,8],42_5],0113],8],06263],0113];}''',
                '''Class,B,{,Constructor,(,v,:,__,;,b9_7,:,L,;,_2,:,Float,),{,Break,;,},Val,$_40fF__U,:,Float,;,},Class,I,:,_,{,Var,z_6,,,$_,,,$_,:,_WV7,;,Destructor,(,),{,},Val,_,,,$_4Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,8,],,,425,],,,0113,],,,8,],,,06263,],,,0113,],;,},<EOF>''',
                101
            )
        )

    def test_1661(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P__:_{Val __i:Z;$9(Y:Array [Float ,0B1001011]){}$U(){}Constructor (_3G6,u,E,iR,H:Int ;c:Int ){} }Class _:m_{Constructor (){ {Continue ;} }}''',
                '''Class,_P__,:,_,{,Val,__i,:,Z,;,$9,(,Y,:,Array,[,Float,,,0B1001011,],),{,},$U,(,),{,},Constructor,(,_3G6,,,u,,,E,,,iR,,,H,:,Int,;,c,:,Int,),{,},},Class,_,:,m_,{,Constructor,(,),{,{,Continue,;,},},},<EOF>''',
                101
            )
        )

    def test_1662(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{Constructor (__4r,K7:Array [Array [Int ,0113],0113];_4,S,M:_5w){o::$M();} }Class __{Var w_:Array [Float ,05];}''',
                '''Class,k,{,Constructor,(,__4r,,,K7,:,Array,[,Array,[,Int,,,0113,],,,0113,],;,_4,,,S,,,M,:,_5w,),{,o,::,$M,(,),;,},},Class,__,{,Var,w_,:,Array,[,Float,,,05,],;,},<EOF>''',
                101
            )
        )

    def test_1663(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{Constructor (_mb7,_,f_,_:Array [Float ,12];Gi8V84:Boolean ;Oe8__0l_,_y,_:String ;o,_,_,_D,B:Array [Array [Boolean ,0xA_E],0XA]){} }''',
                '''Class,T,{,Constructor,(,_mb7,,,_,,,f_,,,_,:,Array,[,Float,,,12,],;,Gi8V84,:,Boolean,;,Oe8__0l_,,,_y,,,_,:,String,;,o,,,_,,,_,,,_D,,,B,:,Array,[,Array,[,Boolean,,,0xAE,],,,0XA,],),{,},},<EOF>''',
                101
            )
        )

    def test_1664(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__X{Var $Q,$_,$l,$_D1,D_:C6_;}Class H_5{Val _,$_r:_2;_(S3:Array [Array [Float ,01],0b110001]){} }Class v5{}''',
                '''Class,_,:,__X,{,Var,$Q,,,$_,,,$l,,,$_D1,,,D_,:,C6_,;,},Class,H_5,{,Val,_,,,$_r,:,_2,;,_,(,S3,:,Array,[,Array,[,Float,,,01,],,,0b110001,],),{,},},Class,v5,{,},<EOF>''',
                101
            )
        )

    def test_1665(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:z{Val $B7,g,h,$_i0,$_,_,O74,$3,$D_I7o_1l,$sv:String ;}Class B_:_j_{}Class __{}Class _:_g_gX__{Var $w,$G,$_,o,$E:String ;}''',
                '''Class,__,:,z,{,Val,$B7,,,g,,,h,,,$_i0,,,$_,,,_,,,O74,,,$3,,,$D_I7o_1l,,,$sv,:,String,;,},Class,B_,:,_j_,{,},Class,__,{,},Class,_,:,_g_gX__,{,Var,$w,,,$G,,,$_,,,o,,,$E,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1666(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:G_{_e(d:Float ){Return ;} }Class Aj1:_{Var $f_,$4:Array [Array [String ,045],0b11_00];Var B:Array [Array [Array [Int ,0x9_9_D_C9],0x1D],63];}Class _4_:nv_{}Class _{}Class _N{$F(_,i,_:Float ;v_,n:_;__:Array [Array [Array [Array [Float ,0B1_11],045],168],0xB_6]){} }Class z{}Class A_E{}''',
                '''Class,U,:,G_,{,_e,(,d,:,Float,),{,Return,;,},},Class,Aj1,:,_,{,Var,$f_,,,$4,:,Array,[,Array,[,String,,,045,],,,0b1100,],;,Var,B,:,Array,[,Array,[,Array,[,Int,,,0x99DC9,],,,0x1D,],,,63,],;,},Class,_4_,:,nv_,{,},Class,_,{,},Class,_N,{,$F,(,_,,,i,,,_,:,Float,;,v_,,,n,:,_,;,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B111,],,,045,],,,168,],,,0xB6,],),{,},},Class,z,{,},Class,A_E,{,},<EOF>''',
                101
            )
        )

    def test_1667(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P{Constructor (_2EuT___1,__4,__,_b,_:Array [Int ,98];_,f,_6:String ;M_,___,y__:Float ;rBi:Array [Boolean ,0XA]){} }''',
                '''Class,_P,{,Constructor,(,_2EuT___1,,,__4,,,__,,,_b,,,_,:,Array,[,Int,,,98,],;,_,,,f,,,_6,:,String,;,M_,,,___,,,y__,:,Float,;,rBi,:,Array,[,Boolean,,,0XA,],),{,},},<EOF>''',
                101
            )
        )

    def test_1668(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j__:_D{}Class yu{Val $W:Int ;Constructor (aV_:Array [Array [Float ,03],0b1]){Break ;Break ;} }Class Y_7:_{}Class _:_{}''',
                '''Class,j__,:,_D,{,},Class,yu,{,Val,$W,:,Int,;,Constructor,(,aV_,:,Array,[,Array,[,Float,,,03,],,,0b1,],),{,Break,;,Break,;,},},Class,Y_7,:,_,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1669(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:J{Destructor (){}_Bf(_:Float ){}_(G64_,_,R7:Array [Array [Array [Boolean ,0B111_0],908],050_7_0];___:q8;_:_;q,_:Int ;_:sT){}Destructor (){} }''',
                '''Class,_,:,J,{,Destructor,(,),{,},_Bf,(,_,:,Float,),{,},_,(,G64_,,,_,,,R7,:,Array,[,Array,[,Array,[,Boolean,,,0B1110,],,,908,],,,05070,],;,___,:,q8,;,_,:,_,;,q,,,_,:,Int,;,_,:,sT,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1670(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Var __,$v_,$__,_:_;Constructor (Zr,_,_:Array [Int ,0x60]){wKq::$_._._();} }Class d{}Class _m9jj{Var $78_F:Array [Array [Array [String ,12],0x60],0b1];}Class _:__{}''',
                '''Class,___,{,Var,__,,,$v_,,,$__,,,_,:,_,;,Constructor,(,Zr,,,_,,,_,:,Array,[,Int,,,0x60,],),{,wKq,::,$_,.,_,.,_,(,),;,},},Class,d,{,},Class,_m9jj,{,Var,$78_F,:,Array,[,Array,[,Array,[,String,,,12,],,,0x60,],,,0b1,],;,},Class,_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_1671(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$58D6(_Ke:Boolean ;__,q2,B8_U,_O_y_,_4:j;R:Array [Boolean ,0XA_7_C_10];_,ys4,_,_,__,g0:_){} }Class j:_{}''',
                '''Class,_,{,$58D6,(,_Ke,:,Boolean,;,__,,,q2,,,B8_U,,,_O_y_,,,_4,:,j,;,R,:,Array,[,Boolean,,,0XA7C10,],;,_,,,ys4,,,_,,,_,,,__,,,g0,:,_,),{,},},Class,j,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1672(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{Constructor (S,H:Array [Array [Array [Float ,0103],0x49],29];x:String ;J:Array [Array [Array [Array [Array [Array [String ,0B1],0X36],04_6],01],0b100_11_0],0b1011010]){} }''',
                '''Class,i,{,Constructor,(,S,,,H,:,Array,[,Array,[,Array,[,Float,,,0103,],,,0x49,],,,29,],;,x,:,String,;,J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0X36,],,,046,],,,01,],,,0b100110,],,,0b1011010,],),{,},},<EOF>''',
                101
            )
        )

    def test_1673(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p:_{Val _6z,$__:Array [Array [Array [String ,1_7],01],012510_1_1];Constructor (h:Float ;_5__,N8:Boolean ;m:Boolean ;_q_3:Array [String ,0B1001111];K_0:Boolean ){} }''',
                '''Class,p,:,_,{,Val,_6z,,,$__,:,Array,[,Array,[,Array,[,String,,,17,],,,01,],,,01251011,],;,Constructor,(,h,:,Float,;,_5__,,,N8,:,Boolean,;,m,:,Boolean,;,_q_3,:,Array,[,String,,,0B1001111,],;,K_0,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1674(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2:_{Val $_,$__:String ;}Class _D:o3{Constructor (p3_1:bst){} }Class u:Ly{$50rR_(){}Var I,$99_:Boolean ;}Class G:_r_gZF_4_{}''',
                '''Class,_2,:,_,{,Val,$_,,,$__,:,String,;,},Class,_D,:,o3,{,Constructor,(,p3_1,:,bst,),{,},},Class,u,:,Ly,{,$50rR_,(,),{,},Var,I,,,$99_,:,Boolean,;,},Class,G,:,_r_gZF_4_,{,},<EOF>''',
                101
            )
        )

    def test_1675(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:_{$7m(W:Array [Boolean ,05];_9Q_,__,_,M__Z:_;z:___1){}Constructor (_:Float ;f:Array [Array [Int ,0b1011111],0X1F]){}Destructor (){} }Class f:_5B{}''',
                '''Class,___,:,_,{,$7m,(,W,:,Array,[,Boolean,,,05,],;,_9Q_,,,__,,,_,,,M__Z,:,_,;,z,:,___1,),{,},Constructor,(,_,:,Float,;,f,:,Array,[,Array,[,Int,,,0b1011111,],,,0X1F,],),{,},Destructor,(,),{,},},Class,f,:,_5B,{,},<EOF>''',
                101
            )
        )

    def test_1676(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4{Val p:Boolean ;Constructor (__:String ;_,_,_,W,_c_:_;_,J_T_,O,I,Z:Array [Array [Array [Array [Array [Float ,0b10100],0x64],0XE7_C_9_B],05],85]){} }Class _:d{}Class _l18:_{}''',
                '''Class,_4,{,Val,p,:,Boolean,;,Constructor,(,__,:,String,;,_,,,_,,,_,,,W,,,_c_,:,_,;,_,,,J_T_,,,O,,,I,,,Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b10100,],,,0x64,],,,0XE7C9B,],,,05,],,,85,],),{,},},Class,_,:,d,{,},Class,_l18,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1677(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P5:_{}Class _:__{$lA6(_:Array [Int ,0X5];yW,y:_472x_;f3:Array [Boolean ,0104];PY:Array [Array [Float ,0x3D],05]){}$_8(){} }''',
                '''Class,P5,:,_,{,},Class,_,:,__,{,$lA6,(,_,:,Array,[,Int,,,0X5,],;,yW,,,y,:,_472x_,;,f3,:,Array,[,Boolean,,,0104,],;,PY,:,Array,[,Array,[,Float,,,0x3D,],,,05,],),{,},$_8,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1678(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_c{Var I:Array [Array [Boolean ,06],03];}Class _{Destructor (){} }Class Y0c{}Class r{}Class g{Var _x,B8_:_0;}''',
                '''Class,_,:,_c,{,Var,I,:,Array,[,Array,[,Boolean,,,06,],,,03,],;,},Class,_,{,Destructor,(,),{,},},Class,Y0c,{,},Class,r,{,},Class,g,{,Var,_x,,,B8_,:,_0,;,},<EOF>''',
                101
            )
        )

    def test_1679(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class e:Y_{$_(_,d7,S:Boolean ){} }Class e37:__R{Var $7,$N,$_,$_:Array [Array [Array [Int ,0143],0X10],0143];Val _,$0,G,a4_,$Ks,_4_:n;Var $lq:Int ;}Class _{Val $_y5,$K_:Array [Array [Array [Int ,0143],0b1001110],0x46];}''',
                '''Class,_,{,},Class,e,:,Y_,{,$_,(,_,,,d7,,,S,:,Boolean,),{,},},Class,e37,:,__R,{,Var,$7,,,$N,,,$_,,,$_,:,Array,[,Array,[,Array,[,Int,,,0143,],,,0X10,],,,0143,],;,Val,_,,,$0,,,G,,,a4_,,,$Ks,,,_4_,:,n,;,Var,$lq,:,Int,;,},Class,_,{,Val,$_y5,,,$K_,:,Array,[,Array,[,Array,[,Int,,,0143,],,,0b1001110,],,,0x46,],;,},<EOF>''',
                101
            )
        )

    def test_1680(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:A2{}Class R7{}Class __:dZ{Var $m6,$_3,$VZ:__;Var __w_R,$8v:String ;}Class U8:qh{Constructor (){} }Class H:U{}''',
                '''Class,_,:,A2,{,},Class,R7,{,},Class,__,:,dZ,{,Var,$m6,,,$_3,,,$VZ,:,__,;,Var,__w_R,,,$8v,:,String,;,},Class,U8,:,qh,{,Constructor,(,),{,},},Class,H,:,U,{,},<EOF>''',
                101
            )
        )

    def test_1681(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,_mdN:_m;_N_4vU,__,Y9_Z74vr_:Array [Array [Boolean ,077],42];_1S,_,h3_,_,k,_36:Float ;_:v__){} }''',
                '''Class,_,{,Constructor,(,_,,,_mdN,:,_m,;,_N_4vU,,,__,,,Y9_Z74vr_,:,Array,[,Array,[,Boolean,,,077,],,,42,],;,_1S,,,_,,,h3_,,,_,,,k,,,_36,:,Float,;,_,:,v__,),{,},},<EOF>''',
                101
            )
        )

    def test_1682(self):
        self.assertTrue(
            TestLexer.test(
                '''Class HS1_2Ge_:_d{Val h:Array [Array [String ,0b1000110],0x6];$0(LR,_:_;A,Q:Array [Float ,0x8E];_o,_p_:Array [Array [Array [Array [Array [Int ,0B1_10],0B1],0B1010],0b11_0],02]){}Val q:Array [Int ,35];Var _:Int ;Destructor (){} }''',
                '''Class,HS1_2Ge_,:,_d,{,Val,h,:,Array,[,Array,[,String,,,0b1000110,],,,0x6,],;,$0,(,LR,,,_,:,_,;,A,,,Q,:,Array,[,Float,,,0x8E,],;,_o,,,_p_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B110,],,,0B1,],,,0B1010,],,,0b110,],,,02,],),{,},Val,q,:,Array,[,Int,,,35,],;,Var,_,:,Int,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1683(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X66Vo6:y{$zh_a_(v:Array [Boolean ,055];f_3,g_n5K:String ;Y7,a_,_:Array [String ,055]){Var _W6E:Float ;} }Class X{}Class z:zR{}''',
                '''Class,X66Vo6,:,y,{,$zh_a_,(,v,:,Array,[,Boolean,,,055,],;,f_3,,,g_n5K,:,String,;,Y7,,,a_,,,_,:,Array,[,String,,,055,],),{,Var,_W6E,:,Float,;,},},Class,X,{,},Class,z,:,zR,{,},<EOF>''',
                101
            )
        )

    def test_1684(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C_{Constructor (o,___,i6,_:Array [Boolean ,0B1];g:Array [Array [Array [Array [Array [String ,0b1010010],071],90],0xD],0B1]){}_(){}Destructor (){Continue ;}Var $j9P,_,K:_F9;Destructor (){} }Class _:Tk_{}Class _5{Constructor (h:drK){} }''',
                '''Class,C_,{,Constructor,(,o,,,___,,,i6,,,_,:,Array,[,Boolean,,,0B1,],;,g,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1010010,],,,071,],,,90,],,,0xD,],,,0B1,],),{,},_,(,),{,},Destructor,(,),{,Continue,;,},Var,$j9P,,,_,,,K,:,_F9,;,Destructor,(,),{,},},Class,_,:,Tk_,{,},Class,_5,{,Constructor,(,h,:,drK,),{,},},<EOF>''',
                101
            )
        )

    def test_1685(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:v__6a8_{}Class x{}Class m___9:_r{Destructor (){}Var $3:Array [String ,0B1];$s4z(_:__){}Var $_,q:Array [Array [Array [Array [Array [Int ,0b111010],0X62],012_2_0],0B100001],46];}''',
                '''Class,_,:,v__6a8_,{,},Class,x,{,},Class,m___9,:,_r,{,Destructor,(,),{,},Var,$3,:,Array,[,String,,,0B1,],;,$s4z,(,_,:,__,),{,},Var,$_,,,q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b111010,],,,0X62,],,,01220,],,,0B100001,],,,46,],;,},<EOF>''',
                101
            )
        )

    def test_1686(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (){} }Class _:_35{Val k_:Array [Boolean ,04];$_1_(l_:String ;x:Nr0;_5_G:Boolean ){} }Class M6_weB_{Destructor (){s70_7::$8();} }''',
                '''Class,_,:,_,{,Constructor,(,),{,},},Class,_,:,_35,{,Val,k_,:,Array,[,Boolean,,,04,],;,$_1_,(,l_,:,String,;,x,:,Nr0,;,_5_G,:,Boolean,),{,},},Class,M6_weB_,{,Destructor,(,),{,s70_7,::,$8,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1687(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_2t{Var $S,$_:C_;Constructor (_:_a8;Y,JP:Array [Array [Array [String ,0105],0105],0105]){} }Class _{}Class _{}''',
                '''Class,_,:,_2t,{,Var,$S,,,$_,:,C_,;,Constructor,(,_,:,_a8,;,Y,,,JP,:,Array,[,Array,[,Array,[,String,,,0105,],,,0105,],,,0105,],),{,},},Class,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1688(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{}Class _:_5_4{}Class _:_{Var _m4s_:C;Destructor (){Var O:Array [Array [Array [Boolean ,06],26_42_7],0B111001];Return ;} }''',
                '''Class,K,{,},Class,_,:,_5_4,{,},Class,_,:,_,{,Var,_m4s_,:,C,;,Destructor,(,),{,Var,O,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,26427,],,,0B111001,],;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1689(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:d{Constructor (_:Array [Array [Array [Array [Float ,0B1_00],0b1010],0X46],7_9];_9,h:Array [Array [Array [Array [Float ,0B110],03],9_69],8_9]){Return ;} }Class __{}Class c2:_{}''',
                '''Class,_,:,d,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B100,],,,0b1010,],,,0X46,],,,79,],;,_9,,,h,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B110,],,,03,],,,969,],,,89,],),{,Return,;,},},Class,__,{,},Class,c2,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1690(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var B_0__,L,_7_p,$_:Array [Array [Boolean ,0B1],04];Var $1_9,_,$_:Array [Array [Array [Array [Int ,7],0B11],0x1B],0B10];}''',
                '''Class,__,{,Var,B_0__,,,L,,,_7_p,,,$_,:,Array,[,Array,[,Boolean,,,0B1,],,,04,],;,Var,$1_9,,,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Int,,,7,],,,0B11,],,,0x1B,],,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_1691(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val __,F9:Array [Int ,0B10];}Class _:P_1{b(_lz_,r:Boolean ;_,_:R){eS::$76().wJ();}n(){}Val V:O;Constructor (){} }''',
                '''Class,_,{,Val,__,,,F9,:,Array,[,Int,,,0B10,],;,},Class,_,:,P_1,{,b,(,_lz_,,,r,:,Boolean,;,_,,,_,:,R,),{,eS,::,$76,(,),.,wJ,(,),;,},n,(,),{,},Val,V,:,O,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1692(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j_MM:_{}Class x{}Class __7c{}Class n:_g_{Var N,$_,$U5,E,$_,_P:String ;$_Z(_4_V7,l0l:Array [Array [Int ,0X19],8]){Val _,B27,_9,n,bt3_m:M;{} }}''',
                '''Class,j_MM,:,_,{,},Class,x,{,},Class,__7c,{,},Class,n,:,_g_,{,Var,N,,,$_,,,$U5,,,E,,,$_,,,_P,:,String,;,$_Z,(,_4_V7,,,l0l,:,Array,[,Array,[,Int,,,0X19,],,,8,],),{,Val,_,,,B27,,,_9,,,n,,,bt3_m,:,M,;,{,},},},<EOF>''',
                101
            )
        )

    def test_1693(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _zb_4{Destructor (){}Val _:_;Constructor (__163NLhI__s,e8,I:Array [Array [Float ,031],04];_:Float ;_,t_:_){}Val _:_4_;}''',
                '''Class,_zb_4,{,Destructor,(,),{,},Val,_,:,_,;,Constructor,(,__163NLhI__s,,,e8,,,I,:,Array,[,Array,[,Float,,,031,],,,04,],;,_,:,Float,;,_,,,t_,:,_,),{,},Val,_,:,_4_,;,},<EOF>''',
                101
            )
        )

    def test_1694(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Kd{}Class _49:c{Var $X,_,$ab_5:Array [String ,0x7];Var y6_,$u,$_,_,__D__97,w:Array [Array [Array [Float ,020_5],4],060];Var $b42:Boolean ;}''',
                '''Class,Kd,{,},Class,_49,:,c,{,Var,$X,,,_,,,$ab_5,:,Array,[,String,,,0x7,],;,Var,y6_,,,$u,,,$_,,,_,,,__D__97,,,w,:,Array,[,Array,[,Array,[,Float,,,0205,],,,4,],,,060,],;,Var,$b42,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1695(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _T8:Vj6q{Destructor (){Continue ;} }Class __:ju{Destructor (){}Var a,n_6__,$6,$25_2,$Yu:_71;}Class __:G_{}Class DC_A:E{}''',
                '''Class,_,{,},Class,_T8,:,Vj6q,{,Destructor,(,),{,Continue,;,},},Class,__,:,ju,{,Destructor,(,),{,},Var,a,,,n_6__,,,$6,,,$25_2,,,$Yu,:,_71,;,},Class,__,:,G_,{,},Class,DC_A,:,E,{,},<EOF>''',
                101
            )
        )

    def test_1696(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:__{Val _8W:W;Var $Q_Y0OG,$_,_,$_Z,$_:Array [Array [Array [Array [Array [Boolean ,0B1011001],0B1011001],06],28],1_8_93_4];}Class _B5{Destructor (){} }''',
                '''Class,q,:,__,{,Val,_8W,:,W,;,Var,$Q_Y0OG,,,$_,,,_,,,$_Z,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1011001,],,,0B1011001,],,,06,],,,28,],,,18934,],;,},Class,_B5,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1697(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_{Constructor (vG:Array [Array [Array [Boolean ,0x6_A],0b1],7];Cvs,V:Array [Array [Int ,0X47],04];Nf7x_,l3_G6,S,C,M:Array [Array [Int ,04_0],05];_:__){Break ;}Var _,$tz:String ;}''',
                '''Class,_0_,{,Constructor,(,vG,:,Array,[,Array,[,Array,[,Boolean,,,0x6A,],,,0b1,],,,7,],;,Cvs,,,V,:,Array,[,Array,[,Int,,,0X47,],,,04,],;,Nf7x_,,,l3_G6,,,S,,,C,,,M,:,Array,[,Array,[,Int,,,040,],,,05,],;,_,:,__,),{,Break,;,},Var,_,,,$tz,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1698(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_9{Constructor (_,_:Int ;_:Array [Array [Array [Array [Array [Boolean ,0b111],0x23],0X3E],0B1010001],0b11_00_0];_,cf_:Array [String ,0X3E];_,m_7:_){Continue ;}Destructor (){}__4(og6,_S_:Boolean ){} }''',
                '''Class,_,:,_9,{,Constructor,(,_,,,_,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111,],,,0x23,],,,0X3E,],,,0B1010001,],,,0b11000,],;,_,,,cf_,:,Array,[,String,,,0X3E,],;,_,,,m_7,:,_,),{,Continue,;,},Destructor,(,),{,},__4,(,og6,,,_S_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1699(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e8:h{Val Y__2C,$C:Array [Array [Array [Boolean ,2],0x3D],80];Val _b:Array [Array [Array [Array [Array [Array [String ,0xD],80],0X52],07_643],0X52],0X52];}Class U_{}''',
                '''Class,e8,:,h,{,Val,Y__2C,,,$C,:,Array,[,Array,[,Array,[,Boolean,,,2,],,,0x3D,],,,80,],;,Val,_b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xD,],,,80,],,,0X52,],,,07643,],,,0X52,],,,0X52,],;,},Class,U_,{,},<EOF>''',
                101
            )
        )

    def test_1700(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _L{Destructor (){Break ;}Val _,$1_,$7:Array [Array [Array [Array [Array [Array [Int ,0B11000],0b1],013],02_1_56_4_5_2],9_7],0XC];Constructor (_:String ;_:Float ){} }''',
                '''Class,_L,{,Destructor,(,),{,Break,;,},Val,_,,,$1_,,,$7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B11000,],,,0b1,],,,013,],,,02156452,],,,97,],,,0XC,],;,Constructor,(,_,:,String,;,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1701(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6:w{}Class TA6__3zv{Val $1:_;Var $p,$8:Array [Float ,0xC_B];}Class _:pjE{}Class o:______{Destructor (){}Destructor (){} }Class _{}Class k{}Class X{Val $5,$_6m_,$_02,_:Int ;}''',
                '''Class,_6,:,w,{,},Class,TA6__3zv,{,Val,$1,:,_,;,Var,$p,,,$8,:,Array,[,Float,,,0xCB,],;,},Class,_,:,pjE,{,},Class,o,:,______,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_,{,},Class,k,{,},Class,X,{,Val,$5,,,$_6m_,,,$_02,,,_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1702(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Zj9{}Class _{}Class r6V:_s6{Val $J8,v3__5,__:_r;}Class ___:O{Constructor (_:Float ;_3,_:Int ;p:X_3__0ni;z:Int ){Break ;hfS::$G9();}Constructor (){Return ;{} }}Class __3G:_6_{$9_(_h:Float ){}Constructor (_:Boolean ;_5S_,v,u:sD){Continue ;}Destructor (){} }''',
                '''Class,_Zj9,{,},Class,_,{,},Class,r6V,:,_s6,{,Val,$J8,,,v3__5,,,__,:,_r,;,},Class,___,:,O,{,Constructor,(,_,:,Float,;,_3,,,_,:,Int,;,p,:,X_3__0ni,;,z,:,Int,),{,Break,;,hfS,::,$G9,(,),;,},Constructor,(,),{,Return,;,{,},},},Class,__3G,:,_6_,{,$9_,(,_h,:,Float,),{,},Constructor,(,_,:,Boolean,;,_5S_,,,v,,,u,:,sD,),{,Continue,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1703(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _n____{Var __n6:Int ;$4v(U:String ;_:u){} }Class __4{}Class M{$___(){} }Class __2_{Destructor (){} }Class M2X{Constructor (){} }Class _{}Class uf{}''',
                '''Class,_n____,{,Var,__n6,:,Int,;,$4v,(,U,:,String,;,_,:,u,),{,},},Class,__4,{,},Class,M,{,$___,(,),{,},},Class,__2_,{,Destructor,(,),{,},},Class,M2X,{,Constructor,(,),{,},},Class,_,{,},Class,uf,{,},<EOF>''',
                101
            )
        )

    def test_1704(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _o2{Val A_,H,W2:String ;Val _4_,_:Float ;Constructor (I,W_7,jmv,_Gg_:aH;__:Array [Array [Array [Int ,057],0X53],0x1_8A];n,t:Array [Float ,0x57]){} }''',
                '''Class,_o2,{,Val,A_,,,H,,,W2,:,String,;,Val,_4_,,,_,:,Float,;,Constructor,(,I,,,W_7,,,jmv,,,_Gg_,:,aH,;,__,:,Array,[,Array,[,Array,[,Int,,,057,],,,0X53,],,,0x18A,],;,n,,,t,:,Array,[,Float,,,0x57,],),{,},},<EOF>''',
                101
            )
        )

    def test_1705(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:_{Val $_,a:_F;}Class _j__:__{Constructor (D:Array [Array [Array [String ,70],0X17],0b1001101];_:_){} }Class in2:l1{}Class _{Var $8H:Array [String ,06];}Class _{}''',
                '''Class,L,:,_,{,Val,$_,,,a,:,_F,;,},Class,_j__,:,__,{,Constructor,(,D,:,Array,[,Array,[,Array,[,String,,,70,],,,0X17,],,,0b1001101,],;,_,:,_,),{,},},Class,in2,:,l1,{,},Class,_,{,Var,$8H,:,Array,[,String,,,06,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1706(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:W{}Class _{}Class _:k{Var _:Array [Array [Array [Boolean ,06],78],78];Var $r,$B6:Array [String ,0b1];Constructor (_,_,__EH_:Array [Array [Array [Array [Boolean ,0x22],014],0B1],29];__2:k6;_:Int ){} }Class t_{}''',
                '''Class,q,:,W,{,},Class,_,{,},Class,_,:,k,{,Var,_,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,78,],,,78,],;,Var,$r,,,$B6,:,Array,[,String,,,0b1,],;,Constructor,(,_,,,_,,,__EH_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x22,],,,014,],,,0B1,],,,29,],;,__2,:,k6,;,_,:,Int,),{,},},Class,t_,{,},<EOF>''',
                101
            )
        )

    def test_1707(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:_3e8{}Class PN{Constructor (_:String ;__0tV,s:Int ){}Constructor (_:v;yO_,_:Array [Array [Boolean ,37],056]){} }Class O{}Class mi:x8{Var _23,$_:Array [Array [Float ,0X10],0B1];Val $PYF:Int ;}''',
                '''Class,E,:,_3e8,{,},Class,PN,{,Constructor,(,_,:,String,;,__0tV,,,s,:,Int,),{,},Constructor,(,_,:,v,;,yO_,,,_,:,Array,[,Array,[,Boolean,,,37,],,,056,],),{,},},Class,O,{,},Class,mi,:,x8,{,Var,_23,,,$_,:,Array,[,Array,[,Float,,,0X10,],,,0B1,],;,Val,$PYF,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1708(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:y1_{}Class _:Si{Val $7_,$_4_f2_:Array [Array [Array [Array [Array [Array [Float ,0130],0130],53],0XD],8],03];}Class i{}Class _{}''',
                '''Class,t,:,y1_,{,},Class,_,:,Si,{,Val,$7_,,,$_4_f2_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0130,],,,0130,],,,53,],,,0XD,],,,8,],,,03,],;,},Class,i,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1709(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D_{}Class _DR{Val _,$il4:_;$1xr4_0(T:Array [Boolean ,0B1000010];_,____q8,e81,_0,_,_5,f,___:Boolean ;l_:Int ;_o:Float ;_,___:Int ;_:g_;_,__e,_Gn,W,S1,_9_,_,A,__,_,_g:Z_p;_A_,_h_:Array [Int ,060]){} }''',
                '''Class,D_,{,},Class,_DR,{,Val,_,,,$il4,:,_,;,$1xr4_0,(,T,:,Array,[,Boolean,,,0B1000010,],;,_,,,____q8,,,e81,,,_0,,,_,,,_5,,,f,,,___,:,Boolean,;,l_,:,Int,;,_o,:,Float,;,_,,,___,:,Int,;,_,:,g_,;,_,,,__e,,,_Gn,,,W,,,S1,,,_9_,,,_,,,A,,,__,,,_,,,_g,:,Z_p,;,_A_,,,_h_,:,Array,[,Int,,,060,],),{,},},<EOF>''',
                101
            )
        )

    def test_1710(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M0n_8{}Class Qv{}Class _:DWq{}Class k{Val $973,$_:Array [Array [Array [Array [Array [Array [Boolean ,0b111010],0b111010],0X6],047],0x5_2_F_5],32];}''',
                '''Class,_M0n_8,{,},Class,Qv,{,},Class,_,:,DWq,{,},Class,k,{,Val,$973,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111010,],,,0b111010,],,,0X6,],,,047,],,,0x52F5,],,,32,],;,},<EOF>''',
                101
            )
        )

    def test_1711(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{X(){}Var $6,_:String ;}Class qc_{$V9(){}$66(WA,_:_4;A:Boolean ;_62__:String ;_,O:Array [Boolean ,01_2];b,_h,_9__,__l:_UEQ2){} }''',
                '''Class,_,{,X,(,),{,},Var,$6,,,_,:,String,;,},Class,qc_,{,$V9,(,),{,},$66,(,WA,,,_,:,_4,;,A,:,Boolean,;,_62__,:,String,;,_,,,O,:,Array,[,Boolean,,,012,],;,b,,,_h,,,_9__,,,__l,:,_UEQ2,),{,},},<EOF>''',
                101
            )
        )

    def test_1712(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{}Class Z_{Destructor (){}Constructor (__,i,_,A:Array [Array [Array [Array [Array [Float ,0b1],0x1],01],035_5_43],01]){}Constructor (){}Destructor (){Val I__7,__v:_;}Var __:Int ;}''',
                '''Class,f,{,},Class,Z_,{,Destructor,(,),{,},Constructor,(,__,,,i,,,_,,,A,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0x1,],,,01,],,,035543,],,,01,],),{,},Constructor,(,),{,},Destructor,(,),{,Val,I__7,,,__v,:,_,;,},Var,__,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1713(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $0,$vc_,$U:Array [Array [Array [Array [Float ,12],0x296],0x3],0b10010];Val _,$Puj,$H,__,X:Boolean ;}Class Rh{}Class _:Ky__{}Class _{}''',
                '''Class,_,{,Var,$0,,,$vc_,,,$U,:,Array,[,Array,[,Array,[,Array,[,Float,,,12,],,,0x296,],,,0x3,],,,0b10010,],;,Val,_,,,$Puj,,,$H,,,__,,,X,:,Boolean,;,},Class,Rh,{,},Class,_,:,Ky__,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1714(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P269V:Yg{}Class E4{}Class _{Destructor (){Break ;}Constructor (){Var _,c8,_,_:y;} }Class C9_61X:_qlL1j{}''',
                '''Class,P269V,:,Yg,{,},Class,E4,{,},Class,_,{,Destructor,(,),{,Break,;,},Constructor,(,),{,Var,_,,,c8,,,_,,,_,:,y,;,},},Class,C9_61X,:,_qlL1j,{,},<EOF>''',
                101
            )
        )

    def test_1715(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _,_u,q,$_:Array [Array [Array [Array [Array [Array [Int ,0B1],7],0X7D_6_754_D_2_8],011],0B1_0_0],011];Destructor (){} }''',
                '''Class,_,{,Var,_,,,_u,,,q,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,7,],,,0X7D6754D28,],,,011,],,,0B100,],,,011,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1716(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:t{}Class dJ:_8{}Class _s_{Var $_,$9G46:Boolean ;Var $__93,Fi,$_I2,_:Array [Array [Array [Array [Array [String ,023],2_99],0x1B],0B1001101],0x8];}Class ___1{}Class k{Constructor (_,CS9,p4:Float ;_:_E;f1:_){}Destructor (){}Constructor (){} }''',
                '''Class,_0,:,t,{,},Class,dJ,:,_8,{,},Class,_s_,{,Var,$_,,,$9G46,:,Boolean,;,Var,$__93,,,Fi,,,$_I2,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,023,],,,299,],,,0x1B,],,,0B1001101,],,,0x8,],;,},Class,___1,{,},Class,k,{,Constructor,(,_,,,CS9,,,p4,:,Float,;,_,:,_E,;,f1,:,_,),{,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1717(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _lU{}Class wI99_{$_(){} }Class _:n{Constructor (e7:mz;I_:Float ;_,_:_){Break ;}$_9(a0p_:Array [Boolean ,0B101110]){} }''',
                '''Class,_lU,{,},Class,wI99_,{,$_,(,),{,},},Class,_,:,n,{,Constructor,(,e7,:,mz,;,I_,:,Float,;,_,,,_,:,_,),{,Break,;,},$_9,(,a0p_,:,Array,[,Boolean,,,0B101110,],),{,},},<EOF>''',
                101
            )
        )

    def test_1718(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:a___{Constructor (j_,e8E,_21,__,G,UWY:Boolean ;n_:Int ;X,sO:Array [Array [Array [Array [Array [Float ,06],03],8_08_459_45],0xA6],03]){} }Class n8_{}Class _76{Constructor (_:String ;S,w2,___,s9w:Boolean ){}Val $U,$6ZX_,_C7y,h:_;}Class _:mY{Val $_Q:Array [Array [Boolean ,0X7_1E_4_1],100];$_(W5,__:Array [Float ,0X7];_Rx:Boolean ){} }''',
                '''Class,_,:,a___,{,Constructor,(,j_,,,e8E,,,_21,,,__,,,G,,,UWY,:,Boolean,;,n_,:,Int,;,X,,,sO,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,06,],,,03,],,,80845945,],,,0xA6,],,,03,],),{,},},Class,n8_,{,},Class,_76,{,Constructor,(,_,:,String,;,S,,,w2,,,___,,,s9w,:,Boolean,),{,},Val,$U,,,$6ZX_,,,_C7y,,,h,:,_,;,},Class,_,:,mY,{,Val,$_Q,:,Array,[,Array,[,Boolean,,,0X71E41,],,,100,],;,$_,(,W5,,,__,:,Array,[,Float,,,0X7,],;,_Rx,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1719(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e_:D_{Constructor (_5_,_:Boolean ;l41:S;L,____:Float ;Fs:_;X:Float ){}Constructor (){Var _,I2:Array [Float ,072];}Constructor (){Var z:L2;} }''',
                '''Class,_e_,:,D_,{,Constructor,(,_5_,,,_,:,Boolean,;,l41,:,S,;,L,,,____,:,Float,;,Fs,:,_,;,X,:,Float,),{,},Constructor,(,),{,Var,_,,,I2,:,Array,[,Float,,,072,],;,},Constructor,(,),{,Var,z,:,L2,;,},},<EOF>''',
                101
            )
        )

    def test_1720(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1I_:_m{}Class ____{Val a,_c,$_:Array [Array [Array [Int ,0X51],0B1],0B1];}Class __:_{}Class bY:i_{Constructor (){} }''',
                '''Class,_1I_,:,_m,{,},Class,____,{,Val,a,,,_c,,,$_,:,Array,[,Array,[,Array,[,Int,,,0X51,],,,0B1,],,,0B1,],;,},Class,__,:,_,{,},Class,bY,:,i_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1721(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c__95U9Z{}Class _:B{Constructor (){} }Class x:__{}Class _{Var $0_,$92,b,$T,i:Array [String ,0b111];}Class _{}Class VVX{}''',
                '''Class,c__95U9Z,{,},Class,_,:,B,{,Constructor,(,),{,},},Class,x,:,__,{,},Class,_,{,Var,$0_,,,$92,,,b,,,$T,,,i,:,Array,[,String,,,0b111,],;,},Class,_,{,},Class,VVX,{,},<EOF>''',
                101
            )
        )

    def test_1722(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _f2_:_{}Class _{}Class H_{Constructor (_,Q33,_9_9_:_08;_,_,_:t;_:Array [String ,0B1_1];QA66,_8:Array [Boolean ,0xE];OcZ__:Float ;_:J3;__u_,__57,_:Q;__A,_X,_K_:Boolean ){}Var $3,K:Int ;}Class s{Var $_,$_:String ;}''',
                '''Class,_f2_,:,_,{,},Class,_,{,},Class,H_,{,Constructor,(,_,,,Q33,,,_9_9_,:,_08,;,_,,,_,,,_,:,t,;,_,:,Array,[,String,,,0B11,],;,QA66,,,_8,:,Array,[,Boolean,,,0xE,],;,OcZ__,:,Float,;,_,:,J3,;,__u_,,,__57,,,_,:,Q,;,__A,,,_X,,,_K_,:,Boolean,),{,},Var,$3,,,K,:,Int,;,},Class,s,{,Var,$_,,,$_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1723(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c9{Constructor (){} }Class _:__P{Destructor (){} }Class __7T12_:x{Var __,_77,$54:Boolean ;Z(){} }Class J{}''',
                '''Class,c9,{,Constructor,(,),{,},},Class,_,:,__P,{,Destructor,(,),{,},},Class,__7T12_,:,x,{,Var,__,,,_77,,,$54,:,Boolean,;,Z,(,),{,},},Class,J,{,},<EOF>''',
                101
            )
        )

    def test_1724(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{O_(_:F_){Continue ;}Val $m7,$_,l_:String ;}Class e:__{}Class _{}Class g:E{Constructor (){} }Class _:_{}Class I{}''',
                '''Class,x,{,O_,(,_,:,F_,),{,Continue,;,},Val,$m7,,,$_,,,l_,:,String,;,},Class,e,:,__,{,},Class,_,{,},Class,g,:,E,{,Constructor,(,),{,},},Class,_,:,_,{,},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_1725(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_1:b01r{Constructor (B02,__:Array [Array [Float ,073],71];_81:Array [String ,4];Z,_yk___b_:Float ){} }Class _7_:Y{Constructor (_,G_,E_7:Array [Array [Float ,950_6],0B11010];_,__:Array [Int ,0X1]){Continue ;Break ;} }Class w{}Class _{}''',
                '''Class,k_1,:,b01r,{,Constructor,(,B02,,,__,:,Array,[,Array,[,Float,,,073,],,,71,],;,_81,:,Array,[,String,,,4,],;,Z,,,_yk___b_,:,Float,),{,},},Class,_7_,:,Y,{,Constructor,(,_,,,G_,,,E_7,:,Array,[,Array,[,Float,,,9506,],,,0B11010,],;,_,,,__,:,Array,[,Int,,,0X1,],),{,Continue,;,Break,;,},},Class,w,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1726(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{}Class __:f{}Class _6{}Class __{}Class _:_{Constructor (a_un:Int ;C,e395_8:Array [Float ,040];_4_:Array [String ,100]){Val L_k:Boolean ;} }''',
                '''Class,v,{,},Class,__,:,f,{,},Class,_6,{,},Class,__,{,},Class,_,:,_,{,Constructor,(,a_un,:,Int,;,C,,,e395_8,:,Array,[,Float,,,040,],;,_4_,:,Array,[,String,,,100,],),{,Val,L_k,:,Boolean,;,},},<EOF>''',
                101
            )
        )

    def test_1727(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2:_{}Class p:ms{}Class T{Destructor (){Break ;}Constructor (){}Val s:Array [Array [Boolean ,3],0b101001];S(T_H__:_){}Val $_6:Array [Array [String ,071],3];}''',
                '''Class,_2,:,_,{,},Class,p,:,ms,{,},Class,T,{,Destructor,(,),{,Break,;,},Constructor,(,),{,},Val,s,:,Array,[,Array,[,Boolean,,,3,],,,0b101001,],;,S,(,T_H__,:,_,),{,},Val,$_6,:,Array,[,Array,[,String,,,071,],,,3,],;,},<EOF>''',
                101
            )
        )

    def test_1728(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{}Class _{Constructor (n,Js,_i:Array [Array [Float ,027],73]){}Destructor (){}Destructor (){} }Class _0S{}''',
                '''Class,X,{,},Class,_,{,Constructor,(,n,,,Js,,,_i,:,Array,[,Array,[,Float,,,027,],,,73,],),{,},Destructor,(,),{,},Destructor,(,),{,},},Class,_0S,{,},<EOF>''',
                101
            )
        )

    def test_1729(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{$BQ_4_(_,_303t9_:String ;J0x:Array [Array [Array [Int ,0x8],0X5_EF],0B1_101]){}Val _:Array [Boolean ,0x3];}''',
                '''Class,d,{,$BQ_4_,(,_,,,_303t9_,:,String,;,J0x,:,Array,[,Array,[,Array,[,Int,,,0x8,],,,0X5EF,],,,0B1101,],),{,},Val,_,:,Array,[,Boolean,,,0x3,],;,},<EOF>''',
                101
            )
        )

    def test_1730(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_6{Var $0r:Array [Array [Array [Array [Array [Float ,21],036],01_7_0],0B1],4_2_73];Constructor (_k:Float ){} }Class t:G3{}''',
                '''Class,_,:,_6,{,Var,$0r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,21,],,,036,],,,0170,],,,0B1,],,,4273,],;,Constructor,(,_k,:,Float,),{,},},Class,t,:,G3,{,},<EOF>''',
                101
            )
        )

    def test_1731(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _H:_{}Class _:_{Destructor (){Return ;}Val $96D_:Array [Array [Array [Array [Array [Array [Boolean ,03],0xE],0x94_E],03_4_1],07],0b1];Val j:C_;}''',
                '''Class,_,:,_,{,},Class,_H,:,_,{,},Class,_,:,_,{,Destructor,(,),{,Return,;,},Val,$96D_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,03,],,,0xE,],,,0x94E,],,,0341,],,,07,],,,0b1,],;,Val,j,:,C_,;,},<EOF>''',
                101
            )
        )

    def test_1732(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _3:w{Val M_,d2,_:Array [Array [Array [Array [Array [Float ,64],03_1],0XF_EC],01],0B1000010];}Class z1D:_{}Class m:I_{Destructor (){} }''',
                '''Class,_,:,_,{,},Class,_3,:,w,{,Val,M_,,,d2,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,64,],,,031,],,,0XFEC,],,,01,],,,0B1000010,],;,},Class,z1D,:,_,{,},Class,m,:,I_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1733(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Vh_XE__0:_{Constructor (_:Array [Array [Int ,0144],0X2E]){Break ;}m(L4n,_,X_0:_1_;_8:Int ){_::$Bn9();} }Class _v{_0b(){} }''',
                '''Class,Vh_XE__0,:,_,{,Constructor,(,_,:,Array,[,Array,[,Int,,,0144,],,,0X2E,],),{,Break,;,},m,(,L4n,,,_,,,X_0,:,_1_,;,_8,:,Int,),{,_,::,$Bn9,(,),;,},},Class,_v,{,_0b,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1734(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:UT{}Class __V{Constructor (){}Constructor (BL0:Array [Float ,075_4]){} }Class __0:L{Var X_R,p:Array [Float ,056];}Class l:_97k{Destructor (){} }''',
                '''Class,_,:,UT,{,},Class,__V,{,Constructor,(,),{,},Constructor,(,BL0,:,Array,[,Float,,,0754,],),{,},},Class,__0,:,L,{,Var,X_R,,,p,:,Array,[,Float,,,056,],;,},Class,l,:,_97k,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1735(self):
        self.assertTrue(
            TestLexer.test(
                '''Class zS0:_{Val $5ms:Array [Array [Int ,29],0B10011];Constructor (x,z_7E6,_:_;_,_2,_:String ){}Destructor (){}$84__(){Return ;Return ;Continue ;} }Class _{}''',
                '''Class,zS0,:,_,{,Val,$5ms,:,Array,[,Array,[,Int,,,29,],,,0B10011,],;,Constructor,(,x,,,z_7E6,,,_,:,_,;,_,,,_2,,,_,:,String,),{,},Destructor,(,),{,},$84__,(,),{,Return,;,Return,;,Continue,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1736(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o_{Constructor (__:Array [Array [Array [Array [Int ,0X1F],0X1F],061],0b1]){}Val _m,$_:Array [Array [Array [String ,061],3_0],0B1011000];}''',
                '''Class,o_,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X1F,],,,0X1F,],,,061,],,,0b1,],),{,},Val,_m,,,$_,:,Array,[,Array,[,Array,[,String,,,061,],,,30,],,,0B1011000,],;,},<EOF>''',
                101
            )
        )

    def test_1737(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q6{Destructor (){R::$j_D();} }Class S:_{}Class n2{}Class _2a:Q{$av(E513,__:Array [Array [Array [Boolean ,96],96],054]){} }Class u:v{}''',
                '''Class,q6,{,Destructor,(,),{,R,::,$j_D,(,),;,},},Class,S,:,_,{,},Class,n2,{,},Class,_2a,:,Q,{,$av,(,E513,,,__,:,Array,[,Array,[,Array,[,Boolean,,,96,],,,96,],,,054,],),{,},},Class,u,:,v,{,},<EOF>''',
                101
            )
        )

    def test_1738(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _B_{Var l_,$_,_:Array [String ,0B110001];}Class g:J{_7(_i,P:_){} }Class U_{Destructor (){} }Class _:_{}Class rySK:_z{}Class n:_8{}''',
                '''Class,_B_,{,Var,l_,,,$_,,,_,:,Array,[,String,,,0B110001,],;,},Class,g,:,J,{,_7,(,_i,,,P,:,_,),{,},},Class,U_,{,Destructor,(,),{,},},Class,_,:,_,{,},Class,rySK,:,_z,{,},Class,n,:,_8,{,},<EOF>''',
                101
            )
        )

    def test_1739(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T3__:w{Destructor (){Val W:Array [String ,36];Break ;}Constructor (__:Array [String ,0B1_0_0]){Continue ;} }''',
                '''Class,T3__,:,w,{,Destructor,(,),{,Val,W,:,Array,[,String,,,36,],;,Break,;,},Constructor,(,__,:,Array,[,String,,,0B100,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1740(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){ {Val p:Array [String ,13];Continue ;} }Val $6,$L:n;}Class _471:___t{}Class _:A{Val _:Array [Array [Boolean ,0B1],0xC];}Class y_:_{}''',
                '''Class,_,{,Constructor,(,),{,{,Val,p,:,Array,[,String,,,13,],;,Continue,;,},},Val,$6,,,$L,:,n,;,},Class,_471,:,___t,{,},Class,_,:,A,{,Val,_,:,Array,[,Array,[,Boolean,,,0B1,],,,0xC,],;,},Class,y_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1741(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I6_{}Class li_:_{Destructor (){Val y,_,_,BO_SvQ,_,u9,_4,Z,d:Boolean ;}Val _,$5H_,$64:Float ;Destructor (){Return ;Val B:Array [Boolean ,74_3];} }''',
                '''Class,_,:,I6_,{,},Class,li_,:,_,{,Destructor,(,),{,Val,y,,,_,,,_,,,BO_SvQ,,,_,,,u9,,,_4,,,Z,,,d,:,Boolean,;,},Val,_,,,$5H_,,,$64,:,Float,;,Destructor,(,),{,Return,;,Val,B,:,Array,[,Boolean,,,743,],;,},},<EOF>''',
                101
            )
        )

    def test_1742(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w_{$g(_,__6g:Array [Float ,85_71_8_26_436_7]){} }Class Y_{Constructor (_7P,E,_,_c_:String ;Qe6,W:_){}q(){} }Class f:iG{}Class _{}''',
                '''Class,_w_,{,$g,(,_,,,__6g,:,Array,[,Float,,,85718264367,],),{,},},Class,Y_,{,Constructor,(,_7P,,,E,,,_,,,_c_,:,String,;,Qe6,,,W,:,_,),{,},q,(,),{,},},Class,f,:,iG,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1743(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Y{}Class _:_A_V{Val $f_,$8,w,$l3hW,m:Boolean ;g(){} }Class _:Zdq{}Class o_:A{Val zn0691,u_:j;}Class _:GVx0{}Class ___2:_7{}''',
                '''Class,_,:,Y,{,},Class,_,:,_A_V,{,Val,$f_,,,$8,,,w,,,$l3hW,,,m,:,Boolean,;,g,(,),{,},},Class,_,:,Zdq,{,},Class,o_,:,A,{,Val,zn0691,,,u_,:,j,;,},Class,_,:,GVx0,{,},Class,___2,:,_7,{,},<EOF>''',
                101
            )
        )

    def test_1744(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kZd:Zty{Val $17_3,_:Jf;Constructor (){} }Class _:L{}Class _:C{}Class Q_8___{}Class _:__{}Class H0:__{Var _a:Y10;}Class ___T6:_s{}Class c:_0{}''',
                '''Class,kZd,:,Zty,{,Val,$17_3,,,_,:,Jf,;,Constructor,(,),{,},},Class,_,:,L,{,},Class,_,:,C,{,},Class,Q_8___,{,},Class,_,:,__,{,},Class,H0,:,__,{,Var,_a,:,Y10,;,},Class,___T6,:,_s,{,},Class,c,:,_0,{,},<EOF>''',
                101
            )
        )

    def test_1745(self):
        self.assertTrue(
            TestLexer.test(
                '''Class sO:zV7_{}Class _{Constructor (v,h_f_,_38_C_,E,__,vu,y,__6_,_9_61Uo,_:Array [Array [Boolean ,0x2],0B1];B:Array [Int ,0B110101]){} }''',
                '''Class,sO,:,zV7_,{,},Class,_,{,Constructor,(,v,,,h_f_,,,_38_C_,,,E,,,__,,,vu,,,y,,,__6_,,,_9_61Uo,,,_,:,Array,[,Array,[,Boolean,,,0x2,],,,0B1,],;,B,:,Array,[,Int,,,0B110101,],),{,},},<EOF>''',
                101
            )
        )

    def test_1746(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _706_{Destructor (){} }Class gx_{Val P5:G;}Class a_{Val $_:_5h_B_v;_f0(G:Float ){Break ;} }Class _13{Constructor (_:Boolean ;_3_:String ){} }Class b_W4{}''',
                '''Class,_706_,{,Destructor,(,),{,},},Class,gx_,{,Val,P5,:,G,;,},Class,a_,{,Val,$_,:,_5h_B_v,;,_f0,(,G,:,Float,),{,Break,;,},},Class,_13,{,Constructor,(,_,:,Boolean,;,_3_,:,String,),{,},},Class,b_W4,{,},<EOF>''',
                101
            )
        )

    def test_1747(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _qMP:R39{}Class _6:O{Var _,$_:Boolean ;}Class _{}Class PI_{a(){Val _:Array [Array [String ,0xE8],0B1_1];} }Class _:ei{}''',
                '''Class,_qMP,:,R39,{,},Class,_6,:,O,{,Var,_,,,$_,:,Boolean,;,},Class,_,{,},Class,PI_,{,a,(,),{,Val,_,:,Array,[,Array,[,String,,,0xE8,],,,0B11,],;,},},Class,_,:,ei,{,},<EOF>''',
                101
            )
        )

    def test_1748(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{Constructor (E_C:G;b,_7_,_,X__:_;_N6:String ){}Val $_:Int ;Constructor (H_RRN_:Array [Int ,0x4_4];_g,hW:Array [Boolean ,8_3];_,q36,t:Float ;u8:n;Z:Z){}Var R:Array [Array [Array [Int ,0B1],9],0x1A];Var $85,$4,t:_5;}Class _{}''',
                '''Class,f,{,Constructor,(,E_C,:,G,;,b,,,_7_,,,_,,,X__,:,_,;,_N6,:,String,),{,},Val,$_,:,Int,;,Constructor,(,H_RRN_,:,Array,[,Int,,,0x44,],;,_g,,,hW,:,Array,[,Boolean,,,83,],;,_,,,q36,,,t,:,Float,;,u8,:,n,;,Z,:,Z,),{,},Var,R,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,9,],,,0x1A,],;,Var,$85,,,$4,,,t,:,_5,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1749(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{Var _j15_1:Array [Float ,053];Yt(xr:Array [Array [String ,0x24],22]){Break ;Var S,S,_:Float ;} }Class ___:_3_e{}Class _:_{}''',
                '''Class,_,{,},Class,_,{,Var,_j15_1,:,Array,[,Float,,,053,],;,Yt,(,xr,:,Array,[,Array,[,String,,,0x24,],,,22,],),{,Break,;,Var,S,,,S,,,_,:,Float,;,},},Class,___,:,_3_e,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1750(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _D:_{}Class _:oY{Var _:Array [Array [Array [Array [Boolean ,0x20],04],07],8];Destructor (){} }Class _{Val $c9__,_R,$1:Array [Array [Boolean ,45],0B1000];$3(){} }Class ___:__{}''',
                '''Class,_D,:,_,{,},Class,_,:,oY,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x20,],,,04,],,,07,],,,8,],;,Destructor,(,),{,},},Class,_,{,Val,$c9__,,,_R,,,$1,:,Array,[,Array,[,Boolean,,,45,],,,0B1000,],;,$3,(,),{,},},Class,___,:,__,{,},<EOF>''',
                101
            )
        )

    def test_1751(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:G{}Class WzU:v{}Class __{Var _,J_,D3_60:Float ;Var D:Array [Boolean ,0X52];Constructor (){}Destructor (){}Z(){} }''',
                '''Class,l,:,G,{,},Class,WzU,:,v,{,},Class,__,{,Var,_,,,J_,,,D3_60,:,Float,;,Var,D,:,Array,[,Boolean,,,0X52,],;,Constructor,(,),{,},Destructor,(,),{,},Z,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1752(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{}Class r:_{Val e,$T,_:Array [Array [Array [Array [Array [Boolean ,0B1],045],0X57_0_9],5],0X38];}Class iT:F{}''',
                '''Class,y,{,},Class,r,:,_,{,Val,e,,,$T,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,045,],,,0X5709,],,,5,],,,0X38,],;,},Class,iT,:,F,{,},<EOF>''',
                101
            )
        )

    def test_1753(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Val _,__1:Array [Array [Array [Array [Array [Array [Int ,0x14],0127],0127],0127],0B1],04];Val c:Int ;Constructor (I,_,D:_74_;K,_7hL_,_1l:z4;_1Mk,_7_:t40_){Continue ;Continue ;} }''',
                '''Class,S,{,Val,_,,,__1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x14,],,,0127,],,,0127,],,,0127,],,,0B1,],,,04,],;,Val,c,:,Int,;,Constructor,(,I,,,_,,,D,:,_74_,;,K,,,_7hL_,,,_1l,:,z4,;,_1Mk,,,_7_,:,t40_,),{,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1754(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class M:_{Val $r48_6,r,$__:Array [Float ,0x7A_5_A_9];Val _20v:Array [String ,03_4];}Class _n_:a_6{}Class nB3N{}Class _:_{}''',
                '''Class,_,{,},Class,M,:,_,{,Val,$r48_6,,,r,,,$__,:,Array,[,Float,,,0x7A5A9,],;,Val,_20v,:,Array,[,String,,,034,],;,},Class,_n_,:,a_6,{,},Class,nB3N,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1755(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X__{_(_,_k5d:Array [Array [Array [Boolean ,2_77],01_6_006],0b10011]){Return ;Continue ;}Val $_g__63k:Array [String ,0X4B];}''',
                '''Class,X__,{,_,(,_,,,_k5d,:,Array,[,Array,[,Array,[,Boolean,,,277,],,,016006,],,,0b10011,],),{,Return,;,Continue,;,},Val,$_g__63k,:,Array,[,String,,,0X4B,],;,},<EOF>''',
                101
            )
        )

    def test_1756(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:_{Constructor (_0:Boolean ;F,__:_;_:Array [Array [Array [Array [Int ,0B1_10_111_0],023],0B1_0],3_2_6]){} }Class J81{}''',
                '''Class,l,:,_,{,Constructor,(,_0,:,Boolean,;,F,,,__,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1101110,],,,023,],,,0B10,],,,326,],),{,},},Class,J81,{,},<EOF>''',
                101
            )
        )

    def test_1757(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:k{Constructor (i_,T_:Array [Array [Array [Array [Array [Boolean ,0b101100],5],04],0B1],0X50]){Continue ;Continue ;} }Class __:_{}Class _t{}''',
                '''Class,f,:,k,{,Constructor,(,i_,,,T_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101100,],,,5,],,,04,],,,0B1,],,,0X50,],),{,Continue,;,Continue,;,},},Class,__,:,_,{,},Class,_t,{,},<EOF>''',
                101
            )
        )

    def test_1758(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _:T8b{Val U8_,$_UO,$_5_,y_v,$d,q,_:Array [Array [Array [Boolean ,96],0b1],20];}Class ____:_4{}Class N__:_{}Class h7e{}''',
                '''Class,__,{,},Class,_,:,T8b,{,Val,U8_,,,$_UO,,,$_5_,,,y_v,,,$d,,,q,,,_,:,Array,[,Array,[,Array,[,Boolean,,,96,],,,0b1,],,,20,],;,},Class,____,:,_4,{,},Class,N__,:,_,{,},Class,h7e,{,},<EOF>''',
                101
            )
        )

    def test_1759(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7:_93{Var $r1,$aR,_,hX,$C__,_0,_4:Float ;}Class _{}Class p:N{Val _:Array [Float ,0b1000010];Val $57:_;}Class _:L{}''',
                '''Class,_7,:,_93,{,Var,$r1,,,$aR,,,_,,,hX,,,$C__,,,_0,,,_4,:,Float,;,},Class,_,{,},Class,p,:,N,{,Val,_,:,Array,[,Float,,,0b1000010,],;,Val,$57,:,_,;,},Class,_,:,L,{,},<EOF>''',
                101
            )
        )

    def test_1760(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:____{}Class X62{Var $_,$s6,_:n;$_680(_6,D_m:_;__7,S,jO_9_,_,__,__,_4A,_4_,c8_7_d:Float ){} }Class _{}Class _8:Xj{Constructor (){Continue ;}Val _4:Array [Array [Array [Array [String ,35],05],0X38],055];}''',
                '''Class,r,:,____,{,},Class,X62,{,Var,$_,,,$s6,,,_,:,n,;,$_680,(,_6,,,D_m,:,_,;,__7,,,S,,,jO_9_,,,_,,,__,,,__,,,_4A,,,_4_,,,c8_7_d,:,Float,),{,},},Class,_,{,},Class,_8,:,Xj,{,Constructor,(,),{,Continue,;,},Val,_4,:,Array,[,Array,[,Array,[,Array,[,String,,,35,],,,05,],,,0X38,],,,055,],;,},<EOF>''',
                101
            )
        )

    def test_1761(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:__R{Val fj,Y0:l;Destructor (){} }Class __b_{Var $i_44:Float ;Destructor (){} }Class J3{Constructor (t,MZ:Float ;__:Boolean ){} }''',
                '''Class,__,:,__R,{,Val,fj,,,Y0,:,l,;,Destructor,(,),{,},},Class,__b_,{,Var,$i_44,:,Float,;,Destructor,(,),{,},},Class,J3,{,Constructor,(,t,,,MZ,:,Float,;,__,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1762(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:Eq{O_(){Break ;Return ;} }Class dM__eQ{}Class O:C{Val h_r_02,TFM4N:Float ;$_(_9M,d:Array [Array [Float ,3],0x3_E]){} }Class _n5:n{}Class _{Constructor (){} }''',
                '''Class,s,:,Eq,{,O_,(,),{,Break,;,Return,;,},},Class,dM__eQ,{,},Class,O,:,C,{,Val,h_r_02,,,TFM4N,:,Float,;,$_,(,_9M,,,d,:,Array,[,Array,[,Float,,,3,],,,0x3E,],),{,},},Class,_n5,:,n,{,},Class,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1763(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{}Class __:W{Var $__0h_:Array [Array [Array [Array [Array [Array [String ,0B100000],6],4],0B1_1],6],0B1_1];Destructor (){}Var _,N,$_ij:cI;}''',
                '''Class,t,{,},Class,__,:,W,{,Var,$__0h_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B100000,],,,6,],,,4,],,,0B11,],,,6,],,,0B11,],;,Destructor,(,),{,},Var,_,,,N,,,$_ij,:,cI,;,},<EOF>''',
                101
            )
        )

    def test_1764(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:_Q__{__c(W_518_,_7,_,Z7,_m:Float ;pI7_,F,_,_a_3NM,_,x,W:Int ;___r,_:Array [Array [Float ,027],0x61];__,r0,u:E){} }''',
                '''Class,t,:,_Q__,{,__c,(,W_518_,,,_7,,,_,,,Z7,,,_m,:,Float,;,pI7_,,,F,,,_,,,_a_3NM,,,_,,,x,,,W,:,Int,;,___r,,,_,:,Array,[,Array,[,Float,,,027,],,,0x61,],;,__,,,r0,,,u,:,E,),{,},},<EOF>''',
                101
            )
        )

    def test_1765(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V1:_20QJ0_{$s(_G:Boolean ){}Destructor (){Break ;}Var $Z:_;}Class _0x{X(_d:Array [Float ,06_7_6336_1];_3_PWM__:Boolean ){}Val $b2:Array [Array [Array [Array [String ,351],0b1],0x1],0B1];}Class _Q:__H__30{}Class _5{}''',
                '''Class,_V1,:,_20QJ0_,{,$s,(,_G,:,Boolean,),{,},Destructor,(,),{,Break,;,},Var,$Z,:,_,;,},Class,_0x,{,X,(,_d,:,Array,[,Float,,,06763361,],;,_3_PWM__,:,Boolean,),{,},Val,$b2,:,Array,[,Array,[,Array,[,Array,[,String,,,351,],,,0b1,],,,0x1,],,,0B1,],;,},Class,_Q,:,__H__30,{,},Class,_5,{,},<EOF>''',
                101
            )
        )

    def test_1766(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{Var $9_0__P_,t_a_7:Array [Array [String ,0x8],0X9_A_7];}Class F4:D{_g(){} }Class _{}Class _6s8J_:_{Constructor (){} }Class N_{$0X(_,Jo:_F5a4c){} }''',
                '''Class,t,{,Var,$9_0__P_,,,t_a_7,:,Array,[,Array,[,String,,,0x8,],,,0X9A7,],;,},Class,F4,:,D,{,_g,(,),{,},},Class,_,{,},Class,_6s8J_,:,_,{,Constructor,(,),{,},},Class,N_,{,$0X,(,_,,,Jo,:,_F5a4c,),{,},},<EOF>''',
                101
            )
        )

    def test_1767(self):
        self.assertTrue(
            TestLexer.test(
                '''Class EmD{_3_(G,_:Array [Array [Float ,0xA_2],0X56];y7_9:Array [Boolean ,4_6_6];_:Array [Boolean ,0XD];_UXP_Q_31_,_:Int ;_,o_1:Array [Boolean ,88]){} }Class _8_{Constructor (Gr_e3,x:__N;_d,Cxw,G_6:Array [Array [Float ,03],01221]){Continue ;U7::$__3o._.w9f.__c_();} }''',
                '''Class,EmD,{,_3_,(,G,,,_,:,Array,[,Array,[,Float,,,0xA2,],,,0X56,],;,y7_9,:,Array,[,Boolean,,,466,],;,_,:,Array,[,Boolean,,,0XD,],;,_UXP_Q_31_,,,_,:,Int,;,_,,,o_1,:,Array,[,Boolean,,,88,],),{,},},Class,_8_,{,Constructor,(,Gr_e3,,,x,:,__N,;,_d,,,Cxw,,,G_6,:,Array,[,Array,[,Float,,,03,],,,01221,],),{,Continue,;,U7,::,$__3o,.,_,.,w9f,.,__c_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1768(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ce:nn__w_{Val A9O,__,$_,$n_:Array [Int ,0X4E];Constructor (L:Array [Array [Array [Array [String ,0B110011],05_42],0X5],0113]){}Val S,$8_:Array [Array [String ,88_136],62];}Class _:N__z{Constructor (){} }''',
                '''Class,ce,:,nn__w_,{,Val,A9O,,,__,,,$_,,,$n_,:,Array,[,Int,,,0X4E,],;,Constructor,(,L,:,Array,[,Array,[,Array,[,Array,[,String,,,0B110011,],,,0542,],,,0X5,],,,0113,],),{,},Val,S,,,$8_,:,Array,[,Array,[,String,,,88136,],,,62,],;,},Class,_,:,N__z,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1769(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class TY:F{Val _d_:Array [Int ,41];Destructor (){}Val $u:Array [Int ,41];}Class _3{}Class _k:etJ8{}Class e:Uw{}Class _7n:v7ug{$2_(){} }''',
                '''Class,_,:,_,{,},Class,TY,:,F,{,Val,_d_,:,Array,[,Int,,,41,],;,Destructor,(,),{,},Val,$u,:,Array,[,Int,,,41,],;,},Class,_3,{,},Class,_k,:,etJ8,{,},Class,e,:,Uw,{,},Class,_7n,:,v7ug,{,$2_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1770(self):
        self.assertTrue(
            TestLexer.test(
                '''Class iv:A{$1(_,A,Es_:String ;S:Array [Float ,0b1];HNn,_,k5,_:Array [Array [Int ,0X9],041];o:Float ;w:Array [Int ,063]){} }''',
                '''Class,iv,:,A,{,$1,(,_,,,A,,,Es_,:,String,;,S,:,Array,[,Float,,,0b1,],;,HNn,,,_,,,k5,,,_,:,Array,[,Array,[,Int,,,0X9,],,,041,],;,o,:,Float,;,w,:,Array,[,Int,,,063,],),{,},},<EOF>''',
                101
            )
        )

    def test_1771(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_{Constructor (gT,v_:Array [Array [String ,0X4],0B11]){}Destructor (){}$264(){Return ;Break ;} }Class _{}''',
                '''Class,l_,{,Constructor,(,gT,,,v_,:,Array,[,Array,[,String,,,0X4,],,,0B11,],),{,},Destructor,(,),{,},$264,(,),{,Return,;,Break,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1772(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:q{}Class _9_{Constructor (_90,E3:Array [Boolean ,0b101001]){}Constructor (){}N(_H,__,_:Boolean ;Uw_:Boolean ){}Constructor (_F,V,_,_,__,RSc,YC_42GQ5_3:Array [Array [Array [Array [String ,3],03],0xA],9];_,u:Float ;_,__jKn1f:Boolean ;H:Array [Array [Float ,0B1],03]){} }''',
                '''Class,_,:,q,{,},Class,_9_,{,Constructor,(,_90,,,E3,:,Array,[,Boolean,,,0b101001,],),{,},Constructor,(,),{,},N,(,_H,,,__,,,_,:,Boolean,;,Uw_,:,Boolean,),{,},Constructor,(,_F,,,V,,,_,,,_,,,__,,,RSc,,,YC_42GQ5_3,:,Array,[,Array,[,Array,[,Array,[,String,,,3,],,,03,],,,0xA,],,,9,],;,_,,,u,:,Float,;,_,,,__jKn1f,:,Boolean,;,H,:,Array,[,Array,[,Float,,,0B1,],,,03,],),{,},},<EOF>''',
                101
            )
        )

    def test_1773(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class H4{Constructor (Hld,_UH4:Array [String ,0X4F];_1_t:_85){} }Class QUt46__7:_{Var $_Y,n___0:Float ;z(Aw0,P_e528__,__:Array [Float ,0X67_0]){} }''',
                '''Class,_,{,},Class,H4,{,Constructor,(,Hld,,,_UH4,:,Array,[,String,,,0X4F,],;,_1_t,:,_85,),{,},},Class,QUt46__7,:,_,{,Var,$_Y,,,n___0,:,Float,;,z,(,Aw0,,,P_e528__,,,__,:,Array,[,Float,,,0X670,],),{,},},<EOF>''',
                101
            )
        )

    def test_1774(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:a{}Class L{Val _,$_xD,__j_M,$G__0:Array [Array [Array [Array [Array [String ,0105],0B1_010],1_2],8],81];Constructor (__5:Array [String ,0105];N_A,_:Array [Array [String ,0105],0b110100];f:Array [Array [Array [Int ,81],0X2],81];_4,A8,W__:Array [Array [Boolean ,0xA],0105];_:Z;__,_:Array [Array [String ,0b110100],81];_0q88qJ,_,C:Array [Array [Float ,0105],81]){}Destructor (){}Constructor (){}Constructor (_:Array [Array [Boolean ,0X4],1]){} }''',
                '''Class,K,:,a,{,},Class,L,{,Val,_,,,$_xD,,,__j_M,,,$G__0,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0105,],,,0B1010,],,,12,],,,8,],,,81,],;,Constructor,(,__5,:,Array,[,String,,,0105,],;,N_A,,,_,:,Array,[,Array,[,String,,,0105,],,,0b110100,],;,f,:,Array,[,Array,[,Array,[,Int,,,81,],,,0X2,],,,81,],;,_4,,,A8,,,W__,:,Array,[,Array,[,Boolean,,,0xA,],,,0105,],;,_,:,Z,;,__,,,_,:,Array,[,Array,[,String,,,0b110100,],,,81,],;,_0q88qJ,,,_,,,C,:,Array,[,Array,[,Float,,,0105,],,,81,],),{,},Destructor,(,),{,},Constructor,(,),{,},Constructor,(,_,:,Array,[,Array,[,Boolean,,,0X4,],,,1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1775(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){Var _,_:Array [Float ,3];{} }Constructor (){Var _2__,N__:Array [Array [Array [Int ,0B1],4],042];} }Class _6:_f_{}Class Zbo{}Class x_7c{Destructor (){} }''',
                '''Class,_,{,Constructor,(,),{,Var,_,,,_,:,Array,[,Float,,,3,],;,{,},},Constructor,(,),{,Var,_2__,,,N__,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,4,],,,042,],;,},},Class,_6,:,_f_,{,},Class,Zbo,{,},Class,x_7c,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1776(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b{}Class _a:_{$W(A,_K4_k0:Array [String ,56_9]){w9::$0w9();}Constructor (E:Array [String ,0B10_111];_,r,y__,__:_;__9:Int ){}_(){} }''',
                '''Class,b,{,},Class,_a,:,_,{,$W,(,A,,,_K4_k0,:,Array,[,String,,,569,],),{,w9,::,$0w9,(,),;,},Constructor,(,E,:,Array,[,String,,,0B10111,],;,_,,,r,,,y__,,,__,:,_,;,__9,:,Int,),{,},_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1777(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _L:q{}Class o{Constructor (X:Array [Int ,0x5];__6:__k6_k;_Y,_:Array [Float ,0b10000];_,Q6_,_,_G:_){Break ;}Destructor (){} }''',
                '''Class,_L,:,q,{,},Class,o,{,Constructor,(,X,:,Array,[,Int,,,0x5,],;,__6,:,__k6_k,;,_Y,,,_,:,Array,[,Float,,,0b10000,],;,_,,,Q6_,,,_,,,_G,:,_,),{,Break,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1778(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:NE{}Class ___{Destructor (){}Destructor (){} }Class k{Val $1uB,$5vz9,GO0,_6,$_8:String ;}Class _58W3{}''',
                '''Class,_,:,NE,{,},Class,___,{,Destructor,(,),{,},Destructor,(,),{,},},Class,k,{,Val,$1uB,,,$5vz9,,,GO0,,,_6,,,$_8,:,String,;,},Class,_58W3,{,},<EOF>''',
                101
            )
        )

    def test_1779(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _xUo:U{Val $__8f:Int ;Val $_7,F_,_1z,_,$_:String ;}Class _{}Class __8:_L{}Class o{$1(_,C,__:Int ;w:String ){} }Class cx9f{}''',
                '''Class,_xUo,:,U,{,Val,$__8f,:,Int,;,Val,$_7,,,F_,,,_1z,,,_,,,$_,:,String,;,},Class,_,{,},Class,__8,:,_L,{,},Class,o,{,$1,(,_,,,C,,,__,:,Int,;,w,:,String,),{,},},Class,cx9f,{,},<EOF>''',
                101
            )
        )

    def test_1780(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i7_{Val $3_:Float ;}Class s:c{}Class Ew:v{Constructor (){}_5h_r_6(_,_:__2__;s2:Array [Boolean ,0b11110];N,J:_;_C:v;__,v:N9;w:Array [Array [Boolean ,0b11110],1_0_0361];_9:_9;__e,W:_010;_:_;__,s:String ){} }Class _:C_RN5{Constructor (_I:Int ;s,_:Boolean ;n,__,P_279,___:w){} }''',
                '''Class,i7_,{,Val,$3_,:,Float,;,},Class,s,:,c,{,},Class,Ew,:,v,{,Constructor,(,),{,},_5h_r_6,(,_,,,_,:,__2__,;,s2,:,Array,[,Boolean,,,0b11110,],;,N,,,J,:,_,;,_C,:,v,;,__,,,v,:,N9,;,w,:,Array,[,Array,[,Boolean,,,0b11110,],,,100361,],;,_9,:,_9,;,__e,,,W,:,_010,;,_,:,_,;,__,,,s,:,String,),{,},},Class,_,:,C_RN5,{,Constructor,(,_I,:,Int,;,s,,,_,:,Boolean,;,n,,,__,,,P_279,,,___,:,w,),{,},},<EOF>''',
                101
            )
        )

    def test_1781(self):
        self.assertTrue(
            TestLexer.test(
                '''Class QqV:_{gf(yTD,_,Y,E4,_,c_:Array [Array [Boolean ,6],61];UC,_,_2__:_){}Val $Sy,$g29,s,_V:Array [Array [String ,02_3],0B1];}''',
                '''Class,QqV,:,_,{,gf,(,yTD,,,_,,,Y,,,E4,,,_,,,c_,:,Array,[,Array,[,Boolean,,,6,],,,61,],;,UC,,,_,,,_2__,:,_,),{,},Val,$Sy,,,$g29,,,s,,,_V,:,Array,[,Array,[,String,,,023,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_1782(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:a{Val $f,eV9:Boolean ;$_(A,_7d:j1){} }Class _{$O___(_9_,_6,_:Array [Array [Float ,0x2_9],0B100010];_4r_E,_,_,_s:Array [Boolean ,0b110101]){} }Class _{}Class _:T{}Class _{Var D:Boolean ;}''',
                '''Class,_,:,a,{,Val,$f,,,eV9,:,Boolean,;,$_,(,A,,,_7d,:,j1,),{,},},Class,_,{,$O___,(,_9_,,,_6,,,_,:,Array,[,Array,[,Float,,,0x29,],,,0B100010,],;,_4r_E,,,_,,,_,,,_s,:,Array,[,Boolean,,,0b110101,],),{,},},Class,_,{,},Class,_,:,T,{,},Class,_,{,Var,D,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1783(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e9o8_:_{}Class __H:Q8I{Constructor (h5,_W__1U,q,u,N_i:Array [Int ,1_5]){ {} }}Class x{Var Zw_4,$0:Float ;}Class _:k6__80{}''',
                '''Class,_e9o8_,:,_,{,},Class,__H,:,Q8I,{,Constructor,(,h5,,,_W__1U,,,q,,,u,,,N_i,:,Array,[,Int,,,15,],),{,{,},},},Class,x,{,Var,Zw_4,,,$0,:,Float,;,},Class,_,:,k6__80,{,},<EOF>''',
                101
            )
        )

    def test_1784(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _:G{Val _,_,$_:_809;Destructor (){}Constructor (T9,N,bI,Y:_;h__:Array [Array [Array [Int ,03],0XD_E_F],0b101110]){} }''',
                '''Class,__,{,},Class,_,:,G,{,Val,_,,,_,,,$_,:,_809,;,Destructor,(,),{,},Constructor,(,T9,,,N,,,bI,,,Y,:,_,;,h__,:,Array,[,Array,[,Array,[,Int,,,03,],,,0XDEF,],,,0b101110,],),{,},},<EOF>''',
                101
            )
        )

    def test_1785(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:U{$___1I_(_N2466:Array [Array [Array [Array [Array [Array [Boolean ,0120],0b1],0x1],0x44],0x2C_3],03_4]){Break ;Break ;} }''',
                '''Class,U,:,U,{,$___1I_,(,_N2466,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0120,],,,0b1,],,,0x1,],,,0x44,],,,0x2C3,],,,034,],),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1786(self):
        self.assertTrue(
            TestLexer.test(
                '''Class fqH9{}Class _3zK:E{Val $d3n,D,$2_,_H,$4,$5,$__d:Array [Array [Array [Array [Array [Int ,31],0B1],0B1],9_6],0XFA_5_D];}''',
                '''Class,fqH9,{,},Class,_3zK,:,E,{,Val,$d3n,,,D,,,$2_,,,_H,,,$4,,,$5,,,$__d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,31,],,,0B1,],,,0B1,],,,96,],,,0XFA5D,],;,},<EOF>''',
                101
            )
        )

    def test_1787(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3jw{}Class C{}Class _d6:__a{}Class G_6F9:u_P{}Class _{Val $S:Float ;}Class PI071{Constructor (__H:Boolean ;_:__){Break ;}Destructor (){} }''',
                '''Class,_3jw,{,},Class,C,{,},Class,_d6,:,__a,{,},Class,G_6F9,:,u_P,{,},Class,_,{,Val,$S,:,Float,;,},Class,PI071,{,Constructor,(,__H,:,Boolean,;,_,:,__,),{,Break,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1788(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __gv_{Destructor (){}Var $__,L,$0__375_l,$__7o:Array [Array [Array [Array [Boolean ,0b10100],0b10100],4],8902];}''',
                '''Class,__gv_,{,Destructor,(,),{,},Var,$__,,,L,,,$0__375_l,,,$__7o,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b10100,],,,0b10100,],,,4,],,,8902,],;,},<EOF>''',
                101
            )
        )

    def test_1789(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C_X{Constructor (){}Constructor (_2_G_:Array [Array [Array [Array [Array [String ,015],79],01],015],0X29]){Continue ;} }Class _:c{Val Tr0_:Float ;}Class _7{}''',
                '''Class,C_X,{,Constructor,(,),{,},Constructor,(,_2_G_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,015,],,,79,],,,01,],,,015,],,,0X29,],),{,Continue,;,},},Class,_,:,c,{,Val,Tr0_,:,Float,;,},Class,_7,{,},<EOF>''',
                101
            )
        )

    def test_1790(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _87{}Class Fo:M{_3(_,A8_9:Boolean ;x46:Float ;V__,B,_:String ;__,W,_t,JpR,t:Boolean ;y,V_:Float ){} }Class dM_qwDJq:JE9{}Class v57:v__4_{Destructor (){Continue ;} }''',
                '''Class,_87,{,},Class,Fo,:,M,{,_3,(,_,,,A8_9,:,Boolean,;,x46,:,Float,;,V__,,,B,,,_,:,String,;,__,,,W,,,_t,,,JpR,,,t,:,Boolean,;,y,,,V_,:,Float,),{,},},Class,dM_qwDJq,:,JE9,{,},Class,v57,:,v__4_,{,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1791(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{$_(_R_,__,_,_,_6d_,y_:Array [Array [Float ,0x11],0B11011]){c::$4_.U();}Val _0,_,_kSBj,_,$_7L:wM0Og6;Constructor (wu0__D,_,_:Int ){}$82(__,_,M:_){} }''',
                '''Class,G,{,$_,(,_R_,,,__,,,_,,,_,,,_6d_,,,y_,:,Array,[,Array,[,Float,,,0x11,],,,0B11011,],),{,c,::,$4_,.,U,(,),;,},Val,_0,,,_,,,_kSBj,,,_,,,$_7L,:,wM0Og6,;,Constructor,(,wu0__D,,,_,,,_,:,Int,),{,},$82,(,__,,,_,,,M,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1792(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _135Jt{Constructor (_,x5_j,_,y_11E5_:___;_48,_a7r_,M_PO:Array [Array [Boolean ,0X3F],0X3F];Xz__8_,_L:K){} }''',
                '''Class,_135Jt,{,Constructor,(,_,,,x5_j,,,_,,,y_11E5_,:,___,;,_48,,,_a7r_,,,M_PO,:,Array,[,Array,[,Boolean,,,0X3F,],,,0X3F,],;,Xz__8_,,,_L,:,K,),{,},},<EOF>''',
                101
            )
        )

    def test_1793(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(H:Array [Array [Array [Array [Array [Array [Array [Int ,0x60],3_3],0126],05],0126],90],0x9];e:Array [Array [String ,0126],06_5070]){}$_i_p(){Var _,_x:Array [Array [Int ,07_202_3],0126];} }''',
                '''Class,_,{,_,(,H,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x60,],,,33,],,,0126,],,,05,],,,0126,],,,90,],,,0x9,],;,e,:,Array,[,Array,[,String,,,0126,],,,065070,],),{,},$_i_p,(,),{,Var,_,,,_x,:,Array,[,Array,[,Int,,,072023,],,,0126,],;,},},<EOF>''',
                101
            )
        )

    def test_1794(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:_2K{Constructor (_:Array [Array [Array [String ,0x5],061],0b1101]){}Constructor (m,_2:Boolean ){__9c::$5();} }''',
                '''Class,x,:,_2K,{,Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0x5,],,,061,],,,0b1101,],),{,},Constructor,(,m,,,_2,:,Boolean,),{,__9c,::,$5,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1795(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p_2W:z{}Class Ci{Destructor (){}Var __2:Array [Array [Array [Array [Int ,022],0B111100],0b111010],0b111010];Destructor (){} }''',
                '''Class,p_2W,:,z,{,},Class,Ci,{,Destructor,(,),{,},Var,__2,:,Array,[,Array,[,Array,[,Array,[,Int,,,022,],,,0B111100,],,,0b111010,],,,0b111010,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1796(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n_b2:V7{}Class t_u_:_{Ghq(_,t:Array [Array [Array [Float ,24],0b10010],02];s,___:String ;U,n,F:Q;b:Array [Float ,0x5];_,M:__;n:nu__0Q;f,_nuz,Ny9_2_:Boolean ;_,W:Int ){ {} }}''',
                '''Class,n_b2,:,V7,{,},Class,t_u_,:,_,{,Ghq,(,_,,,t,:,Array,[,Array,[,Array,[,Float,,,24,],,,0b10010,],,,02,],;,s,,,___,:,String,;,U,,,n,,,F,:,Q,;,b,:,Array,[,Float,,,0x5,],;,_,,,M,:,__,;,n,:,nu__0Q,;,f,,,_nuz,,,Ny9_2_,:,Boolean,;,_,,,W,:,Int,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1797(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $_,$y_,$_,$Q2,$2H,m,$6_yO7__:Array [Array [String ,0X52],0b10];}Class __{}Class _{Constructor (N3,_,s32:s){Continue ;} }''',
                '''Class,_,{,Val,$_,,,$y_,,,$_,,,$Q2,,,$2H,,,m,,,$6_yO7__,:,Array,[,Array,[,String,,,0X52,],,,0b10,],;,},Class,__,{,},Class,_,{,Constructor,(,N3,,,_,,,s32,:,s,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1798(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{}Class c7_:b_{}Class lP{Val _:R;Constructor (){} }Class c{Var $D7:Array [Int ,90];}Class c_2_:Z{}Class _:__y{}Class _{}''',
                '''Class,c,{,},Class,c7_,:,b_,{,},Class,lP,{,Val,_,:,R,;,Constructor,(,),{,},},Class,c,{,Var,$D7,:,Array,[,Int,,,90,],;,},Class,c_2_,:,Z,{,},Class,_,:,__y,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1799(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:_s{Val $bv:U9;Var $__,u:G_4;Constructor (_:Array [Boolean ,0B1]){}Destructor (){Continue ;} }Class _O_{}Class Rc{}Class g7W:e{}''',
                '''Class,L,:,_s,{,Val,$bv,:,U9,;,Var,$__,,,u,:,G_4,;,Constructor,(,_,:,Array,[,Boolean,,,0B1,],),{,},Destructor,(,),{,Continue,;,},},Class,_O_,{,},Class,Rc,{,},Class,g7W,:,e,{,},<EOF>''',
                101
            )
        )

    def test_1800(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___76E6_{}Class _:w0{Destructor (){}Constructor (_,_,w7:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0x5E],0x4_F00_2_A],0b1],981_7],0B1110],0X4],060],3],9_4]){Return ;} }''',
                '''Class,___76E6_,{,},Class,_,:,w0,{,Destructor,(,),{,},Constructor,(,_,,,_,,,w7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x5E,],,,0x4F002A,],,,0b1,],,,9817,],,,0B1110,],,,0X4,],,,060,],,,3,],,,94,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1801(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:z2{}Class X{Constructor (uV2,_,lK,_:Array [Array [Array [Array [Array [Float ,0b1],0b1],0b1011],8],012];c3,_yB_:W;jI5:Int ){Break ;} }''',
                '''Class,N,:,z2,{,},Class,X,{,Constructor,(,uV2,,,_,,,lK,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0b1,],,,0b1011,],,,8,],,,012,],;,c3,,,_yB_,:,W,;,jI5,:,Int,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1802(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:w{_G(_,_,_M,T:Float ;_PAL,_Q4___R,_,_2:t;_9_,G,_,_,_8,_,e,k,B_:__;_5z:Array [Float ,9];__0:d4__0qb5F__){} }Class ey:_7{}''',
                '''Class,x,:,w,{,_G,(,_,,,_,,,_M,,,T,:,Float,;,_PAL,,,_Q4___R,,,_,,,_2,:,t,;,_9_,,,G,,,_,,,_,,,_8,,,_,,,e,,,k,,,B_,:,__,;,_5z,:,Array,[,Float,,,9,],;,__0,:,d4__0qb5F__,),{,},},Class,ey,:,_7,{,},<EOF>''',
                101
            )
        )

    def test_1803(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_wF0s:_{Constructor (R,_G6:String ;m:Boolean ;_wHz,_,_:Array [Array [Int ,03_4],0X8_B]){} }Class h_hxZ:__w{}Class J:r{}Class o:g{}''',
                '''Class,k_wF0s,:,_,{,Constructor,(,R,,,_G6,:,String,;,m,:,Boolean,;,_wHz,,,_,,,_,:,Array,[,Array,[,Int,,,034,],,,0X8B,],),{,},},Class,h_hxZ,:,__w,{,},Class,J,:,r,{,},Class,o,:,g,{,},<EOF>''',
                101
            )
        )

    def test_1804(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:_{Val Xo:_;}Class _:__{Var $4,$_,$D,u,$17:s;Constructor (){} }Class J_{}Class f:o5_{Val ao,$k,$5,_:j;}''',
                '''Class,W,:,_,{,Val,Xo,:,_,;,},Class,_,:,__,{,Var,$4,,,$_,,,$D,,,u,,,$17,:,s,;,Constructor,(,),{,},},Class,J_,{,},Class,f,:,o5_,{,Val,ao,,,$k,,,$5,,,_,:,j,;,},<EOF>''',
                101
            )
        )

    def test_1805(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R:i{Var B5Fa,_,_,_:Array [Array [Array [Float ,0B11101],0XF],04];Destructor (){}Val $w:_;$x_(){} }Class l{Constructor (){}Var z,$t9_,c:Array [Int ,0x28];Destructor (){} }Class T{N(e9:Array [Int ,3]){Break ;Continue ;False .__();}np(){Continue ;Continue ;Return ;} }''',
                '''Class,R,:,i,{,Var,B5Fa,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0B11101,],,,0XF,],,,04,],;,Destructor,(,),{,},Val,$w,:,_,;,$x_,(,),{,},},Class,l,{,Constructor,(,),{,},Var,z,,,$t9_,,,c,:,Array,[,Int,,,0x28,],;,Destructor,(,),{,},},Class,T,{,N,(,e9,:,Array,[,Int,,,3,],),{,Break,;,Continue,;,False,.,__,(,),;,},np,(,),{,Continue,;,Continue,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1806(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:V{Val $H,_,$_q1_,f:Int ;Destructor (){} }Class Wm_:_6d{Val _1Y,$_,$_b:Array [String ,011];}Class _yq{Val $jw0_e73_,$7Q,_,$1,N_M,$7:Array [Float ,07_1_7];Destructor (){Val _,_:Int ;} }''',
                '''Class,_,:,V,{,Val,$H,,,_,,,$_q1_,,,f,:,Int,;,Destructor,(,),{,},},Class,Wm_,:,_6d,{,Val,_1Y,,,$_,,,$_b,:,Array,[,String,,,011,],;,},Class,_yq,{,Val,$jw0_e73_,,,$7Q,,,_,,,$1,,,N_M,,,$7,:,Array,[,Float,,,0717,],;,Destructor,(,),{,Val,_,,,_,:,Int,;,},},<EOF>''',
                101
            )
        )

    def test_1807(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4{}Class _{}Class O:m1_{$_(WoJ7,_,l1,_173:Float ;a,E,I:Boolean ;V,___3_:Float ;k,_wx_4nq_OB,X3:Z){}Val $_:Boolean ;}Class _:q{}Class W{}''',
                '''Class,_4,{,},Class,_,{,},Class,O,:,m1_,{,$_,(,WoJ7,,,_,,,l1,,,_173,:,Float,;,a,,,E,,,I,:,Boolean,;,V,,,___3_,:,Float,;,k,,,_wx_4nq_OB,,,X3,:,Z,),{,},Val,$_,:,Boolean,;,},Class,_,:,q,{,},Class,W,{,},<EOF>''',
                101
            )
        )

    def test_1808(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class i__:_{Constructor (_,G,_,_,G,_,S,z,_:Float ;g5:String ){U::$K();{ {Var _,w,X91,_8,R:K;}If (!J::$_().E_()._().A){}Else {}_::$_19().L._._();} }}''',
                '''Class,_,{,},Class,i__,:,_,{,Constructor,(,_,,,G,,,_,,,_,,,G,,,_,,,S,,,z,,,_,:,Float,;,g5,:,String,),{,U,::,$K,(,),;,{,{,Var,_,,,w,,,X91,,,_8,,,R,:,K,;,},If,(,!,J,::,$_,(,),.,E_,(,),.,_,(,),.,A,),{,},Else,{,},_,::,$_19,(,),.,L,.,_,.,_,(,),;,},},},<EOF>''',
                101
            )
        )

    def test_1809(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Constructor (_,vA:Int ;_Zmqw:Array [Array [Array [Array [Array [String ,0X26],0B1],0X26],0x22],29]){Break ;}Val _:Array [Array [Float ,043],0b1_01];cR_(__6,__L:S;w:_G){} }''',
                '''Class,Q,{,Constructor,(,_,,,vA,:,Int,;,_Zmqw,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X26,],,,0B1,],,,0X26,],,,0x22,],,,29,],),{,Break,;,},Val,_,:,Array,[,Array,[,Float,,,043,],,,0b101,],;,cR_,(,__6,,,__L,:,S,;,w,:,_G,),{,},},<EOF>''',
                101
            )
        )

    def test_1810(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{}Class P_:__{Destructor (){}$1(_:Y;r__,b:p;P,h_Y,__:Array [Int ,80];x,u_w_:Array [String ,04_5]){}Constructor (){ {} }}''',
                '''Class,S,{,},Class,P_,:,__,{,Destructor,(,),{,},$1,(,_,:,Y,;,r__,,,b,:,p,;,P,,,h_Y,,,__,:,Array,[,Int,,,80,],;,x,,,u_w_,:,Array,[,String,,,045,],),{,},Constructor,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1811(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class n____7:_{Constructor (_f_0,a_i,_p,_3:Float ;X,U:Float ){Continue ;}Val $1_:Array [Array [String ,0x9],02];}Class x:_6{}''',
                '''Class,_,{,},Class,n____7,:,_,{,Constructor,(,_f_0,,,a_i,,,_p,,,_3,:,Float,;,X,,,U,:,Float,),{,Continue,;,},Val,$1_,:,Array,[,Array,[,String,,,0x9,],,,02,],;,},Class,x,:,_6,{,},<EOF>''',
                101
            )
        )

    def test_1812(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:fl{$H(){}xKO_98N(v,m_q,_:Array [Array [Int ,7],0B111111];_0:Array [Array [Array [String ,0B11_0_00],0x28],59]){} }''',
                '''Class,_,:,fl,{,$H,(,),{,},xKO_98N,(,v,,,m_q,,,_,:,Array,[,Array,[,Int,,,7,],,,0B111111,],;,_0,:,Array,[,Array,[,Array,[,String,,,0B11000,],,,0x28,],,,59,],),{,},},<EOF>''',
                101
            )
        )

    def test_1813(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Bm:_K{}Class oll{$_(){}$l(r:__0;n94bo:Boolean ;__,_:String ;___,_U,_7,__i,_X:Array [String ,0b10110];_:YR){}w(){} }''',
                '''Class,Bm,:,_K,{,},Class,oll,{,$_,(,),{,},$l,(,r,:,__0,;,n94bo,:,Boolean,;,__,,,_,:,String,;,___,,,_U,,,_7,,,__i,,,_X,:,Array,[,String,,,0b10110,],;,_,:,YR,),{,},w,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1814(self):
        self.assertTrue(
            TestLexer.test(
                '''Class uh2:_{Val _4,y,$_,$__:Int ;Constructor (_n,_,X,l_,j,_77H2__,C,p:Array [Array [Boolean ,0X5],0xB_71];X,_4,_:Float ){}$8(){} }Class C:tz_{}''',
                '''Class,uh2,:,_,{,Val,_4,,,y,,,$_,,,$__,:,Int,;,Constructor,(,_n,,,_,,,X,,,l_,,,j,,,_77H2__,,,C,,,p,:,Array,[,Array,[,Boolean,,,0X5,],,,0xB71,],;,X,,,_4,,,_,:,Float,),{,},$8,(,),{,},},Class,C,:,tz_,{,},<EOF>''',
                101
            )
        )

    def test_1815(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:_A1{$_(_,xv3,J:Array [Float ,0x14]){}Val _:_5;Constructor (){ {} }}Class U:S{_(){Val Z:Int ;}$_(_Og,J_,_3D1:Float ;vE:Array [String ,0b1_1];PM:Array [Array [String ,4],0X35]){} }Class a6{}''',
                '''Class,f,:,_A1,{,$_,(,_,,,xv3,,,J,:,Array,[,Float,,,0x14,],),{,},Val,_,:,_5,;,Constructor,(,),{,{,},},},Class,U,:,S,{,_,(,),{,Val,Z,:,Int,;,},$_,(,_Og,,,J_,,,_3D1,:,Float,;,vE,:,Array,[,String,,,0b11,],;,PM,:,Array,[,Array,[,String,,,4,],,,0X35,],),{,},},Class,a6,{,},<EOF>''',
                101
            )
        )

    def test_1816(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_{$_(_:Y;_:String ;_8:Array [String ,68];_,_:Array [Float ,68]){Var J_:Array [Array [Boolean ,0B100001],0x39];} }Class _7h:_A{}''',
                '''Class,M_,{,$_,(,_,:,Y,;,_,:,String,;,_8,:,Array,[,String,,,68,],;,_,,,_,:,Array,[,Float,,,68,],),{,Var,J_,:,Array,[,Array,[,Boolean,,,0B100001,],,,0x39,],;,},},Class,_7h,:,_A,{,},<EOF>''',
                101
            )
        )

    def test_1817(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $0,M:Float ;Constructor (){} }Class _:C{}Class _hv4_:_{Constructor (){}Var _Mp2,P0_,$i:Array [Float ,07_0];}''',
                '''Class,_,{,Val,$0,,,M,:,Float,;,Constructor,(,),{,},},Class,_,:,C,{,},Class,_hv4_,:,_,{,Constructor,(,),{,},Var,_Mp2,,,P0_,,,$i,:,Array,[,Float,,,070,],;,},<EOF>''',
                101
            )
        )

    def test_1818(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___1{}Class K_ScSQ{}Class aR4:_{}Class _:_{Constructor (_7e_,___R_,v:_){}Val S,$0_557:Array [Boolean ,3];Val $_N7_e:_;}''',
                '''Class,_,:,___1,{,},Class,K_ScSQ,{,},Class,aR4,:,_,{,},Class,_,:,_,{,Constructor,(,_7e_,,,___R_,,,v,:,_,),{,},Val,S,,,$0_557,:,Array,[,Boolean,,,3,],;,Val,$_N7_e,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1819(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _15:R_Y1_y_3{$m(q__h:Array [Array [Array [Array [Array [Int ,0b10000],0x50],045],0B1000110],045];_,_,F:Boolean ){Return ;} }''',
                '''Class,_15,:,R_Y1_y_3,{,$m,(,q__h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10000,],,,0x50,],,,045,],,,0B1000110,],,,045,],;,_,,,_,,,F,:,Boolean,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1820(self):
        self.assertTrue(
            TestLexer.test(
                '''Class bc__5:g_{Val V:Array [Boolean ,93];$_(D:Float ){} }Class z_:O{Val d,$WV,C:_;Var _:Array [String ,016];Constructor (){} }Class __91_{}''',
                '''Class,bc__5,:,g_,{,Val,V,:,Array,[,Boolean,,,93,],;,$_,(,D,:,Float,),{,},},Class,z_,:,O,{,Val,d,,,$WV,,,C,:,_,;,Var,_,:,Array,[,String,,,016,],;,Constructor,(,),{,},},Class,__91_,{,},<EOF>''',
                101
            )
        )

    def test_1821(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$38_e_w(){}Var $_,$X,$x,$y:Array [Array [String ,0106],0106];Val J:Array [Array [Int ,01],0b100010];Destructor (){} }Class r{}Class _{$0_(_:ib10_){} }Class _:_s{}''',
                '''Class,_,{,$38_e_w,(,),{,},Var,$_,,,$X,,,$x,,,$y,:,Array,[,Array,[,String,,,0106,],,,0106,],;,Val,J,:,Array,[,Array,[,Int,,,01,],,,0b100010,],;,Destructor,(,),{,},},Class,r,{,},Class,_,{,$0_,(,_,:,ib10_,),{,},},Class,_,:,_s,{,},<EOF>''',
                101
            )
        )

    def test_1822(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w_E{Var $_,$_:String ;Destructor (){ {} }$a(_,J:Array [Array [Array [String ,0x9_4E],6],2];P,_,_37,K9,X7BY99:_lk1_){} }Class m{}''',
                '''Class,w_E,{,Var,$_,,,$_,:,String,;,Destructor,(,),{,{,},},$a,(,_,,,J,:,Array,[,Array,[,Array,[,String,,,0x94E,],,,6,],,,2,],;,P,,,_,,,_37,,,K9,,,X7BY99,:,_lk1_,),{,},},Class,m,{,},<EOF>''',
                101
            )
        )

    def test_1823(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _w:U{$__L(e_,Cq,q:Array [Array [Array [Array [Int ,0xD8_2_D],0XBA],0b1100000],02];Q:_;_qx,_,X,mY__:Array [Int ,0134];J5,w,_:Array [Boolean ,0134];_:e){}Destructor (){}_50(_5,t8_:N8s;_:Array [Array [Int ,0B1_0],0b1100000];_,_3,_,g_e:_FP_3){} }''',
                '''Class,_,:,_,{,},Class,_w,:,U,{,$__L,(,e_,,,Cq,,,q,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xD82D,],,,0XBA,],,,0b1100000,],,,02,],;,Q,:,_,;,_qx,,,_,,,X,,,mY__,:,Array,[,Int,,,0134,],;,J5,,,w,,,_,:,Array,[,Boolean,,,0134,],;,_,:,e,),{,},Destructor,(,),{,},_50,(,_5,,,t8_,:,N8s,;,_,:,Array,[,Array,[,Int,,,0B10,],,,0b1100000,],;,_,,,_3,,,_,,,g_e,:,_FP_3,),{,},},<EOF>''',
                101
            )
        )

    def test_1824(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val $1:Array [Array [Array [Array [Boolean ,011],011],0B11_0],0x9];}Class _:_{}Class _9_:_{}Class _33Q:E{}''',
                '''Class,_,:,_,{,Val,$1,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,011,],,,011,],,,0B110,],,,0x9,],;,},Class,_,:,_,{,},Class,_9_,:,_,{,},Class,_33Q,:,E,{,},<EOF>''',
                101
            )
        )

    def test_1825(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:__L{}Class y{_Vd_4CjA(){} }Class A_:_{M(_:Array [Float ,0xA];z_U,g12:Boolean ){} }Class _{$_g(b3___:Float ;Y3:_){}Var _:s_;}''',
                '''Class,a,:,__L,{,},Class,y,{,_Vd_4CjA,(,),{,},},Class,A_,:,_,{,M,(,_,:,Array,[,Float,,,0xA,],;,z_U,,,g12,:,Boolean,),{,},},Class,_,{,$_g,(,b3___,:,Float,;,Y3,:,_,),{,},Var,_,:,s_,;,},<EOF>''',
                101
            )
        )

    def test_1826(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Destructor (){}Var f1lN_5_,$s,$e_I:Array [String ,057];Constructor (){}Destructor (){Var y,T5,_:Boolean ;} }''',
                '''Class,d,{,Destructor,(,),{,},Var,f1lN_5_,,,$s,,,$e_I,:,Array,[,String,,,057,],;,Constructor,(,),{,},Destructor,(,),{,Var,y,,,T5,,,_,:,Boolean,;,},},<EOF>''',
                101
            )
        )

    def test_1827(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Var $_:Array [Array [Array [Array [Array [Array [String ,13],04],0x6],9],13],0B11]=-True ._G().___v_7().N_()._0_();}''',
                '''Class,d,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,13,],,,04,],,,0x6,],,,9,],,,13,],,,0B11,],=,-,True,.,_G,(,),.,___v_7,(,),.,N_,(,),.,_0_,(,),;,},<EOF>''',
                101
            )
        )

    def test_1828(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{Var $O:Array [Array [Array [Array [Array [Boolean ,0XE],0b1_01_11],0B110],017],0XE];Val $2,$_,_8__:Float ;}''',
                '''Class,q,{,Var,$O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XE,],,,0b10111,],,,0B110,],,,017,],,,0XE,],;,Val,$2,,,$_,,,_8__,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1829(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6z3:x{}Class W{}Class Q_{Var N,$_:Array [Int ,0x3_F_3_5_F_6];w(___,_,S,_9:String ){Continue ;Break ;Break ;} }''',
                '''Class,_6z3,:,x,{,},Class,W,{,},Class,Q_,{,Var,N,,,$_,:,Array,[,Int,,,0x3F35F6,],;,w,(,___,,,_,,,S,,,_9,:,String,),{,Continue,;,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1830(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B0_lH:l{Var $_,_,H0:Array [Array [Array [Array [Array [Array [Float ,0B10],0X31],12],7],0x55],0b1011];}Class f_{}''',
                '''Class,B0_lH,:,l,{,Var,$_,,,_,,,H0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B10,],,,0X31,],,,12,],,,7,],,,0x55,],,,0b1011,],;,},Class,f_,{,},<EOF>''',
                101
            )
        )

    def test_1831(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i:B{}Class _x7{Constructor (X:F;Q_0J,_4:Float ;_,l,q,_,a,R_:Array [Int ,0b1_1];_7,l_d0o7T,d:Array [Array [Int ,0b1110],72];_:pB;c:String ){Continue ;} }Class _9{}''',
                '''Class,i,:,B,{,},Class,_x7,{,Constructor,(,X,:,F,;,Q_0J,,,_4,:,Float,;,_,,,l,,,q,,,_,,,a,,,R_,:,Array,[,Int,,,0b11,],;,_7,,,l_d0o7T,,,d,:,Array,[,Array,[,Int,,,0b1110,],,,72,],;,_,:,pB,;,c,:,String,),{,Continue,;,},},Class,_9,{,},<EOF>''',
                101
            )
        )

    def test_1832(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{Constructor (fu_4:Array [Int ,0b1111];_4:Array [Array [Array [Array [String ,15],032],032],0x57];A,M,s__763:Int ){} }Class J_:__{__(){} }''',
                '''Class,v,{,Constructor,(,fu_4,:,Array,[,Int,,,0b1111,],;,_4,:,Array,[,Array,[,Array,[,Array,[,String,,,15,],,,032,],,,032,],,,0x57,],;,A,,,M,,,s__763,:,Int,),{,},},Class,J_,:,__,{,__,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1833(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6R:_2_{}Class _{$_32p7(K:Array [Array [Array [Array [Int ,020_5],0b1001001],0B1_0011_1],0X2_C0C];__:Int ){} }''',
                '''Class,_6R,:,_2_,{,},Class,_,{,$_32p7,(,K,:,Array,[,Array,[,Array,[,Array,[,Int,,,0205,],,,0b1001001,],,,0B100111,],,,0X2C0C,],;,__,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1834(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$__(aE2,U90,_,__,i_,w,X,_:Int ;n,f:_;_,_7:R6;i__x_x:Array [Array [Array [Float ,0x4C],78],0b101001]){Var A3P2,hv_,__AN55__,g_:_3_H;}Destructor (){} }Class _:_K{Val P:Int ;}Class _o_{$M_(){}Val $RG_,_,_bP,$33:Float ;}''',
                '''Class,_,{,$__,(,aE2,,,U90,,,_,,,__,,,i_,,,w,,,X,,,_,:,Int,;,n,,,f,:,_,;,_,,,_7,:,R6,;,i__x_x,:,Array,[,Array,[,Array,[,Float,,,0x4C,],,,78,],,,0b101001,],),{,Var,A3P2,,,hv_,,,__AN55__,,,g_,:,_3_H,;,},Destructor,(,),{,},},Class,_,:,_K,{,Val,P,:,Int,;,},Class,_o_,{,$M_,(,),{,},Val,$RG_,,,_,,,_bP,,,$33,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1835(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:f{}Class s{}Class _4{}Class _{Destructor (){Break ;}Destructor (){} }Class _6_:_Y43C_{Var $e,$__R,_a_:L;}''',
                '''Class,_,:,f,{,},Class,s,{,},Class,_4,{,},Class,_,{,Destructor,(,),{,Break,;,},Destructor,(,),{,},},Class,_6_,:,_Y43C_,{,Var,$e,,,$__R,,,_a_,:,L,;,},<EOF>''',
                101
            )
        )

    def test_1836(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3l{}Class M{Var $_,g:Array [Array [Boolean ,40],5];}Class _:Y1_{Destructor (){}Destructor (){}Val $_,$O,A:Array [Array [Float ,056],0x8];}''',
                '''Class,_3l,{,},Class,M,{,Var,$_,,,g,:,Array,[,Array,[,Boolean,,,40,],,,5,],;,},Class,_,:,Y1_,{,Destructor,(,),{,},Destructor,(,),{,},Val,$_,,,$O,,,A,:,Array,[,Array,[,Float,,,056,],,,0x8,],;,},<EOF>''',
                101
            )
        )

    def test_1837(self):
        self.assertTrue(
            TestLexer.test(
                '''Class wo{$_(kK,___:Array [Array [Array [Array [Array [Array [Boolean ,0b101011],0B1_0],02],0b101011],0b101011],3]){} }Class d{}Class _:a0{}''',
                '''Class,wo,{,$_,(,kK,,,___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101011,],,,0B10,],,,02,],,,0b101011,],,,0b101011,],,,3,],),{,},},Class,d,{,},Class,_,:,a0,{,},<EOF>''',
                101
            )
        )

    def test_1838(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var _7,x:q;$4(l,q_3_42_43,w,_b:Array [Array [String ,0B1],63];oT2__,C:Array [Array [Array [Int ,0b111],0B1001101],0b1_0]){}_(){}Destructor (){}Var x:Boolean ;}''',
                '''Class,__,{,Var,_7,,,x,:,q,;,$4,(,l,,,q_3_42_43,,,w,,,_b,:,Array,[,Array,[,String,,,0B1,],,,63,],;,oT2__,,,C,:,Array,[,Array,[,Array,[,Int,,,0b111,],,,0B1001101,],,,0b10,],),{,},_,(,),{,},Destructor,(,),{,},Var,x,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1839(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Gfx{Var $2,A:Float ;Var IN42,$1,k,__:Array [Array [Array [Array [Array [Float ,0x39],0b1_1],0xF],0x4],93];}Class __495:__{}''',
                '''Class,_,:,Gfx,{,Var,$2,,,A,:,Float,;,Var,IN42,,,$1,,,k,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x39,],,,0b11,],,,0xF,],,,0x4,],,,93,],;,},Class,__495,:,__,{,},<EOF>''',
                101
            )
        )

    def test_1840(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Yv:b_JWRM{Val __8,$4,$R_:Float ;}Class J9:_{}Class m29:xa2W46s_t{Val $5_:Array [Array [Int ,0B1001_1],0b1];Var $_v,$54__:Boolean ;}''',
                '''Class,Yv,:,b_JWRM,{,Val,__8,,,$4,,,$R_,:,Float,;,},Class,J9,:,_,{,},Class,m29,:,xa2W46s_t,{,Val,$5_,:,Array,[,Array,[,Int,,,0B10011,],,,0b1,],;,Var,$_v,,,$54__,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1841(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,_3_z9v:Array [Array [Array [Array [Boolean ,0B1],40],6],0b1011101];_4,__:u){}Var $E,$_,$8W:Int ;Val r:Float =-Null *__::$e_;Constructor (_F7w,_,_,_,_:Array [Boolean ,0B10000];m:String ;e,_9:_;_6,_,p,_:p_g_){} }''',
                '''Class,_,{,Constructor,(,_,,,_3_z9v,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,40,],,,6,],,,0b1011101,],;,_4,,,__,:,u,),{,},Var,$E,,,$_,,,$8W,:,Int,;,Val,r,:,Float,=,-,Null,*,__,::,$e_,;,Constructor,(,_F7w,,,_,,,_,,,_,,,_,:,Array,[,Boolean,,,0B10000,],;,m,:,String,;,e,,,_9,:,_,;,_6,,,_,,,p,,,_,:,p_g_,),{,},},<EOF>''',
                101
            )
        )

    def test_1842(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___pxj0_1:_49_{}Class _0_{Var $H0,$5N6q_yrr_:_0;}Class F4_{}Class _{Var M_,Y_:Array [Array [Array [String ,0x45],0XF],54];}''',
                '''Class,___pxj0_1,:,_49_,{,},Class,_0_,{,Var,$H0,,,$5N6q_yrr_,:,_0,;,},Class,F4_,{,},Class,_,{,Var,M_,,,Y_,:,Array,[,Array,[,Array,[,String,,,0x45,],,,0XF,],,,54,],;,},<EOF>''',
                101
            )
        )

    def test_1843(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _i{Constructor (__:Array [Int ,5]){_::$0._();}Var k,$_,$0,$j_1:String ;Val P:_;Var _:Boolean ;}Class R:T{Destructor (){} }''',
                '''Class,_i,{,Constructor,(,__,:,Array,[,Int,,,5,],),{,_,::,$0,.,_,(,),;,},Var,k,,,$_,,,$0,,,$j_1,:,String,;,Val,P,:,_,;,Var,_,:,Boolean,;,},Class,R,:,T,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1844(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{}Class _{Var _,$675,_y_,$h:B;A(){ {} }Var Y_,_:Array [Array [Boolean ,0b10_10011],0xFA];$G(g,g:Int ){}Var $4:Array [Boolean ,04]=-_u::$_7().e.O39_;}Class _:_{Val $2f,$8,$_,$2,$7:Array [Array [Array [Boolean ,0b1],0b1],0x9];}Class xE:D_L_{}''',
                '''Class,S,{,},Class,_,{,Var,_,,,$675,,,_y_,,,$h,:,B,;,A,(,),{,{,},},Var,Y_,,,_,:,Array,[,Array,[,Boolean,,,0b1010011,],,,0xFA,],;,$G,(,g,,,g,:,Int,),{,},Var,$4,:,Array,[,Boolean,,,04,],=,-,_u,::,$_7,(,),.,e,.,O39_,;,},Class,_,:,_,{,Val,$2f,,,$8,,,$_,,,$2,,,$7,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0b1,],,,0x9,],;,},Class,xE,:,D_L_,{,},<EOF>''',
                101
            )
        )

    def test_1845(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:O{F(Z,__,_,___,S:__04_){} }Class E{c0(_D:xi;__:Array [Array [Array [Boolean ,0B1010111],78],0B1010111]){} }Class _{}Class __:k{Val $4_,$D:Float ;}''',
                '''Class,z,:,O,{,F,(,Z,,,__,,,_,,,___,,,S,:,__04_,),{,},},Class,E,{,c0,(,_D,:,xi,;,__,:,Array,[,Array,[,Array,[,Boolean,,,0B1010111,],,,78,],,,0B1010111,],),{,},},Class,_,{,},Class,__,:,k,{,Val,$4_,,,$D,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1846(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ok:_{Constructor (_,_d1G_z_9,_:String ){} }Class __{Var _P_6:Array [Array [Boolean ,3_0],036];Constructor (M71:Float ){} }''',
                '''Class,Ok,:,_,{,Constructor,(,_,,,_d1G_z_9,,,_,:,String,),{,},},Class,__,{,Var,_P_6,:,Array,[,Array,[,Boolean,,,30,],,,036,],;,Constructor,(,M71,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1847(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3k8_O:_{$_6y(_:Array [Array [Int ,6],0X2]){}$29(l,w:Array [Array [Array [Float ,0B1],0b110000],0X4F];_,L:g_02){} }''',
                '''Class,_3k8_O,:,_,{,$_6y,(,_,:,Array,[,Array,[,Int,,,6,],,,0X2,],),{,},$29,(,l,,,w,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0b110000,],,,0X4F,],;,_,,,L,:,g_02,),{,},},<EOF>''',
                101
            )
        )

    def test_1848(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G7{Constructor (_,_57:_;_5:Array [Array [Array [Array [Array [Int ,0b1],44],0B1],0725_1],046];F,_8:___5){} }''',
                '''Class,G7,{,Constructor,(,_,,,_57,:,_,;,_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,44,],,,0B1,],,,07251,],,,046,],;,F,,,_8,:,___5,),{,},},<EOF>''',
                101
            )
        )

    def test_1849(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y2_1RS{}Class m:r{}Class _N:K_9a{Val _X_u1868:Boolean ;$t(){}Var _:N7k;}Class _:_{}Class _e9n7{a_4(_:Array [Array [Boolean ,0x4],0X2E];H,HGq6:Array [String ,0X2E];K:Array [Array [Int ,05],44];D1:Boolean ;P,E,o9,n:_){} }Class _E{Var $_kW9_:Array [Int ,0X2E];Destructor (){} }''',
                '''Class,Y2_1RS,{,},Class,m,:,r,{,},Class,_N,:,K_9a,{,Val,_X_u1868,:,Boolean,;,$t,(,),{,},Var,_,:,N7k,;,},Class,_,:,_,{,},Class,_e9n7,{,a_4,(,_,:,Array,[,Array,[,Boolean,,,0x4,],,,0X2E,],;,H,,,HGq6,:,Array,[,String,,,0X2E,],;,K,:,Array,[,Array,[,Int,,,05,],,,44,],;,D1,:,Boolean,;,P,,,E,,,o9,,,n,:,_,),{,},},Class,_E,{,Var,$_kW9_,:,Array,[,Int,,,0X2E,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1850(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:d_{Var W0,$12j5zcoP:Array [Float ,0B1_11];Destructor (){Z::$UJH();}Constructor (){} }Class f3{}Class _74{Destructor (){} }''',
                '''Class,_0,:,d_,{,Var,W0,,,$12j5zcoP,:,Array,[,Float,,,0B111,],;,Destructor,(,),{,Z,::,$UJH,(,),;,},Constructor,(,),{,},},Class,f3,{,},Class,_74,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1851(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _u{}Class _{$_5(z7,a:P;b_68_:Array [Array [Array [Float ,75],0X4E],75];__:_A;__:Array [String ,0X4E]){} }''',
                '''Class,_,{,},Class,_u,{,},Class,_,{,$_5,(,z7,,,a,:,P,;,b_68_,:,Array,[,Array,[,Array,[,Float,,,75,],,,0X4E,],,,75,],;,__,:,_A,;,__,:,Array,[,String,,,0X4E,],),{,},},<EOF>''',
                101
            )
        )

    def test_1852(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k92Jvn:N{Val _A_,$_,b_,$2:_R;}Class _{}Class _{}Class O_i4{R(){}Constructor (YX:String ){}Destructor (){} }''',
                '''Class,k92Jvn,:,N,{,Val,_A_,,,$_,,,b_,,,$2,:,_R,;,},Class,_,{,},Class,_,{,},Class,O_i4,{,R,(,),{,},Constructor,(,YX,:,String,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1853(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__5c:Array [Array [Float ,54],0x5A];g7__:Array [Int ,02];_:String ){} }Class ___{Constructor (){} }''',
                '''Class,_,{,Constructor,(,__5c,:,Array,[,Array,[,Float,,,54,],,,0x5A,],;,g7__,:,Array,[,Int,,,02,],;,_,:,String,),{,},},Class,___,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1854(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _z:__l{}Class n:_{Constructor (O,K,_,_7X3_9,_,J___1:Array [Array [String ,0x7],0XA]){}$BV(_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0102],0102],0x1E],17],04_7],0X1D],17],0x4],0B110101],0X2],17]){} }Class IR_7{}''',
                '''Class,_z,:,__l,{,},Class,n,:,_,{,Constructor,(,O,,,K,,,_,,,_7X3_9,,,_,,,J___1,:,Array,[,Array,[,String,,,0x7,],,,0XA,],),{,},$BV,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0102,],,,0102,],,,0x1E,],,,17,],,,047,],,,0X1D,],,,17,],,,0x4,],,,0B110101,],,,0X2,],,,17,],),{,},},Class,IR_7,{,},<EOF>''',
                101
            )
        )

    def test_1855(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{}Class P:_{_(){} }Class _44:Lj6{Val _:_;Var __e24,$_Mo9:Boolean ;Val $B_,$__,$6ip,_,__647:Array [String ,1];}Class _E:____{Destructor (){} }''',
                '''Class,Y,{,},Class,P,:,_,{,_,(,),{,},},Class,_44,:,Lj6,{,Val,_,:,_,;,Var,__e24,,,$_Mo9,:,Boolean,;,Val,$B_,,,$__,,,$6ip,,,_,,,__647,:,Array,[,String,,,1,],;,},Class,_E,:,____,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1856(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:v36{Val $_,__:Array [Array [Array [Int ,0x3E],0b11],0X25];}Class I0{Var $__Oz,i,_,$1e,$7:Float ;Val $H:Array [Boolean ,0x3E];Var K_:Array [String ,0X25];}Class d8{Var $D,$F_38:Float ;Destructor (){}$1(_,l,s1,_,M:_){ {Continue ;}Continue ;}$I_(__:Int ;l4,qsM_,_B:Array [Float ,0XE];f:iXU;_:_;Z_,_:N2o_;___:Float ;_,_1_:j;_:String ){} }''',
                '''Class,_,:,v36,{,Val,$_,,,__,:,Array,[,Array,[,Array,[,Int,,,0x3E,],,,0b11,],,,0X25,],;,},Class,I0,{,Var,$__Oz,,,i,,,_,,,$1e,,,$7,:,Float,;,Val,$H,:,Array,[,Boolean,,,0x3E,],;,Var,K_,:,Array,[,String,,,0X25,],;,},Class,d8,{,Var,$D,,,$F_38,:,Float,;,Destructor,(,),{,},$1,(,_,,,l,,,s1,,,_,,,M,:,_,),{,{,Continue,;,},Continue,;,},$I_,(,__,:,Int,;,l4,,,qsM_,,,_B,:,Array,[,Float,,,0XE,],;,f,:,iXU,;,_,:,_,;,Z_,,,_,:,N2o_,;,___,:,Float,;,_,,,_1_,:,j,;,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_1857(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val g,B,$44,$k_39mB62:Array [Boolean ,0b1011000];$6(Oi,bg_:Y;a,_02:U;T4:Array [Int ,020];X,_5k,t,_:Array [Array [Array [Boolean ,0x17],0b1011000],05]){Continue ;} }''',
                '''Class,_,{,Val,g,,,B,,,$44,,,$k_39mB62,:,Array,[,Boolean,,,0b1011000,],;,$6,(,Oi,,,bg_,:,Y,;,a,,,_02,:,U,;,T4,:,Array,[,Int,,,020,],;,X,,,_5k,,,t,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0x17,],,,0b1011000,],,,05,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1858(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class O{Constructor (H5:Array [String ,076_3];k_:F0){_0::$q1f55();} }Class _:__{Constructor (){} }Class q8g_:_Y{_(_:Float ;J_:Boolean ;c1,O_72___6,_,_,_7:h;P:T;_,F:Array [Array [Int ,07_64],046_10]){} }''',
                '''Class,_,{,},Class,O,{,Constructor,(,H5,:,Array,[,String,,,0763,],;,k_,:,F0,),{,_0,::,$q1f55,(,),;,},},Class,_,:,__,{,Constructor,(,),{,},},Class,q8g_,:,_Y,{,_,(,_,:,Float,;,J_,:,Boolean,;,c1,,,O_72___6,,,_,,,_,,,_7,:,h,;,P,:,T,;,_,,,F,:,Array,[,Array,[,Int,,,0764,],,,04610,],),{,},},<EOF>''',
                101
            )
        )

    def test_1859(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ww{Val _:Array [Boolean ,0100];}Class Q_{Constructor (Vy:Array [Array [Boolean ,59],0x36];W,__,m,F,_,_9u0x5:Int ){Continue ;} }''',
                '''Class,ww,{,Val,_,:,Array,[,Boolean,,,0100,],;,},Class,Q_,{,Constructor,(,Vy,:,Array,[,Array,[,Boolean,,,59,],,,0x36,],;,W,,,__,,,m,,,F,,,_,,,_9u0x5,:,Int,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1860(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _u80:_921U{Constructor (){}Constructor (__rO:_;E:W;_:Boolean ){Return ;Break ;Break ;} }Class __:_1{}Class Y4{}Class ___:_{$n(){}Destructor (){} }Class b_:_{Val $45_,$u2qdn,$QE,$X_,uB:Int ;}''',
                '''Class,_u80,:,_921U,{,Constructor,(,),{,},Constructor,(,__rO,:,_,;,E,:,W,;,_,:,Boolean,),{,Return,;,Break,;,Break,;,},},Class,__,:,_1,{,},Class,Y4,{,},Class,___,:,_,{,$n,(,),{,},Destructor,(,),{,},},Class,b_,:,_,{,Val,$45_,,,$u2qdn,,,$QE,,,$X_,,,uB,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1861(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E9:p55{Val _58_S:Array [Boolean ,0XA];Destructor (){} }Class __351_{Constructor (g:String ;Ax84E5,p,_,_,_:h;p:Boolean ;___4_x__1,F9_Q_N:R_By v;e,__6W,_4:Boolean ){} }''',
                '''Class,E9,:,p55,{,Val,_58_S,:,Array,[,Boolean,,,0XA,],;,Destructor,(,),{,},},Class,__351_,{,Constructor,(,g,:,String,;,Ax84E5,,,p,,,_,,,_,,,_,:,h,;,p,:,Boolean,;,___4_x__1,,,F9_Q_N,:,R_By,v,;,e,,,__6W,,,_4,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1862(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var $z:Array [String ,027];Val _:Array [Int ,0x62];Val $_:Boolean ;Val __,$jj_,$1,J9:Array [Boolean ,40];Var _TH,_:Array [Array [Boolean ,40],03];}Class gb_0:__{}''',
                '''Class,__,{,Var,$z,:,Array,[,String,,,027,],;,Val,_,:,Array,[,Int,,,0x62,],;,Val,$_,:,Boolean,;,Val,__,,,$jj_,,,$1,,,J9,:,Array,[,Boolean,,,40,],;,Var,_TH,,,_,:,Array,[,Array,[,Boolean,,,40,],,,03,],;,},Class,gb_0,:,__,{,},<EOF>''',
                101
            )
        )

    def test_1863(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w_:_{$fK(){}$_4p(W,_:_;m:I;q7__:Array [Array [Array [Array [Array [Array [String ,0B10_0_1],0x3],0B1010011],0X14],9],0XE_2D]){} }''',
                '''Class,_w_,:,_,{,$fK,(,),{,},$_4p,(,W,,,_,:,_,;,m,:,I,;,q7__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1001,],,,0x3,],,,0B1010011,],,,0X14,],,,9,],,,0XE2D,],),{,},},<EOF>''',
                101
            )
        )

    def test_1864(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:i_{Val _Q,$2r:Array [Array [Array [Int ,0X49],78],0B10_1];Destructor (){i::$_();}Var $78,$_,__v:Boolean ;Destructor (){} }Class _q{}Class _:_{}''',
                '''Class,_,:,i_,{,Val,_Q,,,$2r,:,Array,[,Array,[,Array,[,Int,,,0X49,],,,78,],,,0B101,],;,Destructor,(,),{,i,::,$_,(,),;,},Var,$78,,,$_,,,__v,:,Boolean,;,Destructor,(,),{,},},Class,_q,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1865(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:t{}Class X:_3{Constructor (){}Var M:Array [Array [Array [Array [Array [Array [String ,0X47],0B1001100],8],0X9],0B1],0X47];}''',
                '''Class,A,:,t,{,},Class,X,:,_3,{,Constructor,(,),{,},Var,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X47,],,,0B1001100,],,,8,],,,0X9,],,,0B1,],,,0X47,],;,},<EOF>''',
                101
            )
        )

    def test_1866(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Var e3,$_w,_v2x:Array [Array [Array [Array [Array [Array [Float ,053],0X25],3_2],04_3],053],0b10];Val _:T;}''',
                '''Class,___,{,Var,e3,,,$_w,,,_v2x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,053,],,,0X25,],,,32,],,,043,],,,053,],,,0b10,],;,Val,_,:,T,;,},<EOF>''',
                101
            )
        )

    def test_1867(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z_1:BD{}Class _H:_{Val t,$x:Boolean ;Var gh_,S_,A:U;Constructor (r:Float ;J:String ;_:Array [Float ,0B1001110];l,Z,m_:f){Val _,_,_,p:DL;} }''',
                '''Class,Z_1,:,BD,{,},Class,_H,:,_,{,Val,t,,,$x,:,Boolean,;,Var,gh_,,,S_,,,A,:,U,;,Constructor,(,r,:,Float,;,J,:,String,;,_,:,Array,[,Float,,,0B1001110,],;,l,,,Z,,,m_,:,f,),{,Val,_,,,_,,,_,,,p,:,DL,;,},},<EOF>''',
                101
            )
        )

    def test_1868(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_I{_(){Var _,vDL:Float ;} }Class ___:n{}Class _{Constructor (_c,N,_:Array [Array [Boolean ,0112],0B1]){} }''',
                '''Class,_,:,_I,{,_,(,),{,Var,_,,,vDL,:,Float,;,},},Class,___,:,n,{,},Class,_,{,Constructor,(,_c,,,N,,,_,:,Array,[,Array,[,Boolean,,,0112,],,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1869(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Destructor (){}Destructor (){}Destructor (){}Val $_2u,En8_,$_,_k2:String ;Destructor (){} }Class _:A0y_X___{}Class N{}''',
                '''Class,_,:,_,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Val,$_2u,,,En8_,,,$_,,,_k2,:,String,;,Destructor,(,),{,},},Class,_,:,A0y_X___,{,},Class,N,{,},<EOF>''',
                101
            )
        )

    def test_1870(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{Val _o96,$___y6,$7,$k,__,_,_c:Int ;iH(N0,H__:String ;_:Float ;_9_4759__,t9__88:_;_,_8_:Array [Array [Array [Array [Array [String ,0B1010010],064],0b1],3_52_4],0X4C]){Var b,_4D_:_;Return ;} }''',
                '''Class,l,{,Val,_o96,,,$___y6,,,$7,,,$k,,,__,,,_,,,_c,:,Int,;,iH,(,N0,,,H__,:,String,;,_,:,Float,;,_9_4759__,,,t9__88,:,_,;,_,,,_8_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1010010,],,,064,],,,0b1,],,,3524,],,,0X4C,],),{,Var,b,,,_4D_,:,_,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1871(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Val _9_:Array [Array [Array [Array [String ,83_4],5],4],0B1011000];}Class o:YT{Val m_,$8:String ;}Class R:_{Var P_:Float ;}Class M_{}Class _F{Val _,$22,_a,X8:Float ;}''',
                '''Class,M,{,Val,_9_,:,Array,[,Array,[,Array,[,Array,[,String,,,834,],,,5,],,,4,],,,0B1011000,],;,},Class,o,:,YT,{,Val,m_,,,$8,:,String,;,},Class,R,:,_,{,Var,P_,:,Float,;,},Class,M_,{,},Class,_F,{,Val,_,,,$22,,,_a,,,X8,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_1872(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{Val $AyL,$3:Boolean ;Constructor (_7_13:Z){}Var $0_:String ;}Class R2:_{Var $__:Array [Int ,0b1_1_00];}Class o:_{}Class _Mjj{}Class _{}Class a:_3s{}''',
                '''Class,J,{,Val,$AyL,,,$3,:,Boolean,;,Constructor,(,_7_13,:,Z,),{,},Var,$0_,:,String,;,},Class,R2,:,_,{,Var,$__,:,Array,[,Int,,,0b1100,],;,},Class,o,:,_,{,},Class,_Mjj,{,},Class,_,{,},Class,a,:,_3s,{,},<EOF>''',
                101
            )
        )

    def test_1873(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G40:Z{Var _,$0_:Array [Array [Boolean ,0B1],0B110100];}Class w:_{Constructor (_,O:String ;_s,b1S,Lp__:_60Y;_:Array [String ,0B11];_,l:Array [Boolean ,04_7];G__P3:Float ;_3,l_Ne:Int ;_Y_,O:Int ){} }Class N:_C9{}''',
                '''Class,G40,:,Z,{,Var,_,,,$0_,:,Array,[,Array,[,Boolean,,,0B1,],,,0B110100,],;,},Class,w,:,_,{,Constructor,(,_,,,O,:,String,;,_s,,,b1S,,,Lp__,:,_60Y,;,_,:,Array,[,String,,,0B11,],;,_,,,l,:,Array,[,Boolean,,,047,],;,G__P3,:,Float,;,_3,,,l_Ne,:,Int,;,_Y_,,,O,:,Int,),{,},},Class,N,:,_C9,{,},<EOF>''',
                101
            )
        )

    def test_1874(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:R{}Class I5{$1(_e,K,_6h2,Q:String ){} }Class t7__{}Class _2:_{}Class u{Destructor (){_I6MX::$n();}Constructor (A_8_r4X:String ){}Var _,P_:__;Constructor (){} }''',
                '''Class,_,:,R,{,},Class,I5,{,$1,(,_e,,,K,,,_6h2,,,Q,:,String,),{,},},Class,t7__,{,},Class,_2,:,_,{,},Class,u,{,Destructor,(,),{,_I6MX,::,$n,(,),;,},Constructor,(,A_8_r4X,:,String,),{,},Var,_,,,P_,:,__,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1875(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _75:_6{$_(_:_;C:LI;_m:Array [Float ,0x1];_,_F974_:String ;Tt,_:Array [Float ,0B1_0_00]){} }Class XX:_{}''',
                '''Class,_75,:,_6,{,$_,(,_,:,_,;,C,:,LI,;,_m,:,Array,[,Float,,,0x1,],;,_,,,_F974_,:,String,;,Tt,,,_,:,Array,[,Float,,,0B1000,],),{,},},Class,XX,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1876(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:__{Var $48_,$_:Array [Array [Float ,07],03];$_(_,__O58_,j4:_;_:Array [Boolean ,0X5]){} }Class V:_{}Class _{Val $8_:G_;}''',
                '''Class,x,:,__,{,Var,$48_,,,$_,:,Array,[,Array,[,Float,,,07,],,,03,],;,$_,(,_,,,__O58_,,,j4,:,_,;,_,:,Array,[,Boolean,,,0X5,],),{,},},Class,V,:,_,{,},Class,_,{,Val,$8_,:,G_,;,},<EOF>''',
                101
            )
        )

    def test_1877(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:J_{}Class _:I{Constructor (t:__){} }Class Y_:_____{}Class _h{Var $_:Array [Array [Boolean ,0x42],0x5];}Class _:_{Val $_D,$30Lp_,u4_:Array [Float ,49];}''',
                '''Class,v,:,J_,{,},Class,_,:,I,{,Constructor,(,t,:,__,),{,},},Class,Y_,:,_____,{,},Class,_h,{,Var,$_,:,Array,[,Array,[,Boolean,,,0x42,],,,0x5,],;,},Class,_,:,_,{,Val,$_D,,,$30Lp_,,,u4_,:,Array,[,Float,,,49,],;,},<EOF>''',
                101
            )
        )

    def test_1878(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3:J_{Val uU_:Array [Array [Array [Boolean ,9],0x60],0X1_4]=!----New U()._6().v__T()._9()._;}Class f:_9_{}''',
                '''Class,_3,:,J_,{,Val,uU_,:,Array,[,Array,[,Array,[,Boolean,,,9,],,,0x60,],,,0X14,],=,!,-,-,-,-,New,U,(,),.,_6,(,),.,v__T,(,),.,_9,(,),.,_,;,},Class,f,:,_9_,{,},<EOF>''',
                101
            )
        )

    def test_1879(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_50:_3_{}Class B:l{Destructor (){}Var _0sf:Int ;Val $S_:Array [Array [String ,0xF],0b1];}Class _K:_Q{Var z:_I_9;}''',
                '''Class,v_50,:,_3_,{,},Class,B,:,l,{,Destructor,(,),{,},Var,_0sf,:,Int,;,Val,$S_,:,Array,[,Array,[,String,,,0xF,],,,0b1,],;,},Class,_K,:,_Q,{,Var,z,:,_I_9,;,},<EOF>''',
                101
            )
        )

    def test_1880(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (Gk_:Boolean ){Break ;} }Class XI:_wI{Val $C:Float ;Destructor (){} }Class L_Pv55_:_{$9(){Continue ;}Constructor (_s:Array [Float ,0b1_1];_,_rs,t4:_oG){} }''',
                '''Class,_,{,Constructor,(,Gk_,:,Boolean,),{,Break,;,},},Class,XI,:,_wI,{,Val,$C,:,Float,;,Destructor,(,),{,},},Class,L_Pv55_,:,_,{,$9,(,),{,Continue,;,},Constructor,(,_s,:,Array,[,Float,,,0b11,],;,_,,,_rs,,,t4,:,_oG,),{,},},<EOF>''',
                101
            )
        )

    def test_1881(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H:a{Val N,$__,_:String ;}Class __:P{Constructor (O_g:n;_0,IO4_T:Array [Array [Array [String ,0B1],072_4],0x33];__,i:l;d:Int ){Break ;}e7(){}Var v_,$7,$_t,$0,WE,$9:Array [Boolean ,0B1_0];$pa8N__(_,M,_:l_14l_3_;d9:Array [Boolean ,04];H:R;o:_8){Break ;}Destructor (){}Val _Z,z,$0,_:Array [Array [Array [Array [Float ,0B1100100],100],0x33],2];}''',
                '''Class,H,:,a,{,Val,N,,,$__,,,_,:,String,;,},Class,__,:,P,{,Constructor,(,O_g,:,n,;,_0,,,IO4_T,:,Array,[,Array,[,Array,[,String,,,0B1,],,,0724,],,,0x33,],;,__,,,i,:,l,;,d,:,Int,),{,Break,;,},e7,(,),{,},Var,v_,,,$7,,,$_t,,,$0,,,WE,,,$9,:,Array,[,Boolean,,,0B10,],;,$pa8N__,(,_,,,M,,,_,:,l_14l_3_,;,d9,:,Array,[,Boolean,,,04,],;,H,:,R,;,o,:,_8,),{,Break,;,},Destructor,(,),{,},Val,_Z,,,z,,,$0,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1100100,],,,100,],,,0x33,],,,2,],;,},<EOF>''',
                101
            )
        )

    def test_1882(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{Constructor (W_K,_g4__:Float ;_:Int ;i:Array [Array [Array [Array [Float ,0B10110],82],0b1_00],82];_:_;g:l){} }Class a:M{Destructor (){}Destructor (){} }''',
                '''Class,m,{,Constructor,(,W_K,,,_g4__,:,Float,;,_,:,Int,;,i,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B10110,],,,82,],,,0b100,],,,82,],;,_,:,_,;,g,:,l,),{,},},Class,a,:,M,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1883(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:__{}Class Y:Q_{}Class _{}Class j88{Var $5,$25:Array [Int ,0x55_8B];}Class m2:_{}Class Z{}Class P:O{Val D,_:_;}Class a{$_(){}i(jU,I,_,S:Array [Float ,0X57];S:Array [Array [Array [Float ,0b11101],01_51],07]){} }Class a{}Class mV_:_4{}''',
                '''Class,U,:,__,{,},Class,Y,:,Q_,{,},Class,_,{,},Class,j88,{,Var,$5,,,$25,:,Array,[,Int,,,0x558B,],;,},Class,m2,:,_,{,},Class,Z,{,},Class,P,:,O,{,Val,D,,,_,:,_,;,},Class,a,{,$_,(,),{,},i,(,jU,,,I,,,_,,,S,:,Array,[,Float,,,0X57,],;,S,:,Array,[,Array,[,Array,[,Float,,,0b11101,],,,0151,],,,07,],),{,},},Class,a,{,},Class,mV_,:,_4,{,},<EOF>''',
                101
            )
        )

    def test_1884(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:U{}Class E:X9{Constructor (t_9:Float ){Break ;Continue ;Return ;Continue ;} }Class c_{}Class R_av{Var $2R_9_k5_,UU,$_p,f_,_:_;}''',
                '''Class,_,:,U,{,},Class,E,:,X9,{,Constructor,(,t_9,:,Float,),{,Break,;,Continue,;,Return,;,Continue,;,},},Class,c_,{,},Class,R_av,{,Var,$2R_9_k5_,,,UU,,,$_p,,,f_,,,_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_1885(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _:_4{U(h__,TC_:x__;T:String ;t:Array [Array [Array [Int ,0x3],27],27];_f,s0,_X_,_,R7_I:Array [Array [Boolean ,0137],0b1];X:String ;b,_,g:String ){} }''',
                '''Class,_,:,_,{,},Class,_,:,_4,{,U,(,h__,,,TC_,:,x__,;,T,:,String,;,t,:,Array,[,Array,[,Array,[,Int,,,0x3,],,,27,],,,27,],;,_f,,,s0,,,_X_,,,_,,,R7_I,:,Array,[,Array,[,Boolean,,,0137,],,,0b1,],;,X,:,String,;,b,,,_,,,g,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_1886(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{Val $w:_0;Constructor (Z:Array [Boolean ,0xA]){}Val v_:Array [Float ,077_3];}Class Ry:_nY{Constructor (){} }''',
                '''Class,_8,{,Val,$w,:,_0,;,Constructor,(,Z,:,Array,[,Boolean,,,0xA,],),{,},Val,v_,:,Array,[,Float,,,0773,],;,},Class,Ry,:,_nY,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1887(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class P{Constructor (){Var _,J,H:Array [Array [Array [Float ,011],011],0b1];} }Class _0:__Y{}''',
                '''Class,_,{,Destructor,(,),{,},},Class,P,{,Constructor,(,),{,Var,_,,,J,,,H,:,Array,[,Array,[,Array,[,Float,,,011,],,,011,],,,0b1,],;,},},Class,_0,:,__Y,{,},<EOF>''',
                101
            )
        )

    def test_1888(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U1{}Class _:O7{Constructor (){Break ;}Destructor (){}Constructor (_M_N_ye:r__){ {Val Ve:String ;}Break ;}Constructor (){}Constructor (Yc4v,Rx_,__:String ;O_:Array [Array [Array [Int ,0b1],0B1011],06]){}Constructor (O,_:GT){} }Class p{}''',
                '''Class,U1,{,},Class,_,:,O7,{,Constructor,(,),{,Break,;,},Destructor,(,),{,},Constructor,(,_M_N_ye,:,r__,),{,{,Val,Ve,:,String,;,},Break,;,},Constructor,(,),{,},Constructor,(,Yc4v,,,Rx_,,,__,:,String,;,O_,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,0B1011,],,,06,],),{,},Constructor,(,O,,,_,:,GT,),{,},},Class,p,{,},<EOF>''',
                101
            )
        )

    def test_1889(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2JqS4:_2_{}Class W{}Class J{}Class i_:_{}Class D{Var _G_,a_,F,_:Boolean ;Val w_80,X:Int ;}Class bZa552h{}Class j{}Class Q:__p8{}''',
                '''Class,_2JqS4,:,_2_,{,},Class,W,{,},Class,J,{,},Class,i_,:,_,{,},Class,D,{,Var,_G_,,,a_,,,F,,,_,:,Boolean,;,Val,w_80,,,X,:,Int,;,},Class,bZa552h,{,},Class,j,{,},Class,Q,:,__p8,{,},<EOF>''',
                101
            )
        )

    def test_1890(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_9{}Class s50C:Ac28N_70{Constructor (_,_8s,q1_89,K9:Boolean ;s,_,q_,_7:Array [Float ,1];po_3,_42Rq6:String ;_,__:Array [Array [Array [Array [Int ,0114],9],0X24],0X24]){} }Class _c{Var _c____8S,Y8_,$5n_,$8_:P;}''',
                '''Class,_,:,_9,{,},Class,s50C,:,Ac28N_70,{,Constructor,(,_,,,_8s,,,q1_89,,,K9,:,Boolean,;,s,,,_,,,q_,,,_7,:,Array,[,Float,,,1,],;,po_3,,,_42Rq6,:,String,;,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0114,],,,9,],,,0X24,],,,0X24,],),{,},},Class,_c,{,Var,_c____8S,,,Y8_,,,$5n_,,,$8_,:,P,;,},<EOF>''',
                101
            )
        )

    def test_1891(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U__2nh_:S3{}Class _:u4{}Class __8Q:t_s_{}Class w0{Val v:String ;Var _H:Array [String ,0X61];Var $0Lo:Array [Array [Array [Array [Array [Int ,01],55],02_4],0b1],06_6];}''',
                '''Class,U__2nh_,:,S3,{,},Class,_,:,u4,{,},Class,__8Q,:,t_s_,{,},Class,w0,{,Val,v,:,String,;,Var,_H,:,Array,[,String,,,0X61,],;,Var,$0Lo,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,55,],,,024,],,,0b1,],,,066,],;,},<EOF>''',
                101
            )
        )

    def test_1892(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_Q{Constructor (_,_:Boolean ;_:Array [Int ,0b1_0];c,h__,X:Array [Int ,0X64];j,T_:Array [Array [String ,8_6_1],0135];l5,_Ty_0_QY__,_:Array [Int ,1];_295:__9){} }''',
                '''Class,N,:,_Q,{,Constructor,(,_,,,_,:,Boolean,;,_,:,Array,[,Int,,,0b10,],;,c,,,h__,,,X,:,Array,[,Int,,,0X64,],;,j,,,T_,:,Array,[,Array,[,String,,,861,],,,0135,],;,l5,,,_Ty_0_QY__,,,_,:,Array,[,Int,,,1,],;,_295,:,__9,),{,},},<EOF>''',
                101
            )
        )

    def test_1893(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Sk{p(){}$2(K__:String ;_:_1;____,_JJ:Array [Int ,0B1000]){Continue ;Break ;Return ;} }Class _:__{}Class a3:_{}''',
                '''Class,_Sk,{,p,(,),{,},$2,(,K__,:,String,;,_,:,_1,;,____,,,_JJ,:,Array,[,Int,,,0B1000,],),{,Continue,;,Break,;,Return,;,},},Class,_,:,__,{,},Class,a3,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1894(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c_:k{}Class _:TsM_2{Constructor (__b:Array [Array [Array [Array [Array [Boolean ,22],0x1B],0B100_0_11_0],0B1_1],0x2A];G:o;__:_){Return ;} }Class L0{Destructor (){} }''',
                '''Class,c_,:,k,{,},Class,_,:,TsM_2,{,Constructor,(,__b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,22,],,,0x1B,],,,0B1000110,],,,0B11,],,,0x2A,],;,G,:,o,;,__,:,_,),{,Return,;,},},Class,L0,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1895(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_n6{Var $3:Array [Array [Array [String ,0B11001],0x1F],0135];Val nn,p_4:Array [Array [Array [Int ,0b11],0135],0b11];}''',
                '''Class,N,:,_n6,{,Var,$3,:,Array,[,Array,[,Array,[,String,,,0B11001,],,,0x1F,],,,0135,],;,Val,nn,,,p_4,:,Array,[,Array,[,Array,[,Int,,,0b11,],,,0135,],,,0b11,],;,},<EOF>''',
                101
            )
        )

    def test_1896(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class b_{W3(){}__(dB_H:Array [Array [Boolean ,01_4],87];__g_:Array [Array [Float ,01_0_6],0b1];tV,_4:Array [Array [Array [Array [Array [Array [Int ,075],0b1],0x26],87],0X29],0x26];_R,y7,_,_:Boolean ;Uf,_,_:_6){} }Class _M2_:_{Val _9:Array [Array [Int ,0B1011001],87];}''',
                '''Class,__,{,},Class,b_,{,W3,(,),{,},__,(,dB_H,:,Array,[,Array,[,Boolean,,,014,],,,87,],;,__g_,:,Array,[,Array,[,Float,,,0106,],,,0b1,],;,tV,,,_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,075,],,,0b1,],,,0x26,],,,87,],,,0X29,],,,0x26,],;,_R,,,y7,,,_,,,_,:,Boolean,;,Uf,,,_,,,_,:,_6,),{,},},Class,_M2_,:,_,{,Val,_9,:,Array,[,Array,[,Int,,,0B1011001,],,,87,],;,},<EOF>''',
                101
            )
        )

    def test_1897(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{_d9(e:J;_:Boolean ){}$_(k_,___,_,_0:_0K){}Destructor (){} }Class _{}Class _{}Class h_:d_{}Class l{Constructor (CUh39,AC,X,_,_,V:Array [Array [Int ,0B1],0X6];_W77_r,g,dK,b:Array [Int ,07]){Val M,s:Array [Array [Array [Array [Array [Array [Boolean ,015],0b110100],0X37],0x7_7],0X5],0X7];}Var $0:Boolean ;}''',
                '''Class,_,:,_,{,_d9,(,e,:,J,;,_,:,Boolean,),{,},$_,(,k_,,,___,,,_,,,_0,:,_0K,),{,},Destructor,(,),{,},},Class,_,{,},Class,_,{,},Class,h_,:,d_,{,},Class,l,{,Constructor,(,CUh39,,,AC,,,X,,,_,,,_,,,V,:,Array,[,Array,[,Int,,,0B1,],,,0X6,],;,_W77_r,,,g,,,dK,,,b,:,Array,[,Int,,,07,],),{,Val,M,,,s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,015,],,,0b110100,],,,0X37,],,,0x77,],,,0X5,],,,0X7,],;,},Var,$0,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_1898(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _J50E_:_{Constructor (_w__8_,m:v;sv:_5){Var dj:Array [Int ,44];Break ;}$_(_,_:Array [Int ,0B111010];U,Hr0:Array [Array [String ,06_2_7],0x1E];_,_t:Array [Float ,055]){}Constructor (){Val _N0U,_,_,m:Array [Array [Array [Float ,03_2_4],0X48],0B1];} }''',
                '''Class,_J50E_,:,_,{,Constructor,(,_w__8_,,,m,:,v,;,sv,:,_5,),{,Var,dj,:,Array,[,Int,,,44,],;,Break,;,},$_,(,_,,,_,:,Array,[,Int,,,0B111010,],;,U,,,Hr0,:,Array,[,Array,[,String,,,0627,],,,0x1E,],;,_,,,_t,:,Array,[,Float,,,055,],),{,},Constructor,(,),{,Val,_N0U,,,_,,,_,,,m,:,Array,[,Array,[,Array,[,Float,,,0324,],,,0X48,],,,0B1,],;,},},<EOF>''',
                101
            )
        )

    def test_1899(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e3q_h{Val BL,$10,_,y_:Array [String ,0B1];Var $_P:Array [Array [String ,0105],0x16];}Class L0_8:CI{Val f:J7;}Class _R:F{Val i:Array [Array [Array [Int ,0105],0105],06_0];Constructor (){} }Class Gc60:s_{Destructor (){}Val _:Array [String ,045_2];}''',
                '''Class,e3q_h,{,Val,BL,,,$10,,,_,,,y_,:,Array,[,String,,,0B1,],;,Var,$_P,:,Array,[,Array,[,String,,,0105,],,,0x16,],;,},Class,L0_8,:,CI,{,Val,f,:,J7,;,},Class,_R,:,F,{,Val,i,:,Array,[,Array,[,Array,[,Int,,,0105,],,,0105,],,,060,],;,Constructor,(,),{,},},Class,Gc60,:,s_,{,Destructor,(,),{,},Val,_,:,Array,[,String,,,0452,],;,},<EOF>''',
                101
            )
        )

    def test_1900(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _89{}Class __P{$8_aIS_(__,_:Int ;_:Float ;_53_,_:Array [Array [Array [Array [Boolean ,0x19],026],0B1],0xAE_C_9_1]){}Var _h,$m:Int ;}''',
                '''Class,_89,{,},Class,__P,{,$8_aIS_,(,__,,,_,:,Int,;,_,:,Float,;,_53_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x19,],,,026,],,,0B1,],,,0xAEC91,],),{,},Var,_h,,,$m,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1901(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{}Class tX_dl{}Class _:__{}Class J:n{}Class _{Val $7,$0,$7,ff,$d24,$6_35_0:_;Var $_7A2,Y:f_;}Class __{}Class _:_K{Val _,w:Array [Array [Int ,01_6_2],0xD];}''',
                '''Class,k,{,},Class,tX_dl,{,},Class,_,:,__,{,},Class,J,:,n,{,},Class,_,{,Val,$7,,,$0,,,$7,,,ff,,,$d24,,,$6_35_0,:,_,;,Var,$_7A2,,,Y,:,f_,;,},Class,__,{,},Class,_,:,_K,{,Val,_,,,w,:,Array,[,Array,[,Int,,,0162,],,,0xD,],;,},<EOF>''',
                101
            )
        )

    def test_1902(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{Constructor (S6_,bu_4:String ){}Var _b,__,$3,_9C:j;$_16(a7r45_,_,D_o3:Int ){}Constructor (_R_7:Array [String ,0xE]){} }Class lK9:t{Destructor (){} }''',
                '''Class,n,{,Constructor,(,S6_,,,bu_4,:,String,),{,},Var,_b,,,__,,,$3,,,_9C,:,j,;,$_16,(,a7r45_,,,_,,,D_o3,:,Int,),{,},Constructor,(,_R_7,:,Array,[,String,,,0xE,],),{,},},Class,lK9,:,t,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1903(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:h{}Class a:o1ys_{Var $K:String ;}Class _{}Class _:__{Destructor (){}Var $_,$mqm7,$4G:Boolean ;Var N_:Boolean ;Val J:_;}Class D{}''',
                '''Class,e,:,h,{,},Class,a,:,o1ys_,{,Var,$K,:,String,;,},Class,_,{,},Class,_,:,__,{,Destructor,(,),{,},Var,$_,,,$mqm7,,,$4G,:,Boolean,;,Var,N_,:,Boolean,;,Val,J,:,_,;,},Class,D,{,},<EOF>''',
                101
            )
        )

    def test_1904(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{Constructor (m:f4){}$a_7(_S8mc1A_9:Array [Float ,0135];_u90:Array [String ,07];_,N,_:Float ;q6,YA:_;G:Array [Float ,066]){} }Class _:_{}''',
                '''Class,o,{,Constructor,(,m,:,f4,),{,},$a_7,(,_S8mc1A_9,:,Array,[,Float,,,0135,],;,_u90,:,Array,[,String,,,07,],;,_,,,N,,,_,:,Float,;,q6,,,YA,:,_,;,G,:,Array,[,Float,,,066,],),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1905(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{Constructor (_9V,X_1:Array [Array [Array [Array [Int ,0X8],20],0x9],20];f:Array [Array [Boolean ,0B1_11],0x5C];_,_:Boolean ;vp:Int ;_:__){} }Class _:NB{}''',
                '''Class,n,{,Constructor,(,_9V,,,X_1,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X8,],,,20,],,,0x9,],,,20,],;,f,:,Array,[,Array,[,Boolean,,,0B111,],,,0x5C,],;,_,,,_,:,Boolean,;,vp,:,Int,;,_,:,__,),{,},},Class,_,:,NB,{,},<EOF>''',
                101
            )
        )

    def test_1906(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_E{Constructor (){Val _l,_v,d9:Array [Array [Array [Array [Int ,3],05],0x8],59];Continue ;} }Class _9h:B{Var _:Array [Array [Array [Float ,0b11_0],59],59];Var _:Array [Float ,59];Var $E_3,_0:k__4;Constructor (Y__:_;JA_:Array [Array [Array [Array [Boolean ,0X31],03212],07],0X31];_Z:U4;d_ER:Boolean ){}Var $_,$___:Array [Array [Int ,0B1_00_00_11],0B100];Var A9F1:J6___8X;}Class g_:_{}''',
                '''Class,_,:,_E,{,Constructor,(,),{,Val,_l,,,_v,,,d9,:,Array,[,Array,[,Array,[,Array,[,Int,,,3,],,,05,],,,0x8,],,,59,],;,Continue,;,},},Class,_9h,:,B,{,Var,_,:,Array,[,Array,[,Array,[,Float,,,0b110,],,,59,],,,59,],;,Var,_,:,Array,[,Float,,,59,],;,Var,$E_3,,,_0,:,k__4,;,Constructor,(,Y__,:,_,;,JA_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X31,],,,03212,],,,07,],,,0X31,],;,_Z,:,U4,;,d_ER,:,Boolean,),{,},Var,$_,,,$___,:,Array,[,Array,[,Int,,,0B1000011,],,,0B100,],;,Var,A9F1,:,J6___8X,;,},Class,g_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1907(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:v7{Constructor (){Break ;} }Class __:_6{Constructor (_,_HM,_,og84P__,d,r,I:Array [Array [Int ,0b11],04]){}B_(z:Array [String ,0x3A];t1:Array [String ,0103]){Break ;} }Class __Y_:W{Val _,$T,_,G_1,_,_,$9,$_o41Q,b_vc,$1,$2_i:__;Constructor (_,H:Array [Array [Array [Array [Int ,0B11_1],0x9],0x3],0x59];_:Array [Int ,37];_,E_,G,BR:String ;_,Fb:Int ){} }''',
                '''Class,a,:,v7,{,Constructor,(,),{,Break,;,},},Class,__,:,_6,{,Constructor,(,_,,,_HM,,,_,,,og84P__,,,d,,,r,,,I,:,Array,[,Array,[,Int,,,0b11,],,,04,],),{,},B_,(,z,:,Array,[,String,,,0x3A,],;,t1,:,Array,[,String,,,0103,],),{,Break,;,},},Class,__Y_,:,W,{,Val,_,,,$T,,,_,,,G_1,,,_,,,_,,,$9,,,$_o41Q,,,b_vc,,,$1,,,$2_i,:,__,;,Constructor,(,_,,,H,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B111,],,,0x9,],,,0x3,],,,0x59,],;,_,:,Array,[,Int,,,37,],;,_,,,E_,,,G,,,BR,:,String,;,_,,,Fb,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1908(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u:h8{Constructor (){}Constructor (R,_3:m;_,_:Array [Array [Array [Array [Array [Boolean ,02_2],0B11],26],0X7],061];K_C:Boolean ){Continue ;}Destructor (){} }''',
                '''Class,u,:,h8,{,Constructor,(,),{,},Constructor,(,R,,,_3,:,m,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,022,],,,0B11,],,,26,],,,0X7,],,,061,],;,K_C,:,Boolean,),{,Continue,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1909(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z:_X{}Class m{Var $J0_8,_f:Array [Float ,0115];}Class __4:_82_k_9{Destructor (){Var A,_:Array [Array [Array [Array [String ,01],0X49],0b1101],0x7_32];}Var $_:Int ;}''',
                '''Class,_Z,:,_X,{,},Class,m,{,Var,$J0_8,,,_f,:,Array,[,Float,,,0115,],;,},Class,__4,:,_82_k_9,{,Destructor,(,),{,Var,A,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,0X49,],,,0b1101,],,,0x732,],;,},Var,$_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1910(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _J_{Constructor (){}Constructor (D_:_0){}Val $_:c8v8m99a_5;}Class W{Constructor (c,_:_U){}Destructor (){}Var _Nb:_=!!!_9::$7.a____().w._8CM;}''',
                '''Class,_J_,{,Constructor,(,),{,},Constructor,(,D_,:,_0,),{,},Val,$_,:,c8v8m99a_5,;,},Class,W,{,Constructor,(,c,,,_,:,_U,),{,},Destructor,(,),{,},Var,_Nb,:,_,=,!,!,!,_9,::,$7,.,a____,(,),.,w,.,_8CM,;,},<EOF>''',
                101
            )
        )

    def test_1911(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c:W{}Class S__2d:_{Var A28:f;Constructor (){}Val __85:Array [Array [Array [Array [Array [Array [Array [Array [String ,0X64C],39],0B101011],39],060_2],14],074_3],0b1];}''',
                '''Class,_c,:,W,{,},Class,S__2d,:,_,{,Var,A28,:,f,;,Constructor,(,),{,},Val,__85,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X64C,],,,39,],,,0B101011,],,,39,],,,0602,],,,14,],,,0743,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_1912(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J0{Z___(TC,_:_;_T_,_:String ){Continue ;} }Class KW{Destructor (){Continue ;Continue ;}Val t,$A,Y:Boolean ;$_4(){} }Class o{}Class G:U_{}Class _q:_Bj{Constructor (__98_Q:Float ){} }''',
                '''Class,J0,{,Z___,(,TC,,,_,:,_,;,_T_,,,_,:,String,),{,Continue,;,},},Class,KW,{,Destructor,(,),{,Continue,;,Continue,;,},Val,t,,,$A,,,Y,:,Boolean,;,$_4,(,),{,},},Class,o,{,},Class,G,:,U_,{,},Class,_q,:,_Bj,{,Constructor,(,__98_Q,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_1913(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class b70:c{Constructor (_:Array [Array [Int ,0B1100010],9];m,_v_:Array [String ,0x2]){} }Class g{Constructor (_:U){Break ;Break ;}Var __6y,_,$_Y_w1_A:Array [Array [Array [String ,0X16],57],11];Var _:Int ;}Class _:b{}Class __0:_{}''',
                '''Class,_,{,},Class,b70,:,c,{,Constructor,(,_,:,Array,[,Array,[,Int,,,0B1100010,],,,9,],;,m,,,_v_,:,Array,[,String,,,0x2,],),{,},},Class,g,{,Constructor,(,_,:,U,),{,Break,;,Break,;,},Var,__6y,,,_,,,$_Y_w1_A,:,Array,[,Array,[,Array,[,String,,,0X16,],,,57,],,,11,],;,Var,_,:,Int,;,},Class,_,:,b,{,},Class,__0,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1914(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{ag(_x:Array [Array [Float ,0b1],0XB_E];G:Boolean ;e,D:Array [Array [Array [Array [Array [Int ,45],0x1A],45],45],0xE];o_7,_,t,_T1,_,_:Z;D6:b3B){Val _:h;} }''',
                '''Class,_,{,ag,(,_x,:,Array,[,Array,[,Float,,,0b1,],,,0XBE,],;,G,:,Boolean,;,e,,,D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,45,],,,0x1A,],,,45,],,,45,],,,0xE,],;,o_7,,,_,,,t,,,_T1,,,_,,,_,:,Z,;,D6,:,b3B,),{,Val,_,:,h,;,},},<EOF>''',
                101
            )
        )

    def test_1915(self):
        self.assertTrue(
            TestLexer.test(
                '''Class lt{Var _,_0g:Array [Boolean ,0b1_1];Val h1_1,$_,$2V5,_V52f_6,$_74y,$__S,__:String ;Var _U,_5:Boolean ;Val $4A,$_,$_:Array [Array [Int ,0B10001],06];}Class L{}''',
                '''Class,lt,{,Var,_,,,_0g,:,Array,[,Boolean,,,0b11,],;,Val,h1_1,,,$_,,,$2V5,,,_V52f_6,,,$_74y,,,$__S,,,__,:,String,;,Var,_U,,,_5,:,Boolean,;,Val,$4A,,,$_,,,$_,:,Array,[,Array,[,Int,,,0B10001,],,,06,],;,},Class,L,{,},<EOF>''',
                101
            )
        )

    def test_1916(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _{$v_6(_:F0;f,P,x:Array [String ,6_0];__5,e4:Boolean ;__4,I_P,l,uq,__:_;_,__,jK:Int ){} }Class _m:r{}''',
                '''Class,__,{,},Class,_,{,$v_6,(,_,:,F0,;,f,,,P,,,x,:,Array,[,String,,,60,],;,__5,,,e4,:,Boolean,;,__4,,,I_P,,,l,,,uq,,,__,:,_,;,_,,,__,,,jK,:,Int,),{,},},Class,_m,:,r,{,},<EOF>''',
                101
            )
        )

    def test_1917(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:__{}Class e_H5:_1_gf__{Var $e,$n:Array [Array [Array [Float ,0B1001100],0XF],0XD7C_4D];}Class __:_Z{Destructor (){} }Class __{}''',
                '''Class,E,:,__,{,},Class,e_H5,:,_1_gf__,{,Var,$e,,,$n,:,Array,[,Array,[,Array,[,Float,,,0B1001100,],,,0XF,],,,0XD7C4D,],;,},Class,__,:,_Z,{,Destructor,(,),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_1918(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Zw{E_5(_,S:__;_,B:Array [Array [Array [Array [Array [Array [Int ,40],04_2_3],60_9],06_0],0b101111],90_03_48]){} }''',
                '''Class,_Zw,{,E_5,(,_,,,S,:,__,;,_,,,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,40,],,,0423,],,,609,],,,060,],,,0b101111,],,,900348,],),{,},},<EOF>''',
                101
            )
        )

    def test_1919(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b977j:x{Var _:Array [Boolean ,0XB_8_D_F];$4_4_(H,_0,e2:_){} }Class j732{}Class Wh{Var _S,_o:Array [Array [Float ,0x1],0xD6EE_9_1];}Class K{}''',
                '''Class,b977j,:,x,{,Var,_,:,Array,[,Boolean,,,0XB8DF,],;,$4_4_,(,H,,,_0,,,e2,:,_,),{,},},Class,j732,{,},Class,Wh,{,Var,_S,,,_o,:,Array,[,Array,[,Float,,,0x1,],,,0xD6EE91,],;,},Class,K,{,},<EOF>''',
                101
            )
        )

    def test_1920(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (k8,a:e_W;_,ZD,_,_1h:Array [Array [Float ,045],91]){ {} }Var _,$0sL:Float ;}Class c{}Class _3:Q82i3{}''',
                '''Class,_,:,_,{,Constructor,(,k8,,,a,:,e_W,;,_,,,ZD,,,_,,,_1h,:,Array,[,Array,[,Float,,,045,],,,91,],),{,{,},},Var,_,,,$0sL,:,Float,;,},Class,c,{,},Class,_3,:,Q82i3,{,},<EOF>''',
                101
            )
        )

    def test_1921(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _z:_{$_8(_,m,rE:m;i:Boolean ){}Var m:fcj_9;}Class V{}Class _T{Val _,$4,__:Array [Int ,0b110011];}Class _{}Class _:_7{}''',
                '''Class,_z,:,_,{,$_8,(,_,,,m,,,rE,:,m,;,i,:,Boolean,),{,},Var,m,:,fcj_9,;,},Class,V,{,},Class,_T,{,Val,_,,,$4,,,__,:,Array,[,Int,,,0b110011,],;,},Class,_,{,},Class,_,:,_7,{,},<EOF>''',
                101
            )
        )

    def test_1922(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ONK{Val E_8,P:String ;Constructor (z,s9,M:a;L:Array [Array [Array [Float ,0b10001],0XC_7_E_9],07]){} }Class H:F{}Class l{}Class _{Destructor (){}_(__M,_:Boolean ){}Val n:Array [Array [Array [String ,88],0b10001],0X11];}''',
                '''Class,ONK,{,Val,E_8,,,P,:,String,;,Constructor,(,z,,,s9,,,M,:,a,;,L,:,Array,[,Array,[,Array,[,Float,,,0b10001,],,,0XC7E9,],,,07,],),{,},},Class,H,:,F,{,},Class,l,{,},Class,_,{,Destructor,(,),{,},_,(,__M,,,_,:,Boolean,),{,},Val,n,:,Array,[,Array,[,Array,[,String,,,88,],,,0b10001,],,,0X11,],;,},<EOF>''',
                101
            )
        )

    def test_1923(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_n(){}x(P,D,i,A05_4y:_;I,c:Array [String ,06];_,_:Boolean ;_0x:Array [Array [Array [Array [Array [String ,0x20],0b1011111],3_81],061],0x20]){} }''',
                '''Class,_,{,_n,(,),{,},x,(,P,,,D,,,i,,,A05_4y,:,_,;,I,,,c,:,Array,[,String,,,06,],;,_,,,_,:,Boolean,;,_0x,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x20,],,,0b1011111,],,,381,],,,061,],,,0x20,],),{,},},<EOF>''',
                101
            )
        )

    def test_1924(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X_{}Class _5:R{Val $__,__:Array [Array [String ,1],21];Constructor (A,h9,K_:_;_p:Array [Float ,82];_,a,zK:_){} }Class D8:_{$__(Js,_,_4:_v6j_qd_J;__:Boolean ;K:Array [Array [Int ,4],3_81]){} }Class _R__{}''',
                '''Class,X_,{,},Class,_5,:,R,{,Val,$__,,,__,:,Array,[,Array,[,String,,,1,],,,21,],;,Constructor,(,A,,,h9,,,K_,:,_,;,_p,:,Array,[,Float,,,82,],;,_,,,a,,,zK,:,_,),{,},},Class,D8,:,_,{,$__,(,Js,,,_,,,_4,:,_v6j_qd_J,;,__,:,Boolean,;,K,:,Array,[,Array,[,Int,,,4,],,,381,],),{,},},Class,_R__,{,},<EOF>''',
                101
            )
        )

    def test_1925(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{n(W,_:Array [Array [String ,050],0B1111]){}Constructor (N,_:Array [Float ,8];A:zb_;_:Float ;__4,X,Y:Array [Array [Array [Boolean ,0x39],0B1111],0xE_A_7]){} }Class h_{Constructor (L,nm,i7_R_:String ;_d:_){} }''',
                '''Class,___,{,n,(,W,,,_,:,Array,[,Array,[,String,,,050,],,,0B1111,],),{,},Constructor,(,N,,,_,:,Array,[,Float,,,8,],;,A,:,zb_,;,_,:,Float,;,__4,,,X,,,Y,:,Array,[,Array,[,Array,[,Boolean,,,0x39,],,,0B1111,],,,0xEA7,],),{,},},Class,h_,{,Constructor,(,L,,,nm,,,i7_R_,:,String,;,_d,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1926(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V1:_{X(m3,_6h:MS3){ {} }Constructor (){} }Class V_{Val $5a2_:Array [Array [Array [Int ,0XD4_5_305],0134],99];}Class _H_:_{}''',
                '''Class,V1,:,_,{,X,(,m3,,,_6h,:,MS3,),{,{,},},Constructor,(,),{,},},Class,V_,{,Val,$5a2_,:,Array,[,Array,[,Array,[,Int,,,0XD45305,],,,0134,],,,99,],;,},Class,_H_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1927(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{}Class __:_{Var F,$2Q:Array [Array [Array [Array [Array [Int ,0x8],0b10],031],0B111_0_0],05_1_1];}Class dM7{}''',
                '''Class,E,{,},Class,__,:,_,{,Var,F,,,$2Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x8,],,,0b10,],,,031,],,,0B11100,],,,0511,],;,},Class,dM7,{,},<EOF>''',
                101
            )
        )

    def test_1928(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8P_4_{f1(){} }Class p:GsE7{Constructor (QI_:h){} }Class _:H{Constructor (___,I__,a_,K,o1,_D_:String ){Continue ;} }''',
                '''Class,_8P_4_,{,f1,(,),{,},},Class,p,:,GsE7,{,Constructor,(,QI_,:,h,),{,},},Class,_,:,H,{,Constructor,(,___,,,I__,,,a_,,,K,,,o1,,,_D_,:,String,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1929(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m__:Z{$rs4(_,_q4:Array [Int ,95];_4_8,_6:Array [Float ,0B1000111];_9:Array [Array [String ,01352],0X1_8_1]){Val _2,h,_2,_,ug8:Array [Boolean ,053];} }''',
                '''Class,m__,:,Z,{,$rs4,(,_,,,_q4,:,Array,[,Int,,,95,],;,_4_8,,,_6,:,Array,[,Float,,,0B1000111,],;,_9,:,Array,[,Array,[,String,,,01352,],,,0X181,],),{,Val,_2,,,h,,,_2,,,_,,,ug8,:,Array,[,Boolean,,,053,],;,},},<EOF>''',
                101
            )
        )

    def test_1930(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s_:_{Constructor (){} }Class V_3:_jE{Constructor (F4,_8_j,_,_:Array [Int ,0B1_0_0];_X,_:Array [Array [Array [Int ,0xA],026],89];_:String ){} }''',
                '''Class,s_,:,_,{,Constructor,(,),{,},},Class,V_3,:,_jE,{,Constructor,(,F4,,,_8_j,,,_,,,_,:,Array,[,Int,,,0B100,],;,_X,,,_,:,Array,[,Array,[,Array,[,Int,,,0xA,],,,026,],,,89,],;,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_1931(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:d{Constructor (t,_,_d,z,__,Z:Array [Float ,0b100111]){S::$1_()._();}Var $2:_;Var _r:Array [Array [Boolean ,7],0XF];}''',
                '''Class,I,:,d,{,Constructor,(,t,,,_,,,_d,,,z,,,__,,,Z,:,Array,[,Float,,,0b100111,],),{,S,::,$1_,(,),.,_,(,),;,},Var,$2,:,_,;,Var,_r,:,Array,[,Array,[,Boolean,,,7,],,,0XF,],;,},<EOF>''',
                101
            )
        )

    def test_1932(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Cr{Constructor (tp,d4t4_:Array [Float ,062];I:_R){Val _2B_:D0A;}$_(){} }Class A14_{Destructor (){}Val $7,_:_tj;Destructor (){q::$n();} }''',
                '''Class,Cr,{,Constructor,(,tp,,,d4t4_,:,Array,[,Float,,,062,],;,I,:,_R,),{,Val,_2B_,:,D0A,;,},$_,(,),{,},},Class,A14_,{,Destructor,(,),{,},Val,$7,,,_,:,_tj,;,Destructor,(,),{,q,::,$n,(,),;,},},<EOF>''',
                101
            )
        )

    def test_1933(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){} }Class S:_MZ1{J8(){}Val Q_69,_:Array [Array [Array [Array [Boolean ,23],0137],0137],0B11011];Constructor (){} }Class fl:X{}''',
                '''Class,__,{,Destructor,(,),{,},},Class,S,:,_MZ1,{,J8,(,),{,},Val,Q_69,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,23,],,,0137,],,,0137,],,,0B11011,],;,Constructor,(,),{,},},Class,fl,:,X,{,},<EOF>''',
                101
            )
        )

    def test_1934(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s1{Val $__7:Array [Int ,0B1_0];}Class _S9{$0(__9,_wP:Array [Int ,0X49_7_F];D4n,Gw:Float ;__,x___,H:_H_;__:Array [Array [Array [Float ,0B1001010],0x4],0X62];_p,Sg:Array [Boolean ,0b1100010]){_::$z();}Destructor (){}Constructor (_:Array [Int ,0116]){} }Class ___{Constructor (){}Val $_B:Array [String ,2];}''',
                '''Class,s1,{,Val,$__7,:,Array,[,Int,,,0B10,],;,},Class,_S9,{,$0,(,__9,,,_wP,:,Array,[,Int,,,0X497F,],;,D4n,,,Gw,:,Float,;,__,,,x___,,,H,:,_H_,;,__,:,Array,[,Array,[,Array,[,Float,,,0B1001010,],,,0x4,],,,0X62,],;,_p,,,Sg,:,Array,[,Boolean,,,0b1100010,],),{,_,::,$z,(,),;,},Destructor,(,),{,},Constructor,(,_,:,Array,[,Int,,,0116,],),{,},},Class,___,{,Constructor,(,),{,},Val,$_B,:,Array,[,String,,,2,],;,},<EOF>''',
                101
            )
        )

    def test_1935(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:l{}Class _:s{Constructor (_,___k,_:Array [Array [String ,17],17];b__:__;_4:Array [Int ,06_2];_0:Array [Int ,17]){} }''',
                '''Class,_,:,l,{,},Class,_,:,s,{,Constructor,(,_,,,___k,,,_,:,Array,[,Array,[,String,,,17,],,,17,],;,b__,:,__,;,_4,:,Array,[,Int,,,062,],;,_0,:,Array,[,Int,,,17,],),{,},},<EOF>''',
                101
            )
        )

    def test_1936(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9q_N:_1{Destructor (){Return ;{} }Constructor (I4:String ){}Val G34h:Array [Int ,63];}Class C{}Class _6:_{Val d:Array [Int ,0B1000111];}''',
                '''Class,_9q_N,:,_1,{,Destructor,(,),{,Return,;,{,},},Constructor,(,I4,:,String,),{,},Val,G34h,:,Array,[,Int,,,63,],;,},Class,C,{,},Class,_6,:,_,{,Val,d,:,Array,[,Int,,,0B1000111,],;,},<EOF>''',
                101
            )
        )

    def test_1937(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{}Class _8:_{}Class _i_:L_{Var $E,s8:Float ;}Class _:e_K{Val c,$_7:Array [Array [Array [Float ,030],68],03];}''',
                '''Class,d,{,},Class,_8,:,_,{,},Class,_i_,:,L_,{,Var,$E,,,s8,:,Float,;,},Class,_,:,e_K,{,Val,c,,,$_7,:,Array,[,Array,[,Array,[,Float,,,030,],,,68,],,,03,],;,},<EOF>''',
                101
            )
        )

    def test_1938(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _95{$7(C6,h,L_4_T_,QM_0:Array [Array [Array [Array [Array [Float ,0627],0X16],6_3],0b1_0],0b1100011]){}Constructor (_,_:Float ;H,V,Gt,W,_,_:Boolean ;___,F,O__1:_){} }''',
                '''Class,_95,{,$7,(,C6,,,h,,,L_4_T_,,,QM_0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0627,],,,0X16,],,,63,],,,0b10,],,,0b1100011,],),{,},Constructor,(,_,,,_,:,Float,;,H,,,V,,,Gt,,,W,,,_,,,_,:,Boolean,;,___,,,F,,,O__1,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_1939(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z0:TC{}Class _:Z_{Val I6:Array [Array [Array [Array [Array [Array [String ,46],06],0x5_3_E],024],0X8],0123];__(){Return ;} }''',
                '''Class,Z0,:,TC,{,},Class,_,:,Z_,{,Val,I6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,46,],,,06,],,,0x53E,],,,024,],,,0X8,],,,0123,],;,__,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_1940(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:e{Val _6_,$4:String ;_h_h(){} }Class v{Destructor (){} }Class _:_{Val $66_,b,F_O3:Array [Array [Boolean ,0b1000110],0XF];}Class l62___o_m9_:c9{Val T74,$M,$j79_Z:Array [Array [Array [Float ,0b1000110],0X46],040];Var $__:c;Constructor (q:a){Break ;}Var $b_,tT:Array [Array [Array [Boolean ,0B11_1],0B1],0XA];}Class Q7_:_1{}''',
                '''Class,W,:,e,{,Val,_6_,,,$4,:,String,;,_h_h,(,),{,},},Class,v,{,Destructor,(,),{,},},Class,_,:,_,{,Val,$66_,,,b,,,F_O3,:,Array,[,Array,[,Boolean,,,0b1000110,],,,0XF,],;,},Class,l62___o_m9_,:,c9,{,Val,T74,,,$M,,,$j79_Z,:,Array,[,Array,[,Array,[,Float,,,0b1000110,],,,0X46,],,,040,],;,Var,$__,:,c,;,Constructor,(,q,:,a,),{,Break,;,},Var,$b_,,,tT,:,Array,[,Array,[,Array,[,Boolean,,,0B111,],,,0B1,],,,0XA,],;,},Class,Q7_,:,_1,{,},<EOF>''',
                101
            )
        )

    def test_1941(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t6:K__8{Val $3:Array [Array [Array [Boolean ,06_6],77],0X8];Constructor (A6_:String ){}Val $1_3__R_:Array [String ,016];}Class _6{}''',
                '''Class,t6,:,K__8,{,Val,$3,:,Array,[,Array,[,Array,[,Boolean,,,066,],,,77,],,,0X8,],;,Constructor,(,A6_,:,String,),{,},Val,$1_3__R_,:,Array,[,String,,,016,],;,},Class,_6,{,},<EOF>''',
                101
            )
        )

    def test_1942(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:_9{Val $4,$u9,$Z3,$2_,__N16,$4m,_,$3m_0:String ;}Class __w9I:_{Val Lx,_,A:Array [Array [Array [Float ,021665_1_40_3_7],0xC],0b1_0];Constructor (){} }Class u{}''',
                '''Class,h,:,_9,{,Val,$4,,,$u9,,,$Z3,,,$2_,,,__N16,,,$4m,,,_,,,$3m_0,:,String,;,},Class,__w9I,:,_,{,Val,Lx,,,_,,,A,:,Array,[,Array,[,Array,[,Float,,,02166514037,],,,0xC,],,,0b10,],;,Constructor,(,),{,},},Class,u,{,},<EOF>''',
                101
            )
        )

    def test_1943(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9:_{}Class _6{$Ax(){Continue ;{} }Constructor (o:Array [Boolean ,0B10_1]){}Constructor (_:C6_){} }Class z:bA{Val _,$_:Array [Array [Float ,0B1000],0x3];}''',
                '''Class,_9,:,_,{,},Class,_6,{,$Ax,(,),{,Continue,;,{,},},Constructor,(,o,:,Array,[,Boolean,,,0B101,],),{,},Constructor,(,_,:,C6_,),{,},},Class,z,:,bA,{,Val,_,,,$_,:,Array,[,Array,[,Float,,,0B1000,],,,0x3,],;,},<EOF>''',
                101
            )
        )

    def test_1944(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2{_2_(_2:Float ;_:Array [Array [String ,4],74];_,D,_,_:Array [String ,0x51]){} }Class B__{_(){} }Class __:D{}''',
                '''Class,_2,{,_2_,(,_2,:,Float,;,_,:,Array,[,Array,[,String,,,4,],,,74,],;,_,,,D,,,_,,,_,:,Array,[,String,,,0x51,],),{,},},Class,B__,{,_,(,),{,},},Class,__,:,D,{,},<EOF>''',
                101
            )
        )

    def test_1945(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2_5__00:P{}Class _:r{_(p,_,_,A_:Array [Array [Array [Boolean ,016],0X4F],0b1100];x:Float ;__44P:Float ){}Val __Mv,$f:Array [Array [Array [Int ,0XF94],06],0xDB];}''',
                '''Class,_2_5__00,:,P,{,},Class,_,:,r,{,_,(,p,,,_,,,_,,,A_,:,Array,[,Array,[,Array,[,Boolean,,,016,],,,0X4F,],,,0b1100,],;,x,:,Float,;,__44P,:,Float,),{,},Val,__Mv,,,$f,:,Array,[,Array,[,Array,[,Int,,,0XF94,],,,06,],,,0xDB,],;,},<EOF>''',
                101
            )
        )

    def test_1946(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _l00_{}Class eP:_{}Class k_{Var $5:Boolean ;___(){}Destructor (){Break ;Val _,_:Array [Float ,0x56];Continue ;Break ;{} }_o(h:Array [String ,070]){} }''',
                '''Class,_l00_,{,},Class,eP,:,_,{,},Class,k_,{,Var,$5,:,Boolean,;,___,(,),{,},Destructor,(,),{,Break,;,Val,_,,,_,:,Array,[,Float,,,0x56,],;,Continue,;,Break,;,{,},},_o,(,h,:,Array,[,String,,,070,],),{,},},<EOF>''',
                101
            )
        )

    def test_1947(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_K{Val $9z,$2:String ;Destructor (){}_(a6S:a){Var _,XP:Array [String ,5];} }Class _9:_{Val __Y,Q,l2:g;}''',
                '''Class,_,:,_K,{,Val,$9z,,,$2,:,String,;,Destructor,(,),{,},_,(,a6S,:,a,),{,Var,_,,,XP,:,Array,[,String,,,5,],;,},},Class,_9,:,_,{,Val,__Y,,,Q,,,l2,:,g,;,},<EOF>''',
                101
            )
        )

    def test_1948(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_,_3__d:Boolean ){} }Class i_:Y_e_10e05{Val $_:String ;Constructor (B:Float ){} }Class _:_{}Class _{}''',
                '''Class,_,:,_,{,Constructor,(,_,,,_3__d,:,Boolean,),{,},},Class,i_,:,Y_e_10e05,{,Val,$_,:,String,;,Constructor,(,B,:,Float,),{,},},Class,_,:,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1949(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:X_1{}Class _O_:_d{Constructor (_:__0;_5,_,_n:Array [String ,0X78];_x,_w,_92Df:Array [Array [Array [Array [Int ,0XE11_D],033],0x8],0b1]){} }''',
                '''Class,y,:,X_1,{,},Class,_O_,:,_d,{,Constructor,(,_,:,__0,;,_5,,,_,,,_n,:,Array,[,String,,,0X78,],;,_x,,,_w,,,_92Df,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XE11D,],,,033,],,,0x8,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1950(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{Val $V,_:_1J_;Constructor (_:_){}Destructor (){}Constructor (){Break ;}_(R,qV,R5D:String ;__,_:Array [Array [Array [Array [Float ,0B111001],43],0X50],0b1010100];_78,_82_4,__6g,c,uK_,_T,Ll:_5;m:Boolean ;v,r:p5_O){} }''',
                '''Class,p,{,Val,$V,,,_,:,_1J_,;,Constructor,(,_,:,_,),{,},Destructor,(,),{,},Constructor,(,),{,Break,;,},_,(,R,,,qV,,,R5D,:,String,;,__,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B111001,],,,43,],,,0X50,],,,0b1010100,],;,_78,,,_82_4,,,__6g,,,c,,,uK_,,,_T,,,Ll,:,_5,;,m,:,Boolean,;,v,,,r,:,p5_O,),{,},},<EOF>''',
                101
            )
        )

    def test_1951(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w:X{Var _0,_3,b,$1:Array [Boolean ,5_4_9];}Class _{Var _,$__:_;}Class _G:_0_C4{Var q_:Array [Float ,5];}''',
                '''Class,_w,:,X,{,Var,_0,,,_3,,,b,,,$1,:,Array,[,Boolean,,,549,],;,},Class,_,{,Var,_,,,$__,:,_,;,},Class,_G,:,_0_C4,{,Var,q_,:,Array,[,Float,,,5,],;,},<EOF>''',
                101
            )
        )

    def test_1952(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z{}Class _:_{Val $_,$_fF2_,$_92,_1x:Array [Array [Array [Array [Array [Int ,0x54],0B1],0b10],0X55],0X47];Var $1:_;Var $_,$_,$_A_,_:Array [Array [Array [Int ,40],0B1010000],4];}Class _uY{}''',
                '''Class,Z,{,},Class,_,:,_,{,Val,$_,,,$_fF2_,,,$_92,,,_1x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x54,],,,0B1,],,,0b10,],,,0X55,],,,0X47,],;,Var,$1,:,_,;,Var,$_,,,$_,,,$_A_,,,_,:,Array,[,Array,[,Array,[,Int,,,40,],,,0B1010000,],,,4,],;,},Class,_uY,{,},<EOF>''',
                101
            )
        )

    def test_1953(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class m1bcT{GA(S:Array [Boolean ,074];T:Array [Array [Array [Float ,074],0XA],0b1000010];G7:Array [Array [Int ,16],04]){} }Class lG{Destructor (){ {} }}Class V:x{}''',
                '''Class,_,{,Constructor,(,),{,},},Class,m1bcT,{,GA,(,S,:,Array,[,Boolean,,,074,],;,T,:,Array,[,Array,[,Array,[,Float,,,074,],,,0XA,],,,0b1000010,],;,G7,:,Array,[,Array,[,Int,,,16,],,,04,],),{,},},Class,lG,{,Destructor,(,),{,{,},},},Class,V,:,x,{,},<EOF>''',
                101
            )
        )

    def test_1954(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class Jz_:U{Var __:Array [Array [Array [String ,0x2],0x2],0b11101];$31(){}Val _:Array [Array [Boolean ,037],0B1011110];}''',
                '''Class,_,:,_,{,},Class,Jz_,:,U,{,Var,__,:,Array,[,Array,[,Array,[,String,,,0x2,],,,0x2,],,,0b11101,],;,$31,(,),{,},Val,_,:,Array,[,Array,[,Boolean,,,037,],,,0B1011110,],;,},<EOF>''',
                101
            )
        )

    def test_1955(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s__S:b61g{Var _1:Array [Array [Array [Array [Array [Boolean ,22],05_3_5_4],0XD1],0b1011010],07_305_6_2];Var $N,z_,$83D,$U:Boolean ;Var _:S;}Class _:k{Val S,__,_3,$9:BY8k;}''',
                '''Class,_s__S,:,b61g,{,Var,_1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,22,],,,05354,],,,0XD1,],,,0b1011010,],,,0730562,],;,Var,$N,,,z_,,,$83D,,,$U,:,Boolean,;,Var,_,:,S,;,},Class,_,:,k,{,Val,S,,,__,,,_3,,,$9,:,BY8k,;,},<EOF>''',
                101
            )
        )

    def test_1956(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4_{Var $P__:Int ;Constructor (J,_:String ){Val _N8_:_;}$Y_(_,F,_:Array [Int ,01];_,_,_:Boolean ;_8_F:Boolean ;_12,A:Array [Array [String ,0x62],0x3F]){ {Return ;}Break ;} }Class q:L{}Class __:_70{Destructor (){}$1X(){Continue ;Q8::$q();} }Class B:_{}''',
                '''Class,_4_,{,Var,$P__,:,Int,;,Constructor,(,J,,,_,:,String,),{,Val,_N8_,:,_,;,},$Y_,(,_,,,F,,,_,:,Array,[,Int,,,01,],;,_,,,_,,,_,:,Boolean,;,_8_F,:,Boolean,;,_12,,,A,:,Array,[,Array,[,String,,,0x62,],,,0x3F,],),{,{,Return,;,},Break,;,},},Class,q,:,L,{,},Class,__,:,_70,{,Destructor,(,),{,},$1X,(,),{,Continue,;,Q8,::,$q,(,),;,},},Class,B,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1957(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A{}Class ___:B1_{Constructor (G:Array [Array [Array [Float ,04],0141],0X24];_I6:Array [Array [Int ,0B1_1_1],0b1]){Return ;}Var $h:Q;}''',
                '''Class,A,{,},Class,___,:,B1_,{,Constructor,(,G,:,Array,[,Array,[,Array,[,Float,,,04,],,,0141,],,,0X24,],;,_I6,:,Array,[,Array,[,Int,,,0B111,],,,0b1,],),{,Return,;,},Var,$h,:,Q,;,},<EOF>''',
                101
            )
        )

    def test_1958(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:M{__(__,__:K_;__,_,T6,_:Array [Float ,5];_:Float ;_9,_:Int ){}Val _:Array [String ,0144];}Class __{}Class _y:Q_j_2{}''',
                '''Class,_,:,M,{,__,(,__,,,__,:,K_,;,__,,,_,,,T6,,,_,:,Array,[,Float,,,5,],;,_,:,Float,;,_9,,,_,:,Int,),{,},Val,_,:,Array,[,String,,,0144,],;,},Class,__,{,},Class,_y,:,Q_j_2,{,},<EOF>''',
                101
            )
        )

    def test_1959(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g4_:O{Var i_,$__:Array [Int ,0X32];}Class h7_s_8M2:_9_{Constructor (__,_,lX,_K3,f:Array [Float ,0B1011100];g,_,Ee,e:Array [Array [Array [Array [Array [Int ,01_0],2],0111],0B10],6]){} }Class __{Var ___2t:Array [Float ,0B1_1];}''',
                '''Class,g4_,:,O,{,Var,i_,,,$__,:,Array,[,Int,,,0X32,],;,},Class,h7_s_8M2,:,_9_,{,Constructor,(,__,,,_,,,lX,,,_K3,,,f,:,Array,[,Float,,,0B1011100,],;,g,,,_,,,Ee,,,e,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,010,],,,2,],,,0111,],,,0B10,],,,6,],),{,},},Class,__,{,Var,___2t,:,Array,[,Float,,,0B11,],;,},<EOF>''',
                101
            )
        )

    def test_1960(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z:D3{Constructor (_:_;_s_c:String ;c_2:o){} }Class _O{Val $_,g_:Array [Array [Array [Boolean ,8],1],0x6];}''',
                '''Class,Z,:,D3,{,Constructor,(,_,:,_,;,_s_c,:,String,;,c_2,:,o,),{,},},Class,_O,{,Val,$_,,,g_,:,Array,[,Array,[,Array,[,Boolean,,,8,],,,1,],,,0x6,],;,},<EOF>''',
                101
            )
        )

    def test_1961(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{}Class __:_{}Class r:_{Val _:Array [Array [String ,0x46],0b1010011];Var C69:Float ;}Class R{Constructor (A,x,N_,q,t6:String ;N,Hi:Array [Array [String ,0B101],07]){} }''',
                '''Class,d,{,},Class,__,:,_,{,},Class,r,:,_,{,Val,_,:,Array,[,Array,[,String,,,0x46,],,,0b1010011,],;,Var,C69,:,Float,;,},Class,R,{,Constructor,(,A,,,x,,,N_,,,q,,,t6,:,String,;,N,,,Hi,:,Array,[,Array,[,String,,,0B101,],,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_1962(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:D_{$5_z4(_:F02e;R8,t:l9f;_,Z7___J_,_,_05,S,r,_7H,GV:Int ;C:Array [Array [Array [Array [String ,0b1],017],63_715],78];_:e){} }Class M{}''',
                '''Class,_,:,D_,{,$5_z4,(,_,:,F02e,;,R8,,,t,:,l9f,;,_,,,Z7___J_,,,_,,,_05,,,S,,,r,,,_7H,,,GV,:,Int,;,C,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,017,],,,63715,],,,78,],;,_,:,e,),{,},},Class,M,{,},<EOF>''',
                101
            )
        )

    def test_1963(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{}Class _8i_:y{}Class Odm2A:_{Var __0:Array [Array [Array [Array [Array [Array [Array [String ,047],4],0X1],0x5D],0x5D],01],60];}''',
                '''Class,R,{,},Class,_8i_,:,y,{,},Class,Odm2A,:,_,{,Var,__0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,047,],,,4,],,,0X1,],,,0x5D,],,,0x5D,],,,01,],,,60,],;,},<EOF>''',
                101
            )
        )

    def test_1964(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W_2{Val $__:_I;Var $t__,$c:Array [Array [Array [Array [Array [Array [String ,05506_14],0116],0B1011110],34],749],9];}''',
                '''Class,W_2,{,Val,$__,:,_I,;,Var,$t__,,,$c,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0550614,],,,0116,],,,0B1011110,],,,34,],,,749,],,,9,],;,},<EOF>''',
                101
            )
        )

    def test_1965(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{}Class _{Constructor (_:Array [Int ,10];L8,tM,H,__:_;_,__,_:Array [Array [Boolean ,9_0],0XC];ta,SsP:Array [Array [Boolean ,02],061];_,_:Array [Boolean ,10];w:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,03],0x38],0X5F],0X5F],061],0B11001],077_1],0B10_1],10],01_6],8_6];h4:Array [Array [Array [Array [String ,10],041_3],10],0B11001];x1_:RA;l,h8NQ,_,Y5:Boolean ){} }Class __:__{}Class w{Var $i:Array [String ,0X5F];}Class _{}''',
                '''Class,B,{,},Class,_,{,Constructor,(,_,:,Array,[,Int,,,10,],;,L8,,,tM,,,H,,,__,:,_,;,_,,,__,,,_,:,Array,[,Array,[,Boolean,,,90,],,,0XC,],;,ta,,,SsP,:,Array,[,Array,[,Boolean,,,02,],,,061,],;,_,,,_,:,Array,[,Boolean,,,10,],;,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,03,],,,0x38,],,,0X5F,],,,0X5F,],,,061,],,,0B11001,],,,0771,],,,0B101,],,,10,],,,016,],,,86,],;,h4,:,Array,[,Array,[,Array,[,Array,[,String,,,10,],,,0413,],,,10,],,,0B11001,],;,x1_,:,RA,;,l,,,h8NQ,,,_,,,Y5,:,Boolean,),{,},},Class,__,:,__,{,},Class,w,{,Var,$i,:,Array,[,String,,,0X5F,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1966(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _l{}Class T_{Var _,_:Array [Array [Int ,0x7EDA_6],80];Val z:Boolean ;}Class _:_{Constructor (){Var F:Int ;} }''',
                '''Class,_l,{,},Class,T_,{,Var,_,,,_,:,Array,[,Array,[,Int,,,0x7EDA6,],,,80,],;,Val,z,:,Boolean,;,},Class,_,:,_,{,Constructor,(,),{,Var,F,:,Int,;,},},<EOF>''',
                101
            )
        )

    def test_1967(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_7_{Destructor (){}Var $__,$ShL__,$i0:Array [Array [Int ,0B1001],8_0_6];Val $_,$_0_6R8:Array [Float ,0B1];Constructor (){}Val _2:Array [Boolean ,0X5];$___(){}Var $t__,$7:String ;}Class w_W_:__{}''',
                '''Class,z,:,_7_,{,Destructor,(,),{,},Var,$__,,,$ShL__,,,$i0,:,Array,[,Array,[,Int,,,0B1001,],,,806,],;,Val,$_,,,$_0_6R8,:,Array,[,Float,,,0B1,],;,Constructor,(,),{,},Val,_2,:,Array,[,Boolean,,,0X5,],;,$___,(,),{,},Var,$t__,,,$7,:,String,;,},Class,w_W_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_1968(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _:E{}Class _{}Class _{}Class t{}Class G:__{Constructor (){}Var $80_,$s0,__,$5,$r:Array [Array [Float ,012],06_2];Val $_:_k_t;}''',
                '''Class,__,{,},Class,_,:,E,{,},Class,_,{,},Class,_,{,},Class,t,{,},Class,G,:,__,{,Constructor,(,),{,},Var,$80_,,,$s0,,,__,,,$5,,,$r,:,Array,[,Array,[,Float,,,012,],,,062,],;,Val,$_,:,_k_t,;,},<EOF>''',
                101
            )
        )

    def test_1969(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{}Class Pd8:__RV{Val $0,$13,__e1,$96y7__4,__:Boolean ;L(){}Var $1:Array [Array [Array [Float ,0X18],3],07];N(){}x(){} }''',
                '''Class,m,{,},Class,Pd8,:,__RV,{,Val,$0,,,$13,,,__e1,,,$96y7__4,,,__,:,Boolean,;,L,(,),{,},Var,$1,:,Array,[,Array,[,Array,[,Float,,,0X18,],,,3,],,,07,],;,N,(,),{,},x,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1970(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3Y2{Var $5,N__5_0_:Array [Array [String ,0X36],0b100010];n(f,N:_){} }Class __:Z8__{Constructor (){Break ;Continue ;} }Class _{}Class h:__9{}''',
                '''Class,_3Y2,{,Var,$5,,,N__5_0_,:,Array,[,Array,[,String,,,0X36,],,,0b100010,],;,n,(,f,,,N,:,_,),{,},},Class,__,:,Z8__,{,Constructor,(,),{,Break,;,Continue,;,},},Class,_,{,},Class,h,:,__9,{,},<EOF>''',
                101
            )
        )

    def test_1971(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (__,_:Float ;_:Array [Array [Boolean ,100],100];yY8_:_;CU8:__;_:Array [Array [Int ,0xE86E],05];_e,M:Int ){} }''',
                '''Class,_,:,_,{,Constructor,(,__,,,_,:,Float,;,_,:,Array,[,Array,[,Boolean,,,100,],,,100,],;,yY8_,:,_,;,CU8,:,__,;,_,:,Array,[,Array,[,Int,,,0xE86E,],,,05,],;,_e,,,M,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_1972(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kD:t{_(){}O(ct2F_Y,_:_;J6,X42:Array [Array [Array [Array [Array [Array [String ,0XE],054],0x43],054],0B100101],65]){}Destructor (){Val _,_g6_,p_,_,D,h:Array [Array [Array [Array [Array [String ,0B100101],4],0B100101],0B1],0B1];}Destructor (){} }''',
                '''Class,kD,:,t,{,_,(,),{,},O,(,ct2F_Y,,,_,:,_,;,J6,,,X42,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XE,],,,054,],,,0x43,],,,054,],,,0B100101,],,,65,],),{,},Destructor,(,),{,Val,_,,,_g6_,,,p_,,,_,,,D,,,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B100101,],,,4,],,,0B100101,],,,0B1,],,,0B1,],;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1973(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j{}Class h:LH{Constructor (__:Array [Array [Boolean ,59],0B110111];_q_u,_,Ivs5,__I,___:Array [Array [Int ,06_12],0115]){Break ;} }''',
                '''Class,j,{,},Class,h,:,LH,{,Constructor,(,__,:,Array,[,Array,[,Boolean,,,59,],,,0B110111,],;,_q_u,,,_,,,Ivs5,,,__I,,,___,:,Array,[,Array,[,Int,,,0612,],,,0115,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_1974(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3f:_{Constructor (Bn,D6,h,Q7:Array [Array [Boolean ,58],0B1010110];o,K5_72:_h2;_5_99uiF:Array [String ,052];_I_wA7:Int ;_0:Array [Array [Array [Array [Float ,0xC],050],0X26],58];T,_,k:Array [Array [Boolean ,0X26],0X26];MI:_6a){} }''',
                '''Class,_3f,:,_,{,Constructor,(,Bn,,,D6,,,h,,,Q7,:,Array,[,Array,[,Boolean,,,58,],,,0B1010110,],;,o,,,K5_72,:,_h2,;,_5_99uiF,:,Array,[,String,,,052,],;,_I_wA7,:,Int,;,_0,:,Array,[,Array,[,Array,[,Array,[,Float,,,0xC,],,,050,],,,0X26,],,,58,],;,T,,,_,,,k,:,Array,[,Array,[,Boolean,,,0X26,],,,0X26,],;,MI,:,_6a,),{,},},<EOF>''',
                101
            )
        )

    def test_1975(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ____D348:_q7{Var y,$__,d:Array [Array [Boolean ,0x60],0b1011000];Var $_F,q_,$_,$09,c:Float ;}Class _:_{}Class __{}Class T{}''',
                '''Class,____D348,:,_q7,{,Var,y,,,$__,,,d,:,Array,[,Array,[,Boolean,,,0x60,],,,0b1011000,],;,Var,$_F,,,q_,,,$_,,,$09,,,c,:,Float,;,},Class,_,:,_,{,},Class,__,{,},Class,T,{,},<EOF>''',
                101
            )
        )

    def test_1976(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __I:f3_{Constructor (O0wD_4_:Array [Array [Array [Array [Float ,0x2A],75],07_1],0XF];r4v:N1){Continue ;} }''',
                '''Class,__I,:,f3_,{,Constructor,(,O0wD_4_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x2A,],,,75,],,,071,],,,0XF,],;,r4v,:,N1,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1977(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j41xk3_{Var $HE_3:_;Val _6,$z9,_:Array [Boolean ,32];Val I,$4:Array [Array [Array [Boolean ,4],0x33B],076_7_0];a1(_,o:a;_,_4,_c_4,__,_9J5_,_:U;__:_;x_:Array [Boolean ,0x8];nu:Boolean ){} }''',
                '''Class,j41xk3_,{,Var,$HE_3,:,_,;,Val,_6,,,$z9,,,_,:,Array,[,Boolean,,,32,],;,Val,I,,,$4,:,Array,[,Array,[,Array,[,Boolean,,,4,],,,0x33B,],,,07670,],;,a1,(,_,,,o,:,a,;,_,,,_4,,,_c_4,,,__,,,_9J5_,,,_,:,U,;,__,:,_,;,x_,:,Array,[,Boolean,,,0x8,],;,nu,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_1978(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:Z{t(v:Array [Array [String ,0X62],90];s_,u:y;_a,s,_:Array [Array [Array [Array [Array [Array [Float ,90],0B1111],6],01],0XF],0x8];_u,__,d,_:M2;G:s8){} }''',
                '''Class,c,:,Z,{,t,(,v,:,Array,[,Array,[,String,,,0X62,],,,90,],;,s_,,,u,:,y,;,_a,,,s,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,90,],,,0B1111,],,,6,],,,01,],,,0XF,],,,0x8,],;,_u,,,__,,,d,,,_,:,M2,;,G,:,s8,),{,},},<EOF>''',
                101
            )
        )

    def test_1979(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7:V{}Class __{Val $__ut:Array [String ,0XF];$M6_(){}Constructor (_,b0,O,_,r,kw,s:Array [Float ,0b1]){} }''',
                '''Class,_7,:,V,{,},Class,__,{,Val,$__ut,:,Array,[,String,,,0XF,],;,$M6_,(,),{,},Constructor,(,_,,,b0,,,O,,,_,,,r,,,kw,,,s,:,Array,[,Float,,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_1980(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l4NI{Constructor (U_:Array [Array [Array [Array [Array [Array [Array [String ,061],85],8],0B10010],5],0X4E6],03];_,_l:String ){ {} }}''',
                '''Class,l4NI,{,Constructor,(,U_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,061,],,,85,],,,8,],,,0B10010,],,,5,],,,0X4E6,],,,03,],;,_,,,_l,:,String,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_1981(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val sD,$o,$_,$6:Array [Array [Array [Array [Array [Boolean ,05021],6],01_05364],04],0123];Constructor (E_1:String ;X_:o){} }Class y:_{}''',
                '''Class,_,{,Val,sD,,,$o,,,$_,,,$6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,05021,],,,6,],,,0105364,],,,04,],,,0123,],;,Constructor,(,E_1,:,String,;,X_,:,o,),{,},},Class,y,:,_,{,},<EOF>''',
                101
            )
        )

    def test_1982(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I{Destructor (){Val j,c6,T:Array [Array [String ,0X5F],03];{} }K(___3,M,y,_g,p,z:Array [Array [Array [Array [Array [String ,36],0B1010101],0424],36],0x3];B:_cf){ {{} }} }Class G:R_0_5PJ{}''',
                '''Class,I,{,Destructor,(,),{,Val,j,,,c6,,,T,:,Array,[,Array,[,String,,,0X5F,],,,03,],;,{,},},K,(,___3,,,M,,,y,,,_g,,,p,,,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,36,],,,0B1010101,],,,0424,],,,36,],,,0x3,],;,B,:,_cf,),{,{,{,},},},},Class,G,:,R_0_5PJ,{,},<EOF>''',
                101
            )
        )

    def test_1983(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_n_{__1(k3,T:Array [Array [String ,1_59],0101];_r_,c_,_7,a,e,R_,S8__:String ){}Destructor (){}Constructor (_x:Array [Array [Int ,05],0x6]){} }Class _h:_{}Class b61_6_h{}''',
                '''Class,__,:,_n_,{,__1,(,k3,,,T,:,Array,[,Array,[,String,,,159,],,,0101,],;,_r_,,,c_,,,_7,,,a,,,e,,,R_,,,S8__,:,String,),{,},Destructor,(,),{,},Constructor,(,_x,:,Array,[,Array,[,Int,,,05,],,,0x6,],),{,},},Class,_h,:,_,{,},Class,b61_6_h,{,},<EOF>''',
                101
            )
        )

    def test_1984(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S_{Constructor (_,_,Qq5,_,_9_,_:Array [Array [String ,8_27],5];_7,Ft:Array [Int ,61]){}Var $_:Array [Array [Boolean ,062],04];$4_l(){} }''',
                '''Class,S_,{,Constructor,(,_,,,_,,,Qq5,,,_,,,_9_,,,_,:,Array,[,Array,[,String,,,827,],,,5,],;,_7,,,Ft,:,Array,[,Int,,,61,],),{,},Var,$_,:,Array,[,Array,[,Boolean,,,062,],,,04,],;,$4_l,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1985(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{$P(){}$9_L_(q71:Array [Float ,0b101001];_,__7R,jq_:String ){} }Class e{X(T_:String ;m,__F_J:_;H1uu:String ){}$b9(){} }Class aE:_n{Var _3P:Int ;}''',
                '''Class,F,{,$P,(,),{,},$9_L_,(,q71,:,Array,[,Float,,,0b101001,],;,_,,,__7R,,,jq_,:,String,),{,},},Class,e,{,X,(,T_,:,String,;,m,,,__F_J,:,_,;,H1uu,:,String,),{,},$b9,(,),{,},},Class,aE,:,_n,{,Var,_3P,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_1986(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_{Constructor (R,hJG9:Array [String ,0b1_0];w_,_,D,x,L_:Boolean ;d:String ;_J,Lj:Float ){} }Class u{Var $i:_;}Class __:w_{}''',
                '''Class,_0_,{,Constructor,(,R,,,hJG9,:,Array,[,String,,,0b10,],;,w_,,,_,,,D,,,x,,,L_,:,Boolean,;,d,:,String,;,_J,,,Lj,:,Float,),{,},},Class,u,{,Var,$i,:,_,;,},Class,__,:,w_,{,},<EOF>''',
                101
            )
        )

    def test_1987(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B_{Destructor (){}Constructor (__1__w25o_801,____,C:Float ;_,_I7,_00n5,_yo59,_0,Y,I:Int ;_:Array [Array [Int ,3],3]){} }''',
                '''Class,B_,{,Destructor,(,),{,},Constructor,(,__1__w25o_801,,,____,,,C,:,Float,;,_,,,_I7,,,_00n5,,,_yo59,,,_0,,,Y,,,I,:,Int,;,_,:,Array,[,Array,[,Int,,,3,],,,3,],),{,},},<EOF>''',
                101
            )
        )

    def test_1988(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class Gx{Z(){}Constructor (l5,H,j0_,E2mj:W80H;_:Int ;y4:Array [Boolean ,0X4D]){Continue ;} }Class _:P4{}''',
                '''Class,_,{,},Class,Gx,{,Z,(,),{,},Constructor,(,l5,,,H,,,j0_,,,E2mj,:,W80H,;,_,:,Int,;,y4,:,Array,[,Boolean,,,0X4D,],),{,Continue,;,},},Class,_,:,P4,{,},<EOF>''',
                101
            )
        )

    def test_1989(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gKJ__:kQeJ{}Class b_S4_:d{}Class M{Constructor (Ya,_,_:Array [Array [Array [Boolean ,0X2E],0124],0124]){}$3(_:String ){Continue ;} }''',
                '''Class,gKJ__,:,kQeJ,{,},Class,b_S4_,:,d,{,},Class,M,{,Constructor,(,Ya,,,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0X2E,],,,0124,],,,0124,],),{,},$3,(,_,:,String,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_1990(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a3a:_A{Var _,_0_:Array [Int ,0X9];Val _0_8,Y:Array [Array [Array [Boolean ,0b101],34],0126];Var _:_8;Var $7,fm__1,D:String ;}''',
                '''Class,a3a,:,_A,{,Var,_,,,_0_,:,Array,[,Int,,,0X9,],;,Val,_0_8,,,Y,:,Array,[,Array,[,Array,[,Boolean,,,0b101,],,,34,],,,0126,],;,Var,_,:,_8,;,Var,$7,,,fm__1,,,D,:,String,;,},<EOF>''',
                101
            )
        )

    def test_1991(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{T(N,_:Array [Array [Boolean ,02],03_7];E__P_u_,m,_,_:_;__7:A_;J6Q:Array [Array [Array [String ,0x68_0_0],0XC],35];t,p:Float ;_,_,iH:Boolean ;l,jz,N:Float ){}$x(n:Float ;_,i0,J:Array [String ,21]){} }Class _q{}Class sA:_{}Class _{Destructor (){} }''',
                '''Class,_,:,_,{,T,(,N,,,_,:,Array,[,Array,[,Boolean,,,02,],,,037,],;,E__P_u_,,,m,,,_,,,_,:,_,;,__7,:,A_,;,J6Q,:,Array,[,Array,[,Array,[,String,,,0x6800,],,,0XC,],,,35,],;,t,,,p,:,Float,;,_,,,_,,,iH,:,Boolean,;,l,,,jz,,,N,:,Float,),{,},$x,(,n,:,Float,;,_,,,i0,,,J,:,Array,[,String,,,21,],),{,},},Class,_q,{,},Class,sA,:,_,{,},Class,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1992(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:H1{I9(_K_,_,h:Array [Array [Int ,0x6],7_9_298];K7_,__7:Boolean ;Q,a_:String ;x:Array [Boolean ,0b1]){Break ;}$_(_,h:Boolean ){}Val $D:Array [Array [Boolean ,6_18],0x2];}Class _:_{Var R_,_:Array [Boolean ,0b10_1];_5_(Ec:Boolean ){ {Break ;}Continue ;} }Class V:H4_{}''',
                '''Class,_,:,H1,{,I9,(,_K_,,,_,,,h,:,Array,[,Array,[,Int,,,0x6,],,,79298,],;,K7_,,,__7,:,Boolean,;,Q,,,a_,:,String,;,x,:,Array,[,Boolean,,,0b1,],),{,Break,;,},$_,(,_,,,h,:,Boolean,),{,},Val,$D,:,Array,[,Array,[,Boolean,,,618,],,,0x2,],;,},Class,_,:,_,{,Var,R_,,,_,:,Array,[,Boolean,,,0b101,],;,_5_,(,Ec,:,Boolean,),{,{,Break,;,},Continue,;,},},Class,V,:,H4_,{,},<EOF>''',
                101
            )
        )

    def test_1993(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __r:N__{}Class w{}Class _{t3(_:Array [Int ,0X38];VzO:Array [Float ,0x99_89_6_B6]){} }Class __{Constructor (){} }''',
                '''Class,__r,:,N__,{,},Class,w,{,},Class,_,{,t3,(,_,:,Array,[,Int,,,0X38,],;,VzO,:,Array,[,Float,,,0x99896B6,],),{,},},Class,__,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1994(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P__:E{Val $_9:Array [Array [Int ,0xC],7];}Class _:I_p{Constructor (___:String ;_,Z:Int ){}Val $_:Array [Float ,91];}Class _{}''',
                '''Class,P__,:,E,{,Val,$_9,:,Array,[,Array,[,Int,,,0xC,],,,7,],;,},Class,_,:,I_p,{,Constructor,(,___,:,String,;,_,,,Z,:,Int,),{,},Val,$_,:,Array,[,Float,,,91,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_1995(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var _:_;}Class _:H{$__(){}Var _,$X5,$5,$9:Array [Array [Array [Array [Array [Array [Boolean ,31],3],31],051],8],0x2_3E_3B];}''',
                '''Class,__,{,Var,_,:,_,;,},Class,_,:,H,{,$__,(,),{,},Var,_,,,$X5,,,$5,,,$9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,31,],,,3,],,,31,],,,051,],,,8,],,,0x23E3B,],;,},<EOF>''',
                101
            )
        )

    def test_1996(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_8{}Class _RV:__{}Class _:__{}Class ef__{$z(S,_:Array [Boolean ,0b1]){}__(m,r,U:Float ){}Var _2,$Q:Array [Array [Array [Array [Boolean ,04],0b1],06],0X36];}''',
                '''Class,_,:,_8,{,},Class,_RV,:,__,{,},Class,_,:,__,{,},Class,ef__,{,$z,(,S,,,_,:,Array,[,Boolean,,,0b1,],),{,},__,(,m,,,r,,,U,:,Float,),{,},Var,_2,,,$Q,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,04,],,,0b1,],,,06,],,,0X36,],;,},<EOF>''',
                101
            )
        )

    def test_1997(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ZeTCQ:GFf{}Class ___{Val _,__6:Array [Boolean ,0x46];Var G_,$___,$PTe___O8_,_:Array [Boolean ,0X25];Var D,f_:Array [Float ,0b1010011];}Class __{Constructor (){} }''',
                '''Class,ZeTCQ,:,GFf,{,},Class,___,{,Val,_,,,__6,:,Array,[,Boolean,,,0x46,],;,Var,G_,,,$___,,,$PTe___O8_,,,_,:,Array,[,Boolean,,,0X25,],;,Var,D,,,f_,:,Array,[,Float,,,0b1010011,],;,},Class,__,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1998(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_9k{Destructor (){Break ;Val _H5,_6o_,p,___:__c__9zF1S;Continue ;} }Class __:p{Destructor (){}Destructor (){} }''',
                '''Class,_,:,_9k,{,Destructor,(,),{,Break,;,Val,_H5,,,_6o_,,,p,,,___,:,__c__9zF1S,;,Continue,;,},},Class,__,:,p,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_1999(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i4q2m:T{Constructor (M_A_3R4,_,_:h;_:Array [Int ,80];_:String ){Var O8,t:Boolean ;Break ;{}Break ;} }Class ___:_2p{}Class z:F1_{}''',
                '''Class,i4q2m,:,T,{,Constructor,(,M_A_3R4,,,_,,,_,:,h,;,_,:,Array,[,Int,,,80,],;,_,:,String,),{,Var,O8,,,t,:,Boolean,;,Break,;,{,},Break,;,},},Class,___,:,_2p,{,},Class,z,:,F1_,{,},<EOF>''',
                101
            )
        )

    def test_2000(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a_:_{Val _N5_,o_U,_d2,$_:Int ;Constructor (_,_hI,_2_:Array [Array [Array [Float ,59],7],035_5]){Break ;} }''',
                '''Class,a_,:,_,{,Val,_N5_,,,o_U,,,_d2,,,$_,:,Int,;,Constructor,(,_,,,_hI,,,_2_,:,Array,[,Array,[,Array,[,Float,,,59,],,,7,],,,0355,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2001(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Val E__:Array [String ,0b1];Constructor (K4N:_;_k,_,_83:Array [Int ,0107];V:Int ){}$p(){Return ;}Val Q,$5__,z_4:Boolean ;}Class A12{Val $_:Float ;_(){} }Class WJ5{s5(__,y5_,a,_0,S:Int ){Break ;} }''',
                '''Class,_,{,Destructor,(,),{,},Val,E__,:,Array,[,String,,,0b1,],;,Constructor,(,K4N,:,_,;,_k,,,_,,,_83,:,Array,[,Int,,,0107,],;,V,:,Int,),{,},$p,(,),{,Return,;,},Val,Q,,,$5__,,,z_4,:,Boolean,;,},Class,A12,{,Val,$_,:,Float,;,_,(,),{,},},Class,WJ5,{,s5,(,__,,,y5_,,,a,,,_0,,,S,:,Int,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2002(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _d:_{Var $_,__,$__,_6:Array [Array [String ,053],02_7];Destructor (){}P(){}Var Y,h,$_,Yw74:Int ;}Class O_N{}''',
                '''Class,_d,:,_,{,Var,$_,,,__,,,$__,,,_6,:,Array,[,Array,[,String,,,053,],,,027,],;,Destructor,(,),{,},P,(,),{,},Var,Y,,,h,,,$_,,,Yw74,:,Int,;,},Class,O_N,{,},<EOF>''',
                101
            )
        )

    def test_2003(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){} }Class _{Constructor (H,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0b1],043_22],0x2],56],56],013],0x2],52_06],0x2];_:k;WvZ99:C___L_){} }''',
                '''Class,__,{,Destructor,(,),{,},},Class,_,{,Constructor,(,H,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,04322,],,,0x2,],,,56,],,,56,],,,013,],,,0x2,],,,5206,],,,0x2,],;,_,:,k,;,WvZ99,:,C___L_,),{,},},<EOF>''',
                101
            )
        )

    def test_2004(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class Z:T_P{k(){Var ulP,OR48w4,v:Array [Array [Array [Array [Array [Array [String ,0B1111],0xE],0x6],0x62],0b100001],2];} }Class _:G{}''',
                '''Class,_,{,},Class,Z,:,T_P,{,k,(,),{,Var,ulP,,,OR48w4,,,v,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1111,],,,0xE,],,,0x6,],,,0x62,],,,0b100001,],,,2,],;,},},Class,_,:,G,{,},<EOF>''',
                101
            )
        )

    def test_2005(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__q{Constructor (p,u,__s,d,W371_,V6,_:_){ {} }}Class M6__:__jO_{}Class g{}Class v:N_{}Class _n5:_Z{Destructor (){} }Class _:L{}Class _{}''',
                '''Class,_,:,__q,{,Constructor,(,p,,,u,,,__s,,,d,,,W371_,,,V6,,,_,:,_,),{,{,},},},Class,M6__,:,__jO_,{,},Class,g,{,},Class,v,:,N_,{,},Class,_n5,:,_Z,{,Destructor,(,),{,},},Class,_,:,L,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2006(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _G:A{Constructor (){} }Class v{}Class __:Y3CM6_{}Class _5_:C{_Zk(_,_:String ){Var K0,_54Qm,Wd4_,_,S_:R;} }Class U:S{}''',
                '''Class,_G,:,A,{,Constructor,(,),{,},},Class,v,{,},Class,__,:,Y3CM6_,{,},Class,_5_,:,C,{,_Zk,(,_,,,_,:,String,),{,Var,K0,,,_54Qm,,,Wd4_,,,_,,,S_,:,R,;,},},Class,U,:,S,{,},<EOF>''',
                101
            )
        )

    def test_2007(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G3H{}Class _:_b0{}Class b6{$5sI(){} }Class _:f_{}Class s{$5(_,_3,_T,_,_:Array [Array [String ,0XD],0B1];_3,O,_8,e,r:Float ){ {}Return ;} }Class _{}''',
                '''Class,G3H,{,},Class,_,:,_b0,{,},Class,b6,{,$5sI,(,),{,},},Class,_,:,f_,{,},Class,s,{,$5,(,_,,,_3,,,_T,,,_,,,_,:,Array,[,Array,[,String,,,0XD,],,,0B1,],;,_3,,,O,,,_8,,,e,,,r,:,Float,),{,{,},Return,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2008(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$40(_d9,c_8_1:Array [String ,0x878];F,u,f,Gs_ltu8:Array [Array [Boolean ,0B11],18];K_f:Array [Array [Array [Array [Array [Array [String ,0X8],0X9],75],0b1_0],0X41],06]){n::$Y.Q().v().__();}Constructor (_i:Array [Array [Array [Boolean ,0x54],0b1_0_1],06]){} }''',
                '''Class,_,{,$40,(,_d9,,,c_8_1,:,Array,[,String,,,0x878,],;,F,,,u,,,f,,,Gs_ltu8,:,Array,[,Array,[,Boolean,,,0B11,],,,18,],;,K_f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X8,],,,0X9,],,,75,],,,0b10,],,,0X41,],,,06,],),{,n,::,$Y,.,Q,(,),.,v,(,),.,__,(,),;,},Constructor,(,_i,:,Array,[,Array,[,Array,[,Boolean,,,0x54,],,,0b101,],,,06,],),{,},},<EOF>''',
                101
            )
        )

    def test_2009(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{$1_10x(_p,_N_i,m,_,g0_:Float ;w,C,R,_q,__4k:Int ){}Constructor (D:Array [Array [Int ,0x3B],0B11_1]){} }Class ____:_{}Class Q{}Class X{Var _,_,niI:String ;}Class __1_{Var $1,$Y,a,$v3,n9_:Array [Array [Array [String ,044],93792],0b11010];}''',
                '''Class,R,{,$1_10x,(,_p,,,_N_i,,,m,,,_,,,g0_,:,Float,;,w,,,C,,,R,,,_q,,,__4k,:,Int,),{,},Constructor,(,D,:,Array,[,Array,[,Int,,,0x3B,],,,0B111,],),{,},},Class,____,:,_,{,},Class,Q,{,},Class,X,{,Var,_,,,_,,,niI,:,String,;,},Class,__1_,{,Var,$1,,,$Y,,,a,,,$v3,,,n9_,:,Array,[,Array,[,Array,[,String,,,044,],,,93792,],,,0b11010,],;,},<EOF>''',
                101
            )
        )

    def test_2010(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X_:s{Val _5:Int ;Var _00_:Array [Array [Float ,0B1_00_0],38];$6(_,I:w;Y_,X:Array [Array [Float ,031],0B11110];M_,_4:_){} }''',
                '''Class,X_,:,s,{,Val,_5,:,Int,;,Var,_00_,:,Array,[,Array,[,Float,,,0B1000,],,,38,],;,$6,(,_,,,I,:,w,;,Y_,,,X,:,Array,[,Array,[,Float,,,031,],,,0B11110,],;,M_,,,_4,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2011(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __t_9y{}Class E:B{Val m:Array [Boolean ,84];Constructor (){}Val jR9_X:Array [Array [Array [Array [Array [String ,0B1],34],0xE2C],0132],0132];}Class __:__UB{}''',
                '''Class,__t_9y,{,},Class,E,:,B,{,Val,m,:,Array,[,Boolean,,,84,],;,Constructor,(,),{,},Val,jR9_X,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,34,],,,0xE2C,],,,0132,],,,0132,],;,},Class,__,:,__UB,{,},<EOF>''',
                101
            )
        )

    def test_2012(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{Var $C_,$4,__8:_e1;Val _:Array [Array [Float ,0X2E],0b1000011];Constructor (__:Array [Int ,88];_38,__P2,_3,_C:k__;_,R:_){} }''',
                '''Class,t,{,Var,$C_,,,$4,,,__8,:,_e1,;,Val,_,:,Array,[,Array,[,Float,,,0X2E,],,,0b1000011,],;,Constructor,(,__,:,Array,[,Int,,,88,],;,_38,,,__P2,,,_3,,,_C,:,k__,;,_,,,R,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2013(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:M{Val $2,$e,_:__d;}Class D{Constructor (){ {} }t(){Break ;T::$530();}Val $0,W3:Array [Array [Array [Array [Array [Int ,0x19],017],0XD_48],0x19],017];Constructor (){Continue ;}_(){} }''',
                '''Class,T,:,M,{,Val,$2,,,$e,,,_,:,__d,;,},Class,D,{,Constructor,(,),{,{,},},t,(,),{,Break,;,T,::,$530,(,),;,},Val,$0,,,W3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x19,],,,017,],,,0XD48,],,,0x19,],,,017,],;,Constructor,(,),{,Continue,;,},_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2014(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{Var $W,__t_:String ;}Class yd:_{$y(_:Float ;_9,_c,z:Array [Int ,0B100100]){} }Class pM7{Destructor (){}Destructor (){} }''',
                '''Class,G,{,Var,$W,,,__t_,:,String,;,},Class,yd,:,_,{,$y,(,_,:,Float,;,_9,,,_c,,,z,:,Array,[,Int,,,0B100100,],),{,},},Class,pM7,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2015(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _l_6_l:n7__S{}Class T1_:_{Var $s,$6,$_,lPb_:Float ;}Class H_2__:_8{Constructor (_4,__:Boolean ;__0,_:A){}Constructor (){Break ;} }''',
                '''Class,_l_6_l,:,n7__S,{,},Class,T1_,:,_,{,Var,$s,,,$6,,,$_,,,lPb_,:,Float,;,},Class,H_2__,:,_8,{,Constructor,(,_4,,,__,:,Boolean,;,__0,,,_,:,A,),{,},Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2016(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Z(a:Array [Array [String ,043],0x60];_,J_:Array [Boolean ,0x60];M:Array [Array [Int ,0X51],0b1_001_0];Kh,q_G_b:Array [Array [Array [Int ,0x60],31],31];I:Boolean ){} }Class _:_97_{}''',
                '''Class,_,{,Z,(,a,:,Array,[,Array,[,String,,,043,],,,0x60,],;,_,,,J_,:,Array,[,Boolean,,,0x60,],;,M,:,Array,[,Array,[,Int,,,0X51,],,,0b10010,],;,Kh,,,q_G_b,:,Array,[,Array,[,Array,[,Int,,,0x60,],,,31,],,,31,],;,I,:,Boolean,),{,},},Class,_,:,_97_,{,},<EOF>''',
                101
            )
        )

    def test_2017(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v{}Class U_d:_9v1{Val S,$_,$I,_lO7,$___,_,$7_,$0_,$_:Array [Boolean ,63537_985];Val $3O,$5,A,$_z:Int ;}Class T37{}''',
                '''Class,_v,{,},Class,U_d,:,_9v1,{,Val,S,,,$_,,,$I,,,_lO7,,,$___,,,_,,,$7_,,,$0_,,,$_,:,Array,[,Boolean,,,63537985,],;,Val,$3O,,,$5,,,A,,,$_z,:,Int,;,},Class,T37,{,},<EOF>''',
                101
            )
        )

    def test_2018(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val m_65_P,slE6_:_;Var _:Float ;Val $5,$_2,___e,L7,e,$6,__,W:Array [Array [Array [Boolean ,0X23],04],9];Var $_,$367:Array [Float ,0x7];}Class rI6{}''',
                '''Class,_,{,Val,m_65_P,,,slE6_,:,_,;,Var,_,:,Float,;,Val,$5,,,$_2,,,___e,,,L7,,,e,,,$6,,,__,,,W,:,Array,[,Array,[,Array,[,Boolean,,,0X23,],,,04,],,,9,],;,Var,$_,,,$367,:,Array,[,Float,,,0x7,],;,},Class,rI6,{,},<EOF>''',
                101
            )
        )

    def test_2019(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cy_:_{}Class __R5{Constructor (K_,_s:_){} }Class Kz{}Class K_:r0{Constructor (s:_14_){}Constructor (){} }Class y15_{}''',
                '''Class,cy_,:,_,{,},Class,__R5,{,Constructor,(,K_,,,_s,:,_,),{,},},Class,Kz,{,},Class,K_,:,r0,{,Constructor,(,s,:,_14_,),{,},Constructor,(,),{,},},Class,y15_,{,},<EOF>''',
                101
            )
        )

    def test_2020(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}$T(_,_:Array [String ,8]){} }Class U_{Constructor (){}$_(){}Val B_5_G_u,R:Array [Array [Array [Float ,0XA],0134],0b1000010];}''',
                '''Class,_,{,Destructor,(,),{,},$T,(,_,,,_,:,Array,[,String,,,8,],),{,},},Class,U_,{,Constructor,(,),{,},$_,(,),{,},Val,B_5_G_u,,,R,:,Array,[,Array,[,Array,[,Float,,,0XA,],,,0134,],,,0b1000010,],;,},<EOF>''',
                101
            )
        )

    def test_2021(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F7:R_{}Class ovV{Val JC_,s_,$X,_,_,$_,_f_zkL96,E,$__,U__,$Q__:Array [Array [Float ,90],90];}Class _:Y{Constructor (){Continue ;} }''',
                '''Class,F7,:,R_,{,},Class,ovV,{,Val,JC_,,,s_,,,$X,,,_,,,_,,,$_,,,_f_zkL96,,,E,,,$__,,,U__,,,$Q__,:,Array,[,Array,[,Float,,,90,],,,90,],;,},Class,_,:,Y,{,Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2022(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_g6a{Val Oy2:_;Var j1:A;$_(){Continue ;{Break ;} }Destructor (){ {} }Destructor (){Continue ;}Var $9,__4:Array [Array [Array [Int ,07],23],0B1_0_10_0];}''',
                '''Class,_,:,_g6a,{,Val,Oy2,:,_,;,Var,j1,:,A,;,$_,(,),{,Continue,;,{,Break,;,},},Destructor,(,),{,{,},},Destructor,(,),{,Continue,;,},Var,$9,,,__4,:,Array,[,Array,[,Array,[,Int,,,07,],,,23,],,,0B10100,],;,},<EOF>''',
                101
            )
        )

    def test_2023(self):
        self.assertTrue(
            TestLexer.test(
                '''Class By :s{}Class k1_:BXd{Var j:Array [Array [Float ,07],050_6];_(_Z5Q__:_;_7__,__:Array [Array [Boolean ,035],80];_,Y:I){} }''',
                '''Class,By,:,s,{,},Class,k1_,:,BXd,{,Var,j,:,Array,[,Array,[,Float,,,07,],,,0506,],;,_,(,_Z5Q__,:,_,;,_7__,,,__,:,Array,[,Array,[,Boolean,,,035,],,,80,],;,_,,,Y,:,I,),{,},},<EOF>''',
                101
            )
        )

    def test_2024(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6_r{Var $7_,$_V:Array [Array [Array [String ,02],97],0b11];}Class _:l{Destructor (){}Constructor (){Continue ;Break ;{} }}''',
                '''Class,_6_r,{,Var,$7_,,,$_V,:,Array,[,Array,[,Array,[,String,,,02,],,,97,],,,0b11,],;,},Class,_,:,l,{,Destructor,(,),{,},Constructor,(,),{,Continue,;,Break,;,{,},},},<EOF>''',
                101
            )
        )

    def test_2025(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class o2c:eg__{Var P,_:Array [Array [Array [Array [Array [Array [Array [Boolean ,010],0B1],010],0X3_0],010],0b11],0X3];}''',
                '''Class,_,:,_,{,},Class,o2c,:,eg__,{,Var,P,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,010,],,,0B1,],,,010,],,,0X30,],,,010,],,,0b11,],,,0X3,],;,},<EOF>''',
                101
            )
        )

    def test_2026(self):
        self.assertTrue(
            TestLexer.test(
                '''Class dt_91:_{Constructor (){}Val _1_,l:Array [Int ,9];}Class O:_5_{}Class m0_W_{Constructor (_L_L3,_,_,_,n_:Array [Int ,0x1A];_l_Pi0_,_:X;_,_C_:Float ;_:_){} }''',
                '''Class,dt_91,:,_,{,Constructor,(,),{,},Val,_1_,,,l,:,Array,[,Int,,,9,],;,},Class,O,:,_5_,{,},Class,m0_W_,{,Constructor,(,_L_L3,,,_,,,_,,,_,,,n_,:,Array,[,Int,,,0x1A,],;,_l_Pi0_,,,_,:,X,;,_,,,_C_,:,Float,;,_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2027(self):
        self.assertTrue(
            TestLexer.test(
                '''Class iZ__i___q:qW{$__8_8Q(z_7Y_a_:Array [Array [String ,35],06];lm_:Array [Array [Array [Boolean ,0x2F],0X2C],35];rc,_:Is){} }Class _xU_:G3{Destructor (){} }''',
                '''Class,iZ__i___q,:,qW,{,$__8_8Q,(,z_7Y_a_,:,Array,[,Array,[,String,,,35,],,,06,],;,lm_,:,Array,[,Array,[,Array,[,Boolean,,,0x2F,],,,0X2C,],,,35,],;,rc,,,_,:,Is,),{,},},Class,_xU_,:,G3,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2028(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:z8{}Class _:v_{}Class I_2a_{Constructor (_:Array [Array [Array [Array [String ,040],0X2],46],040];_k,_,_:_4__){} }Class g{}''',
                '''Class,_,{,},Class,_,:,z8,{,},Class,_,:,v_,{,},Class,I_2a_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,040,],,,0X2,],,,46,],,,040,],;,_k,,,_,,,_,:,_4__,),{,},},Class,g,{,},<EOF>''',
                101
            )
        )

    def test_2029(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T7:_{Var $6:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,7],0b1000101],0x7],5],0X52],0B1],0X50F_BD3_3],0b1000101],82],0x5B];Var __:Array [Array [Float ,82],0X52];}Class _:_{}Class I{}Class _:p_{}Class w_47{}''',
                '''Class,T7,:,_,{,Var,$6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,7,],,,0b1000101,],,,0x7,],,,5,],,,0X52,],,,0B1,],,,0X50FBD33,],,,0b1000101,],,,82,],,,0x5B,],;,Var,__,:,Array,[,Array,[,Float,,,82,],,,0X52,],;,},Class,_,:,_,{,},Class,I,{,},Class,_,:,p_,{,},Class,w_47,{,},<EOF>''',
                101
            )
        )

    def test_2030(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v__:h{}Class Bb{Val $1:__9;$2s(f9_3:Array [Array [Array [Array [Int ,0B1000100],7],20],0xD_B];_5,_:Float ;a:Ji){} }Class _s{}Class U__:n_{Var $I9Ll:rU_;}Class _:_{Constructor (W:Float ){} }Class P:_y{}''',
                '''Class,v__,:,h,{,},Class,Bb,{,Val,$1,:,__9,;,$2s,(,f9_3,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1000100,],,,7,],,,20,],,,0xDB,],;,_5,,,_,:,Float,;,a,:,Ji,),{,},},Class,_s,{,},Class,U__,:,n_,{,Var,$I9Ll,:,rU_,;,},Class,_,:,_,{,Constructor,(,W,:,Float,),{,},},Class,P,:,_y,{,},<EOF>''',
                101
            )
        )

    def test_2031(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:_{Cr8(){}Constructor (){} }Class s_751:__6{$z(___:String ;_,gx:Int ;_8,K_,L:Array [Array [Array [Array [Array [Array [Float ,2],0B1_0_1_1_00_0],0124],3],0b1001001],0B1100001];m:Float ){} }''',
                '''Class,E,:,_,{,Cr8,(,),{,},Constructor,(,),{,},},Class,s_751,:,__6,{,$z,(,___,:,String,;,_,,,gx,:,Int,;,_8,,,K_,,,L,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,2,],,,0B1011000,],,,0124,],,,3,],,,0b1001001,],,,0B1100001,],;,m,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2032(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o_:b7{Constructor (){} }Class _q{_x_2__yj_(_:Array [Array [Boolean ,031],0B1001011];aw___,X_7:_k;z,DN:Array [Array [Float ,0b110111],203_3]){} }''',
                '''Class,o_,:,b7,{,Constructor,(,),{,},},Class,_q,{,_x_2__yj_,(,_,:,Array,[,Array,[,Boolean,,,031,],,,0B1001011,],;,aw___,,,X_7,:,_k,;,z,,,DN,:,Array,[,Array,[,Float,,,0b110111,],,,2033,],),{,},},<EOF>''',
                101
            )
        )

    def test_2033(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:C{Constructor (_3_:_m_;_:Array [String ,0331_5];pE,_q__6XC5:Array [Array [Array [String ,0B10011],0xB_1],0126];_g,m3:_){} }''',
                '''Class,C,:,C,{,Constructor,(,_3_,:,_m_,;,_,:,Array,[,String,,,03315,],;,pE,,,_q__6XC5,:,Array,[,Array,[,Array,[,String,,,0B10011,],,,0xB1,],,,0126,],;,_g,,,m3,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2034(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ____{}Class N8_B_{Var _86:_b;Val _s,$FHh:Array [Array [Array [Float ,0x4F],87],03_2_2_7];Val $_,_,C:Array [String ,0X2];}''',
                '''Class,____,{,},Class,N8_B_,{,Var,_86,:,_b,;,Val,_s,,,$FHh,:,Array,[,Array,[,Array,[,Float,,,0x4F,],,,87,],,,03227,],;,Val,$_,,,_,,,C,:,Array,[,String,,,0X2,],;,},<EOF>''',
                101
            )
        )

    def test_2035(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _5{Val $5y:Boolean ;}Class b{Constructor (_,k:String ;_:Array [Array [Int ,037],02_1];_1:Boolean ;_t:Array [Boolean ,0X16];_h0R5X:Array [Array [Float ,20],0B1000001];V:_;W:Array [Array [Array [Array [Array [Array [Array [Float ,0X16],980],0X82_9],0B1000001],037],8],07];T_1hD,__,v5:z5;B,_,f:Array [String ,037]){} }Class d2:_{}Class _2{Destructor (){E::$Jp();} }''',
                '''Class,_,{,},Class,_5,{,Val,$5y,:,Boolean,;,},Class,b,{,Constructor,(,_,,,k,:,String,;,_,:,Array,[,Array,[,Int,,,037,],,,021,],;,_1,:,Boolean,;,_t,:,Array,[,Boolean,,,0X16,],;,_h0R5X,:,Array,[,Array,[,Float,,,20,],,,0B1000001,],;,V,:,_,;,W,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X16,],,,980,],,,0X829,],,,0B1000001,],,,037,],,,8,],,,07,],;,T_1hD,,,__,,,v5,:,z5,;,B,,,_,,,f,:,Array,[,String,,,037,],),{,},},Class,d2,:,_,{,},Class,_2,{,Destructor,(,),{,E,::,$Jp,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2036(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _l_O_{Constructor (Y3n,___,_8J_,_:Array [Array [Int ,0B10],0b1];_I,u_:String ;K,h:Array [Array [Array [Array [Array [Array [Array [Float ,0b1_1_0],027],0X4_9A5_5_C_A],0b1001010],38_094],0X47],0101]){} }''',
                '''Class,_l_O_,{,Constructor,(,Y3n,,,___,,,_8J_,,,_,:,Array,[,Array,[,Int,,,0B10,],,,0b1,],;,_I,,,u_,:,String,;,K,,,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b110,],,,027,],,,0X49A55CA,],,,0b1001010,],,,38094,],,,0X47,],,,0101,],),{,},},<EOF>''',
                101
            )
        )

    def test_2037(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Constructor (n:_;mx1__:Array [Array [Array [Array [Array [Array [Int ,0x40],0B1],0xC],05],05_5_5],05];a,_:Array [Float ,0XA]){}Destructor (){} }''',
                '''Class,__,:,_,{,Constructor,(,n,:,_,;,mx1__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x40,],,,0B1,],,,0xC,],,,05,],,,0555,],,,05,],;,a,,,_,:,Array,[,Float,,,0XA,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2038(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}_s03(_,TD,I,B:Array [Array [Array [Array [Array [Array [Array [Array [String ,0X4F],0x18],020],0B1001101],0B1_1],0X6],0b11001],020];_H,oquA7:String ;P_F:a){} }Class _5{}Class a:Mw{}Class Q{Var _9:Array [Array [Array [Boolean ,20],20],5];}''',
                '''Class,_,{,Destructor,(,),{,},_s03,(,_,,,TD,,,I,,,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X4F,],,,0x18,],,,020,],,,0B1001101,],,,0B11,],,,0X6,],,,0b11001,],,,020,],;,_H,,,oquA7,:,String,;,P_F,:,a,),{,},},Class,_5,{,},Class,a,:,Mw,{,},Class,Q,{,Var,_9,:,Array,[,Array,[,Array,[,Boolean,,,20,],,,20,],,,5,],;,},<EOF>''',
                101
            )
        )

    def test_2039(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j_{$1(K:Array [Array [Array [Array [Float ,0B10],0X4B],03_0_64],0B110100];_:Array [Int ,7];g4:Array [Array [String ,06],0B110100]){} }Class C{Constructor (){} }Class _{Destructor (){Return ;} }Class lr{}''',
                '''Class,_j_,{,$1,(,K,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B10,],,,0X4B,],,,03064,],,,0B110100,],;,_,:,Array,[,Int,,,7,],;,g4,:,Array,[,Array,[,String,,,06,],,,0B110100,],),{,},},Class,C,{,Constructor,(,),{,},},Class,_,{,Destructor,(,),{,Return,;,},},Class,lr,{,},<EOF>''',
                101
            )
        )

    def test_2040(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j_8G{Var $s,b2,$8_T61:Vq53;}Class N:_j{$_(L:Array [Float ,01];ez,B_:z7_;_:Float ;_,_,_kk:_;p_,__:String ;_Q:Array [Float ,90];_:Int ;_,N,_,_:D5_;i:String ){} }Class T5{}''',
                '''Class,j_8G,{,Var,$s,,,b2,,,$8_T61,:,Vq53,;,},Class,N,:,_j,{,$_,(,L,:,Array,[,Float,,,01,],;,ez,,,B_,:,z7_,;,_,:,Float,;,_,,,_,,,_kk,:,_,;,p_,,,__,:,String,;,_Q,:,Array,[,Float,,,90,],;,_,:,Int,;,_,,,N,,,_,,,_,:,D5_,;,i,:,String,),{,},},Class,T5,{,},<EOF>''',
                101
            )
        )

    def test_2041(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{$3_(__,_:mj;agv,H,_:Array [String ,0XA_C_9]){}i_(){} }Class a__:__{}Class __Q42_D_{}Class a:_{}Class _{}Class FS9_:C9_E4{}''',
                '''Class,u,{,$3_,(,__,,,_,:,mj,;,agv,,,H,,,_,:,Array,[,String,,,0XAC9,],),{,},i_,(,),{,},},Class,a__,:,__,{,},Class,__Q42_D_,{,},Class,a,:,_,{,},Class,_,{,},Class,FS9_,:,C9_E4,{,},<EOF>''',
                101
            )
        )

    def test_2042(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5:p_{Constructor (__t5:String ;__,D,__,_2_,p,LL8,_,_2:Array [Array [Int ,0B1],05_20]){} }Class H21:Ji{}Class S{}''',
                '''Class,_5,:,p_,{,Constructor,(,__t5,:,String,;,__,,,D,,,__,,,_2_,,,p,,,LL8,,,_,,,_2,:,Array,[,Array,[,Int,,,0B1,],,,0520,],),{,},},Class,H21,:,Ji,{,},Class,S,{,},<EOF>''',
                101
            )
        )

    def test_2043(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__p__{}Class O{}Class T4__{Val $y__k:Array [Array [String ,02],4];}Class _O2{Var _,V,$_yiD_51,T,t,t___B:e74;}''',
                '''Class,_,:,__p__,{,},Class,O,{,},Class,T4__,{,Val,$y__k,:,Array,[,Array,[,String,,,02,],,,4,],;,},Class,_O2,{,Var,_,,,V,,,$_yiD_51,,,T,,,t,,,t___B,:,e74,;,},<EOF>''',
                101
            )
        )

    def test_2044(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _nE:_{Val $0,$_:Array [Array [Array [Array [Array [Array [String ,2_13_0],045],0135],0XF1C],13],0X6];}Class C_{}''',
                '''Class,_nE,:,_,{,Val,$0,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,2130,],,,045,],,,0135,],,,0XF1C,],,,13,],,,0X6,],;,},Class,C_,{,},<EOF>''',
                101
            )
        )

    def test_2045(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:G{Destructor (){}Constructor (){Return ;Val sh7m_,j:Array [Array [Boolean ,0x3D],20];}$9(P:Array [Array [Boolean ,20],0X7]){} }''',
                '''Class,_0,:,G,{,Destructor,(,),{,},Constructor,(,),{,Return,;,Val,sh7m_,,,j,:,Array,[,Array,[,Boolean,,,0x3D,],,,20,],;,},$9,(,P,:,Array,[,Array,[,Boolean,,,20,],,,0X7,],),{,},},<EOF>''',
                101
            )
        )

    # def test_2046(self):
    # self.assertTrue(TestLexer.test('''Class F3:_M{Constructor (if_51,_a,D,_:_){}Val $Z6k:zi;Val $_:Boolean ;}Class V6{$_Y(){}$_(){Return -.e8+!!"\\\\\f".e._;} }''','''Class,F3,:,_M,{,Constructor,(,if_51,,,_a,,,D,,,_,:,_,),{,},Val,$Z6k,:,zi,;,Val,$_,:,Boolean,;,},Class,V6,{,$_Y,(,),{,},$_,(,),{,Return,-,.e8,+,!,!,\\\\\f,.,e,.,_,;,},},<EOF>''',101))

    def test_2047(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_{Var $k,_:Array [Array [Array [Array [Array [Float ,072],3],59],0B110_010],0B1];Constructor (){} }Class __8:_i{}''',
                '''Class,M_,{,Var,$k,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,072,],,,3,],,,59,],,,0B110010,],,,0B1,],;,Constructor,(,),{,},},Class,__8,:,_i,{,},<EOF>''',
                101
            )
        )

    def test_2048(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L5:__{}Class _:Z9{}Class J:_Y_g{Constructor (){} }Class __8_yf:_{Constructor (E,_:Int ;___I,i:Array [Array [Boolean ,9],0x44_1]){Break ;Continue ;}w6_(){Continue ;}Constructor (_2:_4){} }''',
                '''Class,L5,:,__,{,},Class,_,:,Z9,{,},Class,J,:,_Y_g,{,Constructor,(,),{,},},Class,__8_yf,:,_,{,Constructor,(,E,,,_,:,Int,;,___I,,,i,:,Array,[,Array,[,Boolean,,,9,],,,0x441,],),{,Break,;,Continue,;,},w6_,(,),{,Continue,;,},Constructor,(,_2,:,_4,),{,},},<EOF>''',
                101
            )
        )

    def test_2049(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:L{Constructor (_,H_8I,B:_M_;_A_,j,__:String ;___w,_1,Jx,_L3,_:l8D;p,e2,__my9_3,q_,__7_,__n,_:Array [Array [String ,80],0132];_Y:Array [Boolean ,0132];__M_,D:_){Var l,k:Array [Int ,4];} }Class TYVo0u{}''',
                '''Class,K,:,L,{,Constructor,(,_,,,H_8I,,,B,:,_M_,;,_A_,,,j,,,__,:,String,;,___w,,,_1,,,Jx,,,_L3,,,_,:,l8D,;,p,,,e2,,,__my9_3,,,q_,,,__7_,,,__n,,,_,:,Array,[,Array,[,String,,,80,],,,0132,],;,_Y,:,Array,[,Boolean,,,0132,],;,__M_,,,D,:,_,),{,Var,l,,,k,:,Array,[,Int,,,4,],;,},},Class,TYVo0u,{,},<EOF>''',
                101
            )
        )

    def test_2050(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:o_{Var _,$m:Array [Array [Array [String ,0b1_0],45],0X7];}Class _{y0(){Continue ;Val d,K,_W_46,M4_,z,D,uR52,__,h,f,_o6:Float ;} }''',
                '''Class,m,:,o_,{,Var,_,,,$m,:,Array,[,Array,[,Array,[,String,,,0b10,],,,45,],,,0X7,],;,},Class,_,{,y0,(,),{,Continue,;,Val,d,,,K,,,_W_46,,,M4_,,,z,,,D,,,uR52,,,__,,,h,,,f,,,_o6,:,Float,;,},},<EOF>''',
                101
            )
        )

    def test_2051(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{Var _6a:String ;Constructor (_,_v_,Jk_,a:Array [String ,0b1];_,_,_:Boolean ){} }Class Y{}Class ___6__{}''',
                '''Class,g,{,Var,_6a,:,String,;,Constructor,(,_,,,_v_,,,Jk_,,,a,:,Array,[,String,,,0b1,],;,_,,,_,,,_,:,Boolean,),{,},},Class,Y,{,},Class,___6__,{,},<EOF>''',
                101
            )
        )

    def test_2052(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{Destructor (){}$2(C_b:_;__,_:Boolean ;_8:Boolean ;P8_,tK_31:Boolean ;s_,Wq2,T8,I,O4:Array [Array [Array [Array [Int ,4_1],0x9],4],01_1];_:String ){} }''',
                '''Class,f,{,Destructor,(,),{,},$2,(,C_b,:,_,;,__,,,_,:,Boolean,;,_8,:,Boolean,;,P8_,,,tK_31,:,Boolean,;,s_,,,Wq2,,,T8,,,I,,,O4,:,Array,[,Array,[,Array,[,Array,[,Int,,,41,],,,0x9,],,,4,],,,011,],;,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2053(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:G{}Class Y8:a{_t(){Continue ;_V::$3._e12U.__3_5_();}$R(_,w5__:Array [Array [Array [Array [Int ,0X2E],0xC_4],0x10],38]){}Val Y:String ;Constructor (T_,_L:_6P;I__j_,CY,_:Array [Boolean ,0b1_0_1]){}Var _:w_;}Class v:m{Constructor (){} }''',
                '''Class,_,:,G,{,},Class,Y8,:,a,{,_t,(,),{,Continue,;,_V,::,$3,.,_e12U,.,__3_5_,(,),;,},$R,(,_,,,w5__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X2E,],,,0xC4,],,,0x10,],,,38,],),{,},Val,Y,:,String,;,Constructor,(,T_,,,_L,:,_6P,;,I__j_,,,CY,,,_,:,Array,[,Boolean,,,0b101,],),{,},Var,_,:,w_,;,},Class,v,:,m,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2054(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M63v{$_(_w6:Array [Float ,0141];_9e:Array [String ,0b1]){} }Class A4_{Var $6_:Array [Array [Float ,0b1_0],2];Val $i,$3,_,$7,$375_33s_,$o,$h:Array [Array [Boolean ,5_7_9_9],0x1];}Class __{}''',
                '''Class,M63v,{,$_,(,_w6,:,Array,[,Float,,,0141,],;,_9e,:,Array,[,String,,,0b1,],),{,},},Class,A4_,{,Var,$6_,:,Array,[,Array,[,Float,,,0b10,],,,2,],;,Val,$i,,,$3,,,_,,,$7,,,$375_33s_,,,$o,,,$h,:,Array,[,Array,[,Boolean,,,5799,],,,0x1,],;,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_2055(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{Var $X:Array [Array [Array [Array [Array [Array [Array [String ,0b11101],0B1],1_55],0B1101],0x1D],3],0B1101];$Z1(k,_b,_,F_,_X,k01_t2_,__:Int ){}Val C,b495_M_:Array [Array [String ,4_82],017];}''',
                '''Class,T,{,Var,$X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11101,],,,0B1,],,,155,],,,0B1101,],,,0x1D,],,,3,],,,0B1101,],;,$Z1,(,k,,,_b,,,_,,,F_,,,_X,,,k01_t2_,,,__,:,Int,),{,},Val,C,,,b495_M_,:,Array,[,Array,[,String,,,482,],,,017,],;,},<EOF>''',
                101
            )
        )

    def test_2056(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:V_R__{Destructor (){}Var u,d,$W,$M_,s_3G2u:Array [Array [Array [Array [Array [Boolean ,95_2_4_41],0X4F],015],0X4F],42];Destructor (){Continue ;} }''',
                '''Class,o,:,V_R__,{,Destructor,(,),{,},Var,u,,,d,,,$W,,,$M_,,,s_3G2u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,952441,],,,0X4F,],,,015,],,,0X4F,],,,42,],;,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2057(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val L_:Array [Int ,5];$sWw(__:g){}Var $7W:Float ;}Class _:q_{Val $_Q_n,$6_G,$a:Float ;}Class _P:_n{}Class ___d_{Var X3g:Array [Array [Array [Array [Float ,68],0B1000010],0XE70],68];}Class _{}''',
                '''Class,_,{,Val,L_,:,Array,[,Int,,,5,],;,$sWw,(,__,:,g,),{,},Var,$7W,:,Float,;,},Class,_,:,q_,{,Val,$_Q_n,,,$6_G,,,$a,:,Float,;,},Class,_P,:,_n,{,},Class,___d_,{,Var,X3g,:,Array,[,Array,[,Array,[,Array,[,Float,,,68,],,,0B1000010,],,,0XE70,],,,68,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2058(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{Var $_5:String ;Destructor (){0B0.__3_()._e();}Destructor (){} }Class a{}Class _{a(_1,A_,Q:Array [Array [String ,0x2F],0B1001110];jZFW,_:Boolean ;_,_,__Vn,_:Array [Array [Array [String ,0B1001110],32],0X2];Gq9:Array [Int ,31];C2K:Int ){}Val Z5o3g2F,_:G;Val $lJ_2:Boolean ;}Class D{}''',
                '''Class,s,{,Var,$_5,:,String,;,Destructor,(,),{,0B0,.,__3_,(,),.,_e,(,),;,},Destructor,(,),{,},},Class,a,{,},Class,_,{,a,(,_1,,,A_,,,Q,:,Array,[,Array,[,String,,,0x2F,],,,0B1001110,],;,jZFW,,,_,:,Boolean,;,_,,,_,,,__Vn,,,_,:,Array,[,Array,[,Array,[,String,,,0B1001110,],,,32,],,,0X2,],;,Gq9,:,Array,[,Int,,,31,],;,C2K,:,Int,),{,},Val,Z5o3g2F,,,_,:,G,;,Val,$lJ_2,:,Boolean,;,},Class,D,{,},<EOF>''',
                101
            )
        )

    def test_2059(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X{}Class _{$78(_2:_;t,q:Array [Int ,026];___,wI_:Float ){} }Class __{Val $y:_;Constructor (){}Var mA6_2,$69_:Array [Array [String ,0b1],0x24];}''',
                '''Class,_,:,X,{,},Class,_,{,$78,(,_2,:,_,;,t,,,q,:,Array,[,Int,,,026,],;,___,,,wI_,:,Float,),{,},},Class,__,{,Val,$y,:,_,;,Constructor,(,),{,},Var,mA6_2,,,$69_,:,Array,[,Array,[,String,,,0b1,],,,0x24,],;,},<EOF>''',
                101
            )
        )

    def test_2060(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K1:_{$u(k,jgP_:String ;N:Array [Array [Array [Array [Array [Array [Boolean ,0b1001011],04],0b1001011],060],0100],0B1];OY9,__,g,Fg_,_,V8,_:Int ;O_G90C2_:Array [Array [Array [Array [Array [Array [Array [Int ,34],5],0100],0b1001011],0XFE_7_A],0100],0100];T_:Int ){}Destructor (){} }Class _{}''',
                '''Class,K1,:,_,{,$u,(,k,,,jgP_,:,String,;,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001011,],,,04,],,,0b1001011,],,,060,],,,0100,],,,0B1,],;,OY9,,,__,,,g,,,Fg_,,,_,,,V8,,,_,:,Int,;,O_G90C2_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,34,],,,5,],,,0100,],,,0b1001011,],,,0XFE7A,],,,0100,],,,0100,],;,T_,:,Int,),{,},Destructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2061(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{Constructor (b:Boolean ;W8,EN,_:Boolean ;_,_D,_qXO_,v,_7,Z_,_Y7,E_,_,_7,f08,i6,_7:Array [Array [Boolean ,47],0b11111]){} }Class _8Uc9{Destructor (){} }''',
                '''Class,y,{,Constructor,(,b,:,Boolean,;,W8,,,EN,,,_,:,Boolean,;,_,,,_D,,,_qXO_,,,v,,,_7,,,Z_,,,_Y7,,,E_,,,_,,,_7,,,f08,,,i6,,,_7,:,Array,[,Array,[,Boolean,,,47,],,,0b11111,],),{,},},Class,_8Uc9,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2062(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (_5,oP,_:Array [Array [Array [Array [Array [Array [Float ,04_31],0x5],0b111010],0B100001],0b111010],01];_:Boolean ){Break ;} }''',
                '''Class,__,{,Constructor,(,_5,,,oP,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0431,],,,0x5,],,,0b111010,],,,0B100001,],,,0b111010,],,,01,],;,_,:,Boolean,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2063(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jO:_{Val ZR:Array [Array [Int ,3],0xE_4];Constructor (r,B:Float ;_,T_08:Array [Int ,07];_t,E:Array [Float ,01_0];I7_Z3:Array [Boolean ,44];Y,n,_5xQ_2,__0,_,_:e){}dUP8(){}Constructor (_b:Array [Float ,022]){} }''',
                '''Class,jO,:,_,{,Val,ZR,:,Array,[,Array,[,Int,,,3,],,,0xE4,],;,Constructor,(,r,,,B,:,Float,;,_,,,T_08,:,Array,[,Int,,,07,],;,_t,,,E,:,Array,[,Float,,,010,],;,I7_Z3,:,Array,[,Boolean,,,44,],;,Y,,,n,,,_5xQ_2,,,__0,,,_,,,_,:,e,),{,},dUP8,(,),{,},Constructor,(,_b,:,Array,[,Float,,,022,],),{,},},<EOF>''',
                101
            )
        )

    def test_2064(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (X,__:Array [Array [Float ,06],0B101110];_:Int ;t1:Array [Int ,03_65_4];__,a:Array [Float ,0xA0];d,_,_0o7:F_){} }''',
                '''Class,_,{,Constructor,(,X,,,__,:,Array,[,Array,[,Float,,,06,],,,0B101110,],;,_,:,Int,;,t1,:,Array,[,Int,,,03654,],;,__,,,a,:,Array,[,Float,,,0xA0,],;,d,,,_,,,_0o7,:,F_,),{,},},<EOF>''',
                101
            )
        )

    def test_2065(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var $V:Array [Float ,0X7];Val $z:Array [Array [Array [Boolean ,9],03],0B1011];}Class _H:h87xX{Val w,___,$rG:x;Val Q9M:v;}''',
                '''Class,__,{,Var,$V,:,Array,[,Float,,,0X7,],;,Val,$z,:,Array,[,Array,[,Array,[,Boolean,,,9,],,,03,],,,0B1011,],;,},Class,_H,:,h87xX,{,Val,w,,,___,,,$rG,:,x,;,Val,Q9M,:,v,;,},<EOF>''',
                101
            )
        )

    def test_2066(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class m__{}Class b_{Constructor (X,_:String ;_b:___5;r87b,___:Float ;S:Int ;c3,_,_2,___9E1,_:Array [Array [Float ,024],0X8];X,_:Array [String ,40]){} }''',
                '''Class,_,{,},Class,m__,{,},Class,b_,{,Constructor,(,X,,,_,:,String,;,_b,:,___5,;,r87b,,,___,:,Float,;,S,:,Int,;,c3,,,_,,,_2,,,___9E1,,,_,:,Array,[,Array,[,Float,,,024,],,,0X8,],;,X,,,_,:,Array,[,String,,,40,],),{,},},<EOF>''',
                101
            )
        )

    def test_2067(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pj6:b_R{}Class V{Constructor (A_,_,_:Array [Array [Float ,0b1],0125];n_,J,X:Array [Float ,1];_:Boolean ;V,_,i4Z,_a_,E:t){}Destructor (){}Val $i_,p:_;}''',
                '''Class,pj6,:,b_R,{,},Class,V,{,Constructor,(,A_,,,_,,,_,:,Array,[,Array,[,Float,,,0b1,],,,0125,],;,n_,,,J,,,X,:,Array,[,Float,,,1,],;,_,:,Boolean,;,V,,,_,,,i4Z,,,_a_,,,E,:,t,),{,},Destructor,(,),{,},Val,$i_,,,p,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2068(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{Val ___a,D,Q,$36:Array [Boolean ,0x7];l_(___,_:Float ;_,k_4:_;x:Boolean ){} }Class R{}Class _{}Class _:N_{$_(){}J(n,qv,V:Array [Array [Array [Int ,0XC],0x2],016];q_:Array [Array [Array [Array [Array [Array [Array [Boolean ,0b1111],0X1_C],0b1_11],05_2],5],4],0X3E]){} }''',
                '''Class,X,{,Val,___a,,,D,,,Q,,,$36,:,Array,[,Boolean,,,0x7,],;,l_,(,___,,,_,:,Float,;,_,,,k_4,:,_,;,x,:,Boolean,),{,},},Class,R,{,},Class,_,{,},Class,_,:,N_,{,$_,(,),{,},J,(,n,,,qv,,,V,:,Array,[,Array,[,Array,[,Int,,,0XC,],,,0x2,],,,016,],;,q_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1111,],,,0X1C,],,,0b111,],,,052,],,,5,],,,4,],,,0X3E,],),{,},},<EOF>''',
                101
            )
        )

    def test_2069(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i929:_{}Class _:Qq{}Class __5{_U__3(_:Float ){Break ;} }Class ON__Ja{}Class s__:_{Val $_,$_,$4f_AE:Array [Float ,42];}Class ___:P{}''',
                '''Class,i929,:,_,{,},Class,_,:,Qq,{,},Class,__5,{,_U__3,(,_,:,Float,),{,Break,;,},},Class,ON__Ja,{,},Class,s__,:,_,{,Val,$_,,,$_,,,$4f_AE,:,Array,[,Float,,,42,],;,},Class,___,:,P,{,},<EOF>''',
                101
            )
        )

    def test_2070(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n_:__x23_B{}Class m_{$a_O(_,__,__,K_,MZ_,_,Sp8:Array [Float ,0B100111];Y:Boolean ;__:T4_u;q_:_3_7_7;X78y,C,se,I,_,_2,v:Boolean ){} }''',
                '''Class,n_,:,__x23_B,{,},Class,m_,{,$a_O,(,_,,,__,,,__,,,K_,,,MZ_,,,_,,,Sp8,:,Array,[,Float,,,0B100111,],;,Y,:,Boolean,;,__,:,T4_u,;,q_,:,_3_7_7,;,X78y,,,C,,,se,,,I,,,_,,,_2,,,v,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2071(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Array [Array [Array [Array [Int ,9],0X3],0xC],0X3C];_:Boolean ){Val W2,___:_;} }Class S{}Class F{Destructor (){} }''',
                '''Class,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,9,],,,0X3,],,,0xC,],,,0X3C,],;,_,:,Boolean,),{,Val,W2,,,___,:,_,;,},},Class,S,{,},Class,F,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2072(self):
        self.assertTrue(
            TestLexer.test(
                '''Class NU{Var $_,$7_5,$4_,E:Int ;}Class R5:mD{Constructor (dg:Boolean ){}Val __:Array [Float ,55];}Class _{Val _Kk8:M5;}''',
                '''Class,NU,{,Var,$_,,,$7_5,,,$4_,,,E,:,Int,;,},Class,R5,:,mD,{,Constructor,(,dg,:,Boolean,),{,},Val,__,:,Array,[,Float,,,55,],;,},Class,_,{,Val,_Kk8,:,M5,;,},<EOF>''',
                101
            )
        )

    def test_2073(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var P8,Dt_1:Int ;Constructor (_,O,X_:Array [Array [Array [Float ,0x4],240],40];_:Float ;__o:String ){}Val $_:String ;Constructor (A2,P,f,r_:Array [Boolean ,0b1];T,o,_,A_88,t_w:Int ;p_m:kj;j,_:Int ;c:a;_,R:Array [Array [Array [Array [Int ,01],6],0x7],0x4];_,_:Float ){} }Class S{}Class __{}''',
                '''Class,__,{,Var,P8,,,Dt_1,:,Int,;,Constructor,(,_,,,O,,,X_,:,Array,[,Array,[,Array,[,Float,,,0x4,],,,240,],,,40,],;,_,:,Float,;,__o,:,String,),{,},Val,$_,:,String,;,Constructor,(,A2,,,P,,,f,,,r_,:,Array,[,Boolean,,,0b1,],;,T,,,o,,,_,,,A_88,,,t_w,:,Int,;,p_m,:,kj,;,j,,,_,:,Int,;,c,:,a,;,_,,,R,:,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,6,],,,0x7,],,,0x4,],;,_,,,_,:,Float,),{,},},Class,S,{,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_2074(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:b2z{}Class _4DY:b_{Destructor (){Self =!--Null ;} }Class _b2516:_{$E(){} }Class Kk_a:_{Constructor (){} }''',
                '''Class,_,:,b2z,{,},Class,_4DY,:,b_,{,Destructor,(,),{,Self,=,!,-,-,Null,;,},},Class,_b2516,:,_,{,$E,(,),{,},},Class,Kk_a,:,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2075(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class ____:D3{$1(){Val o:Array [Array [Array [String ,0X8],229_57],0X8];}Constructor (_w:cq;_3:O){}Val q__,q:Array [Int ,0120];Val h:lm;Destructor (){} }Class _{}Class __n__I0:_{Val $8:Float ;Var $17_,Av,_,$L7,p:Float ;Val k:Int ;}Class __:j{}Class gZ__{}''',
                '''Class,_,{,},Class,____,:,D3,{,$1,(,),{,Val,o,:,Array,[,Array,[,Array,[,String,,,0X8,],,,22957,],,,0X8,],;,},Constructor,(,_w,:,cq,;,_3,:,O,),{,},Val,q__,,,q,:,Array,[,Int,,,0120,],;,Val,h,:,lm,;,Destructor,(,),{,},},Class,_,{,},Class,__n__I0,:,_,{,Val,$8,:,Float,;,Var,$17_,,,Av,,,_,,,$L7,,,p,:,Float,;,Val,k,:,Int,;,},Class,__,:,j,{,},Class,gZ__,{,},<EOF>''',
                101
            )
        )

    def test_2076(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e_:b{$_(L_,_7_48,l:Boolean ;_,_,g6:Int ;_jt:Array [Int ,0x38]){Break ;_::$6();{Return ;} }}Class z{}Class i:K{Destructor (){} }''',
                '''Class,e_,:,b,{,$_,(,L_,,,_7_48,,,l,:,Boolean,;,_,,,_,,,g6,:,Int,;,_jt,:,Array,[,Int,,,0x38,],),{,Break,;,_,::,$6,(,),;,{,Return,;,},},},Class,z,{,},Class,i,:,K,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2077(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8:__4__{}Class W26O:_{Constructor (M_,_,__C,b,_:Array [Array [Boolean ,0B1100000],04]){Var _:S;}Constructor (){ {{Var Y,V:String ;Return ;}Return ;} }}''',
                '''Class,_8,:,__4__,{,},Class,W26O,:,_,{,Constructor,(,M_,,,_,,,__C,,,b,,,_,:,Array,[,Array,[,Boolean,,,0B1100000,],,,04,],),{,Var,_,:,S,;,},Constructor,(,),{,{,{,Var,Y,,,V,:,String,;,Return,;,},Return,;,},},},<EOF>''',
                101
            )
        )

    def test_2078(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:I_8{Var $A,$3,$D,$_2_2C__B,$O:_;Val $1:Array [String ,0xF_A_7_8];}Class g{Constructor (w:b;_9,_6W:Array [Int ,06_53_56_37];o:_9;ah_,m_:Array [Array [Boolean ,0x38],0X5E];__8:Array [Array [Float ,0x4],0B11010]){Continue ;} }Class d{}''',
                '''Class,C,:,I_8,{,Var,$A,,,$3,,,$D,,,$_2_2C__B,,,$O,:,_,;,Val,$1,:,Array,[,String,,,0xFA78,],;,},Class,g,{,Constructor,(,w,:,b,;,_9,,,_6W,:,Array,[,Int,,,06535637,],;,o,:,_9,;,ah_,,,m_,:,Array,[,Array,[,Boolean,,,0x38,],,,0X5E,],;,__8,:,Array,[,Array,[,Float,,,0x4,],,,0B11010,],),{,Continue,;,},},Class,d,{,},<EOF>''',
                101
            )
        )

    def test_2079(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{}Class e{Constructor (_:__;WW7:Array [String ,0b1]){} }Class M:__{Constructor (pX3:String ){}Val $z_M,$_:Boolean ;}''',
                '''Class,c,{,},Class,e,{,Constructor,(,_,:,__,;,WW7,:,Array,[,String,,,0b1,],),{,},},Class,M,:,__,{,Constructor,(,pX3,:,String,),{,},Val,$z_M,,,$_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2080(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J4:R{}Class _{}Class _:f{Constructor (q:Int ;R:Boolean ;_J:Array [Array [Int ,0B111],0xB]){} }Class y8:B{}''',
                '''Class,J4,:,R,{,},Class,_,{,},Class,_,:,f,{,Constructor,(,q,:,Int,;,R,:,Boolean,;,_J,:,Array,[,Array,[,Int,,,0B111,],,,0xB,],),{,},},Class,y8,:,B,{,},<EOF>''',
                101
            )
        )

    def test_2081(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var h_,_:z9;}Class A{_9(_96__:Boolean ;__:Array [Array [Array [Array [Array [Int ,0x1],0x3],0X6],3],06];_:Array [Array [Int ,02],02_223_5]){Continue ;}Val $_:Boolean ;}''',
                '''Class,_,{,Var,h_,,,_,:,z9,;,},Class,A,{,_9,(,_96__,:,Boolean,;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x1,],,,0x3,],,,0X6,],,,3,],,,06,],;,_,:,Array,[,Array,[,Int,,,02,],,,022235,],),{,Continue,;,},Val,$_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2082(self):
        self.assertTrue(
            TestLexer.test(
                '''Class nj5_{Var HC_,$2f_0,$0___:Array [Array [Float ,5],072];Var aZ:Boolean ;Var $5_,$_p:Array [Boolean ,0X5];Val G__,$p:_;}''',
                '''Class,nj5_,{,Var,HC_,,,$2f_0,,,$0___,:,Array,[,Array,[,Float,,,5,],,,072,],;,Var,aZ,:,Boolean,;,Var,$5_,,,$_p,:,Array,[,Boolean,,,0X5,],;,Val,G__,,,$p,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2083(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _pJ:_{Val $t,$l:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0X36],0xA_4],02],02],932_7],26],0x3B],0x3B],26];}''',
                '''Class,_pJ,:,_,{,Val,$t,,,$l,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X36,],,,0xA4,],,,02,],,,02,],,,9327,],,,26,],,,0x3B,],,,0x3B,],,,26,],;,},<EOF>''',
                101
            )
        )

    def test_2084(self):
        self.assertTrue(
            TestLexer.test(
                '''Class lt{}Class z02:A{}Class J:k___ZI_{__(X3_6,___,Zk:Float ){} }Class myS{Val $2_:Array [Array [Int ,31],0x4C];}Class _:_e_{}''',
                '''Class,lt,{,},Class,z02,:,A,{,},Class,J,:,k___ZI_,{,__,(,X3_6,,,___,,,Zk,:,Float,),{,},},Class,myS,{,Val,$2_,:,Array,[,Array,[,Int,,,31,],,,0x4C,],;,},Class,_,:,_e_,{,},<EOF>''',
                101
            )
        )

    def test_2085(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ph___:__4obt_{}Class _9{Val $_1,_2:Float ;}Class w{}Class _:P_P{_8(B__,_R_:o;K,f:Array [String ,0b1011011];A40,m:String ){Break ;} }''',
                '''Class,ph___,:,__4obt_,{,},Class,_9,{,Val,$_1,,,_2,:,Float,;,},Class,w,{,},Class,_,:,P_P,{,_8,(,B__,,,_R_,:,o,;,K,,,f,:,Array,[,String,,,0b1011011,],;,A40,,,m,:,String,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2086(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9_:_{Var W_:Array [Array [Array [Array [Array [Boolean ,5],0B111011],0x27],0XF_F_2_C8_A4_B],063];$__B_l7_(_:String ;_,bo3_2:String ){} }''',
                '''Class,_9_,:,_,{,Var,W_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,5,],,,0B111011,],,,0x27,],,,0XFF2C8A4B,],,,063,],;,$__B_l7_,(,_,:,String,;,_,,,bo3_2,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2087(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s____4:n7{Var _j_:_;Destructor (){}$j(){ {Var L_:Array [Int ,06];} }Destructor (){}Var _:Array [Array [String ,3],0B1011000];Val $eb0,H9:Float ;Destructor (){}Val $1_,Ua9u_N:_;}Class _:S{}''',
                '''Class,_s____4,:,n7,{,Var,_j_,:,_,;,Destructor,(,),{,},$j,(,),{,{,Var,L_,:,Array,[,Int,,,06,],;,},},Destructor,(,),{,},Var,_,:,Array,[,Array,[,String,,,3,],,,0B1011000,],;,Val,$eb0,,,H9,:,Float,;,Destructor,(,),{,},Val,$1_,,,Ua9u_N,:,_,;,},Class,_,:,S,{,},<EOF>''',
                101
            )
        )

    def test_2088(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:u6f{Constructor (V_xu,Gmv66,_,_,x:Array [Array [Array [Array [Array [Array [Array [Array [String ,0XF_A_C_5],0x53],0b111000],0xD],0B1011001],71],0B1],01];_,_,_,__Y:_D_){} }''',
                '''Class,_,:,u6f,{,Constructor,(,V_xu,,,Gmv66,,,_,,,_,,,x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XFAC5,],,,0x53,],,,0b111000,],,,0xD,],,,0B1011001,],,,71,],,,0B1,],,,01,],;,_,,,_,,,_,,,__Y,:,_D_,),{,},},<EOF>''',
                101
            )
        )

    def test_2089(self):
        self.assertTrue(
            TestLexer.test(
                '''Class oy{Val $7,_W:String ;Constructor (c,A66,o95_,NM:Array [Array [Array [Int ,92],92],025];w,_qN,_5:Boolean ){} }''',
                '''Class,oy,{,Val,$7,,,_W,:,String,;,Constructor,(,c,,,A66,,,o95_,,,NM,:,Array,[,Array,[,Array,[,Int,,,92,],,,92,],,,025,],;,w,,,_qN,,,_5,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2090(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{u(_vT9:Array [Array [String ,06_5_2],0B1];_I:String ;_3,_,_V,_6,__:String ;_8_9,__4,_:k){}$E(e_:Array [Array [Array [Array [Int ,0b1],27],0x46],04];W_,sh_h_:Boolean ){} }''',
                '''Class,K,{,u,(,_vT9,:,Array,[,Array,[,String,,,0652,],,,0B1,],;,_I,:,String,;,_3,,,_,,,_V,,,_6,,,__,:,String,;,_8_9,,,__4,,,_,:,k,),{,},$E,(,e_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,27,],,,0x46,],,,04,],;,W_,,,sh_h_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2091(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$3(__,X_:i;____3,K,_N2j:Array [Boolean ,03_651]){}Constructor (_,_Jj,N,y,y:Array [Array [Array [Boolean ,9],0b100100],9]){} }''',
                '''Class,_,{,$3,(,__,,,X_,:,i,;,____3,,,K,,,_N2j,:,Array,[,Boolean,,,03651,],),{,},Constructor,(,_,,,_Jj,,,N,,,y,,,y,:,Array,[,Array,[,Array,[,Boolean,,,9,],,,0b100100,],,,9,],),{,},},<EOF>''',
                101
            )
        )

    def test_2092(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (dGK0:Array [Int ,8];Q:Array [Array [Array [Array [Array [Array [String ,824],03],8],017],19],0X1]){Break ;} }Class A{}''',
                '''Class,_,{,Constructor,(,dGK0,:,Array,[,Int,,,8,],;,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,824,],,,03,],,,8,],,,017,],,,19,],,,0X1,],),{,Break,;,},},Class,A,{,},<EOF>''',
                101
            )
        )

    def test_2093(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1Q:_{$F9(__9,_,F:Array [Array [Array [String ,0b1_0],0b111],03_0];YF,I,_RmI0:Array [Array [Boolean ,543],0X2D]){Continue ;} }Class ___{}''',
                '''Class,_1Q,:,_,{,$F9,(,__9,,,_,,,F,:,Array,[,Array,[,Array,[,String,,,0b10,],,,0b111,],,,030,],;,YF,,,I,,,_RmI0,:,Array,[,Array,[,Boolean,,,543,],,,0X2D,],),{,Continue,;,},},Class,___,{,},<EOF>''',
                101
            )
        )

    def test_2094(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R:_04{Constructor (i_:Array [Array [Array [Float ,0b1001111],0x3D],0X50];D:Array [Int ,0X50];_,j8__4,_f_:Boolean ){} }''',
                '''Class,R,:,_04,{,Constructor,(,i_,:,Array,[,Array,[,Array,[,Float,,,0b1001111,],,,0x3D,],,,0X50,],;,D,:,Array,[,Int,,,0X50,],;,_,,,j8__4,,,_f_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2095(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:J2{Constructor (I,_g1:vT__;K:B;H4,I6q___g4:Array [Float ,05_5_417_7];_:M__6){}Var Q:String ;}Class V{}''',
                '''Class,T,:,J2,{,Constructor,(,I,,,_g1,:,vT__,;,K,:,B,;,H4,,,I6q___g4,:,Array,[,Float,,,0554177,],;,_,:,M__6,),{,},Var,Q,:,String,;,},Class,V,{,},<EOF>''',
                101
            )
        )

    def test_2096(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _73{}Class oeg:_{Constructor (_AaT9_,_:_0_M;d,_:Array [Array [Float ,6],0B1010111]){Continue ;}Val $___,$_,__:_z2;}Class T_:U7{Destructor (){Val q:Array [Array [Array [Float ,0b10],067],4];} }Class S{}Class __{Val $_:r3;}Class _{}''',
                '''Class,_73,{,},Class,oeg,:,_,{,Constructor,(,_AaT9_,,,_,:,_0_M,;,d,,,_,:,Array,[,Array,[,Float,,,6,],,,0B1010111,],),{,Continue,;,},Val,$___,,,$_,,,__,:,_z2,;,},Class,T_,:,U7,{,Destructor,(,),{,Val,q,:,Array,[,Array,[,Array,[,Float,,,0b10,],,,067,],,,4,],;,},},Class,S,{,},Class,__,{,Val,$_,:,r3,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2097(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_m{Var w:__;Constructor (T,j,r_,A,_:Array [Array [Array [Array [Boolean ,025],3],025],025]){}Val _3k:Boolean ;}''',
                '''Class,_,:,_m,{,Var,w,:,__,;,Constructor,(,T,,,j,,,r_,,,A,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,025,],,,3,],,,025,],,,025,],),{,},Val,_3k,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2098(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:_4{}Class _{Constructor (__,P__:Float ;f,t080_,_1,_,_q1,k4:B2){Val Z3:Int ;}Destructor (){}Val f4:N;}''',
                '''Class,A,:,_4,{,},Class,_,{,Constructor,(,__,,,P__,:,Float,;,f,,,t080_,,,_1,,,_,,,_q1,,,k4,:,B2,),{,Val,Z3,:,Int,;,},Destructor,(,),{,},Val,f4,:,N,;,},<EOF>''',
                101
            )
        )

    def test_2099(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R__9{Var $_2_:Int ;}Class __{}Class _20:_{}Class _{Val $92_,h0J_3,_5:Int ;Val _:Array [Array [Array [Float ,7_9],0130],42_8];Val _,j_,$97__,_4,_,O_P__:Float ;}Class __{Var __8s_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,01],6],6_8],0x41],0x41],0b111010],0B100111],0x41],0X5C],0B1];}''',
                '''Class,R__9,{,Var,$_2_,:,Int,;,},Class,__,{,},Class,_20,:,_,{,},Class,_,{,Val,$92_,,,h0J_3,,,_5,:,Int,;,Val,_,:,Array,[,Array,[,Array,[,Float,,,79,],,,0130,],,,428,],;,Val,_,,,j_,,,$97__,,,_4,,,_,,,O_P__,:,Float,;,},Class,__,{,Var,__8s_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,6,],,,68,],,,0x41,],,,0x41,],,,0b111010,],,,0B100111,],,,0x41,],,,0X5C,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_2100(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x7a23:_m22{Var $0_,$_,_45:String ;_(__7:Array [Array [Array [Array [Array [Int ,0x52],050],0x683_B],0XA0_1],0XB_14];ev45m7_,_,S_P2:String ){} }''',
                '''Class,x7a23,:,_m22,{,Var,$0_,,,$_,,,_45,:,String,;,_,(,__7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x52,],,,050,],,,0x683B,],,,0XA01,],,,0XB14,],;,ev45m7_,,,_,,,S_P2,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2101(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2yyXc{_U(){Var r,__,vK:f;} }Class z{}Class fx:_{Val XY_0,$I:Boolean ;Var $5:Array [String ,0b1];}Class V_{}''',
                '''Class,_2yyXc,{,_U,(,),{,Var,r,,,__,,,vK,:,f,;,},},Class,z,{,},Class,fx,:,_,{,Val,XY_0,,,$I,:,Boolean,;,Var,$5,:,Array,[,String,,,0b1,],;,},Class,V_,{,},<EOF>''',
                101
            )
        )

    def test_2102(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F2_{Destructor (){v::$_();} }Class _2{Constructor (G3,_t___,dp,j_33:String ){__::$18();}Var $_:Float ;Var _:Array [Array [String ,067],067];}Class l6{}Class _:yV{Constructor (){Continue ;Continue ;Break ;} }Class _:t{}''',
                '''Class,F2_,{,Destructor,(,),{,v,::,$_,(,),;,},},Class,_2,{,Constructor,(,G3,,,_t___,,,dp,,,j_33,:,String,),{,__,::,$18,(,),;,},Var,$_,:,Float,;,Var,_,:,Array,[,Array,[,String,,,067,],,,067,],;,},Class,l6,{,},Class,_,:,yV,{,Constructor,(,),{,Continue,;,Continue,;,Break,;,},},Class,_,:,t,{,},<EOF>''',
                101
            )
        )

    def test_2103(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r3:P5__{Constructor (__5_9__9A,_8,b,_cg_:Array [Float ,5_1_6_818];_:String ;_,_:_I;___v2:Boolean ){} }Class T{}''',
                '''Class,r3,:,P5__,{,Constructor,(,__5_9__9A,,,_8,,,b,,,_cg_,:,Array,[,Float,,,516818,],;,_,:,String,;,_,,,_,:,_I,;,___v2,:,Boolean,),{,},},Class,T,{,},<EOF>''',
                101
            )
        )

    def test_2104(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{Destructor (){}Constructor (_BUDpJ98,_:Array [Array [Array [String ,7_5],046],0b1010111];_:Boolean ){_::$_();} }Class _7{}''',
                '''Class,B,{,Destructor,(,),{,},Constructor,(,_BUDpJ98,,,_,:,Array,[,Array,[,Array,[,String,,,75,],,,046,],,,0b1010111,],;,_,:,Boolean,),{,_,::,$_,(,),;,},},Class,_7,{,},<EOF>''',
                101
            )
        )

    def test_2105(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t59:F{}Class __{}Class x{}Class _{Destructor (){ {} }Var $0,M0e_,_,$_MD:Float ;Q(){}Var $X_,_CPU,$_:Array [Array [Int ,33],0B1];}''',
                '''Class,t59,:,F,{,},Class,__,{,},Class,x,{,},Class,_,{,Destructor,(,),{,{,},},Var,$0,,,M0e_,,,_,,,$_MD,:,Float,;,Q,(,),{,},Var,$X_,,,_CPU,,,$_,:,Array,[,Array,[,Int,,,33,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_2106(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _91:_0{m_(){}$_(Z:Boolean ;__v,R_R5:b8;__,_,A:Array [Float ,01_0_20];I89,_c,__2P,_:Array [Boolean ,0x53]){} }Class _{}''',
                '''Class,_91,:,_0,{,m_,(,),{,},$_,(,Z,:,Boolean,;,__v,,,R_R5,:,b8,;,__,,,_,,,A,:,Array,[,Float,,,01020,],;,I89,,,_c,,,__2P,,,_,:,Array,[,Boolean,,,0x53,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2107(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __YX{}Class _{Var H7Qq,$_:Array [String ,05_6];_k(){} }Class _{Val _7_:Array [Array [Float ,69],051];Destructor (){}Val Y_,$j_U_K:Int ;Val T:Array [Array [Float ,0X1A],0B10_0];}''',
                '''Class,__YX,{,},Class,_,{,Var,H7Qq,,,$_,:,Array,[,String,,,056,],;,_k,(,),{,},},Class,_,{,Val,_7_,:,Array,[,Array,[,Float,,,69,],,,051,],;,Destructor,(,),{,},Val,Y_,,,$j_U_K,:,Int,;,Val,T,:,Array,[,Array,[,Float,,,0X1A,],,,0B100,],;,},<EOF>''',
                101
            )
        )

    def test_2108(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_:__3b7V_{Constructor (p,V22m,p_:Array [Boolean ,0120];j_1,_2M,y__,n:__){ {}Return ;}Val W:Array [Array [Boolean ,57],57];}Class ____{}''',
                '''Class,J_,:,__3b7V_,{,Constructor,(,p,,,V22m,,,p_,:,Array,[,Boolean,,,0120,],;,j_1,,,_2M,,,y__,,,n,:,__,),{,{,},Return,;,},Val,W,:,Array,[,Array,[,Boolean,,,57,],,,57,],;,},Class,____,{,},<EOF>''',
                101
            )
        )

    def test_2109(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $L:_u;Val W3:Array [Array [Array [Int ,0144],0144],0144];}Class __:R{Var P,_:String ;Destructor (){}Var h:d49_4_;}Class r_{Destructor (){} }''',
                '''Class,_,:,_,{,Var,$L,:,_u,;,Val,W3,:,Array,[,Array,[,Array,[,Int,,,0144,],,,0144,],,,0144,],;,},Class,__,:,R,{,Var,P,,,_,:,String,;,Destructor,(,),{,},Var,h,:,d49_4_,;,},Class,r_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2110(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Constructor (C__5,C:Array [String ,0X39];w56:Float ;Lm__,s,____,_:String ){} }Class _:p{}Class _{}''',
                '''Class,_,{,Destructor,(,),{,},Constructor,(,C__5,,,C,:,Array,[,String,,,0X39,],;,w56,:,Float,;,Lm__,,,s,,,____,,,_,:,String,),{,},},Class,_,:,p,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2111(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yh{Constructor (_:_;H0a:_;_n,_,N,w:Array [String ,0b111]){}Var $_u,$L:Array [Array [Array [Boolean ,037],304_5],0B1_0];}''',
                '''Class,yh,{,Constructor,(,_,:,_,;,H0a,:,_,;,_n,,,_,,,N,,,w,:,Array,[,String,,,0b111,],),{,},Var,$_u,,,$L,:,Array,[,Array,[,Array,[,Boolean,,,037,],,,3045,],,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_2112(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:_{_(){} }Class _{VL(){_::$8_p1G();}Constructor (){Continue ;} }Class f{}Class Yx:__X{}Class Yo:R{Var __63:_Y;}''',
                '''Class,m,:,_,{,_,(,),{,},},Class,_,{,VL,(,),{,_,::,$8_p1G,(,),;,},Constructor,(,),{,Continue,;,},},Class,f,{,},Class,Yx,:,__X,{,},Class,Yo,:,R,{,Var,__63,:,_Y,;,},<EOF>''',
                101
            )
        )

    def test_2113(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C{Var _,$7__6,$p2r84:Array [Float ,0X8_B8_8C96];}Class J3_{$9_(y__,_4:Array [Array [Array [Int ,0B1011],0B1011],0B1011]){}Val _:F_;}Class y_3{}Class N{}''',
                '''Class,C,{,Var,_,,,$7__6,,,$p2r84,:,Array,[,Float,,,0X8B88C96,],;,},Class,J3_,{,$9_,(,y__,,,_4,:,Array,[,Array,[,Array,[,Int,,,0B1011,],,,0B1011,],,,0B1011,],),{,},Val,_,:,F_,;,},Class,y_3,{,},Class,N,{,},<EOF>''',
                101
            )
        )

    def test_2114(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class _{Var N:_;}Class __{Constructor (_I94:Float ){Break ;F::$_();}Var t,g:Array [Array [Int ,1],0X20];Val $Z1Q:Array [Array [String ,0B1_0],04_5];}''',
                '''Class,__,:,_,{,},Class,_,{,Var,N,:,_,;,},Class,__,{,Constructor,(,_I94,:,Float,),{,Break,;,F,::,$_,(,),;,},Var,t,,,g,:,Array,[,Array,[,Int,,,1,],,,0X20,],;,Val,$Z1Q,:,Array,[,Array,[,String,,,0B10,],,,045,],;,},<EOF>''',
                101
            )
        )

    def test_2115(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{Val $8,$L4_:Array [Array [Array [Array [Array [Array [Array [String ,0B1],0B101101],05_55],04],29],0b10_01_0_1],0B101101];Destructor (){} }Class ef__{}''',
                '''Class,V,{,Val,$8,,,$L4_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0B101101,],,,0555,],,,04,],,,29,],,,0b100101,],,,0B101101,],;,Destructor,(,),{,},},Class,ef__,{,},<EOF>''',
                101
            )
        )

    def test_2116(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H{}Class _{Var $_,$Yg3_,_:String ;}Class _4_{}Class __:_d{Var H___3_:Array [Array [Array [Boolean ,0117],88],88];}''',
                '''Class,H,{,},Class,_,{,Var,$_,,,$Yg3_,,,_,:,String,;,},Class,_4_,{,},Class,__,:,_d,{,Var,H___3_,:,Array,[,Array,[,Array,[,Boolean,,,0117,],,,88,],,,88,],;,},<EOF>''',
                101
            )
        )

    def test_2117(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class K2:gI_{Var $_,$50:_;Constructor (__,_,__,_:W;mo,_:Array [Array [Array [Array [Array [String ,071],071],0X28],0B1],03];b1G,G:Array [Array [Array [String ,0x27],3],0B1]){} }''',
                '''Class,_,{,},Class,K2,:,gI_,{,Var,$_,,,$50,:,_,;,Constructor,(,__,,,_,,,__,,,_,:,W,;,mo,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,071,],,,071,],,,0X28,],,,0B1,],,,03,],;,b1G,,,G,:,Array,[,Array,[,Array,[,String,,,0x27,],,,3,],,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_2118(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w:_dT{Val $R:_;Val _9,$v:Array [Float ,0X2B9];Var _:pc;Var $6:Array [Float ,0b101110];Var h___,_,_A6:Array [Array [Boolean ,0B1011000],0B1];}Class f{}Class _{Var U:Array [Array [Float ,03],4];}''',
                '''Class,_w,:,_dT,{,Val,$R,:,_,;,Val,_9,,,$v,:,Array,[,Float,,,0X2B9,],;,Var,_,:,pc,;,Var,$6,:,Array,[,Float,,,0b101110,],;,Var,h___,,,_,,,_A6,:,Array,[,Array,[,Boolean,,,0B1011000,],,,0B1,],;,},Class,f,{,},Class,_,{,Var,U,:,Array,[,Array,[,Float,,,03,],,,4,],;,},<EOF>''',
                101
            )
        )

    def test_2119(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{}Class U:_{}Class _Q:G0{Val $3:Array [Array [Boolean ,0X2A],0X9];}Class _{$__g6Y5(_:String ){}Val _,_:Array [Array [Float ,75],8];Constructor (){}$0FC(){} }''',
                '''Class,M,{,},Class,U,:,_,{,},Class,_Q,:,G0,{,Val,$3,:,Array,[,Array,[,Boolean,,,0X2A,],,,0X9,],;,},Class,_,{,$__g6Y5,(,_,:,String,),{,},Val,_,,,_,:,Array,[,Array,[,Float,,,75,],,,8,],;,Constructor,(,),{,},$0FC,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2120(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _4{}Class _0j:Z3zm{}Class g{}Class dWtK__{}Class i:N{Val F3_:Boolean ;Destructor (){}Val $2,$4,$_,FW,$7,__W,_6v,_f6:Float ;}''',
                '''Class,_,{,},Class,_4,{,},Class,_0j,:,Z3zm,{,},Class,g,{,},Class,dWtK__,{,},Class,i,:,N,{,Val,F3_,:,Boolean,;,Destructor,(,),{,},Val,$2,,,$4,,,$_,,,FW,,,$7,,,__W,,,_6v,,,_f6,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2121(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0{}Class R:F_{Val $_bRo:_7K;Constructor (O437:Array [Array [Array [Array [Int ,0B1],0x2E],0XD],0720];_,XroC:Array [Float ,0X41]){} }''',
                '''Class,_0,{,},Class,R,:,F_,{,Val,$_bRo,:,_7K,;,Constructor,(,O437,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0x2E,],,,0XD,],,,0720,],;,_,,,XroC,:,Array,[,Float,,,0X41,],),{,},},<EOF>''',
                101
            )
        )

    def test_2122(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7:b_A0_O__{Constructor (w_4y:Array [Array [Array [Array [Array [Float ,015],0b1_1],065],015],0B1011100]){} }Class __:c{}''',
                '''Class,_7,:,b_A0_O__,{,Constructor,(,w_4y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,015,],,,0b11,],,,065,],,,015,],,,0B1011100,],),{,},},Class,__,:,c,{,},<EOF>''',
                101
            )
        )

    def test_2123(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:q_5{Var _,_l_:_;$59(){}Constructor (__39:String ;__7:Array [String ,77_32]){}Constructor (i:a_57){Continue ;} }Class P:w{}''',
                '''Class,E,:,q_5,{,Var,_,,,_l_,:,_,;,$59,(,),{,},Constructor,(,__39,:,String,;,__7,:,Array,[,String,,,7732,],),{,},Constructor,(,i,:,a_57,),{,Continue,;,},},Class,P,:,w,{,},<EOF>''',
                101
            )
        )

    def test_2124(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:R1_{}Class O0{Var $17,$5:Array [Array [String ,0x7],0b1010];Constructor (__,M_,_:Int ;M_:Int ){Break ;Val f:Array [Array [Array [Array [Int ,0b1010],0B1_1],8],94];} }Class U:Tu{}Class _M1:l{}''',
                '''Class,_,:,R1_,{,},Class,O0,{,Var,$17,,,$5,:,Array,[,Array,[,String,,,0x7,],,,0b1010,],;,Constructor,(,__,,,M_,,,_,:,Int,;,M_,:,Int,),{,Break,;,Val,f,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1010,],,,0B11,],,,8,],,,94,],;,},},Class,U,:,Tu,{,},Class,_M1,:,l,{,},<EOF>''',
                101
            )
        )

    def test_2125(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:m{$_(__2:Array [Array [Array [Int ,0B1001111],35],0B1_0]){Val _,H:Array [Float ,0107];}Var $7O4S5C0,_nY:Boolean ;Constructor (_7_x99__:__3;_,_5__:Float ;__n,_:m;I:sF){} }''',
                '''Class,_,:,m,{,$_,(,__2,:,Array,[,Array,[,Array,[,Int,,,0B1001111,],,,35,],,,0B10,],),{,Val,_,,,H,:,Array,[,Float,,,0107,],;,},Var,$7O4S5C0,,,_nY,:,Boolean,;,Constructor,(,_7_x99__,:,__3,;,_,,,_5__,:,Float,;,__n,,,_,:,m,;,I,:,sF,),{,},},<EOF>''',
                101
            )
        )

    def test_2126(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___V_U_{}Class a_{}Class _{_(h,YFd:W;_F_:Array [Array [Array [Array [Array [String ,0b1],0b10],0B1110],0xF],48];E5,m_y72_,_,_:W;OW:String ;Z4F:String ){} }''',
                '''Class,___V_U_,{,},Class,a_,{,},Class,_,{,_,(,h,,,YFd,:,W,;,_F_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0b10,],,,0B1110,],,,0xF,],,,48,],;,E5,,,m_y72_,,,_,,,_,:,W,;,OW,:,String,;,Z4F,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2127(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6:s_{Constructor (OC:Boolean ;_0:Array [Float ,6]){}Var n5:p0;Val $_8,$PL,$z,$S_:Array [Array [Array [String ,07],4],0X6];}Class a_{}''',
                '''Class,_6,:,s_,{,Constructor,(,OC,:,Boolean,;,_0,:,Array,[,Float,,,6,],),{,},Var,n5,:,p0,;,Val,$_8,,,$PL,,,$z,,,$S_,:,Array,[,Array,[,Array,[,String,,,07,],,,4,],,,0X6,],;,},Class,a_,{,},<EOF>''',
                101
            )
        )

    def test_2128(self):
        self.assertTrue(
            TestLexer.test(
                '''Class iL:Q0{Val $h_E:Boolean ;}Class _:W{}Class ___:z{Var $RL:Array [Array [Array [Array [Float ,0B1010001],0B1],4],1];Destructor (){} }''',
                '''Class,iL,:,Q0,{,Val,$h_E,:,Boolean,;,},Class,_,:,W,{,},Class,___,:,z,{,Var,$RL,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1010001,],,,0B1,],,,4,],,,1,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2129(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _82:__6_8{}Class __{}Class _{Constructor (bI,_,_9c8_,_:f;_,nbg,_39M0_,__w:Array [Float ,0B1000010];__q:_E){Continue ;} }''',
                '''Class,_82,:,__6_8,{,},Class,__,{,},Class,_,{,Constructor,(,bI,,,_,,,_9c8_,,,_,:,f,;,_,,,nbg,,,_39M0_,,,__w,:,Array,[,Float,,,0B1000010,],;,__q,:,_E,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2130(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f_0A22{Destructor (){} }Class v:Y7_s_u{Constructor (){Continue ;}kV40(_6__15,X,m,__A48__521,p5jG,__0:_v1){}Val $5c:Int ;}''',
                '''Class,f_0A22,{,Destructor,(,),{,},},Class,v,:,Y7_s_u,{,Constructor,(,),{,Continue,;,},kV40,(,_6__15,,,X,,,m,,,__A48__521,,,p5jG,,,__0,:,_v1,),{,},Val,$5c,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2131(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_z{}Class __:Z{}Class __1_{}Class n{}Class __7{Var _,I_7,__,$756F:Int ;Val $_vHa_1,_,W0u,$g,_,I:Array [String ,0X14];}''',
                '''Class,N,:,_z,{,},Class,__,:,Z,{,},Class,__1_,{,},Class,n,{,},Class,__7,{,Var,_,,,I_7,,,__,,,$756F,:,Int,;,Val,$_vHa_1,,,_,,,W0u,,,$g,,,_,,,I,:,Array,[,String,,,0X14,],;,},<EOF>''',
                101
            )
        )

    def test_2132(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _l{$Lc7(_,I4:Array [Int ,20]){}Val _:Array [Float ,1_56_0];}Class P{$1(A,P:Array [Float ,20];MXI:Array [String ,0x4];v,eB:_){}_(){} }''',
                '''Class,_l,{,$Lc7,(,_,,,I4,:,Array,[,Int,,,20,],),{,},Val,_,:,Array,[,Float,,,1560,],;,},Class,P,{,$1,(,A,,,P,:,Array,[,Float,,,20,],;,MXI,:,Array,[,String,,,0x4,],;,v,,,eB,:,_,),{,},_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2133(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:b{Val $_5x,$r,$t,$J9:String ;Destructor (){}Var _K,_,$5:r91;Destructor (){} }Class __f{Constructor (){} }''',
                '''Class,w,:,b,{,Val,$_5x,,,$r,,,$t,,,$J9,:,String,;,Destructor,(,),{,},Var,_K,,,_,,,$5,:,r91,;,Destructor,(,),{,},},Class,__f,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2134(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class ___:t{$c(__,_,k:Float ){} }Class l:j{Destructor (){Var _:o85=---_08H::$_--_::$5();Continue ;Continue ;} }Class I5d__I_p{Var $h,$_26f:Boolean ;}Class G4{}''',
                '''Class,_,{,},Class,___,:,t,{,$c,(,__,,,_,,,k,:,Float,),{,},},Class,l,:,j,{,Destructor,(,),{,Var,_,:,o85,=,-,-,-,_08H,::,$_,-,-,_,::,$5,(,),;,Continue,;,Continue,;,},},Class,I5d__I_p,{,Var,$h,,,$_26f,:,Boolean,;,},Class,G4,{,},<EOF>''',
                101
            )
        )

    def test_2135(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _X{Val $_b3_6_:Array [Array [String ,0x8B],0B101000];Var $_q,$_:Boolean ;$T(s_:Float ;_5M_,a_u5,_:Array [Int ,02];_:String ;Ds,_:Array [Int ,0B101000]){} }Class __:u{}''',
                '''Class,_X,{,Val,$_b3_6_,:,Array,[,Array,[,String,,,0x8B,],,,0B101000,],;,Var,$_q,,,$_,:,Boolean,;,$T,(,s_,:,Float,;,_5M_,,,a_u5,,,_,:,Array,[,Int,,,02,],;,_,:,String,;,Ds,,,_,:,Array,[,Int,,,0B101000,],),{,},},Class,__,:,u,{,},<EOF>''',
                101
            )
        )

    def test_2136(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4:e9_{}Class _4B4{}Class _:c{Q(L,z6__T8f,d_3:_Y_3;j8,_:_){}Constructor (_,X,_,__,Ev_6,_,a4B3__2,_d27:pF__;fAJQ51,_,_V:Boolean ;__1XY__9,_,e:Boolean ){}Val $l2:Array [String ,0123];}Class _:XSY4{Destructor (){} }''',
                '''Class,_4,:,e9_,{,},Class,_4B4,{,},Class,_,:,c,{,Q,(,L,,,z6__T8f,,,d_3,:,_Y_3,;,j8,,,_,:,_,),{,},Constructor,(,_,,,X,,,_,,,__,,,Ev_6,,,_,,,a4B3__2,,,_d27,:,pF__,;,fAJQ51,,,_,,,_V,:,Boolean,;,__1XY__9,,,_,,,e,:,Boolean,),{,},Val,$l2,:,Array,[,String,,,0123,],;,},Class,_,:,XSY4,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2137(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class R{}Class _N{Var $0N_,___:_;Var _,$Y,$R:String ;mlG_36x(R,_9H_1,_0:Array [Array [Boolean ,3_2_6_1],77];_K:_w){Continue ;}Constructor (){} }''',
                '''Class,_,{,},Class,R,{,},Class,_N,{,Var,$0N_,,,___,:,_,;,Var,_,,,$Y,,,$R,:,String,;,mlG_36x,(,R,,,_9H_1,,,_0,:,Array,[,Array,[,Boolean,,,3261,],,,77,],;,_K,:,_w,),{,Continue,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2138(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q2{Constructor (_,_:_;_:Array [Array [Array [Array [Int ,3],3],0136],0136];_sy:Array [Array [Int ,0X35],0X8_F_9_6]){}LA__(){}Var $ad,__:Array [Int ,0x30];}''',
                '''Class,Q2,{,Constructor,(,_,,,_,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,3,],,,3,],,,0136,],,,0136,],;,_sy,:,Array,[,Array,[,Int,,,0X35,],,,0X8F96,],),{,},LA__,(,),{,},Var,$ad,,,__,:,Array,[,Int,,,0x30,],;,},<EOF>''',
                101
            )
        )

    def test_2139(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r1u{_(_3:Array [Array [Boolean ,0B1],4_02_3_0_0];s,_,lg_2r8,_2_,_4,__,o:Boolean ){} }Class JW:RH{Var $0C,$24W_,F:b;Val $m:String ;}Class _2{Var h7:_l1;Val _,$_:_;}''',
                '''Class,r1u,{,_,(,_3,:,Array,[,Array,[,Boolean,,,0B1,],,,402300,],;,s,,,_,,,lg_2r8,,,_2_,,,_4,,,__,,,o,:,Boolean,),{,},},Class,JW,:,RH,{,Var,$0C,,,$24W_,,,F,:,b,;,Val,$m,:,String,;,},Class,_2,{,Var,h7,:,_l1,;,Val,_,,,$_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2140(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:t__M_Sw0{Constructor (__:String ;A7,q:Array [Array [Array [Array [Boolean ,0x4],0B1],49],0112];_,Uy:_N;u:String ;A__t:__y_){Continue ;Break ;Break ;} }''',
                '''Class,K,:,t__M_Sw0,{,Constructor,(,__,:,String,;,A7,,,q,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x4,],,,0B1,],,,49,],,,0112,],;,_,,,Uy,:,_N,;,u,:,String,;,A__t,:,__y_,),{,Continue,;,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2141(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f37{}Class _:P3D_bb{}Class _5{Constructor (){ {Continue ;} }Constructor (a1:f){Continue ;Continue ;} }Class _{}Class qW3_{}''',
                '''Class,f37,{,},Class,_,:,P3D_bb,{,},Class,_5,{,Constructor,(,),{,{,Continue,;,},},Constructor,(,a1,:,f,),{,Continue,;,Continue,;,},},Class,_,{,},Class,qW3_,{,},<EOF>''',
                101
            )
        )

    def test_2142(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t_:d_{}Class _:_W{}Class _44{Var $51S_:Array [Float ,04_2];Var __9_7,__,_:Array [Array [Float ,98],0132];}Class V:_{}''',
                '''Class,t_,:,d_,{,},Class,_,:,_W,{,},Class,_44,{,Var,$51S_,:,Array,[,Float,,,042,],;,Var,__9_7,,,__,,,_,:,Array,[,Array,[,Float,,,98,],,,0132,],;,},Class,V,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2143(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N_K{Constructor (__,_:Array [Array [Int ,0xF],06];H,L:Int ;uV,_:Array [Array [Int ,010_3_4],0x20];L,hQ_,_v,_:J__;Kl:Array [Array [Array [Array [Array [Array [Array [Array [Float ,58],04_6_2],0x9A_E1],0X9C_1_2_9],0XA],7],0b1001001],06_33];I:Array [Float ,0B11101]){} }''',
                '''Class,N_K,{,Constructor,(,__,,,_,:,Array,[,Array,[,Int,,,0xF,],,,06,],;,H,,,L,:,Int,;,uV,,,_,:,Array,[,Array,[,Int,,,01034,],,,0x20,],;,L,,,hQ_,,,_v,,,_,:,J__,;,Kl,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,58,],,,0462,],,,0x9AE1,],,,0X9C129,],,,0XA,],,,7,],,,0b1001001,],,,0633,],;,I,:,Array,[,Float,,,0B11101,],),{,},},<EOF>''',
                101
            )
        )

    def test_2144(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $EBcs:Array [Int ,8_73];Var $_4:Array [Array [Float ,030],3];}Class _:_{Val $S,$H7,$Cx:__;Destructor (){} }''',
                '''Class,_,{,Val,$EBcs,:,Array,[,Int,,,873,],;,Var,$_4,:,Array,[,Array,[,Float,,,030,],,,3,],;,},Class,_,:,_,{,Val,$S,,,$H7,,,$Cx,:,__,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2145(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_{$w5K(t:String ;__f_,_,_,_r_aU_,_,H37:Array [Array [Array [Int ,4_2_6_9],0X28],0x60];_:g0){Return ;}Constructor (I,_Y_M_,_5:Array [Array [String ,032],05_2_0]){}Destructor (){} }''',
                '''Class,J_,{,$w5K,(,t,:,String,;,__f_,,,_,,,_,,,_r_aU_,,,_,,,H37,:,Array,[,Array,[,Array,[,Int,,,4269,],,,0X28,],,,0x60,],;,_,:,g0,),{,Return,;,},Constructor,(,I,,,_Y_M_,,,_5,:,Array,[,Array,[,String,,,032,],,,0520,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2146(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9A{Constructor (r:Boolean ){} }Class o{Constructor (W,__5g:Array [Array [Array [Array [Array [Boolean ,02],0142],0142],0x7_3],41];L8:String ;A,_,_2,p:r;_:_M;__,q,F_,_:u64;w_4Y02,_,G2_,B,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0b100011],9],01],4_946],0b1],061_6_02_4],0x57],0B11101],0xD];rj_1,O,_,n:Array [String ,0x1];_0,s:Boolean ){Return ;}Destructor (){} }''',
                '''Class,_9A,{,Constructor,(,r,:,Boolean,),{,},},Class,o,{,Constructor,(,W,,,__5g,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,02,],,,0142,],,,0142,],,,0x73,],,,41,],;,L8,:,String,;,A,,,_,,,_2,,,p,:,r,;,_,:,_M,;,__,,,q,,,F_,,,_,:,u64,;,w_4Y02,,,_,,,G2_,,,B,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b100011,],,,9,],,,01,],,,4946,],,,0b1,],,,0616024,],,,0x57,],,,0B11101,],,,0xD,],;,rj_1,,,O,,,_,,,n,:,Array,[,String,,,0x1,],;,_0,,,s,:,Boolean,),{,Return,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2147(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_{}Class __{}Class _:_{}Class _:_{Constructor (){}Constructor (J,f_:Int ;_1,_,s:Array [Array [Int ,94],04]){} }Class aH_:_{}''',
                '''Class,c,:,_,{,},Class,__,{,},Class,_,:,_,{,},Class,_,:,_,{,Constructor,(,),{,},Constructor,(,J,,,f_,:,Int,;,_1,,,_,,,s,:,Array,[,Array,[,Int,,,94,],,,04,],),{,},},Class,aH_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2148(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s9:kA{}Class o{Var _:Array [Array [Array [Array [Array [Int ,0B1_11],0B10],05],05],0X2C];Var WNH,$C8g_h,_j,__,_46F_:Array [Array [Int ,0B1001],8_0];Var $_,s,_:Int ;Var $L:Array [Float ,0b1_0];Val UPe:Array [Array [Array [Float ,0b111010],0x7],05]=u3___::$5.zz_w._;Destructor (){Break ;} }Class d{}Class vk_1{}''',
                '''Class,s9,:,kA,{,},Class,o,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B111,],,,0B10,],,,05,],,,05,],,,0X2C,],;,Var,WNH,,,$C8g_h,,,_j,,,__,,,_46F_,:,Array,[,Array,[,Int,,,0B1001,],,,80,],;,Var,$_,,,s,,,_,:,Int,;,Var,$L,:,Array,[,Float,,,0b10,],;,Val,UPe,:,Array,[,Array,[,Array,[,Float,,,0b111010,],,,0x7,],,,05,],=,u3___,::,$5,.,zz_w,.,_,;,Destructor,(,),{,Break,;,},},Class,d,{,},Class,vk_1,{,},<EOF>''',
                101
            )
        )

    def test_2149(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{}Class G_:i{Constructor (_7t:h_){Break ;Break ;}_(_:Array [Array [Array [Boolean ,047],020],74]){} }Class _2{Destructor (){}Destructor (){xs::$p_48k_();} }''',
                '''Class,c,{,},Class,G_,:,i,{,Constructor,(,_7t,:,h_,),{,Break,;,Break,;,},_,(,_,:,Array,[,Array,[,Array,[,Boolean,,,047,],,,020,],,,74,],),{,},},Class,_2,{,Destructor,(,),{,},Destructor,(,),{,xs,::,$p_48k_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2150(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n_{$__(C,wc__3:Array [Float ,0B100101];_,__:Array [Array [Array [Array [Array [Int ,0xFC],0B1_010_0_0],035],0b1],035]){g::$_B._._()._8();} }Class I{}''',
                '''Class,n_,{,$__,(,C,,,wc__3,:,Array,[,Float,,,0B100101,],;,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xFC,],,,0B101000,],,,035,],,,0b1,],,,035,],),{,g,::,$_B,.,_,.,_,(,),.,_8,(,),;,},},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_2151(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:t{}Class _1:N{Destructor (){}Val $3,__,$1:Array [String ,0b101011];Var $9,$__Z790:Array [Boolean ,0xE_9_C];$v(){} }Class oJ{Var _c,$4:Float ;}Class J8_:_h{}Class N{}''',
                '''Class,_,:,t,{,},Class,_1,:,N,{,Destructor,(,),{,},Val,$3,,,__,,,$1,:,Array,[,String,,,0b101011,],;,Var,$9,,,$__Z790,:,Array,[,Boolean,,,0xE9C,],;,$v,(,),{,},},Class,oJ,{,Var,_c,,,$4,:,Float,;,},Class,J8_,:,_h,{,},Class,N,{,},<EOF>''',
                101
            )
        )

    def test_2152(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6F{_(_k3_y:Int ;Y_W:Array [Array [Boolean ,0x32],0X15_E_9];_,_,V_OX_k_K:Boolean ;N6:Array [Array [Array [Array [Int ,7],0b1],06],0X4]){} }Class _{Constructor (){} }''',
                '''Class,_6F,{,_,(,_k3_y,:,Int,;,Y_W,:,Array,[,Array,[,Boolean,,,0x32,],,,0X15E9,],;,_,,,_,,,V_OX_k_K,:,Boolean,;,N6,:,Array,[,Array,[,Array,[,Array,[,Int,,,7,],,,0b1,],,,06,],,,0X4,],),{,},},Class,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2153(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:t{}Class R86{__(x:Array [Array [Array [Array [Int ,0b10],0x45],4],0X5E];__:k;j0_,Bw:String ;w8_,e7i:Array [Array [Array [Array [Array [Float ,88],88],0x26],88],2]){}$63(l,Z80:_871){Return ;} }''',
                '''Class,m,:,t,{,},Class,R86,{,__,(,x,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b10,],,,0x45,],,,4,],,,0X5E,],;,__,:,k,;,j0_,,,Bw,:,String,;,w8_,,,e7i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,88,],,,88,],,,0x26,],,,88,],,,2,],),{,},$63,(,l,,,Z80,:,_871,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2154(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{Constructor (b_,R:String ;_8_5:Array [Array [Array [Array [Array [String ,066],58],0x5C],02],07];___,__:_9;_:Array [String ,71];e_5_:_){}Constructor (L:String ;n_:Array [String ,71];Ao_:Boolean ;_2_:K;A,K:Array [Array [Int ,0B11101],0B11101]){} }Class S_:_8{}''',
                '''Class,x,{,Constructor,(,b_,,,R,:,String,;,_8_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,066,],,,58,],,,0x5C,],,,02,],,,07,],;,___,,,__,:,_9,;,_,:,Array,[,String,,,71,],;,e_5_,:,_,),{,},Constructor,(,L,:,String,;,n_,:,Array,[,String,,,71,],;,Ao_,:,Boolean,;,_2_,:,K,;,A,,,K,:,Array,[,Array,[,Int,,,0B11101,],,,0B11101,],),{,},},Class,S_,:,_8,{,},<EOF>''',
                101
            )
        )

    def test_2155(self):
        self.assertTrue(
            TestLexer.test(
                '''Class YW{Wi_s(_:Array [Array [Int ,0B1],21];a,____T_O,__:o5;q,f_,_7,FM:Array [Array [Array [Int ,6],0xF5],0B1]){} }Class e0:_{Var _,$zG:String ;$4(Oz:Array [String ,0B10];_94:Float ;G:Array [Array [Array [Boolean ,4],21],0x2B];_,v,Ww:Array [String ,0XB];_72_6,_Y72,z,__8,___:p_;Nw_:Array [Array [Int ,0b1000010],037]){Break ;} }''',
                '''Class,YW,{,Wi_s,(,_,:,Array,[,Array,[,Int,,,0B1,],,,21,],;,a,,,____T_O,,,__,:,o5,;,q,,,f_,,,_7,,,FM,:,Array,[,Array,[,Array,[,Int,,,6,],,,0xF5,],,,0B1,],),{,},},Class,e0,:,_,{,Var,_,,,$zG,:,String,;,$4,(,Oz,:,Array,[,String,,,0B10,],;,_94,:,Float,;,G,:,Array,[,Array,[,Array,[,Boolean,,,4,],,,21,],,,0x2B,],;,_,,,v,,,Ww,:,Array,[,String,,,0XB,],;,_72_6,,,_Y72,,,z,,,__8,,,___,:,p_,;,Nw_,:,Array,[,Array,[,Int,,,0b1000010,],,,037,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2156(self):
        self.assertTrue(
            TestLexer.test(
                '''Class CR1{Constructor (On_Q,r,S:Array [Boolean ,02_4_5];_:Int ;_1tVG__e,_:Int ;___:Array [Array [Boolean ,0x59],027]){Continue ;}Var $23_,$k_,L:Boolean ;}Class _h_{}''',
                '''Class,CR1,{,Constructor,(,On_Q,,,r,,,S,:,Array,[,Boolean,,,0245,],;,_,:,Int,;,_1tVG__e,,,_,:,Int,;,___,:,Array,[,Array,[,Boolean,,,0x59,],,,027,],),{,Continue,;,},Var,$23_,,,$k_,,,L,:,Boolean,;,},Class,_h_,{,},<EOF>''',
                101
            )
        )

    def test_2157(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k3IDA_8__Gc_2{}Class ___:_{}Class ____{uK(_6r_,U_:String ;FK2_,We_,_3:Array [Boolean ,0B101000];V0P5a:g){} }''',
                '''Class,k3IDA_8__Gc_2,{,},Class,___,:,_,{,},Class,____,{,uK,(,_6r_,,,U_,:,String,;,FK2_,,,We_,,,_3,:,Array,[,Boolean,,,0B101000,],;,V0P5a,:,g,),{,},},<EOF>''',
                101
            )
        )

    def test_2158(self):
        self.assertTrue(
            TestLexer.test(
                '''Class xv7:_60S{Var u__:W;}Class ___d{}Class _{Constructor (_,_X6,_R,_:C;R,Xb:Array [Array [Float ,0x2A],02]){kOJA::$4().S7();}Constructor (_6:Boolean ){}Constructor (){} }Class Al{}''',
                '''Class,xv7,:,_60S,{,Var,u__,:,W,;,},Class,___d,{,},Class,_,{,Constructor,(,_,,,_X6,,,_R,,,_,:,C,;,R,,,Xb,:,Array,[,Array,[,Float,,,0x2A,],,,02,],),{,kOJA,::,$4,(,),.,S7,(,),;,},Constructor,(,_6,:,Boolean,),{,},Constructor,(,),{,},},Class,Al,{,},<EOF>''',
                101
            )
        )

    def test_2159(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o_:_{}Class _:s{_(){}Constructor (h,_,_A,_:U){}Constructor (_K:Array [Array [Int ,07],0X5]){} }Class W{}''',
                '''Class,o_,:,_,{,},Class,_,:,s,{,_,(,),{,},Constructor,(,h,,,_,,,_A,,,_,:,U,),{,},Constructor,(,_K,:,Array,[,Array,[,Int,,,07,],,,0X5,],),{,},},Class,W,{,},<EOF>''',
                101
            )
        )

    def test_2160(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _72:_N8{}Class I{Var $V_:Array [Array [Array [Int ,016],0x5D],0x1];Constructor (_,_3,_:_;_:Boolean ){} }Class t{}''',
                '''Class,_72,:,_N8,{,},Class,I,{,Var,$V_,:,Array,[,Array,[,Array,[,Int,,,016,],,,0x5D,],,,0x1,],;,Constructor,(,_,,,_3,,,_,:,_,;,_,:,Boolean,),{,},},Class,t,{,},<EOF>''',
                101
            )
        )

    def test_2161(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var N2z,_k0_,$_,_,_,M9__:l_;$8(v,ey,C_:Boolean ;h1:_;wB:Float ;l,_,d_:Boolean ;I:Array [Int ,0x4F];_5:Array [Int ,0x4F];__p0_,_:F;Ru:__){Continue ;}Val $_1,$_Le:U_;Var $_05:Array [String ,0X9];}Class _{}Class A{}''',
                '''Class,_,{,Var,N2z,,,_k0_,,,$_,,,_,,,_,,,M9__,:,l_,;,$8,(,v,,,ey,,,C_,:,Boolean,;,h1,:,_,;,wB,:,Float,;,l,,,_,,,d_,:,Boolean,;,I,:,Array,[,Int,,,0x4F,],;,_5,:,Array,[,Int,,,0x4F,],;,__p0_,,,_,:,F,;,Ru,:,__,),{,Continue,;,},Val,$_1,,,$_Le,:,U_,;,Var,$_05,:,Array,[,String,,,0X9,],;,},Class,_,{,},Class,A,{,},<EOF>''',
                101
            )
        )

    def test_2162(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{}Class g:_4__{}Class __{}Class _:J{Var $_,T,F,$_:Array [String ,0x4_5];}Class _:_Oz_{}Class _D0:_{}Class w{}''',
                '''Class,G,{,},Class,g,:,_4__,{,},Class,__,{,},Class,_,:,J,{,Var,$_,,,T,,,F,,,$_,:,Array,[,String,,,0x45,],;,},Class,_,:,_Oz_,{,},Class,_D0,:,_,{,},Class,w,{,},<EOF>''',
                101
            )
        )

    def test_2163(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_{Constructor (l,v__00__l:Array [Array [Array [Array [Boolean ,03_0],0126],4],3_8];e,_7,f:Array [String ,77]){ {z::$U().A.__()._.S._zk_BT()._();} }}Class ib{Destructor (){} }Class p1_{}''',
                '''Class,l_,{,Constructor,(,l,,,v__00__l,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,030,],,,0126,],,,4,],,,38,],;,e,,,_7,,,f,:,Array,[,String,,,77,],),{,{,z,::,$U,(,),.,A,.,__,(,),.,_,.,S,.,_zk_BT,(,),.,_,(,),;,},},},Class,ib,{,Destructor,(,),{,},},Class,p1_,{,},<EOF>''',
                101
            )
        )

    def test_2164(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $3_:Array [Boolean ,0X9];$0(n63,u,O:Array [Array [Array [Array [Float ,0b11],4_2_1],0135],0135];Tzc:z){} }''',
                '''Class,_,{,Var,$3_,:,Array,[,Boolean,,,0X9,],;,$0,(,n63,,,u,,,O,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b11,],,,421,],,,0135,],,,0135,],;,Tzc,:,z,),{,},},<EOF>''',
                101
            )
        )

    def test_2165(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{Var $_,$u,k,$0FVFA:Array [String ,0b111];}Class _:J_y{}Class o2{Val _p,_V_:Array [Int ,0x5A];Val $5N_:L;}Class _:N8_{$K(){}Constructor (){} }Class GB:__{}''',
                '''Class,F,{,Var,$_,,,$u,,,k,,,$0FVFA,:,Array,[,String,,,0b111,],;,},Class,_,:,J_y,{,},Class,o2,{,Val,_p,,,_V_,:,Array,[,Int,,,0x5A,],;,Val,$5N_,:,L,;,},Class,_,:,N8_,{,$K,(,),{,},Constructor,(,),{,},},Class,GB,:,__,{,},<EOF>''',
                101
            )
        )

    def test_2166(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X8:W{$k(_:Float ;__:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,33],0xB],043],33],33],0b1],0x3B],0x3B],02_76],043];D,R:J;_z:Array [Array [Array [Array [String ,0X6B],0B1111],0b1_01_1],6]){Continue ;}Val $D,x56,$3_:Int ;}''',
                '''Class,X8,:,W,{,$k,(,_,:,Float,;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,33,],,,0xB,],,,043,],,,33,],,,33,],,,0b1,],,,0x3B,],,,0x3B,],,,0276,],,,043,],;,D,,,R,:,J,;,_z,:,Array,[,Array,[,Array,[,Array,[,String,,,0X6B,],,,0B1111,],,,0b1011,],,,6,],),{,Continue,;,},Val,$D,,,x56,,,$3_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2167(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R_f{}Class _{Destructor (){Return ;}Val kt_R,$_,M:Array [Array [Array [Array [Array [Array [Boolean ,0105],0x56],0X4A],0105],5],07];}''',
                '''Class,R_f,{,},Class,_,{,Destructor,(,),{,Return,;,},Val,kt_R,,,$_,,,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0105,],,,0x56,],,,0X4A,],,,0105,],,,5,],,,07,],;,},<EOF>''',
                101
            )
        )

    def test_2168(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_:__O_9S{Constructor (){}Var j,$a,_,$gC:Array [Array [Array [Array [Int ,0x62],0X2],02],0B10];Constructor (){Continue ;}Destructor (){} }Class _:M{Val N:Float ;}''',
                '''Class,M_,:,__O_9S,{,Constructor,(,),{,},Var,j,,,$a,,,_,,,$gC,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x62,],,,0X2,],,,02,],,,0B10,],;,Constructor,(,),{,Continue,;,},Destructor,(,),{,},},Class,_,:,M,{,Val,N,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2169(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y8{Constructor (_,_,_o,Z,f,_,C_i4:_C4;_m_48Q_3D,_,_:Boolean ;__,At6,N:Array [Array [Array [Array [String ,0b1],428],065],66]){}$9(){} }''',
                '''Class,Y8,{,Constructor,(,_,,,_,,,_o,,,Z,,,f,,,_,,,C_i4,:,_C4,;,_m_48Q_3D,,,_,,,_,:,Boolean,;,__,,,At6,,,N,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,428,],,,065,],,,66,],),{,},$9,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2170(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R:__{Constructor (_,w1_2__R_V_,_p,_:Float ;FUL2,__,G:Array [Boolean ,01];Q5,_,d_:Float ){}$_(_,u5,_,_,_5:Array [Boolean ,060];S,__:Array [Array [String ,25_4],8]){} }''',
                '''Class,R,:,__,{,Constructor,(,_,,,w1_2__R_V_,,,_p,,,_,:,Float,;,FUL2,,,__,,,G,:,Array,[,Boolean,,,01,],;,Q5,,,_,,,d_,:,Float,),{,},$_,(,_,,,u5,,,_,,,_,,,_5,:,Array,[,Boolean,,,060,],;,S,,,__,:,Array,[,Array,[,String,,,254,],,,8,],),{,},},<EOF>''',
                101
            )
        )

    def test_2171(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val $5:Array [Boolean ,0X6];}Class K:V{Val _8:Array [String ,0B10];Var _:Array [Array [String ,0B10],07_31];}''',
                '''Class,_,:,_,{,Val,$5,:,Array,[,Boolean,,,0X6,],;,},Class,K,:,V,{,Val,_8,:,Array,[,String,,,0B10,],;,Var,_,:,Array,[,Array,[,String,,,0B10,],,,0731,],;,},<EOF>''',
                101
            )
        )

    def test_2172(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _C,_5,_,_H2_Ui600_a:String ;$_(E:R;__:Boolean ;_:Array [Array [Int ,0x1],59];s:Int ){}Var $1,S0,_M:Float ;}''',
                '''Class,_,{,Val,_C,,,_5,,,_,,,_H2_Ui600_a,:,String,;,$_,(,E,:,R,;,__,:,Boolean,;,_,:,Array,[,Array,[,Int,,,0x1,],,,59,],;,s,:,Int,),{,},Var,$1,,,S0,,,_M,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2173(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:N6{Constructor (){Var v,_p__:Array [Array [String ,044],0x30];}Constructor (yL7,qI_g:_;s4,_,__,k7:_;__,_u2C:_R;V,ys,H,F,g,_Jm:_6q_Vs;s,w:S){}Var S:mp;Constructor (){ {}{Continue ;} }}''',
                '''Class,Y,:,N6,{,Constructor,(,),{,Var,v,,,_p__,:,Array,[,Array,[,String,,,044,],,,0x30,],;,},Constructor,(,yL7,,,qI_g,:,_,;,s4,,,_,,,__,,,k7,:,_,;,__,,,_u2C,:,_R,;,V,,,ys,,,H,,,F,,,g,,,_Jm,:,_6q_Vs,;,s,,,w,:,S,),{,},Var,S,:,mp,;,Constructor,(,),{,{,},{,Continue,;,},},},<EOF>''',
                101
            )
        )

    def test_2174(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:_e8{_Q40(_,_,t,_fw:String ;_7A,_5:Array [Int ,0X41];w4I:Array [Array [Boolean ,0X4],99];p,wCoj:_){} }Class _L{Var V_6:V__;Var $C__,$__02:Array [Array [Boolean ,0b1],0x29];}''',
                '''Class,s,:,_e8,{,_Q40,(,_,,,_,,,t,,,_fw,:,String,;,_7A,,,_5,:,Array,[,Int,,,0X41,],;,w4I,:,Array,[,Array,[,Boolean,,,0X4,],,,99,],;,p,,,wCoj,:,_,),{,},},Class,_L,{,Var,V_6,:,V__,;,Var,$C__,,,$__02,:,Array,[,Array,[,Boolean,,,0b1,],,,0x29,],;,},<EOF>''',
                101
            )
        )

    def test_2175(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T0__M{}Class _:F{}Class o_:T{Constructor (V,g_0_,_i8,_:Boolean ;_,K__:_;___:String ;m_e,_o,L6_,Iy,v58_,_:Boolean ){}$X_(){}Val $8:Boolean ;}''',
                '''Class,T0__M,{,},Class,_,:,F,{,},Class,o_,:,T,{,Constructor,(,V,,,g_0_,,,_i8,,,_,:,Boolean,;,_,,,K__,:,_,;,___,:,String,;,m_e,,,_o,,,L6_,,,Iy,,,v58_,,,_,:,Boolean,),{,},$X_,(,),{,},Val,$8,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2176(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5__{$u(l,j,o:Array [Array [Float ,0B11010],0X25];my__96,__:__4;b_,__:Array [Array [Boolean ,0XA],42];_,_,N_:Boolean ){}Val _I_,_:Int ;}Class B{}''',
                '''Class,_5__,{,$u,(,l,,,j,,,o,:,Array,[,Array,[,Float,,,0B11010,],,,0X25,],;,my__96,,,__,:,__4,;,b_,,,__,:,Array,[,Array,[,Boolean,,,0XA,],,,42,],;,_,,,_,,,N_,:,Boolean,),{,},Val,_I_,,,_,:,Int,;,},Class,B,{,},<EOF>''',
                101
            )
        )

    def test_2177(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{Val $5H,_:Array [Array [Array [Array [Array [String ,0X1_2],070],5_21_6],0x43],0b11];}Class t6:h__{Constructor (){}Var H5,X_,$G9_t,O__,$_,w,_,$xa,$_:String ;}''',
                '''Class,O,{,Val,$5H,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X12,],,,070,],,,5216,],,,0x43,],,,0b11,],;,},Class,t6,:,h__,{,Constructor,(,),{,},Var,H5,,,X_,,,$G9_t,,,O__,,,$_,,,w,,,_,,,$xa,,,$_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2178(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Val $_03_n_5,$p7,$4_:String ;Val B,$4_3,$IJ0_,$f4E:Array [Array [Array [Array [Array [Array [Array [Float ,42_7_3_421],0x4],010],0x3B],0b1000010],83],83];}Class m:_{}Class i2W{Val $n0:b4;}''',
                '''Class,S,{,Val,$_03_n_5,,,$p7,,,$4_,:,String,;,Val,B,,,$4_3,,,$IJ0_,,,$f4E,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,4273421,],,,0x4,],,,010,],,,0x3B,],,,0b1000010,],,,83,],,,83,],;,},Class,m,:,_,{,},Class,i2W,{,Val,$n0,:,b4,;,},<EOF>''',
                101
            )
        )

    def test_2179(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_27{}Class ___6{Destructor (){Continue ;Continue ;} }Class _9_:H{Val $___6j_94Z:__;Var GX:String ;}Class A:__4_2ew{}Class q{}''',
                '''Class,P,:,_27,{,},Class,___6,{,Destructor,(,),{,Continue,;,Continue,;,},},Class,_9_,:,H,{,Val,$___6j_94Z,:,__,;,Var,GX,:,String,;,},Class,A,:,__4_2ew,{,},Class,q,{,},<EOF>''',
                101
            )
        )

    def test_2180(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __Dn3{Constructor (_,c:___b;c_:dBh_;_,_,_:Float ;fP__k,p,c,_:String ){} }Class G{}Class _6_{Constructor (TQP,_:g){} }''',
                '''Class,__Dn3,{,Constructor,(,_,,,c,:,___b,;,c_,:,dBh_,;,_,,,_,,,_,:,Float,;,fP__k,,,p,,,c,,,_,:,String,),{,},},Class,G,{,},Class,_6_,{,Constructor,(,TQP,,,_,:,g,),{,},},<EOF>''',
                101
            )
        )

    def test_2181(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{}Class Y_R_c8r:rZ{Destructor (){}Destructor (){}Destructor (){}Var $0,U_,J,X:Array [Array [Int ,03_63_0],0XD];$_2(){} }Class o_:N{}''',
                '''Class,n,{,},Class,Y_R_c8r,:,rZ,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Var,$0,,,U_,,,J,,,X,:,Array,[,Array,[,Int,,,03630,],,,0XD,],;,$_2,(,),{,},},Class,o_,:,N,{,},<EOF>''',
                101
            )
        )

    def test_2182(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:s{}Class WW2:q{Constructor (_,_,SW,_:Array [Array [Array [String ,0xD],0B1000001],03];t:_;YJ:Array [Int ,9];_,_j5,_:Int ){Continue ;} }''',
                '''Class,_,:,s,{,},Class,WW2,:,q,{,Constructor,(,_,,,_,,,SW,,,_,:,Array,[,Array,[,Array,[,String,,,0xD,],,,0B1000001,],,,03,],;,t,:,_,;,YJ,:,Array,[,Int,,,9,],;,_,,,_j5,,,_,:,Int,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2183(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{}Class _:_H{}Class _8{v(n_,_V,p_2k:Array [Int ,022];A:f;_l_2,_r7:Array [Array [Boolean ,03],01_4_4];M_X3J,_,t7_:String ){} }Class _:M_{}Class q5{}''',
                '''Class,t,{,},Class,_,:,_H,{,},Class,_8,{,v,(,n_,,,_V,,,p_2k,:,Array,[,Int,,,022,],;,A,:,f,;,_l_2,,,_r7,:,Array,[,Array,[,Boolean,,,03,],,,0144,],;,M_X3J,,,_,,,t7_,:,String,),{,},},Class,_,:,M_,{,},Class,q5,{,},<EOF>''',
                101
            )
        )

    def test_2184(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:x{$_(){}Constructor (_,d:A_;W:_4;J:_x451;_:Int ;n:_0;__Bg,J,__6,__S7:__Hkt;K,c,_f:Array [Array [String ,0XE],4_4]){Val _:s;} }Class __{}''',
                '''Class,_,:,x,{,$_,(,),{,},Constructor,(,_,,,d,:,A_,;,W,:,_4,;,J,:,_x451,;,_,:,Int,;,n,:,_0,;,__Bg,,,J,,,__6,,,__S7,:,__Hkt,;,K,,,c,,,_f,:,Array,[,Array,[,String,,,0XE,],,,44,],),{,Val,_,:,s,;,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_2185(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z{Val $2h_,$9P1:Array [Array [Array [Int ,0B110110],07_0_2_0],1_5];Var S:Array [Array [Array [Array [Array [Boolean ,0B110110],0X57],28],01_4],0136];}''',
                '''Class,z,{,Val,$2h_,,,$9P1,:,Array,[,Array,[,Array,[,Int,,,0B110110,],,,07020,],,,15,],;,Var,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110110,],,,0X57,],,,28,],,,014,],,,0136,],;,},<EOF>''',
                101
            )
        )

    def test_2186(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{Constructor (__K,Z_B:F9;_p,__n:Ih){}$b1g3(_,o_,R:Array [Array [Float ,0110],0b100]){} }Class _:_6{I4(){} }Class j_k:C{}Class _:_R8_{Val M4_,$_:Array [Int ,0b1];}''',
                '''Class,s,{,Constructor,(,__K,,,Z_B,:,F9,;,_p,,,__n,:,Ih,),{,},$b1g3,(,_,,,o_,,,R,:,Array,[,Array,[,Float,,,0110,],,,0b100,],),{,},},Class,_,:,_6,{,I4,(,),{,},},Class,j_k,:,C,{,},Class,_,:,_R8_,{,Val,M4_,,,$_,:,Array,[,Int,,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_2187(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q5:v{Constructor (_:o;_,_:K;p6S2_:Array [Float ,67];_:K3zL){}Destructor (){} }Class f90_69{Constructor (_,__I4_f_i:Array [Float ,0X9_9];b,_f_:String ;__:Array [Array [Array [Float ,04],0B1],0B1010010];_,I93__9_:K){}Var $n,_,$1,_0,_:Float ;}Class __{Var h:Float ;}Class r:_{}Class _7n:Nj{}''',
                '''Class,q5,:,v,{,Constructor,(,_,:,o,;,_,,,_,:,K,;,p6S2_,:,Array,[,Float,,,67,],;,_,:,K3zL,),{,},Destructor,(,),{,},},Class,f90_69,{,Constructor,(,_,,,__I4_f_i,:,Array,[,Float,,,0X99,],;,b,,,_f_,:,String,;,__,:,Array,[,Array,[,Array,[,Float,,,04,],,,0B1,],,,0B1010010,],;,_,,,I93__9_,:,K,),{,},Var,$n,,,_,,,$1,,,_0,,,_,:,Float,;,},Class,__,{,Var,h,:,Float,;,},Class,r,:,_,{,},Class,_7n,:,Nj,{,},<EOF>''',
                101
            )
        )

    def test_2188(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:___3{}Class _:___{Destructor (){}Var $_,$8:Array [Array [Boolean ,0x45],0B101111];Constructor (_68:Float ;_x,VLe:Boolean ;b:Array [Array [Array [Array [Int ,0B101111],74],6_6],0x8_0_3];ur:_g){Continue ;} }Class _{}''',
                '''Class,o,:,___3,{,},Class,_,:,___,{,Destructor,(,),{,},Var,$_,,,$8,:,Array,[,Array,[,Boolean,,,0x45,],,,0B101111,],;,Constructor,(,_68,:,Float,;,_x,,,VLe,:,Boolean,;,b,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B101111,],,,74,],,,66,],,,0x803,],;,ur,:,_g,),{,Continue,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2189(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:w{}Class GR{d2_(_,_:Array [Float ,0b1];_iI:Array [Float ,010];O,_,_7O,_d,E,_:Float ;_,__:Boolean ;___,d:Array [Array [Array [Array [Array [String ,010],010],5],3_6],010]){} }''',
                '''Class,w,:,w,{,},Class,GR,{,d2_,(,_,,,_,:,Array,[,Float,,,0b1,],;,_iI,:,Array,[,Float,,,010,],;,O,,,_,,,_7O,,,_d,,,E,,,_,:,Float,;,_,,,__,:,Boolean,;,___,,,d,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,010,],,,010,],,,5,],,,36,],,,010,],),{,},},<EOF>''',
                101
            )
        )

    def test_2190(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G:I{}Class F_hKX:Be3{Constructor (){}Val $BM__:Array [Array [Array [Array [Array [Float ,5],0X42],0x19],8],0xF_9B_A_8];}''',
                '''Class,G,:,I,{,},Class,F_hKX,:,Be3,{,Constructor,(,),{,},Val,$BM__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,5,],,,0X42,],,,0x19,],,,8,],,,0xF9BA8,],;,},<EOF>''',
                101
            )
        )

    def test_2191(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{Constructor (N79,Z0_:Array [Array [Array [Int ,57],0x2A],07]){}Val $8f,_,b:Int ;}Class p4_a1:O{}Class _:_{Constructor (){} }Class I5{}''',
                '''Class,V,{,Constructor,(,N79,,,Z0_,:,Array,[,Array,[,Array,[,Int,,,57,],,,0x2A,],,,07,],),{,},Val,$8f,,,_,,,b,:,Int,;,},Class,p4_a1,:,O,{,},Class,_,:,_,{,Constructor,(,),{,},},Class,I5,{,},<EOF>''',
                101
            )
        )

    def test_2192(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _mGo:_2{Destructor (){}Constructor (HD,R1,m:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,8],073],067],0b101],8],8],1_541_90],0x82_6];Q_K_:W_){Break ;} }''',
                '''Class,_mGo,:,_2,{,Destructor,(,),{,},Constructor,(,HD,,,R1,,,m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,073,],,,067,],,,0b101,],,,8,],,,8,],,,154190,],,,0x826,],;,Q_K_,:,W_,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2193(self):
        self.assertTrue(
            TestLexer.test(
                '''Class JD8:K6T{Val D__,_,rU_:Int ;Destructor (){}Val yj:i5;Constructor (n:Array [Boolean ,0103_35_5];_:A9){} }Class __40_{}Class B{Var n:String ;}Class __4:u__{Val $_,$h:Array [String ,0B1];Var $b_:Array [String ,8_6];}Class v{}''',
                '''Class,JD8,:,K6T,{,Val,D__,,,_,,,rU_,:,Int,;,Destructor,(,),{,},Val,yj,:,i5,;,Constructor,(,n,:,Array,[,Boolean,,,0103355,],;,_,:,A9,),{,},},Class,__40_,{,},Class,B,{,Var,n,:,String,;,},Class,__4,:,u__,{,Val,$_,,,$h,:,Array,[,String,,,0B1,],;,Var,$b_,:,Array,[,String,,,86,],;,},Class,v,{,},<EOF>''',
                101
            )
        )

    def test_2194(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V:IE{Var $_:Int ;_77_93(OWk:__c;O_:Boolean ;W,_,E,_5_,b9:Float ;_,j,o,L,H_:Array [Int ,0xD];Q__x09J,f_3:Float ){}Constructor (E:String ;hu__21e,_YL7N:Boolean ;_j_81W23_X9:Array [Array [Array [Int ,2],0X20],0B1110];___:kc;b:_33o_;_xc3T,_3i,FB4:Int ;_n:String ;_6,___:Array [String ,0xC_C_4]){}Val $z:String ;}Class R{}''',
                '''Class,V,:,IE,{,Var,$_,:,Int,;,_77_93,(,OWk,:,__c,;,O_,:,Boolean,;,W,,,_,,,E,,,_5_,,,b9,:,Float,;,_,,,j,,,o,,,L,,,H_,:,Array,[,Int,,,0xD,],;,Q__x09J,,,f_3,:,Float,),{,},Constructor,(,E,:,String,;,hu__21e,,,_YL7N,:,Boolean,;,_j_81W23_X9,:,Array,[,Array,[,Array,[,Int,,,2,],,,0X20,],,,0B1110,],;,___,:,kc,;,b,:,_33o_,;,_xc3T,,,_3i,,,FB4,:,Int,;,_n,:,String,;,_6,,,___,:,Array,[,String,,,0xCC4,],),{,},Val,$z,:,String,;,},Class,R,{,},<EOF>''',
                101
            )
        )

    def test_2195(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _f:O{Constructor (_5:Array [Array [Array [Array [Array [Array [Boolean ,0X9_E],0B11],0B1],031],0X6],066]){} }''',
                '''Class,_f,:,O,{,Constructor,(,_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X9E,],,,0B11,],,,0B1,],,,031,],,,0X6,],,,066,],),{,},},<EOF>''',
                101
            )
        )

    def test_2196(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Constructor (){}Destructor (){}Val __3,S6:Array [Boolean ,7];Constructor (_h:T;a,_:Array [Array [String ,0B11_0],03];f6mg:Array [Boolean ,33];s_05,C:Boolean ){} }''',
                '''Class,__,:,_,{,Constructor,(,),{,},Destructor,(,),{,},Val,__3,,,S6,:,Array,[,Boolean,,,7,],;,Constructor,(,_h,:,T,;,a,,,_,:,Array,[,Array,[,String,,,0B110,],,,03,],;,f6mg,:,Array,[,Boolean,,,33,],;,s_05,,,C,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2197(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _p:A{Var $_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,57],0B11110],0b1000001],037],01],0b1000001],8],9_9],0x1A];}''',
                '''Class,_p,:,A,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,57,],,,0B11110,],,,0b1000001,],,,037,],,,01,],,,0b1000001,],,,8,],,,99,],,,0x1A,],;,},<EOF>''',
                101
            )
        )

    def test_2198(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:B{Constructor (A5_03,Y4,_:_0){Break ;Break ;}$___W0__m0q_q(){} }Class Q:x{}Class _:_{Val v,$73:Float ;}Class _:_wr{}Class _4{Constructor (U6,O:Float ;Ji:_;_,__z___02:Int ;S:String ){}Val _:Array [Boolean ,0B1_1];Val $K:yx_9;Destructor (){Break ;} }''',
                '''Class,h,:,B,{,Constructor,(,A5_03,,,Y4,,,_,:,_0,),{,Break,;,Break,;,},$___W0__m0q_q,(,),{,},},Class,Q,:,x,{,},Class,_,:,_,{,Val,v,,,$73,:,Float,;,},Class,_,:,_wr,{,},Class,_4,{,Constructor,(,U6,,,O,:,Float,;,Ji,:,_,;,_,,,__z___02,:,Int,;,S,:,String,),{,},Val,_,:,Array,[,Boolean,,,0B11,],;,Val,$K,:,yx_9,;,Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2199(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a_{}Class _:i{}Class _9{Var $C:Array [Array [Int ,41],05];Constructor (){}Constructor (_:Int ){} }Class _:A{Destructor (){}jP(T,_:String ){}Constructor (){} }''',
                '''Class,a_,{,},Class,_,:,i,{,},Class,_9,{,Var,$C,:,Array,[,Array,[,Int,,,41,],,,05,],;,Constructor,(,),{,},Constructor,(,_,:,Int,),{,},},Class,_,:,A,{,Destructor,(,),{,},jP,(,T,,,_,:,String,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2200(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var J,$2____:Array [String ,051];Var a,m,$Y_i,$__,$_B,d:Array [Array [Array [Boolean ,07],0X64],0B111_1_1];}''',
                '''Class,_,{,Var,J,,,$2____,:,Array,[,String,,,051,],;,Var,a,,,m,,,$Y_i,,,$__,,,$_B,,,d,:,Array,[,Array,[,Array,[,Boolean,,,07,],,,0X64,],,,0B11111,],;,},<EOF>''',
                101
            )
        )

    def test_2201(self):
        self.assertTrue(
            TestLexer.test(
                '''Class YZ{Var $__,_V_,_S1__PU,$56:Array [String ,05];Val $_4,$0,$_57_9:Boolean ;Destructor (){}_3_(){} }Class _:TkV{}''',
                '''Class,YZ,{,Var,$__,,,_V_,,,_S1__PU,,,$56,:,Array,[,String,,,05,],;,Val,$_4,,,$0,,,$_57_9,:,Boolean,;,Destructor,(,),{,},_3_,(,),{,},},Class,_,:,TkV,{,},<EOF>''',
                101
            )
        )

    def test_2202(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Val $_,$9,R:Array [Int ,067];Constructor (_4:_f;_,c0,jN:_){Continue ;}m_(){}Val F9,$79:Int ;Destructor (){} }''',
                '''Class,__,:,_,{,Val,$_,,,$9,,,R,:,Array,[,Int,,,067,],;,Constructor,(,_4,:,_f,;,_,,,c0,,,jN,:,_,),{,Continue,;,},m_,(,),{,},Val,F9,,,$79,:,Int,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2203(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i_{}Class Uj3_{}Class _:_Y{T(_8:Array [Array [String ,05],0X1]){}A6_x_(d_:C){} }Class b:C{}Class f_xZ:C{}Class w{}''',
                '''Class,i_,{,},Class,Uj3_,{,},Class,_,:,_Y,{,T,(,_8,:,Array,[,Array,[,String,,,05,],,,0X1,],),{,},A6_x_,(,d_,:,C,),{,},},Class,b,:,C,{,},Class,f_xZ,:,C,{,},Class,w,{,},<EOF>''',
                101
            )
        )

    def test_2204(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:h0__{Constructor (_:Array [Int ,0105]){}Constructor (x:Int ;y,s,w:l_4_KN;na:i7;p,_:Array [Array [Boolean ,0B1],5]){}Destructor (){}Var $_:_;}''',
                '''Class,k,:,h0__,{,Constructor,(,_,:,Array,[,Int,,,0105,],),{,},Constructor,(,x,:,Int,;,y,,,s,,,w,:,l_4_KN,;,na,:,i7,;,p,,,_,:,Array,[,Array,[,Boolean,,,0B1,],,,5,],),{,},Destructor,(,),{,},Var,$_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2205(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:d_{Var $F,_:Int ;}Class WX:X{Var $__WB_i:a__gS;}Class _:wCv{Ym0(){Break ;}$d_(y,__,_,z_,c_P6Je_,z,_e:_P;_:p_;D:Float ){Continue ;} }''',
                '''Class,_,:,d_,{,Var,$F,,,_,:,Int,;,},Class,WX,:,X,{,Var,$__WB_i,:,a__gS,;,},Class,_,:,wCv,{,Ym0,(,),{,Break,;,},$d_,(,y,,,__,,,_,,,z_,,,c_P6Je_,,,z,,,_e,:,_P,;,_,:,p_,;,D,:,Float,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2206(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _1:f8N;}Class __{Constructor (_L84,_,_5:_;ATe,_1:Array [Array [String ,0X25],0X65B_A];g,P_5V,c__:Int ){}Constructor (){Continue ;} }''',
                '''Class,_,{,Var,_1,:,f8N,;,},Class,__,{,Constructor,(,_L84,,,_,,,_5,:,_,;,ATe,,,_1,:,Array,[,Array,[,String,,,0X25,],,,0X65BA,],;,g,,,P_5V,,,c__,:,Int,),{,},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2207(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:uj{Constructor (V:Array [Array [Array [Int ,8],0B1_0_0_1110],010]){Val _2:Array [Array [Array [Float ,9],0b100000],060];} }''',
                '''Class,t,:,uj,{,Constructor,(,V,:,Array,[,Array,[,Array,[,Int,,,8,],,,0B1001110,],,,010,],),{,Val,_2,:,Array,[,Array,[,Array,[,Float,,,9,],,,0b100000,],,,060,],;,},},<EOF>''',
                101
            )
        )

    def test_2208(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __P{}Class _{}Class R_:y{Constructor (sk_,_,_:Float ;__:_){Break ;Var _6:Array [Int ,0B111101];Continue ;}Destructor (){Continue ;} }Class _Z{}''',
                '''Class,__P,{,},Class,_,{,},Class,R_,:,y,{,Constructor,(,sk_,,,_,,,_,:,Float,;,__,:,_,),{,Break,;,Var,_6,:,Array,[,Int,,,0B111101,],;,Continue,;,},Destructor,(,),{,Continue,;,},},Class,_Z,{,},<EOF>''',
                101
            )
        )

    def test_2209(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _C:K{$cr(_Z_,i:Array [Boolean ,0x8_B3];_,j,____ct,r:Array [Array [Array [Array [Int ,5],49],0B1],49];_:Array [Array [Array [Array [Boolean ,0xB_F87C],01],0140],49];s5:_;O__:_;_z_9MR:String ;_b:Array [Array [Array [Int ,0B10_0],0x59],49];_,d,_,__z5M6F,_:Array [Array [Array [Float ,0B1],0b1001011],05_4];_D_,_N_,_m:Array [Float ,0B1000001];_:Array [String ,0x55];IR,__56,_,_4_:Array [Int ,0x6_8]){}$Iu9(l:Array [Array [Float ,0140],0xF_5]){} }Class _:o_J9L{}''',
                '''Class,_C,:,K,{,$cr,(,_Z_,,,i,:,Array,[,Boolean,,,0x8B3,],;,_,,,j,,,____ct,,,r,:,Array,[,Array,[,Array,[,Array,[,Int,,,5,],,,49,],,,0B1,],,,49,],;,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xBF87C,],,,01,],,,0140,],,,49,],;,s5,:,_,;,O__,:,_,;,_z_9MR,:,String,;,_b,:,Array,[,Array,[,Array,[,Int,,,0B100,],,,0x59,],,,49,],;,_,,,d,,,_,,,__z5M6F,,,_,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0b1001011,],,,054,],;,_D_,,,_N_,,,_m,:,Array,[,Float,,,0B1000001,],;,_,:,Array,[,String,,,0x55,],;,IR,,,__56,,,_,,,_4_,:,Array,[,Int,,,0x68,],),{,},$Iu9,(,l,:,Array,[,Array,[,Float,,,0140,],,,0xF5,],),{,},},Class,_,:,o_J9L,{,},<EOF>''',
                101
            )
        )

    def test_2210(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u_:J9{F_c1(_3,ta47,bs5,o:E;__:Int ){}Var D,P9G6G,_x,$15:Array [Array [String ,0xC_3],041];Var ____:Array [Array [Int ,04_7],92];}Class _:_W8__{}''',
                '''Class,u_,:,J9,{,F_c1,(,_3,,,ta47,,,bs5,,,o,:,E,;,__,:,Int,),{,},Var,D,,,P9G6G,,,_x,,,$15,:,Array,[,Array,[,String,,,0xC3,],,,041,],;,Var,____,:,Array,[,Array,[,Int,,,047,],,,92,],;,},Class,_,:,_W8__,{,},<EOF>''',
                101
            )
        )

    def test_2211(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _285:C{Constructor (m,R,_,S:Boolean ;L:String ){}Var _qf:_1a_5;}Class _{}Class _6:_d{}Class _F_4T_9:_{}''',
                '''Class,_285,:,C,{,Constructor,(,m,,,R,,,_,,,S,:,Boolean,;,L,:,String,),{,},Var,_qf,:,_1a_5,;,},Class,_,{,},Class,_6,:,_d,{,},Class,_F_4T_9,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2212(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kU:I89{Constructor (){} }Class ___G:_{$_(O:Array [String ,07];PH,u:_;e,_,_:Array [Int ,0xB];_,yE,f:Array [Array [Array [Array [Array [String ,0X2A],98],063_2_463],0x57],12_45_8]){ {} }}''',
                '''Class,kU,:,I89,{,Constructor,(,),{,},},Class,___G,:,_,{,$_,(,O,:,Array,[,String,,,07,],;,PH,,,u,:,_,;,e,,,_,,,_,:,Array,[,Int,,,0xB,],;,_,,,yE,,,f,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X2A,],,,98,],,,0632463,],,,0x57,],,,12458,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2213(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{Val $Q_:Array [Int ,0b1011010];Var $_:Array [Array [Int ,6_4_1_8_0],0120];Var $R:Int ;Constructor (__46i:Array [Array [Float ,0X4C],0x4C];___4,_4,_,r2_S3:Array [Int ,82];p,I,U4707:Array [Array [Array [Boolean ,0X4C],0B1],06_0_3];F,_8,_O:_;d2,_,_n,g,y,_:Int ;_S:Array [Boolean ,82]){L.__5_().__o();} }''',
                '''Class,V,{,Val,$Q_,:,Array,[,Int,,,0b1011010,],;,Var,$_,:,Array,[,Array,[,Int,,,64180,],,,0120,],;,Var,$R,:,Int,;,Constructor,(,__46i,:,Array,[,Array,[,Float,,,0X4C,],,,0x4C,],;,___4,,,_4,,,_,,,r2_S3,:,Array,[,Int,,,82,],;,p,,,I,,,U4707,:,Array,[,Array,[,Array,[,Boolean,,,0X4C,],,,0B1,],,,0603,],;,F,,,_8,,,_O,:,_,;,d2,,,_,,,_n,,,g,,,y,,,_,:,Int,;,_S,:,Array,[,Boolean,,,82,],),{,L,.,__5_,(,),.,__o,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2214(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:D{}Class hP{Var $E,_,_u_,_J,W,$_,$e,i_:Boolean ;Val $U,_,$_:_;Constructor (N1,_,_:Array [Boolean ,0xA_9_8];I,BRZ,_,_:_;i,__B_73,__r:__5;dU1_,_s1:c;X1:Int ){} }''',
                '''Class,_1,:,D,{,},Class,hP,{,Var,$E,,,_,,,_u_,,,_J,,,W,,,$_,,,$e,,,i_,:,Boolean,;,Val,$U,,,_,,,$_,:,_,;,Constructor,(,N1,,,_,,,_,:,Array,[,Boolean,,,0xA98,],;,I,,,BRZ,,,_,,,_,:,_,;,i,,,__B_73,,,__r,:,__5,;,dU1_,,,_s1,:,c,;,X1,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2215(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{Constructor (x:Array [Int ,0136];P7d:Array [Array [String ,0X3_F9_0_1],0xE_D];_27,__B:__;X_36:Array [Array [Array [String ,874_57_7_9],07],80]){}Constructor (){} }''',
                '''Class,_9,{,Constructor,(,x,:,Array,[,Int,,,0136,],;,P7d,:,Array,[,Array,[,String,,,0X3F901,],,,0xED,],;,_27,,,__B,:,__,;,X_36,:,Array,[,Array,[,Array,[,String,,,8745779,],,,07,],,,80,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2216(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A_:_8{Var $y,X:Array [String ,0B1010011];$N(ug_,G0,_,O_W:String ){Var K_3:Array [Array [Boolean ,2],29];} }Class o2:_{}''',
                '''Class,A_,:,_8,{,Var,$y,,,X,:,Array,[,String,,,0B1010011,],;,$N,(,ug_,,,G0,,,_,,,O_W,:,String,),{,Var,K_3,:,Array,[,Array,[,Boolean,,,2,],,,29,],;,},},Class,o2,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2217(self):
        self.assertTrue(
            TestLexer.test(
                '''Class qy_A_{}Class _{Constructor (Q:Array [Array [Boolean ,073],0b1100100];w,_,k_6_f,k_:_;S_8,_D_1,_0:_8___7A;_:Boolean ){} }Class lv_:_h7{}''',
                '''Class,qy_A_,{,},Class,_,{,Constructor,(,Q,:,Array,[,Array,[,Boolean,,,073,],,,0b1100100,],;,w,,,_,,,k_6_f,,,k_,:,_,;,S_8,,,_D_1,,,_0,:,_8___7A,;,_,:,Boolean,),{,},},Class,lv_,:,_h7,{,},<EOF>''',
                101
            )
        )

    def test_2218(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Cz5:_{Destructor (){Continue ;Val _lu:Array [Boolean ,061];Return ;} }Class _a:_j{Constructor (_,A_w,__:Boolean ){} }''',
                '''Class,Cz5,:,_,{,Destructor,(,),{,Continue,;,Val,_lu,:,Array,[,Boolean,,,061,],;,Return,;,},},Class,_a,:,_j,{,Constructor,(,_,,,A_w,,,__,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2219(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cV30{}Class zFx7:_{$p2I_(D,B,__:q;_,_b560,F_7_O:Array [Float ,0x8]){Break ;Continue ;}Val d,w,mMy:_;}Class C:y_{}Class _8_62J1:__3{}''',
                '''Class,cV30,{,},Class,zFx7,:,_,{,$p2I_,(,D,,,B,,,__,:,q,;,_,,,_b560,,,F_7_O,:,Array,[,Float,,,0x8,],),{,Break,;,Continue,;,},Val,d,,,w,,,mMy,:,_,;,},Class,C,:,y_,{,},Class,_8_62J1,:,__3,{,},<EOF>''',
                101
            )
        )

    def test_2220(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{Constructor (F,jg,m:Array [Array [Array [Array [Boolean ,0xA_7_0_38_9],043],15],043];F,Y7:Array [Array [Float ,0b1_0_0],9];l_D,__:Array [Boolean ,15];k,Q7:Array [Boolean ,15]){Continue ;} }''',
                '''Class,g,{,Constructor,(,F,,,jg,,,m,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xA70389,],,,043,],,,15,],,,043,],;,F,,,Y7,:,Array,[,Array,[,Float,,,0b100,],,,9,],;,l_D,,,__,:,Array,[,Boolean,,,15,],;,k,,,Q7,:,Array,[,Boolean,,,15,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2221(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:c6{Val t_:Array [Array [Array [Array [Array [Int ,6],06],0b1_10],14],0B110];$__(){Break ;} }Class J{Var e,$7:Array [Float ,02_2];}''',
                '''Class,l,:,c6,{,Val,t_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,6,],,,06,],,,0b110,],,,14,],,,0B110,],;,$__,(,),{,Break,;,},},Class,J,{,Var,e,,,$7,:,Array,[,Float,,,022,],;,},<EOF>''',
                101
            )
        )

    def test_2222(self):
        self.assertTrue(
            TestLexer.test(
                '''Class uB{}Class _:__98{vOz_8(_m_:Array [String ,83];F:Float ){Continue ;} }Class zw_:l_W{Val _,p_:Float ;Constructor (R_9_,w:Array [Array [Float ,4],0B101100];_13:Int ;z,___,Jb7:Boolean ;_,__,N_:N){} }Class _:K{Destructor (){} }Class A{}''',
                '''Class,uB,{,},Class,_,:,__98,{,vOz_8,(,_m_,:,Array,[,String,,,83,],;,F,:,Float,),{,Continue,;,},},Class,zw_,:,l_W,{,Val,_,,,p_,:,Float,;,Constructor,(,R_9_,,,w,:,Array,[,Array,[,Float,,,4,],,,0B101100,],;,_13,:,Int,;,z,,,___,,,Jb7,:,Boolean,;,_,,,__,,,N_,:,N,),{,},},Class,_,:,K,{,Destructor,(,),{,},},Class,A,{,},<EOF>''',
                101
            )
        )

    def test_2223(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:__{Constructor (aKZ,Hxj:Float ;_bpS:Array [Array [Array [Array [Boolean ,73],0111],45],45];o,m_d_:Array [Boolean ,45];o_d4:_){Break ;} }''',
                '''Class,a,:,__,{,Constructor,(,aKZ,,,Hxj,:,Float,;,_bpS,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,73,],,,0111,],,,45,],,,45,],;,o,,,m_d_,:,Array,[,Boolean,,,45,],;,o_d4,:,_,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2224(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b{}Class _k5_{Var $_5_7:h;}Class _:_2G{}Class _{}Class E:_{}Class _:_{Val _,$JK,$1,r,_:Array [Int ,053];Val _,Y_,_8X:Iz;}''',
                '''Class,b,{,},Class,_k5_,{,Var,$_5_7,:,h,;,},Class,_,:,_2G,{,},Class,_,{,},Class,E,:,_,{,},Class,_,:,_,{,Val,_,,,$JK,,,$1,,,r,,,_,:,Array,[,Int,,,053,],;,Val,_,,,Y_,,,_8X,:,Iz,;,},<EOF>''',
                101
            )
        )

    def test_2225(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class h{Val $_1h,$XgW_,$6mo,$d:Array [Array [Array [String ,0B1],06],76];Constructor (){}l(y,__,F,Z:Array [Array [Int ,0X4_30_0],76]){}Var $_I:Array [Float ,0b1100100];Var $_:Array [Array [Array [Boolean ,4_9],76],0XF];Val _l,e:Int ;Constructor (Q:Array [Array [Array [Array [Boolean ,1],0X1D],1_1_3_9],76];O_3:Array [Array [String ,0xE],0b11];I,_9:Float ){Break ;}E(T,i8X,j:String ){Break ;} }''',
                '''Class,_,{,},Class,h,{,Val,$_1h,,,$XgW_,,,$6mo,,,$d,:,Array,[,Array,[,Array,[,String,,,0B1,],,,06,],,,76,],;,Constructor,(,),{,},l,(,y,,,__,,,F,,,Z,:,Array,[,Array,[,Int,,,0X4300,],,,76,],),{,},Var,$_I,:,Array,[,Float,,,0b1100100,],;,Var,$_,:,Array,[,Array,[,Array,[,Boolean,,,49,],,,76,],,,0XF,],;,Val,_l,,,e,:,Int,;,Constructor,(,Q,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,1,],,,0X1D,],,,1139,],,,76,],;,O_3,:,Array,[,Array,[,String,,,0xE,],,,0b11,],;,I,,,_9,:,Float,),{,Break,;,},E,(,T,,,i8X,,,j,:,String,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2226(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _VC1:x{Val $a,X,$_1i2_:Array [Array [Array [Boolean ,070],0x33],6];}Class Cw_:j45b_{Val $_:_;$4(){} }Class t{}''',
                '''Class,_VC1,:,x,{,Val,$a,,,X,,,$_1i2_,:,Array,[,Array,[,Array,[,Boolean,,,070,],,,0x33,],,,6,],;,},Class,Cw_,:,j45b_,{,Val,$_,:,_,;,$4,(,),{,},},Class,t,{,},<EOF>''',
                101
            )
        )

    def test_2227(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P_:g{Val W,$_46:Boolean ;}Class _z0:x{Val $1,U:Array [Int ,23];Var _:h9V__V;Val $R:Array [Array [Int ,01],6];}Class OJz:__{}Class _{Var $4,_:Array [Int ,0xFC];}''',
                '''Class,P_,:,g,{,Val,W,,,$_46,:,Boolean,;,},Class,_z0,:,x,{,Val,$1,,,U,:,Array,[,Int,,,23,],;,Var,_,:,h9V__V,;,Val,$R,:,Array,[,Array,[,Int,,,01,],,,6,],;,},Class,OJz,:,__,{,},Class,_,{,Var,$4,,,_,:,Array,[,Int,,,0xFC,],;,},<EOF>''',
                101
            )
        )

    def test_2228(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class e:__{Constructor (S0,I:Array [Array [String ,044],0X36]){}Constructor (_S4_:iF){} }''',
                '''Class,_,{,Destructor,(,),{,},},Class,e,:,__,{,Constructor,(,S0,,,I,:,Array,[,Array,[,String,,,044,],,,0X36,],),{,},Constructor,(,_S4_,:,iF,),{,},},<EOF>''',
                101
            )
        )

    def test_2229(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{D9(){}Val $AJ:Array [Boolean ,053];$E(X,p_:Float ;_,k__X,y,_P5:x){}Constructor (){}Constructor (){Break ;} }''',
                '''Class,Y,{,D9,(,),{,},Val,$AJ,:,Array,[,Boolean,,,053,],;,$E,(,X,,,p_,:,Float,;,_,,,k__X,,,y,,,_P5,:,x,),{,},Constructor,(,),{,},Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2230(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Val $_9,$E:Array [Array [Int ,0b11100],0x4_A];}Class D{Val $n:Array [Array [Array [Int ,0137],19],0b11100];}Class _9j:J{_(N_,S:String ){} }''',
                '''Class,_,{,Constructor,(,),{,},Val,$_9,,,$E,:,Array,[,Array,[,Int,,,0b11100,],,,0x4A,],;,},Class,D,{,Val,$n,:,Array,[,Array,[,Array,[,Int,,,0137,],,,19,],,,0b11100,],;,},Class,_9j,:,J,{,_,(,N_,,,S,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2231(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _i{Constructor (_:Array [Array [Array [Array [Boolean ,0112],0112],0X93],0x62];_,s,e1b2:g_;J_,_N_:Array [String ,0112];d,_3_,w72M0L:Array [Array [Array [Array [Int ,0B1],7_2],04],0B1010000]){Var _AH,_,j:Array [Int ,0b10110];} }Class vG6:_K_YZ876__{}Class _E:z2G434{}Class ____:_{Val __,$n:Array [Array [Boolean ,0x62],0112];Constructor (){}d(O,s,R,__:Boolean ;_:g_Y_){Break ;} }''',
                '''Class,_i,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0112,],,,0112,],,,0X93,],,,0x62,],;,_,,,s,,,e1b2,:,g_,;,J_,,,_N_,:,Array,[,String,,,0112,],;,d,,,_3_,,,w72M0L,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,72,],,,04,],,,0B1010000,],),{,Var,_AH,,,_,,,j,:,Array,[,Int,,,0b10110,],;,},},Class,vG6,:,_K_YZ876__,{,},Class,_E,:,z2G434,{,},Class,____,:,_,{,Val,__,,,$n,:,Array,[,Array,[,Boolean,,,0x62,],,,0112,],;,Constructor,(,),{,},d,(,O,,,s,,,R,,,__,:,Boolean,;,_,:,g_Y_,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2232(self):
        self.assertTrue(
            TestLexer.test(
                '''Class CLw:_{Constructor (){}$0(_:Array [Array [Boolean ,0X4F],67]){} }Class pc__{Destructor (){} }Class W:B_{}Class Gx:N{}''',
                '''Class,CLw,:,_,{,Constructor,(,),{,},$0,(,_,:,Array,[,Array,[,Boolean,,,0X4F,],,,67,],),{,},},Class,pc__,{,Destructor,(,),{,},},Class,W,:,B_,{,},Class,Gx,:,N,{,},<EOF>''',
                101
            )
        )

    def test_2233(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __TK4e:k{$9F5q(_,__U,K2,C5,i1,___,v,a:Array [Array [Array [Int ,0X7E],03_647],044]){Continue ;}Destructor (){Continue ;} }''',
                '''Class,__TK4e,:,k,{,$9F5q,(,_,,,__U,,,K2,,,C5,,,i1,,,___,,,v,,,a,:,Array,[,Array,[,Array,[,Int,,,0X7E,],,,03647,],,,044,],),{,Continue,;,},Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2234(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class s{Destructor (){}Var $4_:Boolean ;Var $_,_45:Array [Array [Array [Array [Array [Boolean ,07],0103],0X6],0b10],0B1];}''',
                '''Class,_,{,},Class,s,{,Destructor,(,),{,},Var,$4_,:,Boolean,;,Var,$_,,,_45,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,07,],,,0103,],,,0X6,],,,0b10,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_2235(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v__:X{Val $al:Array [Array [Array [Array [Array [String ,026],0b1_01],026],12],026];Val k_:__;Val $8_:Array [Array [Array [Int ,7],0b1_1_11_01_0],12];}Class q{}Class __7{Destructor (){} }''',
                '''Class,v__,:,X,{,Val,$al,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,026,],,,0b101,],,,026,],,,12,],,,026,],;,Val,k_,:,__,;,Val,$8_,:,Array,[,Array,[,Array,[,Int,,,7,],,,0b1111010,],,,12,],;,},Class,q,{,},Class,__7,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2236(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j{_(iO6:Int ;_:Boolean ;v,_i,__9_X:Float ){}Destructor (){} }Class a:hg{Val $l3,$n:Array [Array [Int ,0x63],0X4];}''',
                '''Class,_j,{,_,(,iO6,:,Int,;,_,:,Boolean,;,v,,,_i,,,__9_X,:,Float,),{,},Destructor,(,),{,},},Class,a,:,hg,{,Val,$l3,,,$n,:,Array,[,Array,[,Int,,,0x63,],,,0X4,],;,},<EOF>''',
                101
            )
        )

    def test_2237(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{Constructor (__L:Array [Array [Array [Array [String ,0x5_9],0X56],98_25],71]){}Var i_61,v:String ;}Class _{}''',
                '''Class,e,{,Constructor,(,__L,:,Array,[,Array,[,Array,[,Array,[,String,,,0x59,],,,0X56,],,,9825,],,,71,],),{,},Var,i_61,,,v,:,String,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2238(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ix{Constructor (){Var _:Array [String ,0b10001];}q(EgD_,_:ycT){ {{} }}Val $sMF:Array [Float ,05];Var _:a;Constructor (){} }''',
                '''Class,Ix,{,Constructor,(,),{,Var,_,:,Array,[,String,,,0b10001,],;,},q,(,EgD_,,,_,:,ycT,),{,{,{,},},},Val,$sMF,:,Array,[,Float,,,05,],;,Var,_,:,a,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2239(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{Val n0,_,$_:Array [Int ,066];Constructor (_7M:Array [Array [Array [String ,4],0x16],0B1]){Val _,_cM,__,_,i8:Boolean ;}Constructor (_w,_5K__,t:Array [Array [Array [Boolean ,22],0x16],22];r,__,p_6,B_E_i:Int ;Rb_6,__7,_:Int ){}Destructor (){} }''',
                '''Class,F,{,Val,n0,,,_,,,$_,:,Array,[,Int,,,066,],;,Constructor,(,_7M,:,Array,[,Array,[,Array,[,String,,,4,],,,0x16,],,,0B1,],),{,Val,_,,,_cM,,,__,,,_,,,i8,:,Boolean,;,},Constructor,(,_w,,,_5K__,,,t,:,Array,[,Array,[,Array,[,Boolean,,,22,],,,0x16,],,,22,],;,r,,,__,,,p_6,,,B_E_i,:,Int,;,Rb_6,,,__7,,,_,:,Int,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2240(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _a_60V__1fo42:Array [Array [Int ,2_85_8],0B1011110];}Class _:_{}Class _{Val j:Array [Array [Array [Boolean ,0b1_1],0B1011110],065];}''',
                '''Class,_,{,Val,_a_60V__1fo42,:,Array,[,Array,[,Int,,,2858,],,,0B1011110,],;,},Class,_,:,_,{,},Class,_,{,Val,j,:,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0B1011110,],,,065,],;,},<EOF>''',
                101
            )
        )

    def test_2241(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x_7_R{g5D(_:Array [Float ,41];pc:Array [Int ,0x54];_q:Boolean ){}Val $49,$_0:_0s_;}Class Z{Var k_3_:Array [Boolean ,0x54];}''',
                '''Class,x_7_R,{,g5D,(,_,:,Array,[,Float,,,41,],;,pc,:,Array,[,Int,,,0x54,],;,_q,:,Boolean,),{,},Val,$49,,,$_0,:,_0s_,;,},Class,Z,{,Var,k_3_,:,Array,[,Boolean,,,0x54,],;,},<EOF>''',
                101
            )
        )

    def test_2242(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9_:_{}Class t1c{}Class l7L9x2:qS{Val $tZ,$_9w:F;Destructor (){}Constructor (){}$_(B_v,R,_:F_7k;Y:Array [String ,0x2];wzDC07,_:Array [Float ,722_82];_:Int ;_5:_4;_,U5,_X:w;_D3,y7I51U,g,UU0__2oA,f,z,__,_:Int ){Return ;} }''',
                '''Class,_9_,:,_,{,},Class,t1c,{,},Class,l7L9x2,:,qS,{,Val,$tZ,,,$_9w,:,F,;,Destructor,(,),{,},Constructor,(,),{,},$_,(,B_v,,,R,,,_,:,F_7k,;,Y,:,Array,[,String,,,0x2,],;,wzDC07,,,_,:,Array,[,Float,,,72282,],;,_,:,Int,;,_5,:,_4,;,_,,,U5,,,_X,:,w,;,_D3,,,y7I51U,,,g,,,UU0__2oA,,,f,,,z,,,__,,,_,:,Int,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2243(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class _9_{Constructor (_4Q__:Int ;_:String ;d_h,_21_9,_yx,_,yi,_,_:Array [Float ,020]){} }Class _{}''',
                '''Class,_,{,Destructor,(,),{,},},Class,_9_,{,Constructor,(,_4Q__,:,Int,;,_,:,String,;,d_h,,,_21_9,,,_yx,,,_,,,yi,,,_,,,_,:,Array,[,Float,,,020,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2244(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_:_mRTx_{Val _3,$a:String ;Constructor (M5_,_,n,y92:_X;f,__:Array [Array [Array [Float ,0b11011],0B1_1],0B1010111]){Break ;} }''',
                '''Class,_0_,:,_mRTx_,{,Val,_3,,,$a,:,String,;,Constructor,(,M5_,,,_,,,n,,,y92,:,_X,;,f,,,__,:,Array,[,Array,[,Array,[,Float,,,0b11011,],,,0B11,],,,0B1010111,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2245(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R:_8{Val $t:Array [Array [Array [Array [String ,0xB_5_4],0b1],57],040_1_7];Val $9_F_6d,o_,$B:Array [Array [Array [Array [Boolean ,030],0B111010],0xF],0x5_8];Val _:String ;}''',
                '''Class,R,:,_8,{,Val,$t,:,Array,[,Array,[,Array,[,Array,[,String,,,0xB54,],,,0b1,],,,57,],,,04017,],;,Val,$9_F_6d,,,o_,,,$B,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,030,],,,0B111010,],,,0xF,],,,0x58,],;,Val,_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2246(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Val _,$_m,i7_,_,f:x;Val $__:WV;Dw6(_,_:Boolean ){}_(U:Array [Array [Int ,0xE_2_A],6];e:Boolean ){} }Class __:_{}Class _:R{}Class hn{}''',
                '''Class,___,{,Val,_,,,$_m,,,i7_,,,_,,,f,:,x,;,Val,$__,:,WV,;,Dw6,(,_,,,_,:,Boolean,),{,},_,(,U,:,Array,[,Array,[,Int,,,0xE2A,],,,6,],;,e,:,Boolean,),{,},},Class,__,:,_,{,},Class,_,:,R,{,},Class,hn,{,},<EOF>''',
                101
            )
        )

    def test_2247(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class __:_{Destructor (){}Val _6:_0;$7(s:Int ;k:Array [Array [Array [Float ,0b100011],0b100011],0B1_1_0_0];_5:Array [Array [Array [Array [Boolean ,0B1],03_254],0131],0x5D_9];T:hL_P){ {} }}Class __hM:_37{}Class _{}Class ___{Val _v8:_i;}''',
                '''Class,_,{,Destructor,(,),{,},},Class,__,:,_,{,Destructor,(,),{,},Val,_6,:,_0,;,$7,(,s,:,Int,;,k,:,Array,[,Array,[,Array,[,Float,,,0b100011,],,,0b100011,],,,0B1100,],;,_5,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,03254,],,,0131,],,,0x5D9,],;,T,:,hL_P,),{,{,},},},Class,__hM,:,_37,{,},Class,_,{,},Class,___,{,Val,_v8,:,_i,;,},<EOF>''',
                101
            )
        )

    def test_2248(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jH4{Destructor (){} }Class O:nJEK{Var ze:Float ;Destructor (){}Val _:Array [Array [Array [String ,0x2],461],47];}''',
                '''Class,jH4,{,Destructor,(,),{,},},Class,O,:,nJEK,{,Var,ze,:,Float,;,Destructor,(,),{,},Val,_,:,Array,[,Array,[,Array,[,String,,,0x2,],,,461,],,,47,],;,},<EOF>''',
                101
            )
        )

    def test_2249(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___{}Class _b_{}Class u_{j(qc_7,_,__7v0g9B,_,_,_e:Boolean ;bd:Array [Array [Float ,0b110_1_101],052];_5D7Z:String ){} }Class i_t0{}''',
                '''Class,_,:,___,{,},Class,_b_,{,},Class,u_,{,j,(,qc_7,,,_,,,__7v0g9B,,,_,,,_,,,_e,:,Boolean,;,bd,:,Array,[,Array,[,Float,,,0b1101101,],,,052,],;,_5D7Z,:,String,),{,},},Class,i_t0,{,},<EOF>''',
                101
            )
        )

    def test_2250(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z_:s{__(_,_:String ;_:Array [Array [Array [Boolean ,0X6],06_0_1],0b1_01]){}Destructor (){}Var __,R7,iI,$_,_2t,__I,R_:Array [Float ,0XF];}''',
                '''Class,Z_,:,s,{,__,(,_,,,_,:,String,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0X6,],,,0601,],,,0b101,],),{,},Destructor,(,),{,},Var,__,,,R7,,,iI,,,$_,,,_2t,,,__I,,,R_,:,Array,[,Float,,,0XF,],;,},<EOF>''',
                101
            )
        )

    def test_2251(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _5660_uxj_{}Class T_{}Class _:YQ{Val $_P8f:String ;}Class _b:_3{Destructor (){} }Class q{Var $_6:_6;_Y(M__,G:Array [Boolean ,0x36];_,BZB:Boolean ;rD,__1:_9){}_o0(B,_:Array [Array [Boolean ,33],0x36]){} }Class __{}''',
                '''Class,_,{,},Class,_5660_uxj_,{,},Class,T_,{,},Class,_,:,YQ,{,Val,$_P8f,:,String,;,},Class,_b,:,_3,{,Destructor,(,),{,},},Class,q,{,Var,$_6,:,_6,;,_Y,(,M__,,,G,:,Array,[,Boolean,,,0x36,],;,_,,,BZB,:,Boolean,;,rD,,,__1,:,_9,),{,},_o0,(,B,,,_,:,Array,[,Array,[,Boolean,,,33,],,,0x36,],),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_2252(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:m{l(V7_:j8_oh;k:Array [Int ,0xB]){}Constructor (RF5,BT:Array [Array [Array [Int ,9_6],0B1],3];u,_:Float ;qs:_73q_9){} }Class h___2{}''',
                '''Class,_,:,m,{,l,(,V7_,:,j8_oh,;,k,:,Array,[,Int,,,0xB,],),{,},Constructor,(,RF5,,,BT,:,Array,[,Array,[,Array,[,Int,,,96,],,,0B1,],,,3,],;,u,,,_,:,Float,;,qs,:,_73q_9,),{,},},Class,h___2,{,},<EOF>''',
                101
            )
        )

    def test_2253(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:d9{Var m:_;Constructor (){}Constructor (_W3_OX,__:Boolean ;HNfL__,_90_:Array [String ,02_1_0_46]){} }Class f:J_56{}''',
                '''Class,_1,:,d9,{,Var,m,:,_,;,Constructor,(,),{,},Constructor,(,_W3_OX,,,__,:,Boolean,;,HNfL__,,,_90_,:,Array,[,String,,,021046,],),{,},},Class,f,:,J_56,{,},<EOF>''',
                101
            )
        )

    def test_2254(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I{Var $_0,B,$8,Mn_,$_4,X5,$7,_Y6U:Array [Int ,0B111000];}Class j_4{}Class S:p0{Constructor (y8_8sm_:Float ;_Hu:Float ;R_:Float ){Val _,H2:P;Return ;Continue ;} }Class _:h_{}''',
                '''Class,I,{,Var,$_0,,,B,,,$8,,,Mn_,,,$_4,,,X5,,,$7,,,_Y6U,:,Array,[,Int,,,0B111000,],;,},Class,j_4,{,},Class,S,:,p0,{,Constructor,(,y8_8sm_,:,Float,;,_Hu,:,Float,;,R_,:,Float,),{,Val,_,,,H2,:,P,;,Return,;,Continue,;,},},Class,_,:,h_,{,},<EOF>''',
                101
            )
        )

    def test_2255(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n4_b{Var $_:Array [Array [Array [Array [Float ,1_405],0b1000111],0112],0xF];Val E,U,dqn,$0,$08,$_,$_:g;}Class _W__:_W{}Class j0m_CW{}Class Z_{}''',
                '''Class,n4_b,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,1405,],,,0b1000111,],,,0112,],,,0xF,],;,Val,E,,,U,,,dqn,,,$0,,,$08,,,$_,,,$_,:,g,;,},Class,_W__,:,_W,{,},Class,j0m_CW,{,},Class,Z_,{,},<EOF>''',
                101
            )
        )

    def test_2256(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d8Eh8:_l{Var c:Float ;b9(so,_3:_;_,z:Array [Array [Array [String ,032],0x45],0b1_00_1_1];__,xn7,W,B___2:String ;l__,a__3X:Float ){} }''',
                '''Class,d8Eh8,:,_l,{,Var,c,:,Float,;,b9,(,so,,,_3,:,_,;,_,,,z,:,Array,[,Array,[,Array,[,String,,,032,],,,0x45,],,,0b10011,],;,__,,,xn7,,,W,,,B___2,:,String,;,l__,,,a__3X,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2257(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$2(z:_;h:_;K1:Array [Boolean ,0XB4];q300,M3:Array [Array [Array [Float ,0X9],0x36],9]){0xC_6._9.Yc._();} }''',
                '''Class,_,{,$2,(,z,:,_,;,h,:,_,;,K1,:,Array,[,Boolean,,,0XB4,],;,q300,,,M3,:,Array,[,Array,[,Array,[,Float,,,0X9,],,,0x36,],,,9,],),{,0xC6,.,_9,.,Yc,.,_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2258(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{Destructor (){Break ;} }Class _:PBk{}Class L{}Class e{Var $2_,r,m,r:Array [Float ,81];}Class _6G{_(_,_,_:Array [Array [Float ,070],65]){Break ;} }''',
                '''Class,i,{,Destructor,(,),{,Break,;,},},Class,_,:,PBk,{,},Class,L,{,},Class,e,{,Var,$2_,,,r,,,m,,,r,:,Array,[,Float,,,81,],;,},Class,_6G,{,_,(,_,,,_,,,_,:,Array,[,Array,[,Float,,,070,],,,65,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2259(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:K_{Var $66,$7s00,T,$e_Oe:String ;I(G:Et89){} }Class _{}Class a:c{Constructor (_,zD:H;_,P:_a){}$_60(x:Array [Float ,0B11];_:Float ){}$_(_:Array [Array [Array [Int ,0XA],055],0X6_D];_:_;x_49_,_:Float ;O2__,B:Array [Array [Int ,0x1A],0xC_F1];Z:_3_;O_e:Int ;xZ,F6,_,b,_:Array [Boolean ,0b1_0_0_0];D_:Array [Array [Array [Array [Array [Array [Boolean ,0B11],39],39],0XB],01],54_6];I_:Array [Boolean ,0x1A];_,_Hk6:String ;_Y_Q9:Array [Boolean ,0165_1];__,_3,d:Array [Float ,055];_,_,_r,__t_1_:Array [String ,8];Ujr2JMVf,_M,Vt:_6_){} }Class s{Val $S_:Array [Int ,055];}''',
                '''Class,y,:,K_,{,Var,$66,,,$7s00,,,T,,,$e_Oe,:,String,;,I,(,G,:,Et89,),{,},},Class,_,{,},Class,a,:,c,{,Constructor,(,_,,,zD,:,H,;,_,,,P,:,_a,),{,},$_60,(,x,:,Array,[,Float,,,0B11,],;,_,:,Float,),{,},$_,(,_,:,Array,[,Array,[,Array,[,Int,,,0XA,],,,055,],,,0X6D,],;,_,:,_,;,x_49_,,,_,:,Float,;,O2__,,,B,:,Array,[,Array,[,Int,,,0x1A,],,,0xCF1,],;,Z,:,_3_,;,O_e,:,Int,;,xZ,,,F6,,,_,,,b,,,_,:,Array,[,Boolean,,,0b1000,],;,D_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11,],,,39,],,,39,],,,0XB,],,,01,],,,546,],;,I_,:,Array,[,Boolean,,,0x1A,],;,_,,,_Hk6,:,String,;,_Y_Q9,:,Array,[,Boolean,,,01651,],;,__,,,_3,,,d,:,Array,[,Float,,,055,],;,_,,,_,,,_r,,,__t_1_,:,Array,[,String,,,8,],;,Ujr2JMVf,,,_M,,,Vt,:,_6_,),{,},},Class,s,{,Val,$S_,:,Array,[,Int,,,055,],;,},<EOF>''',
                101
            )
        )

    def test_2260(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r_:Z__{Constructor (x:Array [String ,044];__mI:d;__57,_7:s0W;l6,__:String ){}Var Z__,$7,_3:Array [Array [Array [Float ,0b1_0100_1],044],826];}Class u:i{}Class _e{$d(){} }Class rj8{_O6(a:Array [Array [Array [Array [Float ,044],03],0b1001101],0B1_1];v,_,__:_;C8:Float ;Y,_,_y:___){} }Class _{}Class _{}Class tL{}Class _T_o:_{Var Q:Boolean ;}Class _3{}Class V:S{}''',
                '''Class,r_,:,Z__,{,Constructor,(,x,:,Array,[,String,,,044,],;,__mI,:,d,;,__57,,,_7,:,s0W,;,l6,,,__,:,String,),{,},Var,Z__,,,$7,,,_3,:,Array,[,Array,[,Array,[,Float,,,0b101001,],,,044,],,,826,],;,},Class,u,:,i,{,},Class,_e,{,$d,(,),{,},},Class,rj8,{,_O6,(,a,:,Array,[,Array,[,Array,[,Array,[,Float,,,044,],,,03,],,,0b1001101,],,,0B11,],;,v,,,_,,,__,:,_,;,C8,:,Float,;,Y,,,_,,,_y,:,___,),{,},},Class,_,{,},Class,_,{,},Class,tL,{,},Class,_T_o,:,_,{,Var,Q,:,Boolean,;,},Class,_3,{,},Class,V,:,S,{,},<EOF>''',
                101
            )
        )

    def test_2261(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z53{Destructor (){Val G:Array [Array [Int ,0320],0xAE_C_D];}Constructor (_9:Array [Boolean ,0b11111];lqv53,__2,_1RN7:Array [Float ,8]){} }Class _:LL1v57_{Destructor (){} }Class K_02:GV{}Class _z:_{Constructor (){}Constructor (_:Float ){} }Class _:n___852{}Class __{Constructor (){}Var $0z7N,O8w,$1_,$r:Int ;}Class _:Q{}Class _7:o95{}''',
                '''Class,Z53,{,Destructor,(,),{,Val,G,:,Array,[,Array,[,Int,,,0320,],,,0xAECD,],;,},Constructor,(,_9,:,Array,[,Boolean,,,0b11111,],;,lqv53,,,__2,,,_1RN7,:,Array,[,Float,,,8,],),{,},},Class,_,:,LL1v57_,{,Destructor,(,),{,},},Class,K_02,:,GV,{,},Class,_z,:,_,{,Constructor,(,),{,},Constructor,(,_,:,Float,),{,},},Class,_,:,n___852,{,},Class,__,{,Constructor,(,),{,},Var,$0z7N,,,O8w,,,$1_,,,$r,:,Int,;,},Class,_,:,Q,{,},Class,_7,:,o95,{,},<EOF>''',
                101
            )
        )

    def test_2262(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _aY7:qw{Constructor (A,_:String ;R_xX:Array [String ,57];_,_,_,__:y){ {Var ____,a_,T3_15B,_,_,i_K1dpyJq:E;} }}Class k{}''',
                '''Class,_aY7,:,qw,{,Constructor,(,A,,,_,:,String,;,R_xX,:,Array,[,String,,,57,],;,_,,,_,,,_,,,__,:,y,),{,{,Var,____,,,a_,,,T3_15B,,,_,,,_,,,i_K1dpyJq,:,E,;,},},},Class,k,{,},<EOF>''',
                101
            )
        )

    def test_2263(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:G1{}Class _8:FHth{Var _Bs,b__,$M8:Array [Array [Boolean ,80_0],0b1];_(d_:_;_:Int ){}Constructor (){}Constructor (_D7:Array [Array [Boolean ,0b1],0B1]){} }Class _:h__{__(){}Destructor (){}Destructor (){ {Break ;} }}''',
                '''Class,_,:,G1,{,},Class,_8,:,FHth,{,Var,_Bs,,,b__,,,$M8,:,Array,[,Array,[,Boolean,,,800,],,,0b1,],;,_,(,d_,:,_,;,_,:,Int,),{,},Constructor,(,),{,},Constructor,(,_D7,:,Array,[,Array,[,Boolean,,,0b1,],,,0B1,],),{,},},Class,_,:,h__,{,__,(,),{,},Destructor,(,),{,},Destructor,(,),{,{,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_2264(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{Constructor (o,M8m_6_:_;_:Int ;U_7,_:d1){Break ;}Var H_:Array [String ,2];Destructor (){Continue ;} }Class K_h{$6(){}Var _I_,h,$__:Int ;Val $_3,$30e:Array [String ,077];}Class j:_5{}Class _{Constructor (__,E8:Float ;_iBU:Array [Array [Int ,0x42],88];h2:__){} }Class E{}''',
                '''Class,k,{,Constructor,(,o,,,M8m_6_,:,_,;,_,:,Int,;,U_7,,,_,:,d1,),{,Break,;,},Var,H_,:,Array,[,String,,,2,],;,Destructor,(,),{,Continue,;,},},Class,K_h,{,$6,(,),{,},Var,_I_,,,h,,,$__,:,Int,;,Val,$_3,,,$30e,:,Array,[,String,,,077,],;,},Class,j,:,_5,{,},Class,_,{,Constructor,(,__,,,E8,:,Float,;,_iBU,:,Array,[,Array,[,Int,,,0x42,],,,88,],;,h2,:,__,),{,},},Class,E,{,},<EOF>''',
                101
            )
        )

    def test_2265(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class zsZ1_ZHg9_:_{Destructor (){} }Class _9{}Class _:_{Val $0_,$5:_o;$_(){Break ;Break ;} }Class N{}Class _4R:O43{}''',
                '''Class,_,{,},Class,zsZ1_ZHg9_,:,_,{,Destructor,(,),{,},},Class,_9,{,},Class,_,:,_,{,Val,$0_,,,$5,:,_o,;,$_,(,),{,Break,;,Break,;,},},Class,N,{,},Class,_4R,:,O43,{,},<EOF>''',
                101
            )
        )

    def test_2266(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __{}Class O:_{}Class _a:_5_7A{Destructor (){} }Class _{Var U:Array [Boolean ,0XA];$a_(_R_,S__,_,_:Boolean ){}Constructor (){}Var r,$UI:Int ;}Class v:__{}''',
                '''Class,_,{,},Class,__,{,},Class,O,:,_,{,},Class,_a,:,_5_7A,{,Destructor,(,),{,},},Class,_,{,Var,U,:,Array,[,Boolean,,,0XA,],;,$a_,(,_R_,,,S__,,,_,,,_,:,Boolean,),{,},Constructor,(,),{,},Var,r,,,$UI,:,Int,;,},Class,v,:,__,{,},<EOF>''',
                101
            )
        )

    def test_2267(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _5_,_U_1_,$_:Array [Array [Float ,040_1],0b1];Constructor (_,r_0ve8,w6:Boolean ;w_,h8,_:String ;_W82,_:Array [Array [Array [Boolean ,0XC],0b1],0XD_57_6];r2,s9_:Float ){}Destructor (){} }''',
                '''Class,_,{,Var,_5_,,,_U_1_,,,$_,:,Array,[,Array,[,Float,,,0401,],,,0b1,],;,Constructor,(,_,,,r_0ve8,,,w6,:,Boolean,;,w_,,,h8,,,_,:,String,;,_W82,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0XC,],,,0b1,],,,0XD576,],;,r2,,,s9_,:,Float,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2268(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:__{_f(_:_;_0:Array [Array [Array [Array [Array [Array [Int ,91],9],91],0105],91],59_7];_J2,_:_;k,N,I_,__,T,a65,_9:String ){} }Class a{Constructor (){} }''',
                '''Class,e,:,__,{,_f,(,_,:,_,;,_0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,91,],,,9,],,,91,],,,0105,],,,91,],,,597,],;,_J2,,,_,:,_,;,k,,,N,,,I_,,,__,,,T,,,a65,,,_9,:,String,),{,},},Class,a,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2269(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _3_r:_X{Constructor (_,___q,__,G6:_N;_,w:R;G6,_z04:Array [Array [Float ,0xC_F_8],047]){Val i,_,JZ:Array [Float ,0XA];Break ;} }''',
                '''Class,_,:,_,{,},Class,_3_r,:,_X,{,Constructor,(,_,,,___q,,,__,,,G6,:,_N,;,_,,,w,:,R,;,G6,,,_z04,:,Array,[,Array,[,Float,,,0xCF8,],,,047,],),{,Val,i,,,_,,,JZ,:,Array,[,Float,,,0XA,],;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2270(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D{Val $_,W9W:Array [Boolean ,3];Constructor (_39:Int ;f:Array [Array [Array [String ,32],0B1_1],0b1];B,_0:k;_9_F_,l:Array [Array [Array [Array [Array [Float ,024],0B1000101],32],0b1],0x4B];t_:Int ;n3,_:Float ;_0,_,bV,f9:G){} }''',
                '''Class,D,{,Val,$_,,,W9W,:,Array,[,Boolean,,,3,],;,Constructor,(,_39,:,Int,;,f,:,Array,[,Array,[,Array,[,String,,,32,],,,0B11,],,,0b1,],;,B,,,_0,:,k,;,_9_F_,,,l,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,024,],,,0B1000101,],,,32,],,,0b1,],,,0x4B,],;,t_,:,Int,;,n3,,,_,:,Float,;,_0,,,_,,,bV,,,f9,:,G,),{,},},<EOF>''',
                101
            )
        )

    def test_2271(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:O_7{$4_(_c:Int ;_,_:Array [Int ,0b1001100];_D,_,_1_43D_e,r6N_Q,C3,_:Array [Array [Array [String ,18],0b1001100],012]){} }Class _:__{}Class a{}''',
                '''Class,_,:,O_7,{,$4_,(,_c,:,Int,;,_,,,_,:,Array,[,Int,,,0b1001100,],;,_D,,,_,,,_1_43D_e,,,r6N_Q,,,C3,,,_,:,Array,[,Array,[,Array,[,String,,,18,],,,0b1001100,],,,012,],),{,},},Class,_,:,__,{,},Class,a,{,},<EOF>''',
                101
            )
        )

    def test_2272(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Tol__Y{Constructor (Bm,IO5,W,B:Array [Array [Array [Float ,07],0X421],0b11010];L7_,_f:WH;_K7___J:_;R_,_,__Ge,e561_,_,_:Array [Array [Float ,0B11],0x1_A_8]){}Var a:Array [Array [Array [String ,07],16],041];}''',
                '''Class,Tol__Y,{,Constructor,(,Bm,,,IO5,,,W,,,B,:,Array,[,Array,[,Array,[,Float,,,07,],,,0X421,],,,0b11010,],;,L7_,,,_f,:,WH,;,_K7___J,:,_,;,R_,,,_,,,__Ge,,,e561_,,,_,,,_,:,Array,[,Array,[,Float,,,0B11,],,,0x1A8,],),{,},Var,a,:,Array,[,Array,[,Array,[,String,,,07,],,,16,],,,041,],;,},<EOF>''',
                101
            )
        )

    def test_2273(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e98P_{Val $x,_,$_,$1:G;wGA(_,_x,k_,_,O,QA_o,_:O;a,U:Array [Array [String ,07],8_1];_h_:Array [Array [Array [Int ,0b110110],06],433];t9:E;___:Boolean ){} }Class _{Val d_,$1_:String ;}''',
                '''Class,e98P_,{,Val,$x,,,_,,,$_,,,$1,:,G,;,wGA,(,_,,,_x,,,k_,,,_,,,O,,,QA_o,,,_,:,O,;,a,,,U,:,Array,[,Array,[,String,,,07,],,,81,],;,_h_,:,Array,[,Array,[,Array,[,Int,,,0b110110,],,,06,],,,433,],;,t9,:,E,;,___,:,Boolean,),{,},},Class,_,{,Val,d_,,,$1_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2274(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:a{$_(_a,__ln,_:_H){}Constructor (__Z_75P:Float ;m:Array [Int ,07]){} }Class _:_{Val $t:u;$4(){Var lOX_,c,H:D;} }Class J{}Class _:_{}Class _0t{}Class Q:_{}''',
                '''Class,o,:,a,{,$_,(,_a,,,__ln,,,_,:,_H,),{,},Constructor,(,__Z_75P,:,Float,;,m,:,Array,[,Int,,,07,],),{,},},Class,_,:,_,{,Val,$t,:,u,;,$4,(,),{,Var,lOX_,,,c,,,H,:,D,;,},},Class,J,{,},Class,_,:,_,{,},Class,_0t,{,},Class,Q,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2275(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val R,$_3_:Array [String ,06];m(_MP,w,_,_,_6:Array [Array [Int ,89],0X5E];_,y,d_P,vJ,___,C1:String ){}Val _:Boolean ;}Class _:M_{}Class _:_{}Class T{}''',
                '''Class,_,{,Val,R,,,$_3_,:,Array,[,String,,,06,],;,m,(,_MP,,,w,,,_,,,_,,,_6,:,Array,[,Array,[,Int,,,89,],,,0X5E,],;,_,,,y,,,d_P,,,vJ,,,___,,,C1,:,String,),{,},Val,_,:,Boolean,;,},Class,_,:,M_,{,},Class,_,:,_,{,},Class,T,{,},<EOF>''',
                101
            )
        )

    def test_2276(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class cM_C2:M{}Class g_{Var $6R_F,j:Float ;}Class o{}Class _XWV{Destructor (){}$09(_67,_3v_:String ){} }Class _2_:_{Var $a:Array [String ,0242];Var v:zf;}''',
                '''Class,_,{,},Class,cM_C2,:,M,{,},Class,g_,{,Var,$6R_F,,,j,:,Float,;,},Class,o,{,},Class,_XWV,{,Destructor,(,),{,},$09,(,_67,,,_3v_,:,String,),{,},},Class,_2_,:,_,{,Var,$a,:,Array,[,String,,,0242,],;,Var,v,:,zf,;,},<EOF>''',
                101
            )
        )

    def test_2277(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:v_T{}Class _{$ms(__0:W_R;_,__6668_w:__;q:Array [Boolean ,073];_:Int ){}Constructor (){} }Class _:o{}Class gI:__{Var $___0y,c:Array [Array [Int ,03_1_5_02_7],4];Constructor (){Continue ;}Val w_v:g;}''',
                '''Class,T,:,v_T,{,},Class,_,{,$ms,(,__0,:,W_R,;,_,,,__6668_w,:,__,;,q,:,Array,[,Boolean,,,073,],;,_,:,Int,),{,},Constructor,(,),{,},},Class,_,:,o,{,},Class,gI,:,__,{,Var,$___0y,,,c,:,Array,[,Array,[,Int,,,0315027,],,,4,],;,Constructor,(,),{,Continue,;,},Val,w_v,:,g,;,},<EOF>''',
                101
            )
        )

    def test_2278(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _42:_2_{$_y(R_:Float ;e:Array [Int ,6_4];_,__,i8u_:k0v){} }Class I:PW_{Val $_:Array [Array [String ,0x64],0b11000];}''',
                '''Class,_42,:,_2_,{,$_y,(,R_,:,Float,;,e,:,Array,[,Int,,,64,],;,_,,,__,,,i8u_,:,k0v,),{,},},Class,I,:,PW_,{,Val,$_,:,Array,[,Array,[,String,,,0x64,],,,0b11000,],;,},<EOF>''',
                101
            )
        )

    def test_2279(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class h_:__{Constructor (_,f8_:Array [Array [Int ,071_4],0b110];_,_8,G,T:Boolean ;_J,c,v1,P8_64_:_4_;m4O7____08:String ;_,_V,Z:Array [String ,0B111011]){Return ;} }''',
                '''Class,_,{,},Class,h_,:,__,{,Constructor,(,_,,,f8_,:,Array,[,Array,[,Int,,,0714,],,,0b110,],;,_,,,_8,,,G,,,T,:,Boolean,;,_J,,,c,,,v1,,,P8_64_,:,_4_,;,m4O7____08,:,String,;,_,,,_V,,,Z,:,Array,[,String,,,0B111011,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2280(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:__{}Class u:N{$D(E:Boolean ){}Val N,$Z,$Y,_:Array [Array [Array [Int ,0133],30],122_5_7];Var $4,$3:Array [Float ,30];Constructor (){Break ;} }''',
                '''Class,x,:,__,{,},Class,u,:,N,{,$D,(,E,:,Boolean,),{,},Val,N,,,$Z,,,$Y,,,_,:,Array,[,Array,[,Array,[,Int,,,0133,],,,30,],,,12257,],;,Var,$4,,,$3,:,Array,[,Float,,,30,],;,Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2281(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class __{}Class _{Constructor (_,_eq:H_){} }Class _TG{Var $5,a__Ng_6_:Float ;Val V,_,YE_,$2,_:Boolean ;Var $s,$R30__,$_,$5g:_;}Class lE:_{}Class R5_Dp_13W:c1__{}Class J{}Class _:_G9{}''',
                '''Class,_,:,_,{,},Class,__,{,},Class,_,{,Constructor,(,_,,,_eq,:,H_,),{,},},Class,_TG,{,Var,$5,,,a__Ng_6_,:,Float,;,Val,V,,,_,,,YE_,,,$2,,,_,:,Boolean,;,Var,$s,,,$R30__,,,$_,,,$5g,:,_,;,},Class,lE,:,_,{,},Class,R5_Dp_13W,:,c1__,{,},Class,J,{,},Class,_,:,_G9,{,},<EOF>''',
                101
            )
        )

    def test_2282(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j{Destructor (){}X(q:Array [Boolean ,12];__:Array [Array [Array [Array [Float ,044],044],0x10],0x10];s:d6_2;_:ts){} }''',
                '''Class,_j,{,Destructor,(,),{,},X,(,q,:,Array,[,Boolean,,,12,],;,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,044,],,,044,],,,0x10,],,,0x10,],;,s,:,d6_2,;,_,:,ts,),{,},},<EOF>''',
                101
            )
        )

    def test_2283(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z4{$P_8N(D,_:Array [Array [Boolean ,16],0xC_A6_6_C];_Q9:Int ;G_:Array [Float ,0xD];U:J){_::$_.v7__();} }''',
                '''Class,Z4,{,$P_8N,(,D,,,_,:,Array,[,Array,[,Boolean,,,16,],,,0xCA66C,],;,_Q9,:,Int,;,G_,:,Array,[,Float,,,0xD,],;,U,:,J,),{,_,::,$_,.,v7__,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2284(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_4N2P_{Var $_:Array [Array [Array [String ,012],0XC],0x17];Var _:__x_;Constructor (){}Val W,$_:Array [Array [Array [Array [Array [Array [String ,8],86],0B110110],0x4],2_17_8_1_0_33],0b1];}''',
                '''Class,I_4N2P_,{,Var,$_,:,Array,[,Array,[,Array,[,String,,,012,],,,0XC,],,,0x17,],;,Var,_,:,__x_,;,Constructor,(,),{,},Val,W,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,8,],,,86,],,,0B110110,],,,0x4,],,,21781033,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_2285(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P_{$Qh7_5(z:Array [Array [Array [Array [Array [String ,063],06],063],73],0B1];b3,_,g:_;L,EU:Boolean ){Return ;{} }}''',
                '''Class,_P_,{,$Qh7_5,(,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,063,],,,06,],,,063,],,,73,],,,0B1,],;,b3,,,_,,,g,:,_,;,L,,,EU,:,Boolean,),{,Return,;,{,},},},<EOF>''',
                101
            )
        )

    def test_2286(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _q_pKK:_h1G{Var $J:Array [Array [Array [Array [Array [Array [String ,0x4],0X6],9],0b1],0XF_E],0X9];Constructor (){K::$_();} }Class ___{}''',
                '''Class,_q_pKK,:,_h1G,{,Var,$J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x4,],,,0X6,],,,9,],,,0b1,],,,0XFE,],,,0X9,],;,Constructor,(,),{,K,::,$_,(,),;,},},Class,___,{,},<EOF>''',
                101
            )
        )

    def test_2287(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:e{Var $zt:Array [Array [Array [Float ,0XD],016],016];Destructor (){Continue ;{} }Constructor (Zb:___U__;_:_99X_o;_,_T,_1:_){}Val $__T,Q:String ;j(){} }Class _:_{}''',
                '''Class,t,:,e,{,Var,$zt,:,Array,[,Array,[,Array,[,Float,,,0XD,],,,016,],,,016,],;,Destructor,(,),{,Continue,;,{,},},Constructor,(,Zb,:,___U__,;,_,:,_99X_o,;,_,,,_T,,,_1,:,_,),{,},Val,$__T,,,Q,:,String,;,j,(,),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2288(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{_(__:String ;k:Boolean ;nWx_:Array [Array [Array [Array [Array [Array [Array [Int ,0X4A],0x47],0b1],0x6_B],19],0X4A],0B1]){}Val $o,$_,$W:Boolean ;Val P_:Float ;}''',
                '''Class,_,:,_,{,_,(,__,:,String,;,k,:,Boolean,;,nWx_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X4A,],,,0x47,],,,0b1,],,,0x6B,],,,19,],,,0X4A,],,,0B1,],),{,},Val,$o,,,$_,,,$W,:,Boolean,;,Val,P_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2289(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i:_{}Class k3:_7{}Class Tk{}Class d_:_{Destructor (){}$_X(){ {} }}Class _4A9{}Class B:x4{Var t:Array [Array [String ,0b1011110],0b1_0];}Class F:QSvH{}''',
                '''Class,i,:,_,{,},Class,k3,:,_7,{,},Class,Tk,{,},Class,d_,:,_,{,Destructor,(,),{,},$_X,(,),{,{,},},},Class,_4A9,{,},Class,B,:,x4,{,Var,t,:,Array,[,Array,[,String,,,0b1011110,],,,0b10,],;,},Class,F,:,QSvH,{,},<EOF>''',
                101
            )
        )

    def test_2290(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _L:o{}Class TB:Z_LN{Val r7:Array [Array [Array [Int ,064],07],07];}Class w0:w_50{Var _,$1:Array [Array [Array [Boolean ,0B1],8],064];Val $_,_:F;}Class w:p_W{}Class _g:_{}''',
                '''Class,_L,:,o,{,},Class,TB,:,Z_LN,{,Val,r7,:,Array,[,Array,[,Array,[,Int,,,064,],,,07,],,,07,],;,},Class,w0,:,w_50,{,Var,_,,,$1,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,8,],,,064,],;,Val,$_,,,_,:,F,;,},Class,w,:,p_W,{,},Class,_g,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2291(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_:W_2{Constructor (mR_p,kC_,_99,_,ER4,__,_:B){}Val _:Array [Array [Array [Array [String ,01_743_1],60],062_51_3],0x7_C_8_3D7_3];}''',
                '''Class,v_,:,W_2,{,Constructor,(,mR_p,,,kC_,,,_99,,,_,,,ER4,,,__,,,_,:,B,),{,},Val,_,:,Array,[,Array,[,Array,[,Array,[,String,,,017431,],,,60,],,,062513,],,,0x7C83D73,],;,},<EOF>''',
                101
            )
        )

    def test_2292(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val __0:Float ;Constructor (Z5P:h_7;r_:Array [Int ,0x6];_,P_a__:Array [Array [Array [Boolean ,016],89],0b110001];_,M_s_:d_;_Ag:Float ;_L_:Int ){}Constructor (q9x0X,Xp5,_VM_X_0,_,__:_;_,_,_:String ;C4,_,N,_,_91F5_0:Array [Array [Array [Array [Boolean ,0xDB],016],0X9],0X9];_:__2;Kl_:M_){Break ;{}Continue ;} }Class O19:Zp{}''',
                '''Class,__,{,Val,__0,:,Float,;,Constructor,(,Z5P,:,h_7,;,r_,:,Array,[,Int,,,0x6,],;,_,,,P_a__,:,Array,[,Array,[,Array,[,Boolean,,,016,],,,89,],,,0b110001,],;,_,,,M_s_,:,d_,;,_Ag,:,Float,;,_L_,:,Int,),{,},Constructor,(,q9x0X,,,Xp5,,,_VM_X_0,,,_,,,__,:,_,;,_,,,_,,,_,:,String,;,C4,,,_,,,N,,,_,,,_91F5_0,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xDB,],,,016,],,,0X9,],,,0X9,],;,_,:,__2,;,Kl_,:,M_,),{,Break,;,{,},Continue,;,},},Class,O19,:,Zp,{,},<EOF>''',
                101
            )
        )

    def test_2293(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{}Class H{}Class y{}Class _:O{Var $T:Array [Array [Float ,0x22],011];Val __g,$R:Array [Array [Int ,0b111010],0b111010];_(){}Var I,$_,$__,_,$_,__y,KY,U,$rKJ,$H:String ;}Class __{}''',
                '''Class,k,{,},Class,H,{,},Class,y,{,},Class,_,:,O,{,Var,$T,:,Array,[,Array,[,Float,,,0x22,],,,011,],;,Val,__g,,,$R,:,Array,[,Array,[,Int,,,0b111010,],,,0b111010,],;,_,(,),{,},Var,I,,,$_,,,$__,,,_,,,$_,,,__y,,,KY,,,U,,,$rKJ,,,$H,:,String,;,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_2294(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{}Class _6Q:__6{Val $_5,___Ex,_:Array [Array [Array [Array [Array [Array [Array [String ,45],94],07],01],2_1],0b1101],06];P(G5,f:l_s;_46:Array [String ,031];_6i,_2:_14g;_,G,A,_M,i_7td,_,_2T_:Array [Int ,94];O:Array [Array [Float ,6_4_0_4_70],94]){} }''',
                '''Class,q,{,},Class,_6Q,:,__6,{,Val,$_5,,,___Ex,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,45,],,,94,],,,07,],,,01,],,,21,],,,0b1101,],,,06,],;,P,(,G5,,,f,:,l_s,;,_46,:,Array,[,String,,,031,],;,_6i,,,_2,:,_14g,;,_,,,G,,,A,,,_M,,,i_7td,,,_,,,_2T_,:,Array,[,Int,,,94,],;,O,:,Array,[,Array,[,Float,,,640470,],,,94,],),{,},},<EOF>''',
                101
            )
        )

    def test_2295(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V_t:a{Var $_,_:K_;S1(){}$6G(){Continue ;G::$0._()._k1();Return ;}Val $b:Array [Float ,40];_(){} }Class _:_{Destructor (){} }''',
                '''Class,V_t,:,a,{,Var,$_,,,_,:,K_,;,S1,(,),{,},$6G,(,),{,Continue,;,G,::,$0,.,_,(,),.,_k1,(,),;,Return,;,},Val,$b,:,Array,[,Float,,,40,],;,_,(,),{,},},Class,_,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2296(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:T{Val $j,$6_7,W_1u,_8:_3;Val $_5Zp,$_09d_,$10_,$7150:Array [Array [Array [Array [Array [Float ,0b1000111],45],35],0x1D],0b1];}''',
                '''Class,_,:,T,{,Val,$j,,,$6_7,,,W_1u,,,_8,:,_3,;,Val,$_5Zp,,,$_09d_,,,$10_,,,$7150,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1000111,],,,45,],,,35,],,,0x1D,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_2297(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0{}Class _{_a61M(j1aF,_:_;_1,R:Boolean ;y,s_n,_99:Array [Boolean ,070]){Break ;}Val $0I,$BS_O_,$gS:L_7;}''',
                '''Class,_0,{,},Class,_,{,_a61M,(,j1aF,,,_,:,_,;,_1,,,R,:,Boolean,;,y,,,s_n,,,_99,:,Array,[,Boolean,,,070,],),{,Break,;,},Val,$0I,,,$BS_O_,,,$gS,:,L_7,;,},<EOF>''',
                101
            )
        )

    def test_2298(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (){}$26(__1:Array [Array [Array [Array [Array [Float ,03631],6_92_8],46],6],152_8];_,_v:Boolean ;c__k3,_:Array [Boolean ,0B1];B:Array [Float ,0b1];B:_4){Return ;} }''',
                '''Class,__,{,Constructor,(,),{,},$26,(,__1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,03631,],,,6928,],,,46,],,,6,],,,1528,],;,_,,,_v,:,Boolean,;,c__k3,,,_,:,Array,[,Boolean,,,0B1,],;,B,:,Array,[,Float,,,0b1,],;,B,:,_4,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2299(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{}Class t_:n_{Val $5R:Array [Array [Array [Array [Array [Int ,0XF],20],0XD],0X5F],0x5_2];Val _,$_e:_u;Val $h:Array [String ,06];}''',
                '''Class,F,{,},Class,t_,:,n_,{,Val,$5R,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XF,],,,20,],,,0XD,],,,0X5F,],,,0x52,],;,Val,_,,,$_e,:,_u,;,Val,$h,:,Array,[,String,,,06,],;,},<EOF>''',
                101
            )
        )

    def test_2300(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Var R:String ;Var K,$9,$X:Array [Array [Array [Array [Array [Array [Array [Array [String ,02],0XFD_B_7],0x5],05],0111],42],03],1_0];}Class L_:q{}Class m{}Class W:_4{}''',
                '''Class,__,:,_,{,Var,R,:,String,;,Var,K,,,$9,,,$X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,0XFDB7,],,,0x5,],,,05,],,,0111,],,,42,],,,03,],,,10,],;,},Class,L_,:,q,{,},Class,m,{,},Class,W,:,_4,{,},<EOF>''',
                101
            )
        )

    def test_2301(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U{}Class __i:kbA_{}Class H:r{}Class w{Var $G,b7:F9;}Class Za6bcT:Q5J_0{_f(g,_:String ;_cN,D43:__6;A6yS:n_t){}Val s6:k;}''',
                '''Class,U,{,},Class,__i,:,kbA_,{,},Class,H,:,r,{,},Class,w,{,Var,$G,,,b7,:,F9,;,},Class,Za6bcT,:,Q5J_0,{,_f,(,g,,,_,:,String,;,_cN,,,D43,:,__6,;,A6yS,:,n_t,),{,},Val,s6,:,k,;,},<EOF>''',
                101
            )
        )

    def test_2302(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z_{r(){}Destructor (){}Constructor (){}Val u:String ;}Class _:__{Var $i:Array [Array [Array [Array [Array [Array [Array [Array [Float ,074],074],33],074],0xD],074],33],016_615];}''',
                '''Class,_Z_,{,r,(,),{,},Destructor,(,),{,},Constructor,(,),{,},Val,u,:,String,;,},Class,_,:,__,{,Var,$i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,074,],,,074,],,,33,],,,074,],,,0xD,],,,074,],,,33,],,,016615,],;,},<EOF>''',
                101
            )
        )

    def test_2303(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $_53:Array [Array [Int ,0X2],0xA];Constructor (J,_,_,j,v:_U_){} }Class _:z2C{}Class _{Var $__,$_6_,U__,$5,$_t,P_,$____d,$6_:Boolean ;}''',
                '''Class,_,{,Val,$_53,:,Array,[,Array,[,Int,,,0X2,],,,0xA,],;,Constructor,(,J,,,_,,,_,,,j,,,v,:,_U_,),{,},},Class,_,:,z2C,{,},Class,_,{,Var,$__,,,$_6_,,,U__,,,$5,,,$_t,,,P_,,,$____d,,,$6_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2304(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{}Class _K{Constructor (M_,X:Array [Array [Array [Float ,0B1],0b110111],0X91_B]){} }Class B5{}Class y:_{Var _S:Array [String ,0B10];}''',
                '''Class,O,{,},Class,_K,{,Constructor,(,M_,,,X,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0b110111,],,,0X91B,],),{,},},Class,B5,{,},Class,y,:,_,{,Var,_S,:,Array,[,String,,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_2305(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J__{Destructor (){}Constructor (e:Array [Array [Boolean ,84],0xD];v:String ;_9:Array [Array [Array [Array [Boolean ,4],84],0b1_1_10],0b1010010];L:Array [Array [Boolean ,84],07_1];c:Array [String ,308_13]){} }Class _:Q_7__v0{}''',
                '''Class,J__,{,Destructor,(,),{,},Constructor,(,e,:,Array,[,Array,[,Boolean,,,84,],,,0xD,],;,v,:,String,;,_9,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,4,],,,84,],,,0b1110,],,,0b1010010,],;,L,:,Array,[,Array,[,Boolean,,,84,],,,071,],;,c,:,Array,[,String,,,30813,],),{,},},Class,_,:,Q_7__v0,{,},<EOF>''',
                101
            )
        )

    def test_2306(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __9{Destructor (){} }Class _5{$__(DH_Owy8,vq:Array [Array [Array [String ,4],0B1_10],0B110110]){} }Class _9:Z_{}''',
                '''Class,_,{,},Class,__9,{,Destructor,(,),{,},},Class,_5,{,$__,(,DH_Owy8,,,vq,:,Array,[,Array,[,Array,[,String,,,4,],,,0B110,],,,0B110110,],),{,},},Class,_9,:,Z_,{,},<EOF>''',
                101
            )
        )

    def test_2307(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7_{Constructor (){} }Class iYS__G6{}Class k:_36{Val $6_,$_:Array [Array [Array [Array [String ,0B1010],7_3],0x20],0B1010];__(_,_O,_lw__,_n6:k){uk::$h();} }Class __G:P{}''',
                '''Class,_7_,{,Constructor,(,),{,},},Class,iYS__G6,{,},Class,k,:,_36,{,Val,$6_,,,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1010,],,,73,],,,0x20,],,,0B1010,],;,__,(,_,,,_O,,,_lw__,,,_n6,:,k,),{,uk,::,$h,(,),;,},},Class,__G,:,P,{,},<EOF>''',
                101
            )
        )

    def test_2308(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_U1{}Class _z3{Val U:Array [Array [Array [Array [String ,0XC],041],041],9];}Class _{O(){} }Class __:__{}Class R:W{Constructor (_:Array [Array [Array [String ,0x3E],0b1001001],0X5]){Continue ;}Destructor (){}$E_(_4__OVF:Int ){Var _,j:__;Return ;}Var _:Array [Array [Boolean ,0XC],0b1001001];}''',
                '''Class,b_U1,{,},Class,_z3,{,Val,U,:,Array,[,Array,[,Array,[,Array,[,String,,,0XC,],,,041,],,,041,],,,9,],;,},Class,_,{,O,(,),{,},},Class,__,:,__,{,},Class,R,:,W,{,Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0x3E,],,,0b1001001,],,,0X5,],),{,Continue,;,},Destructor,(,),{,},$E_,(,_4__OVF,:,Int,),{,Var,_,,,j,:,__,;,Return,;,},Var,_,:,Array,[,Array,[,Boolean,,,0XC,],,,0b1001001,],;,},<EOF>''',
                101
            )
        )

    def test_2309(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{}Class _f{}Class _:i_0{q(){} }Class y_5{}Class N9m{Constructor (_:__;h:_;M,PP,_,_,_z3d_7,A,R6:rI){} }Class E_{}''',
                '''Class,m,{,},Class,_f,{,},Class,_,:,i_0,{,q,(,),{,},},Class,y_5,{,},Class,N9m,{,Constructor,(,_,:,__,;,h,:,_,;,M,,,PP,,,_,,,_,,,_z3d_7,,,A,,,R6,:,rI,),{,},},Class,E_,{,},<EOF>''',
                101
            )
        )

    def test_2310(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K5{}Class _{Constructor (_,e:_;x,c:Array [Array [Array [Array [Int ,0x46],0b10100],0b10100],3]){} }Class __e_01{}Class _{}Class _{}Class _{}''',
                '''Class,K5,{,},Class,_,{,Constructor,(,_,,,e,:,_,;,x,,,c,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x46,],,,0b10100,],,,0b10100,],,,3,],),{,},},Class,__e_01,{,},Class,_,{,},Class,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2311(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F93{Destructor (){Return ;} }Class Pb5_:_5{}Class _:e{Destructor (){}Var m:Array [Array [Int ,03_7_6],14];}''',
                '''Class,F93,{,Destructor,(,),{,Return,;,},},Class,Pb5_,:,_5,{,},Class,_,:,e,{,Destructor,(,),{,},Var,m,:,Array,[,Array,[,Int,,,0376,],,,14,],;,},<EOF>''',
                101
            )
        )

    def test_2312(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W__:M89{}Class e:_{__9_(){} }Class g:_{}Class _:jW{$_74_(_,_,m,_U___,_:String ;_,_:Boolean ;A5TV,_L:Array [Array [Array [Array [Boolean ,0X9D0],0x8B],03],3]){} }''',
                '''Class,W__,:,M89,{,},Class,e,:,_,{,__9_,(,),{,},},Class,g,:,_,{,},Class,_,:,jW,{,$_74_,(,_,,,_,,,m,,,_U___,,,_,:,String,;,_,,,_,:,Boolean,;,A5TV,,,_L,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X9D0,],,,0x8B,],,,03,],,,3,],),{,},},<EOF>''',
                101
            )
        )

    def test_2313(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _g:_{$XG(){}Destructor (){Break ;}Constructor (){} }Class C:Ht2_E8{Constructor (){}Constructor (){} }Class _4:__{}Class x_{}''',
                '''Class,_g,:,_,{,$XG,(,),{,},Destructor,(,),{,Break,;,},Constructor,(,),{,},},Class,C,:,Ht2_E8,{,Constructor,(,),{,},Constructor,(,),{,},},Class,_4,:,__,{,},Class,x_,{,},<EOF>''',
                101
            )
        )

    def test_2314(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:Q{}Class v:_{m_(_0_:Int ;_:Array [Array [Float ,0B1],0b111011];q6:Array [Array [Array [Array [Array [String ,03],56],56],0XC_4A7],9_0];W_x:String ){} }''',
                '''Class,_0,:,Q,{,},Class,v,:,_,{,m_,(,_0_,:,Int,;,_,:,Array,[,Array,[,Float,,,0B1,],,,0b111011,],;,q6,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,03,],,,56,],,,56,],,,0XC4A7,],,,90,],;,W_x,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2315(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N_:__{Val $55JY:H;}Class F61_:Ry{}Class _{}Class _:n0{Constructor (){Break ;}_(NCb75,__F:Array [Array [Array [Array [Array [Int ,9],0132],5_6],0b11110],0132];b_:Int ;D_RD:Array [Array [String ,0b1010],7_7_5_441]){Break ;} }''',
                '''Class,N_,:,__,{,Val,$55JY,:,H,;,},Class,F61_,:,Ry,{,},Class,_,{,},Class,_,:,n0,{,Constructor,(,),{,Break,;,},_,(,NCb75,,,__F,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,9,],,,0132,],,,56,],,,0b11110,],,,0132,],;,b_,:,Int,;,D_RD,:,Array,[,Array,[,String,,,0b1010,],,,775441,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2316(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:D{Var $C:Float ;Val w:Array [Array [String ,045],05761];}Class _F{Constructor (){Return ;Break ;} }Class d{Constructor (){} }''',
                '''Class,J,:,D,{,Var,$C,:,Float,;,Val,w,:,Array,[,Array,[,String,,,045,],,,05761,],;,},Class,_F,{,Constructor,(,),{,Return,;,Break,;,},},Class,d,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2317(self):
        self.assertTrue(
            TestLexer.test(
                '''Class wC:M{Val $650:Boolean ;}Class __G:U{$6(U,IT8,_,g_,h,d2:Array [Array [Array [Int ,97],0X24],0b1];s:Array [Array [Int ,0b1],0B1_1_0]){} }''',
                '''Class,wC,:,M,{,Val,$650,:,Boolean,;,},Class,__G,:,U,{,$6,(,U,,,IT8,,,_,,,g_,,,h,,,d2,:,Array,[,Array,[,Array,[,Int,,,97,],,,0X24,],,,0b1,],;,s,:,Array,[,Array,[,Int,,,0b1,],,,0B110,],),{,},},<EOF>''',
                101
            )
        )

    def test_2318(self):
        self.assertTrue(
            TestLexer.test(
                '''Class xB:E{Var xu6:Array [String ,03_6];}Class _o8{Constructor (B8_:__F;V:Array [Float ,17];F4_,_,___426,_:q7_){}Destructor (){} }''',
                '''Class,xB,:,E,{,Var,xu6,:,Array,[,String,,,036,],;,},Class,_o8,{,Constructor,(,B8_,:,__F,;,V,:,Array,[,Float,,,17,],;,F4_,,,_,,,___426,,,_,:,q7_,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2319(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $_,$W:Array [Boolean ,067];Constructor (){ {Continue ;Val v4,__nqo:Array [Array [Int ,0XEF],0X1_A2];} }}''',
                '''Class,_,{,Val,$_,,,$W,:,Array,[,Boolean,,,067,],;,Constructor,(,),{,{,Continue,;,Val,v4,,,__nqo,:,Array,[,Array,[,Int,,,0XEF,],,,0X1A2,],;,},},},<EOF>''',
                101
            )
        )

    def test_2320(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V_:GA_{Constructor (_,_:Float ;_2,p,_A_R_,___Xv_,___,J,u_,K_,_:U){}$_(_N_:Array [Float ,5]){} }Class Z{}Class _00{}''',
                '''Class,_V_,:,GA_,{,Constructor,(,_,,,_,:,Float,;,_2,,,p,,,_A_R_,,,___Xv_,,,___,,,J,,,u_,,,K_,,,_,:,U,),{,},$_,(,_N_,:,Array,[,Float,,,5,],),{,},},Class,Z,{,},Class,_00,{,},<EOF>''',
                101
            )
        )

    def test_2321(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:__{Val e_:Boolean ;Constructor (gA:Array [Array [Array [Int ,06],0x2],040];u_,_,_t__d_:Float ){} }Class VP:c{}Class i_6{Destructor (){} }Class z{}Class _:_{Destructor (){}Constructor (){}$l1_4(_,x8__:Int ){} }''',
                '''Class,c,:,__,{,Val,e_,:,Boolean,;,Constructor,(,gA,:,Array,[,Array,[,Array,[,Int,,,06,],,,0x2,],,,040,],;,u_,,,_,,,_t__d_,:,Float,),{,},},Class,VP,:,c,{,},Class,i_6,{,Destructor,(,),{,},},Class,z,{,},Class,_,:,_,{,Destructor,(,),{,},Constructor,(,),{,},$l1_4,(,_,,,x8__,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2322(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class K:Um{Constructor (){Val D__7L,r:F;}Var $8,_:_;}Class t4{}Class _{Destructor (){} }''',
                '''Class,_,{,Destructor,(,),{,},},Class,K,:,Um,{,Constructor,(,),{,Val,D__7L,,,r,:,F,;,},Var,$8,,,_,:,_,;,},Class,t4,{,},Class,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2323(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H6_{_(n_h0_,B,n:Array [Array [Array [Array [Array [Array [Array [Array [Float ,27],27],27],0127],0x1],0b10100],01],0127]){} }''',
                '''Class,H6_,{,_,(,n_h0_,,,B,,,n,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,27,],,,27,],,,27,],,,0127,],,,0x1,],,,0b10100,],,,01,],,,0127,],),{,},},<EOF>''',
                101
            )
        )

    def test_2324(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __7{_3(x_l0_7_:String ;C:Int ;s,T:Array [Float ,0b110_11]){}Var _1:Array [Array [Boolean ,0X64],0b100010];}Class j{Constructor (L,_:String ){ {} }}''',
                '''Class,__7,{,_3,(,x_l0_7_,:,String,;,C,:,Int,;,s,,,T,:,Array,[,Float,,,0b11011,],),{,},Var,_1,:,Array,[,Array,[,Boolean,,,0X64,],,,0b100010,],;,},Class,j,{,Constructor,(,L,,,_,:,String,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2325(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R_{Constructor (){Continue ;}Var $_:_P;Var $_:Array [Boolean ,0B1_1];Var $6:Array [String ,02];Var _3_C,__:Int ;}Class _P_:_{}Class _:F{}Class w4_:R16_Wg{}''',
                '''Class,R_,{,Constructor,(,),{,Continue,;,},Var,$_,:,_P,;,Var,$_,:,Array,[,Boolean,,,0B11,],;,Var,$6,:,Array,[,String,,,02,],;,Var,_3_C,,,__,:,Int,;,},Class,_P_,:,_,{,},Class,_,:,F,{,},Class,w4_,:,R16_Wg,{,},<EOF>''',
                101
            )
        )

    def test_2326(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:U{Var v:v_H;}Class _{Val U:Array [Array [Float ,77],0B11101];}Class _s{Val $1,$8_:Array [Array [Float ,77_5],0130];Val w:Ba;}Class _:__zz{}''',
                '''Class,o,:,U,{,Var,v,:,v_H,;,},Class,_,{,Val,U,:,Array,[,Array,[,Float,,,77,],,,0B11101,],;,},Class,_s,{,Val,$1,,,$8_,:,Array,[,Array,[,Float,,,775,],,,0130,],;,Val,w,:,Ba,;,},Class,_,:,__zz,{,},<EOF>''',
                101
            )
        )

    def test_2327(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I{Constructor (F,W,_:Int ;N,T,L,__V4,_3,_,j,_j:R;b:r2dV;p:String ;E:Array [Array [Float ,0X63],0X7];_,_,_,_,t_J_,O,U:Array [String ,01_16_60_46_3]){}t(){} }Class _:__{Constructor (){} }Class k_Y{$d(){Break ;} }Class y{Val $s_:__;Val $q:Int ;Constructor (){}Val _,_z_,$D6_,$j:Int ;}''',
                '''Class,_,:,I,{,Constructor,(,F,,,W,,,_,:,Int,;,N,,,T,,,L,,,__V4,,,_3,,,_,,,j,,,_j,:,R,;,b,:,r2dV,;,p,:,String,;,E,:,Array,[,Array,[,Float,,,0X63,],,,0X7,],;,_,,,_,,,_,,,_,,,t_J_,,,O,,,U,:,Array,[,String,,,011660463,],),{,},t,(,),{,},},Class,_,:,__,{,Constructor,(,),{,},},Class,k_Y,{,$d,(,),{,Break,;,},},Class,y,{,Val,$s_,:,__,;,Val,$q,:,Int,;,Constructor,(,),{,},Val,_,,,_z_,,,$D6_,,,$j,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2328(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_2y9_:_54{Val _C,_:Int ;_(D_2t_,_8,Yw:Array [Float ,0x48];_,x:Array [Array [Int ,055],03_5_1_3];_:_0_X3O;_TC,_:Boolean ;b,i0,_:_){}$t(){} }''',
                '''Class,b_2y9_,:,_54,{,Val,_C,,,_,:,Int,;,_,(,D_2t_,,,_8,,,Yw,:,Array,[,Float,,,0x48,],;,_,,,x,:,Array,[,Array,[,Int,,,055,],,,03513,],;,_,:,_0_X3O,;,_TC,,,_,:,Boolean,;,b,,,i0,,,_,:,_,),{,},$t,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2329(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S_{Destructor (){}Destructor (){ {} }}Class _{}Class _4:V3{Val _8_O:Array [Int ,0X7];}Class U{Val $0T:Array [Boolean ,0110];}''',
                '''Class,S_,{,Destructor,(,),{,},Destructor,(,),{,{,},},},Class,_,{,},Class,_4,:,V3,{,Val,_8_O,:,Array,[,Int,,,0X7,],;,},Class,U,{,Val,$0T,:,Array,[,Boolean,,,0110,],;,},<EOF>''',
                101
            )
        )

    def test_2330(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _x:r{}Class c:Ho{}Class _0{Val $Y,$_:_Q_;Destructor (){ {}Break ;}Constructor (z3,r2:Array [Int ,1]){}Constructor (__,i:Array [Int ,0b1011001]){}Var mq9:Array [String ,0x4_C];Destructor (){} }''',
                '''Class,_x,:,r,{,},Class,c,:,Ho,{,},Class,_0,{,Val,$Y,,,$_,:,_Q_,;,Destructor,(,),{,{,},Break,;,},Constructor,(,z3,,,r2,:,Array,[,Int,,,1,],),{,},Constructor,(,__,,,i,:,Array,[,Int,,,0b1011001,],),{,},Var,mq9,:,Array,[,String,,,0x4C,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2331(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yH{Var _,$3:String ;Var _0xE:Float ;$9(t,__,_B,_w,O:_){} }Class A{Constructor (){Val z7,X:_;}Constructor (){}_(_:K;_:z_){}Val s6,_5,v_,$__:Array [Float ,0X5B];}Class Y{}''',
                '''Class,yH,{,Var,_,,,$3,:,String,;,Var,_0xE,:,Float,;,$9,(,t,,,__,,,_B,,,_w,,,O,:,_,),{,},},Class,A,{,Constructor,(,),{,Val,z7,,,X,:,_,;,},Constructor,(,),{,},_,(,_,:,K,;,_,:,z_,),{,},Val,s6,,,_5,,,v_,,,$__,:,Array,[,Float,,,0X5B,],;,},Class,Y,{,},<EOF>''',
                101
            )
        )

    def test_2332(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:Ki{}Class _:B{Val B_,B,_6_dx,j_,$j_:Array [String ,014];Val P,$_:O_92__;Constructor (_:_B;S:Array [String ,0xDC_F]){} }''',
                '''Class,f,:,Ki,{,},Class,_,:,B,{,Val,B_,,,B,,,_6_dx,,,j_,,,$j_,:,Array,[,String,,,014,],;,Val,P,,,$_,:,O_92__,;,Constructor,(,_,:,_B,;,S,:,Array,[,String,,,0xDCF,],),{,},},<EOF>''',
                101
            )
        )

    def test_2333(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D{Destructor (){} }Class _{}Class __K:_nb{Var i_,b,$_dk8_Y,$8,$_,$J,$2j,$_5B:Int ;}Class _:L_4{}Class P:_{}''',
                '''Class,D,{,Destructor,(,),{,},},Class,_,{,},Class,__K,:,_nb,{,Var,i_,,,b,,,$_dk8_Y,,,$8,,,$_,,,$J,,,$2j,,,$_5B,:,Int,;,},Class,_,:,L_4,{,},Class,P,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2334(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O__{Destructor (){}Var $9:Array [Array [Array [Array [Array [Array [Array [Boolean ,45],6_6],45],45],0B1],45],0b101];$3(){} }Class o:cb{_N(_6:Float ){} }''',
                '''Class,O__,{,Destructor,(,),{,},Var,$9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,45,],,,66,],,,45,],,,45,],,,0B1,],,,45,],,,0b101,],;,$3,(,),{,},},Class,o,:,cb,{,_N,(,_6,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2335(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K0__w:T{Destructor (){} }Class J_5Z_:_{Var __,_,$9,_84:Array [Array [Array [Array [Array [String ,0B11100],0B1],0b1_0_1_0],0b1100011],0b11];}Class c{Val $1:Float ;}Class KVO_Q___8:j{}Class _{}''',
                '''Class,K0__w,:,T,{,Destructor,(,),{,},},Class,J_5Z_,:,_,{,Var,__,,,_,,,$9,,,_84,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B11100,],,,0B1,],,,0b1010,],,,0b1100011,],,,0b11,],;,},Class,c,{,Val,$1,:,Float,;,},Class,KVO_Q___8,:,j,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2336(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V__:_{Val $k,_:Array [Array [String ,0xE],0214];$_(_,_6_7_:Array [Array [Array [Array [Float ,02],0X10],075],54];S,s,u1H:Z){Continue ;} }Class __{}Class _:_{}''',
                '''Class,V__,:,_,{,Val,$k,,,_,:,Array,[,Array,[,String,,,0xE,],,,0214,],;,$_,(,_,,,_6_7_,:,Array,[,Array,[,Array,[,Array,[,Float,,,02,],,,0X10,],,,075,],,,54,],;,S,,,s,,,u1H,:,Z,),{,Continue,;,},},Class,__,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2337(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V2_:_k_{Destructor (){Continue ;}Val _,$_:String ;Constructor (_c,_Y486o:Int ){}Val i_p:_;Val _0d:w;Var $Z_:Array [Boolean ,0b10];Constructor (){} }''',
                '''Class,V2_,:,_k_,{,Destructor,(,),{,Continue,;,},Val,_,,,$_,:,String,;,Constructor,(,_c,,,_Y486o,:,Int,),{,},Val,i_p,:,_,;,Val,_0d,:,w,;,Var,$Z_,:,Array,[,Boolean,,,0b10,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2338(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$7(Z:Array [Array [String ,2],0B1001000];_A:Array [Float ,93];_:Array [Array [Array [Array [String ,0XF],0x4],052],052];_3:f){}Val $zC7,t,_,$8i_:v_30;}Class _{}''',
                '''Class,_,:,_,{,$7,(,Z,:,Array,[,Array,[,String,,,2,],,,0B1001000,],;,_A,:,Array,[,Float,,,93,],;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0XF,],,,0x4,],,,052,],,,052,],;,_3,:,f,),{,},Val,$zC7,,,t,,,_,,,$8i_,:,v_30,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2339(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _t:_{Val $1A__:_;_2_94d7x(_,y:Array [Array [Boolean ,0B1111],1]){}I(K4g0_5,_,_,_,H,z_:String ;b:__2;_0x,F:_0){} }''',
                '''Class,_t,:,_,{,Val,$1A__,:,_,;,_2_94d7x,(,_,,,y,:,Array,[,Array,[,Boolean,,,0B1111,],,,1,],),{,},I,(,K4g0_5,,,_,,,_,,,_,,,H,,,z_,:,String,;,b,:,__2,;,_0x,,,F,:,_0,),{,},},<EOF>''',
                101
            )
        )

    def test_2340(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __t{Var o_:vaT;Constructor (_,Oa,L:String ;sv,_:Array [Array [Array [Array [String ,52_53_0],5_8],0B11111],835]){Var U_q:Boolean ;} }Class _:_3{}''',
                '''Class,__t,{,Var,o_,:,vaT,;,Constructor,(,_,,,Oa,,,L,:,String,;,sv,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,52530,],,,58,],,,0B11111,],,,835,],),{,Var,U_q,:,Boolean,;,},},Class,_,:,_3,{,},<EOF>''',
                101
            )
        )

    def test_2341(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:_{Val L:Array [Array [Float ,0b10_0],0XA_3_5];}Class _f0_{Constructor (_q2R__q_:p6F;GQ:String ;k,__o:_8){} }''',
                '''Class,T,:,_,{,Val,L,:,Array,[,Array,[,Float,,,0b100,],,,0XA35,],;,},Class,_f0_,{,Constructor,(,_q2R__q_,:,p6F,;,GQ,:,String,;,k,,,__o,:,_8,),{,},},<EOF>''',
                101
            )
        )

    def test_2342(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __62__X:e3E4{Destructor (){}$j(__b80W_:__){} }Class _n:S{Var $S_0,$_j,N84_Q__y,_6,$s6,$80,$_7_:Boolean ;}''',
                '''Class,__62__X,:,e3E4,{,Destructor,(,),{,},$j,(,__b80W_,:,__,),{,},},Class,_n,:,S,{,Var,$S_0,,,$_j,,,N84_Q__y,,,_6,,,$s6,,,$80,,,$_7_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2343(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B5__:_{Var MQ_,ZZ__24_,$uJ_Z_:o;}Class _j6t:_{}Class O6:_p3{Val $_:Array [Int ,3];}Class _J:Z5{}Class Q:W{}Class _{}Class _w64:_{}Class _T8:B1{}Class __{Destructor (){Continue ;}Constructor (){} }''',
                '''Class,B5__,:,_,{,Var,MQ_,,,ZZ__24_,,,$uJ_Z_,:,o,;,},Class,_j6t,:,_,{,},Class,O6,:,_p3,{,Val,$_,:,Array,[,Int,,,3,],;,},Class,_J,:,Z5,{,},Class,Q,:,W,{,},Class,_,{,},Class,_w64,:,_,{,},Class,_T8,:,B1,{,},Class,__,{,Destructor,(,),{,Continue,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2344(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z___{}Class qf:w6{Constructor (_:Array [Boolean ,0x4B];_13,_,_I4_:R;C:___0__k;_:Array [Array [Int ,0x5],45]){}Var xW,a:JT_;Val T_:Int ;}Class o0:_{Val b:Boolean ;}''',
                '''Class,Z___,{,},Class,qf,:,w6,{,Constructor,(,_,:,Array,[,Boolean,,,0x4B,],;,_13,,,_,,,_I4_,:,R,;,C,:,___0__k,;,_,:,Array,[,Array,[,Int,,,0x5,],,,45,],),{,},Var,xW,,,a,:,JT_,;,Val,T_,:,Int,;,},Class,o0,:,_,{,Val,b,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2345(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _5:K{Val _3_p,P:Array [Float ,64];}Class B{Val $DH:Array [Boolean ,0x25];Destructor (){Break ;}Var _,W3:t3;}''',
                '''Class,_,{,},Class,_5,:,K,{,Val,_3_p,,,P,:,Array,[,Float,,,64,],;,},Class,B,{,Val,$DH,:,Array,[,Boolean,,,0x25,],;,Destructor,(,),{,Break,;,},Var,_,,,W3,:,t3,;,},<EOF>''',
                101
            )
        )

    def test_2346(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E_m{}Class _:_{Constructor (_6,b:Array [Int ,0B1];_:Array [Array [Array [Int ,057],0X4D],0B1010011];_:Float ;g,_,j:_78){} }''',
                '''Class,E_m,{,},Class,_,:,_,{,Constructor,(,_6,,,b,:,Array,[,Int,,,0B1,],;,_,:,Array,[,Array,[,Array,[,Int,,,057,],,,0X4D,],,,0B1010011,],;,_,:,Float,;,g,,,_,,,j,:,_78,),{,},},<EOF>''',
                101
            )
        )

    def test_2347(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __2f1{}Class __8{Destructor (){}Destructor (){}Constructor (_i,_3,_,BE65,ab:_){}a(_,OO5,T:Array [Boolean ,10]){} }Class _:ow5{}Class C{}''',
                '''Class,__2f1,{,},Class,__8,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,_i,,,_3,,,_,,,BE65,,,ab,:,_,),{,},a,(,_,,,OO5,,,T,:,Array,[,Boolean,,,10,],),{,},},Class,_,:,ow5,{,},Class,C,{,},<EOF>''',
                101
            )
        )

    def test_2348(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (_,_P4,_v:Array [Array [Int ,84],4]){}Val $8:Array [Int ,0b10101];}Class Y:_3{Constructor (_,_,A:Array [Int ,0X1];N,w,_2e,_8,V,_,_awfW:_8){} }Class _:_P{}Class w0G{}''',
                '''Class,__,{,Constructor,(,_,,,_P4,,,_v,:,Array,[,Array,[,Int,,,84,],,,4,],),{,},Val,$8,:,Array,[,Int,,,0b10101,],;,},Class,Y,:,_3,{,Constructor,(,_,,,_,,,A,:,Array,[,Int,,,0X1,],;,N,,,w,,,_2e,,,_8,,,V,,,_,,,_awfW,:,_8,),{,},},Class,_,:,_P,{,},Class,w0G,{,},<EOF>''',
                101
            )
        )

    def test_2349(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Z{}Class _39f{$_(__:Array [Array [Array [Array [Int ,0B1],0B101],9],0X63];_:Array [Array [Float ,0XAE],67];_,_m4_:Boolean ){}Destructor (){} }''',
                '''Class,_,:,Z,{,},Class,_39f,{,$_,(,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B101,],,,9,],,,0X63,],;,_,:,Array,[,Array,[,Float,,,0XAE,],,,67,],;,_,,,_m4_,:,Boolean,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2350(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X{Val _,$6Is40,_:f_;Constructor (_:Boolean ){}Var $__:_Q;$W(_,j:Array [Array [Array [Boolean ,0x3F],10],0b11001]){} }''',
                '''Class,_,:,X,{,Val,_,,,$6Is40,,,_,:,f_,;,Constructor,(,_,:,Boolean,),{,},Var,$__,:,_Q,;,$W,(,_,,,j,:,Array,[,Array,[,Array,[,Boolean,,,0x3F,],,,10,],,,0b11001,],),{,},},<EOF>''',
                101
            )
        )

    def test_2351(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $sw8:Array [Array [Array [Float ,24],0B1100010],24];}Class u{Var j_y09:_s9E;__(q:Array [Array [Array [Array [Array [String ,05],0b1],58],0xB_FE_E],051];R,J,t_:Array [Array [Array [Array [Array [Boolean ,24],6_8],0XF],0X8],0x17]){} }Class _e:_{}Class _a{_(){} }''',
                '''Class,_,{,Var,$sw8,:,Array,[,Array,[,Array,[,Float,,,24,],,,0B1100010,],,,24,],;,},Class,u,{,Var,j_y09,:,_s9E,;,__,(,q,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,05,],,,0b1,],,,58,],,,0xBFEE,],,,051,],;,R,,,J,,,t_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,24,],,,68,],,,0XF,],,,0X8,],,,0x17,],),{,},},Class,_e,:,_,{,},Class,_a,{,_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2352(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:tR{Val A:_;}Class p:B{}Class _{}Class __{Constructor (_:Array [Array [String ,9_3],0x5F];_,z_a,fqV2_E:String ){} }''',
                '''Class,_,:,tR,{,Val,A,:,_,;,},Class,p,:,B,{,},Class,_,{,},Class,__,{,Constructor,(,_,:,Array,[,Array,[,String,,,93,],,,0x5F,],;,_,,,z_a,,,fqV2_E,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2353(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:uj{}Class H_0:f{$m(){}Var _:_z_5;Constructor (_,l57,____,e:Array [Int ,35_66_6_28];_,r_:Array [String ,86]){} }''',
                '''Class,_,:,uj,{,},Class,H_0,:,f,{,$m,(,),{,},Var,_,:,_z_5,;,Constructor,(,_,,,l57,,,____,,,e,:,Array,[,Int,,,3566628,],;,_,,,r_,:,Array,[,String,,,86,],),{,},},<EOF>''',
                101
            )
        )

    def test_2354(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0o:__{}Class _6:V_{Var __,$p2_:Array [Array [Array [Float ,6],0xEB_6],0X5];Val _13A9_,$s9:Array [String ,3];Constructor (){} }Class lJ:_{}''',
                '''Class,_0o,:,__,{,},Class,_6,:,V_,{,Var,__,,,$p2_,:,Array,[,Array,[,Array,[,Float,,,6,],,,0xEB6,],,,0X5,],;,Val,_13A9_,,,$s9,:,Array,[,String,,,3,],;,Constructor,(,),{,},},Class,lJ,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2355(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{Constructor (_Qj:String ;A,x,v___,_:ZK;U,_,__5,_Q:_;z:__;I9,ca:Array [Int ,0B101001];_,_08BX4ps_:Array [Array [Array [String ,05],50],0B101001]){} }''',
                '''Class,T,{,Constructor,(,_Qj,:,String,;,A,,,x,,,v___,,,_,:,ZK,;,U,,,_,,,__5,,,_Q,:,_,;,z,:,__,;,I9,,,ca,:,Array,[,Int,,,0B101001,],;,_,,,_08BX4ps_,:,Array,[,Array,[,Array,[,String,,,05,],,,50,],,,0B101001,],),{,},},<EOF>''',
                101
            )
        )

    def test_2356(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y_{Var $s_O:Float ;$u_(v4:Boolean ){}Constructor (___N,_:String ;S:String ;v,U,G,_05_,_d0:Array [Int ,0B11100]){} }''',
                '''Class,y_,{,Var,$s_O,:,Float,;,$u_,(,v4,:,Boolean,),{,},Constructor,(,___N,,,_,:,String,;,S,:,String,;,v,,,U,,,G,,,_05_,,,_d0,:,Array,[,Int,,,0B11100,],),{,},},<EOF>''',
                101
            )
        )

    def test_2357(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_vB18_{_(_:N3_85){}Var $_,p:Int ;Constructor (__1,F2,h,_q:Array [Float ,0B1];S,_6:Array [Float ,0b1];_:String ){} }''',
                '''Class,_,:,_vB18_,{,_,(,_,:,N3_85,),{,},Var,$_,,,p,:,Int,;,Constructor,(,__1,,,F2,,,h,,,_q,:,Array,[,Float,,,0B1,],;,S,,,_6,:,Array,[,Float,,,0b1,],;,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2358(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class Fk6_:__{$_(_5,v:D5;rFb:Array [Boolean ,024]){}Var $37:Array [Boolean ,037];}Class G0__:E{I9(){} }Class Z:_{Destructor (){} }''',
                '''Class,_,{,},Class,Fk6_,:,__,{,$_,(,_5,,,v,:,D5,;,rFb,:,Array,[,Boolean,,,024,],),{,},Var,$37,:,Array,[,Boolean,,,037,],;,},Class,G0__,:,E,{,I9,(,),{,},},Class,Z,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2359(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:y_9{Var $1,$N6,b,_,$_:_0;Val $V,$95,$__s,_,e,$_:Array [Array [Array [Array [Array [Int ,91],0x5],0x5B],72],2_22_6];}Class t{_(_4N_,hlM:Array [Boolean ,91]){} }Class _{}Class Y{}Class _:_{}Class _{}Class Yp{}''',
                '''Class,w,:,y_9,{,Var,$1,,,$N6,,,b,,,_,,,$_,:,_0,;,Val,$V,,,$95,,,$__s,,,_,,,e,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,91,],,,0x5,],,,0x5B,],,,72,],,,2226,],;,},Class,t,{,_,(,_4N_,,,hlM,:,Array,[,Boolean,,,91,],),{,},},Class,_,{,},Class,Y,{,},Class,_,:,_,{,},Class,_,{,},Class,Yp,{,},<EOF>''',
                101
            )
        )

    def test_2360(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{Var $5_,$H:Float ;}Class C{$__(G:h;m9:String ;dt,_,l,W9:Int ){}Val _V__8_,_:_;F(){} }Class kb:_oZ{}Class m7_{}''',
                '''Class,K,{,Var,$5_,,,$H,:,Float,;,},Class,C,{,$__,(,G,:,h,;,m9,:,String,;,dt,,,_,,,l,,,W9,:,Int,),{,},Val,_V__8_,,,_,:,_,;,F,(,),{,},},Class,kb,:,_oZ,{,},Class,m7_,{,},<EOF>''',
                101
            )
        )

    def test_2361(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{Constructor (){ {K2::$_().h();} }Var g4:Array [Boolean ,0x2];Destructor (){}Constructor (){} }Class Z_{Destructor (){} }Class __{Destructor (){} }''',
                '''Class,_1,{,Constructor,(,),{,{,K2,::,$_,(,),.,h,(,),;,},},Var,g4,:,Array,[,Boolean,,,0x2,],;,Destructor,(,),{,},Constructor,(,),{,},},Class,Z_,{,Destructor,(,),{,},},Class,__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2362(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{_(){}Val _6:Array [Int ,0x6_0_F];Destructor (){Continue ;}Val $w1,u_,$mh,_b:String ;k8(){} }Class _517:TG{}Class y:_{}''',
                '''Class,_,:,_,{,_,(,),{,},Val,_6,:,Array,[,Int,,,0x60F,],;,Destructor,(,),{,Continue,;,},Val,$w1,,,u_,,,$mh,,,_b,:,String,;,k8,(,),{,},},Class,_517,:,TG,{,},Class,y,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2363(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{}Class r{}Class Q{Constructor (__,_4_,b:Array [Array [Boolean ,8_99],0b100111];__,___60U5,__:Array [String ,0x7_2_A]){}Destructor (){xs::$2._.___.o1_.d6._o8();} }''',
                '''Class,R,{,},Class,r,{,},Class,Q,{,Constructor,(,__,,,_4_,,,b,:,Array,[,Array,[,Boolean,,,899,],,,0b100111,],;,__,,,___60U5,,,__,:,Array,[,String,,,0x72A,],),{,},Destructor,(,),{,xs,::,$2,.,_,.,___,.,o1_,.,d6,.,_o8,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2364(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{}Class _:_{}Class __{Val C,$_0,$7K2:_86_0;Constructor (_,E:_;M:Array [Array [Array [String ,061],061],91]){} }Class b:C{}''',
                '''Class,_,:,__,{,},Class,_,:,_,{,},Class,__,{,Val,C,,,$_0,,,$7K2,:,_86_0,;,Constructor,(,_,,,E,:,_,;,M,:,Array,[,Array,[,Array,[,String,,,061,],,,061,],,,91,],),{,},},Class,b,:,C,{,},<EOF>''',
                101
            )
        )

    def test_2365(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(DF,_YR:J__;_6,_,_1e_:Array [Int ,87]){Break ;Continue ;}$_0(_b,l_,U_e,d4A4_:_z;_7:Int ;Jb:_;z,_Hj7_5_14:Boolean ;_:g_;_:_;_,W:String ){} }''',
                '''Class,_,{,_,(,DF,,,_YR,:,J__,;,_6,,,_,,,_1e_,:,Array,[,Int,,,87,],),{,Break,;,Continue,;,},$_0,(,_b,,,l_,,,U_e,,,d4A4_,:,_z,;,_7,:,Int,;,Jb,:,_,;,z,,,_Hj7_5_14,:,Boolean,;,_,:,g_,;,_,:,_,;,_,,,W,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2366(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __5:_4{l(_,_,S:Array [Array [Array [Array [Array [Array [Array [Float ,0142],0B1],02],0B11],7],2_7],81];A1_,y,Ew7,KVG:Array [Array [Int ,0X4B0],0b1_1]){} }''',
                '''Class,__5,:,_4,{,l,(,_,,,_,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0142,],,,0B1,],,,02,],,,0B11,],,,7,],,,27,],,,81,],;,A1_,,,y,,,Ew7,,,KVG,:,Array,[,Array,[,Int,,,0X4B0,],,,0b11,],),{,},},<EOF>''',
                101
            )
        )

    def test_2367(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_{Constructor (_,wH:Boolean ;_,___:Array [Array [String ,0B1000111],07];_380:J;m:Array [Array [Int ,055_1],0105];__:String ;j,_:Int ;X:Boolean ;w,F8Tv_:_f8){Break ;} }''',
                '''Class,l_,{,Constructor,(,_,,,wH,:,Boolean,;,_,,,___,:,Array,[,Array,[,String,,,0B1000111,],,,07,],;,_380,:,J,;,m,:,Array,[,Array,[,Int,,,0551,],,,0105,],;,__,:,String,;,j,,,_,:,Int,;,X,:,Boolean,;,w,,,F8Tv_,:,_f8,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2368(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X{}Class E:y{Val $_,H,_r,$9,O,$_va,_cob:Array [Array [String ,0x31],023];Destructor (){}Var $_:String ;}Class _{}''',
                '''Class,_,:,X,{,},Class,E,:,y,{,Val,$_,,,H,,,_r,,,$9,,,O,,,$_va,,,_cob,:,Array,[,Array,[,String,,,0x31,],,,023,],;,Destructor,(,),{,},Var,$_,:,String,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2369(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_984,_d:Array [Float ,0B1001010];_9,v:Array [Array [Array [Array [Float ,04_2_63],064_5_6],94],3_6]){} }''',
                '''Class,_,{,Constructor,(,_984,,,_d,:,Array,[,Float,,,0B1001010,],;,_9,,,v,:,Array,[,Array,[,Array,[,Array,[,Float,,,04263,],,,06456,],,,94,],,,36,],),{,},},<EOF>''',
                101
            )
        )

    def test_2370(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_4039{Var I,$_I_u,$__2:Array [Int ,0b1001101];}Class __3___{Var _3v4,$_,z:Array [Boolean ,060];$5(_,_k_,_r:_4C;Q_9,__:Float ;T_71,v_3:Array [String ,7_00];Y,LWc_:_927sb;_:Boolean ;_:Array [Array [Array [Array [Array [Boolean ,42],0B1],060],0b1001101],6]){Var X,oM_:Array [Array [Array [Array [Array [Array [Boolean ,0B1011110],060],0b1001101],42],0B11_110],0xE];} }''',
                '''Class,z,:,_4039,{,Var,I,,,$_I_u,,,$__2,:,Array,[,Int,,,0b1001101,],;,},Class,__3___,{,Var,_3v4,,,$_,,,z,:,Array,[,Boolean,,,060,],;,$5,(,_,,,_k_,,,_r,:,_4C,;,Q_9,,,__,:,Float,;,T_71,,,v_3,:,Array,[,String,,,700,],;,Y,,,LWc_,:,_927sb,;,_,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,42,],,,0B1,],,,060,],,,0b1001101,],,,6,],),{,Var,X,,,oM_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1011110,],,,060,],,,0b1001101,],,,42,],,,0B11110,],,,0xE,],;,},},<EOF>''',
                101
            )
        )

    def test_2371(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F_:_{Destructor (){} }Class __:_{Constructor (_9:Int ;j_,_:o;j__F:Array [Float ,0b1];Y8:Float ){}Destructor (){Break ;} }Class o{}''',
                '''Class,F_,:,_,{,Destructor,(,),{,},},Class,__,:,_,{,Constructor,(,_9,:,Int,;,j_,,,_,:,o,;,j__F,:,Array,[,Float,,,0b1,],;,Y8,:,Float,),{,},Destructor,(,),{,Break,;,},},Class,o,{,},<EOF>''',
                101
            )
        )

    def test_2372(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_P9:w5{Destructor (){Return ;_::$_()._e___8_().wZ_().r._();{o0K::$6_();} }}Class n{}Class R:Q{Constructor (){} }''',
                '''Class,v_P9,:,w5,{,Destructor,(,),{,Return,;,_,::,$_,(,),.,_e___8_,(,),.,wZ_,(,),.,r,.,_,(,),;,{,o0K,::,$6_,(,),;,},},},Class,n,{,},Class,R,:,Q,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2373(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class C{Var $3D___,$E:String ;Val _6,$B:Array [Array [Array [Array [Boolean ,90],06],6],0X4_62_E_D_1];}Class __:uA{}''',
                '''Class,_,{,},Class,C,{,Var,$3D___,,,$E,:,String,;,Val,_6,,,$B,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,90,],,,06,],,,6,],,,0X462ED1,],;,},Class,__,:,uA,{,},<EOF>''',
                101
            )
        )

    def test_2374(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _lm{}Class _5:_{Constructor (){Continue ;}Constructor (P:N){} }Class _7_k1{}Class _:_{Var _89_,$79,$U___,d6,$K_5,R,$_,_,$_df_0,T:z;}''',
                '''Class,_lm,{,},Class,_5,:,_,{,Constructor,(,),{,Continue,;,},Constructor,(,P,:,N,),{,},},Class,_7_k1,{,},Class,_,:,_,{,Var,_89_,,,$79,,,$U___,,,d6,,,$K_5,,,R,,,$_,,,_,,,$_df_0,,,T,:,z,;,},<EOF>''',
                101
            )
        )

    def test_2375(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __1{Constructor (_T_,_,__:Boolean ;b9,O_:Int ;_:_;n,_HB,C0:Array [Array [Array [Array [Array [Array [Boolean ,0b110110],0B1_0_1],1_3],0127],0xC8],0127];_:String ){Continue ;} }''',
                '''Class,__1,{,Constructor,(,_T_,,,_,,,__,:,Boolean,;,b9,,,O_,:,Int,;,_,:,_,;,n,,,_HB,,,C0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b110110,],,,0B101,],,,13,],,,0127,],,,0xC8,],,,0127,],;,_,:,String,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2376(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _u59{}Class T:_E7B{}Class c2__63{Constructor (Y,_,Lr2,_,__,_6,_4:Int ;V,_:J;__:Boolean ;_,z_,_J,_:Array [Float ,05_2];__9246_,_VW7:Boolean ){} }''',
                '''Class,_u59,{,},Class,T,:,_E7B,{,},Class,c2__63,{,Constructor,(,Y,,,_,,,Lr2,,,_,,,__,,,_6,,,_4,:,Int,;,V,,,_,:,J,;,__,:,Boolean,;,_,,,z_,,,_J,,,_,:,Array,[,Float,,,052,],;,__9246_,,,_VW7,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2377(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:__{Constructor (_:V__;__:Z3;_,_7:Array [Array [Array [Array [Array [Boolean ,0X17],0b1010010],070],0x72],0x3];_:Array [Array [Boolean ,0B101110],6]){} }Class _:_{}Class p{a(_,_,_pH,___nN2:oLf2){}S3_M_6y(){}Q_(){}$4(){} }''',
                '''Class,N,:,__,{,Constructor,(,_,:,V__,;,__,:,Z3,;,_,,,_7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X17,],,,0b1010010,],,,070,],,,0x72,],,,0x3,],;,_,:,Array,[,Array,[,Boolean,,,0B101110,],,,6,],),{,},},Class,_,:,_,{,},Class,p,{,a,(,_,,,_,,,_pH,,,___nN2,:,oLf2,),{,},S3_M_6y,(,),{,},Q_,(,),{,},$4,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2378(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class H5_:S{}Class _X_:_{Var $2:Array [String ,03];_(){}$P(__,b_:String ){}Val $T:Array [Array [Array [Array [Array [Boolean ,0b1010111],0X1B],0B111111],90],90];Val _,_4,z4,v,$24_2,$_1_E5:__;}Class B_U_{}''',
                '''Class,__,:,_,{,},Class,H5_,:,S,{,},Class,_X_,:,_,{,Var,$2,:,Array,[,String,,,03,],;,_,(,),{,},$P,(,__,,,b_,:,String,),{,},Val,$T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1010111,],,,0X1B,],,,0B111111,],,,90,],,,90,],;,Val,_,,,_4,,,z4,,,v,,,$24_2,,,$_1_E5,:,__,;,},Class,B_U_,{,},<EOF>''',
                101
            )
        )

    def test_2379(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1Q:D_R{}Class a4:h{Destructor (){}Val g_,$f,$_O_,Z_49:_;_8(w:Q;w5:_){Break ;} }Class O{}Class jc{}Class j_:Y1_{}''',
                '''Class,_1Q,:,D_R,{,},Class,a4,:,h,{,Destructor,(,),{,},Val,g_,,,$f,,,$_O_,,,Z_49,:,_,;,_8,(,w,:,Q,;,w5,:,_,),{,Break,;,},},Class,O,{,},Class,jc,{,},Class,j_,:,Y1_,{,},<EOF>''',
                101
            )
        )

    def test_2380(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{Val z,y:Array [Array [Array [String ,055],0b1_0_0],0B101];Constructor (){} }Class g418:_o{}Class _x:_{}''',
                '''Class,s,{,Val,z,,,y,:,Array,[,Array,[,Array,[,String,,,055,],,,0b100,],,,0B101,],;,Constructor,(,),{,},},Class,g418,:,_o,{,},Class,_x,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2381(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O:_{N(_,_8,i_7,W,_:Float ;hg3,_w1:Array [Array [Boolean ,0X4],0x8];_,K,u,E,k:O_2;_,_:Array [Array [Array [Array [Boolean ,868_7],0xE],5_9],3_7]){} }''',
                '''Class,O,:,_,{,N,(,_,,,_8,,,i_7,,,W,,,_,:,Float,;,hg3,,,_w1,:,Array,[,Array,[,Boolean,,,0X4,],,,0x8,],;,_,,,K,,,u,,,E,,,k,:,O_2,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8687,],,,0xE,],,,59,],,,37,],),{,},},<EOF>''',
                101
            )
        )

    def test_2382(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O{___(gU3,_,__:Array [Boolean ,27]){Continue ;} }Class M_:_7{}Class i_4{}Class O{Val $3l0:Array [Array [Float ,90],066];Val $JL,_,$__0:Array [String ,0x4C];}''',
                '''Class,O,{,___,(,gU3,,,_,,,__,:,Array,[,Boolean,,,27,],),{,Continue,;,},},Class,M_,:,_7,{,},Class,i_4,{,},Class,O,{,Val,$3l0,:,Array,[,Array,[,Float,,,90,],,,066,],;,Val,$JL,,,_,,,$__0,:,Array,[,String,,,0x4C,],;,},<EOF>''',
                101
            )
        )

    def test_2383(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:Nq{$5(){} }Class BX{}Class __{Z7(_,_:Array [Array [Array [Int ,0b1],2_2],69];Az,t,H:String ;D_,_1T_:String ;_,e6_,V:Array [Float ,0X18];SM0_,j7,m_,__k,q_:Array [Array [Array [String ,0B111001],1],0x62];s_,_,_,__A_,Yn_1t,H:w5kl5_E){Continue ;} }''',
                '''Class,A,:,Nq,{,$5,(,),{,},},Class,BX,{,},Class,__,{,Z7,(,_,,,_,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,22,],,,69,],;,Az,,,t,,,H,:,String,;,D_,,,_1T_,:,String,;,_,,,e6_,,,V,:,Array,[,Float,,,0X18,],;,SM0_,,,j7,,,m_,,,__k,,,q_,:,Array,[,Array,[,Array,[,String,,,0B111001,],,,1,],,,0x62,],;,s_,,,_,,,_,,,__A_,,,Yn_1t,,,H,:,w5kl5_E,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2384(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:_{}Class _y5_42:b__{}Class tm{Var P,_d4:Array [Boolean ,2_4];Val __:Array [Array [Array [Array [Boolean ,0B1],0B1],0b1001000],040];}Class m:p{}''',
                '''Class,y,:,_,{,},Class,_y5_42,:,b__,{,},Class,tm,{,Var,P,,,_d4,:,Array,[,Boolean,,,24,],;,Val,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0B1,],,,0b1001000,],,,040,],;,},Class,m,:,p,{,},<EOF>''',
                101
            )
        )

    def test_2385(self):
        self.assertTrue(
            TestLexer.test(
                '''Class MD2{Constructor (ypk,H6,_a:Array [Array [Array [Array [Array [Array [String ,0b1000],0X17],0X17],0b1000],0xD],013]){} }''',
                '''Class,MD2,{,Constructor,(,ypk,,,H6,,,_a,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1000,],,,0X17,],,,0X17,],,,0b1000,],,,0xD,],,,013,],),{,},},<EOF>''',
                101
            )
        )

    def test_2386(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{_(_l:_6;B27P:K;c1,_Ba1r:Float ){}Constructor (Z,_t_R6,__:Z84;U:Array [String ,52];qi:Array [Float ,033];C,_,_dH:__649;_o:__J;S,fA:Array [Int ,071_6]){} }Class J:_4{Val $5:Array [Array [Int ,06],52];Var $_:Array [Array [Array [Array [Array [Array [Boolean ,0x7],0X62],0b11],0X62],03],0b11];}Class m_j{}Class y:_{}''',
                '''Class,S,{,_,(,_l,:,_6,;,B27P,:,K,;,c1,,,_Ba1r,:,Float,),{,},Constructor,(,Z,,,_t_R6,,,__,:,Z84,;,U,:,Array,[,String,,,52,],;,qi,:,Array,[,Float,,,033,],;,C,,,_,,,_dH,:,__649,;,_o,:,__J,;,S,,,fA,:,Array,[,Int,,,0716,],),{,},},Class,J,:,_4,{,Val,$5,:,Array,[,Array,[,Int,,,06,],,,52,],;,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x7,],,,0X62,],,,0b11,],,,0X62,],,,03,],,,0b11,],;,},Class,m_j,{,},Class,y,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2387(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2{}Class d:X_5_6{Val $_8,$_:eM;Constructor (){} }Class d{Destructor (){ {} }Constructor (){} }Class Q:p{J(){} }Class __{}Class _:_4{h(B:Array [Boolean ,0112]){} }Class W:dd{}''',
                '''Class,_2,{,},Class,d,:,X_5_6,{,Val,$_8,,,$_,:,eM,;,Constructor,(,),{,},},Class,d,{,Destructor,(,),{,{,},},Constructor,(,),{,},},Class,Q,:,p,{,J,(,),{,},},Class,__,{,},Class,_,:,_4,{,h,(,B,:,Array,[,Boolean,,,0112,],),{,},},Class,W,:,dd,{,},<EOF>''',
                101
            )
        )

    def test_2388(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{oo(_w_06__,a,E40_27:a;_:G){} }Class _{Val _U0E,L,$1A_,$b_R0_,$j_,P,__Z:Boolean ;Var $r6,__,$S:String ;}Class q{Destructor (){} }''',
                '''Class,_,{,oo,(,_w_06__,,,a,,,E40_27,:,a,;,_,:,G,),{,},},Class,_,{,Val,_U0E,,,L,,,$1A_,,,$b_R0_,,,$j_,,,P,,,__Z,:,Boolean,;,Var,$r6,,,__,,,$S,:,String,;,},Class,q,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2389(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t9{Constructor (_Gr,__,_:Array [String ,0135]){}Constructor (nZ:Float ;R,q:f){Continue ;}Val j_,y:Array [String ,075];Destructor (){} }''',
                '''Class,t9,{,Constructor,(,_Gr,,,__,,,_,:,Array,[,String,,,0135,],),{,},Constructor,(,nZ,:,Float,;,R,,,q,:,f,),{,Continue,;,},Val,j_,,,y,:,Array,[,String,,,075,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2390(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3{$_(_:Array [Array [Array [Array [Float ,0x52],0x52],0B1001010],0B1001010];_:_){} }Class O8c{Constructor (){}__(Z,c9,_,r,_7,__j:Dd;_:Boolean ;x_:__;K:Int ;__:Boolean ;_:Boolean ;R_:Float ){}$y(__,k:y9){}_U2__(){}V__3(_,L_,__,oM44b,i,I5:G;__o,Q_:u){} }''',
                '''Class,_3,{,$_,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x52,],,,0x52,],,,0B1001010,],,,0B1001010,],;,_,:,_,),{,},},Class,O8c,{,Constructor,(,),{,},__,(,Z,,,c9,,,_,,,r,,,_7,,,__j,:,Dd,;,_,:,Boolean,;,x_,:,__,;,K,:,Int,;,__,:,Boolean,;,_,:,Boolean,;,R_,:,Float,),{,},$y,(,__,,,k,:,y9,),{,},_U2__,(,),{,},V__3,(,_,,,L_,,,__,,,oM44b,,,i,,,I5,:,G,;,__o,,,Q_,:,u,),{,},},<EOF>''',
                101
            )
        )

    def test_2391(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _71{Y_(){Self =!!""._.B__;{}{} }}Class _:_v_RD{Destructor (){ {} }Var Jpsa:Int ;Val $_ej,_:_1R_Gd;}Class k48_{Constructor (){} }Class B:P{Var $q__,__0:_1A_9;}''',
                '''Class,_71,{,Y_,(,),{,Self,=,!,!,,.,_,.,B__,;,{,},{,},},},Class,_,:,_v_RD,{,Destructor,(,),{,{,},},Var,Jpsa,:,Int,;,Val,$_ej,,,_,:,_1R_Gd,;,},Class,k48_,{,Constructor,(,),{,},},Class,B,:,P,{,Var,$q__,,,__0,:,_1A_9,;,},<EOF>''',
                101
            )
        )

    def test_2392(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:t{Var $_,$R_,L40s_,$_:Boolean ;b_5(I7,B6M1:J;Jv95:_;p:Array [Float ,0x50];N:Array [Array [Array [Array [Int ,8_6_3_81],0b1010111],0x7],050];_,lc8:Int ;d:Float ){}Val ___,_,K52_2:Int ;}''',
                '''Class,_,:,t,{,Var,$_,,,$R_,,,L40s_,,,$_,:,Boolean,;,b_5,(,I7,,,B6M1,:,J,;,Jv95,:,_,;,p,:,Array,[,Float,,,0x50,],;,N,:,Array,[,Array,[,Array,[,Array,[,Int,,,86381,],,,0b1010111,],,,0x7,],,,050,],;,_,,,lc8,:,Int,;,d,:,Float,),{,},Val,___,,,_,,,K52_2,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2393(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _64{$9(_,W,_,c:G){}s(Dm,j_5b__1,o0_O84,g,H:K48n_){}Constructor (_:Array [Array [Boolean ,0b1],01];J4,_:String ){} }''',
                '''Class,_64,{,$9,(,_,,,W,,,_,,,c,:,G,),{,},s,(,Dm,,,j_5b__1,,,o0_O84,,,g,,,H,:,K48n_,),{,},Constructor,(,_,:,Array,[,Array,[,Boolean,,,0b1,],,,01,],;,J4,,,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2394(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __4{_E(_59,N_,_,w,t,_6a:Float ;OL_:Array [Float ,95];a6,V:Int ;____q,_6,_D,Z,_28,_,__,m_1Q_3,_1_:A){} }''',
                '''Class,_,{,},Class,__4,{,_E,(,_59,,,N_,,,_,,,w,,,t,,,_6a,:,Float,;,OL_,:,Array,[,Float,,,95,],;,a6,,,V,:,Int,;,____q,,,_6,,,_D,,,Z,,,_28,,,_,,,__,,,m_1Q_3,,,_1_,:,A,),{,},},<EOF>''',
                101
            )
        )

    def test_2395(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_{}Class W:_{Constructor (){} }Class V:L{}Class _{}Class A5X:V7G{Constructor (__:Array [Float ,0B11011];n_,_:Array [Array [Array [Array [Array [Array [Array [String ,0x57],01],0126],1],81],9_8],0xE];_0v9:Boolean ;__3X,l_,_v1kx,d5,_6,_,__:Array [Array [Array [Array [Int ,0b1110],81],81],060];L,V1:Boolean ;_,_e:F;_:Int ){}Var $C_Aut,$_:L;Constructor (_,M,UD1,_W1:Array [String ,81];n:__){} }''',
                '''Class,P,:,_,{,},Class,W,:,_,{,Constructor,(,),{,},},Class,V,:,L,{,},Class,_,{,},Class,A5X,:,V7G,{,Constructor,(,__,:,Array,[,Float,,,0B11011,],;,n_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x57,],,,01,],,,0126,],,,1,],,,81,],,,98,],,,0xE,],;,_0v9,:,Boolean,;,__3X,,,l_,,,_v1kx,,,d5,,,_6,,,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1110,],,,81,],,,81,],,,060,],;,L,,,V1,:,Boolean,;,_,,,_e,:,F,;,_,:,Int,),{,},Var,$C_Aut,,,$_,:,L,;,Constructor,(,_,,,M,,,UD1,,,_W1,:,Array,[,String,,,81,],;,n,:,__,),{,},},<EOF>''',
                101
            )
        )

    def test_2396(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u3{}Class _2{Var M,$f:Boolean ;Constructor (_9,G,_:_){}Var $_,$3__,H,O6_,$4_,H3:_;Destructor (){} }Class U{}''',
                '''Class,u3,{,},Class,_2,{,Var,M,,,$f,:,Boolean,;,Constructor,(,_9,,,G,,,_,:,_,),{,},Var,$_,,,$3__,,,H,,,O6_,,,$4_,,,H3,:,_,;,Destructor,(,),{,},},Class,U,{,},<EOF>''',
                101
            )
        )

    def test_2397(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:L4P{Val _,_,C_:_;Destructor (){}Constructor (Q,M:String ){Continue ;}Constructor (){}Y(L5_,__o:_){Var CH,n_,n_5:F6;Break ;Break ;Continue ;} }''',
                '''Class,A,:,L4P,{,Val,_,,,_,,,C_,:,_,;,Destructor,(,),{,},Constructor,(,Q,,,M,:,String,),{,Continue,;,},Constructor,(,),{,},Y,(,L5_,,,__o,:,_,),{,Var,CH,,,n_,,,n_5,:,F6,;,Break,;,Break,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2398(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Uw{}Class j{Val $e,LC,_b1,$k__,$__J,$__,$TC_,I6_:Array [Array [Array [Array [Array [Array [String ,37],0xA],0b1100010],5_85],37],37];}Class K____:I{}Class _7:__M_6{}Class _{}''',
                '''Class,Uw,{,},Class,j,{,Val,$e,,,LC,,,_b1,,,$k__,,,$__J,,,$__,,,$TC_,,,I6_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,37,],,,0xA,],,,0b1100010,],,,585,],,,37,],,,37,],;,},Class,K____,:,I,{,},Class,_7,:,__M_6,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2399(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:_{Destructor (){}Constructor (_,_:Array [Array [Int ,6],0b1_0];__:Array [Array [Array [Float ,6],0x2_5],0B1011];G7:Int ;_:String ;_5:w_){Break ;}Destructor (){Var _:OV;} }''',
                '''Class,m,:,_,{,Destructor,(,),{,},Constructor,(,_,,,_,:,Array,[,Array,[,Int,,,6,],,,0b10,],;,__,:,Array,[,Array,[,Array,[,Float,,,6,],,,0x25,],,,0B1011,],;,G7,:,Int,;,_,:,String,;,_5,:,w_,),{,Break,;,},Destructor,(,),{,Var,_,:,OV,;,},},<EOF>''',
                101
            )
        )

    def test_2400(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1o:X{Val W_,e,$63U,$_:Array [Array [Boolean ,0b1_1],023];t(R:Array [Array [Float ,0b11_1],7]){} }Class Bz5:J{}''',
                '''Class,_1o,:,X,{,Val,W_,,,e,,,$63U,,,$_,:,Array,[,Array,[,Boolean,,,0b11,],,,023,],;,t,(,R,:,Array,[,Array,[,Float,,,0b111,],,,7,],),{,},},Class,Bz5,:,J,{,},<EOF>''',
                101
            )
        )

    def test_2401(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:__{}Class U:W{Val n5Y,_f:__L;Constructor (J,_:ihv){} }Class qTP4:_{}Class _x5:_{}Class fk62{Var _:Boolean ;_z(){Val ___:String ;} }Class _p{Var d_,$5,_v,kv_1_F,_:_;Constructor (){}Constructor (J_:String ;_,_,_I,_,_5V,_,_,Sv__,_:Boolean ;_06_4:_){} }Class n{}''',
                '''Class,s,:,__,{,},Class,U,:,W,{,Val,n5Y,,,_f,:,__L,;,Constructor,(,J,,,_,:,ihv,),{,},},Class,qTP4,:,_,{,},Class,_x5,:,_,{,},Class,fk62,{,Var,_,:,Boolean,;,_z,(,),{,Val,___,:,String,;,},},Class,_p,{,Var,d_,,,$5,,,_v,,,kv_1_F,,,_,:,_,;,Constructor,(,),{,},Constructor,(,J_,:,String,;,_,,,_,,,_I,,,_,,,_5V,,,_,,,_,,,Sv__,,,_,:,Boolean,;,_06_4,:,_,),{,},},Class,n,{,},<EOF>''',
                101
            )
        )

    def test_2402(self):
        self.assertTrue(
            TestLexer.test(
                '''Class dh_{s(S,U,k21k:Boolean ){ {Val n:_;} }}Class __{$D(_7__b_R,h:Int ;J_K5:Float ;___,_,_,Lf:Array [Int ,0b10101]){ {} }}''',
                '''Class,dh_,{,s,(,S,,,U,,,k21k,:,Boolean,),{,{,Val,n,:,_,;,},},},Class,__,{,$D,(,_7__b_R,,,h,:,Int,;,J_K5,:,Float,;,___,,,_,,,_,,,Lf,:,Array,[,Int,,,0b10101,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2403(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _x4{Constructor (){} }Class i__8:_{$Wj3_(z:Int ;w7,__,B,_:t__;J0yIo:Array [Array [Array [Array [Array [Array [Array [Array [Float ,010],0XA],0XA],0x2],07],0XA],0b1010001],034];___7,_,_,c,a_:Array [Float ,0B1_0];_2,_:Boolean ){} }''',
                '''Class,_x4,{,Constructor,(,),{,},},Class,i__8,:,_,{,$Wj3_,(,z,:,Int,;,w7,,,__,,,B,,,_,:,t__,;,J0yIo,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,010,],,,0XA,],,,0XA,],,,0x2,],,,07,],,,0XA,],,,0b1010001,],,,034,],;,___7,,,_,,,_,,,c,,,a_,:,Array,[,Float,,,0B10,],;,_2,,,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2404(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{}Class t:i7{}Class __{_30(a4,_8,I213_F:Array [Array [Array [String ,0b1_0_0],3],0X61];_:Boolean ){} }Class Zw_0:j{}''',
                '''Class,V,{,},Class,t,:,i7,{,},Class,__,{,_30,(,a4,,,_8,,,I213_F,:,Array,[,Array,[,Array,[,String,,,0b100,],,,3,],,,0X61,],;,_,:,Boolean,),{,},},Class,Zw_0,:,j,{,},<EOF>''',
                101
            )
        )

    def test_2405(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_4p___G6{}Class _:N0{$1(_3,r8:j){}Constructor (__:Array [Float ,0x4B];t,F3:Array [Array [Array [Array [Boolean ,03],0b1],0b10_1],065]){} }Class c4{Constructor (){} }''',
                '''Class,_,:,_4p___G6,{,},Class,_,:,N0,{,$1,(,_3,,,r8,:,j,),{,},Constructor,(,__,:,Array,[,Float,,,0x4B,],;,t,,,F3,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,03,],,,0b1,],,,0b101,],,,065,],),{,},},Class,c4,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2406(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _mp_75Q:_{Constructor (__:_7;_:Float ){Val __A:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0x3F_2],040],0X9],0x8],0b10],0b1],6],0b1_0],040];} }''',
                '''Class,_mp_75Q,:,_,{,Constructor,(,__,:,_7,;,_,:,Float,),{,Val,__A,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x3F2,],,,040,],,,0X9,],,,0x8,],,,0b10,],,,0b1,],,,6,],,,0b10,],,,040,],;,},},<EOF>''',
                101
            )
        )

    def test_2407(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{}Class _V{}Class __jnS:C{Constructor (t2z:Array [Array [Array [Array [Boolean ,0b111111],0X10],0X8],0b111111];Y,_:_){} }''',
                '''Class,G,{,},Class,_V,{,},Class,__jnS,:,C,{,Constructor,(,t2z,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111111,],,,0X10,],,,0X8,],,,0b111111,],;,Y,,,_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2408(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _E{Destructor (){}Constructor (n,w_:_5O;_,_:_){}Val k_,_4,$_:_;$P_(G,_:Boolean ;r_0:D2d_MO_){Break ;} }Class s__:F{}''',
                '''Class,_E,{,Destructor,(,),{,},Constructor,(,n,,,w_,:,_5O,;,_,,,_,:,_,),{,},Val,k_,,,_4,,,$_,:,_,;,$P_,(,G,,,_,:,Boolean,;,r_0,:,D2d_MO_,),{,Break,;,},},Class,s__,:,F,{,},<EOF>''',
                101
            )
        )

    def test_2409(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___{$_4T4O(x7:String ;_8b:zY7U;c,_,_:Float ;y_,_,_:Boolean ;l,l5_,O,__:Array [Array [Int ,0B10],06];K,gD,p,Q,_0_16,a,u_F:_;H:Array [Array [Boolean ,0B11_0_11],0X3_1_4];_c__:t74_;_:Array [String ,0B1];e60:Boolean ){} }''',
                '''Class,_,:,___,{,$_4T4O,(,x7,:,String,;,_8b,:,zY7U,;,c,,,_,,,_,:,Float,;,y_,,,_,,,_,:,Boolean,;,l,,,l5_,,,O,,,__,:,Array,[,Array,[,Int,,,0B10,],,,06,],;,K,,,gD,,,p,,,Q,,,_0_16,,,a,,,u_F,:,_,;,H,:,Array,[,Array,[,Boolean,,,0B11011,],,,0X314,],;,_c__,:,t74_,;,_,:,Array,[,String,,,0B1,],;,e60,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2410(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{Var $2_V1,$5:K;Destructor (){Var _,l3,_,X,D,w,Z87,Ds6RO5578:__;Return ;}$U_(z:Array [Array [Array [Array [Array [String ,0b1_1],0b100001],0x48],0b1],061_1];_k:Array [String ,0x48]){} }Class i_{Q(_:Boolean ;b_:Array [Array [Array [Array [String ,30],0xC],30],9_6_2];qN_8:String ;_:Array [Boolean ,0132];Jc,j:_F){Return ;}Constructor (){Break ;} }''',
                '''Class,d,{,Var,$2_V1,,,$5,:,K,;,Destructor,(,),{,Var,_,,,l3,,,_,,,X,,,D,,,w,,,Z87,,,Ds6RO5578,:,__,;,Return,;,},$U_,(,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11,],,,0b100001,],,,0x48,],,,0b1,],,,0611,],;,_k,:,Array,[,String,,,0x48,],),{,},},Class,i_,{,Q,(,_,:,Boolean,;,b_,:,Array,[,Array,[,Array,[,Array,[,String,,,30,],,,0xC,],,,30,],,,962,],;,qN_8,:,String,;,_,:,Array,[,Boolean,,,0132,],;,Jc,,,j,:,_F,),{,Return,;,},Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2411(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vD{$9(C,_,_7_,G7,__C_80:Array [String ,0B1011110]){}y(A2,_:Float ;i,_,_,i,U:String ;_Kb:Array [Array [Int ,0B1_1_0],052];_:Array [Boolean ,07]){} }Class g{}''',
                '''Class,vD,{,$9,(,C,,,_,,,_7_,,,G7,,,__C_80,:,Array,[,String,,,0B1011110,],),{,},y,(,A2,,,_,:,Float,;,i,,,_,,,_,,,i,,,U,:,String,;,_Kb,:,Array,[,Array,[,Int,,,0B110,],,,052,],;,_,:,Array,[,Boolean,,,07,],),{,},},Class,g,{,},<EOF>''',
                101
            )
        )

    def test_2412(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W{Var $_j:_;Constructor (C_:Array [Float ,0B1];_,_7H6:String ){}Val _Z,_,$405:Array [Array [Array [Array [Array [Boolean ,063],4],02],063],0X9_9_2E];}''',
                '''Class,_W,{,Var,$_j,:,_,;,Constructor,(,C_,:,Array,[,Float,,,0B1,],;,_,,,_7H6,:,String,),{,},Val,_Z,,,_,,,$405,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,063,],,,4,],,,02,],,,063,],,,0X992E,],;,},<EOF>''',
                101
            )
        )

    def test_2413(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y5_{c(){}Constructor (__:Int ;_R4_13,k_V,_:l_z2__;_98,_,_,Y_,x276:Array [Array [Array [String ,04],0b111100],044]){Val _:Array [Array [Array [Array [Array [Int ,0B100101],063_3],0b111100],0b111100],0X24];Return ;Val _,S:Z;} }''',
                '''Class,Y5_,{,c,(,),{,},Constructor,(,__,:,Int,;,_R4_13,,,k_V,,,_,:,l_z2__,;,_98,,,_,,,_,,,Y_,,,x276,:,Array,[,Array,[,Array,[,String,,,04,],,,0b111100,],,,044,],),{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B100101,],,,0633,],,,0b111100,],,,0b111100,],,,0X24,],;,Return,;,Val,_,,,S,:,Z,;,},},<EOF>''',
                101
            )
        )

    def test_2414(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c_{_(_1:Array [Float ,0x3C]){Continue ;} }Class X{}Class _{}Class K_{Val _J_cS:Array [Boolean ,40];}Class _{}''',
                '''Class,_c_,{,_,(,_1,:,Array,[,Float,,,0x3C,],),{,Continue,;,},},Class,X,{,},Class,_,{,},Class,K_,{,Val,_J_cS,:,Array,[,Boolean,,,40,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2415(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I{Destructor (){}$1oa_(g,_,_:Array [Array [Float ,53],0x5A];y,l_,_k:Array [Int ,6];a:i;o:Array [Float ,0B1011];_,_,q:Array [Array [Int ,0b111010],031];_P,__1,R7,_5:Array [Array [Boolean ,3],01030];n,_Gr2:g;_1_:_;t,_5,n:_9H_){Val _,_:E_;Break ;}$5U(){Continue ;} }''',
                '''Class,I,{,Destructor,(,),{,},$1oa_,(,g,,,_,,,_,:,Array,[,Array,[,Float,,,53,],,,0x5A,],;,y,,,l_,,,_k,:,Array,[,Int,,,6,],;,a,:,i,;,o,:,Array,[,Float,,,0B1011,],;,_,,,_,,,q,:,Array,[,Array,[,Int,,,0b111010,],,,031,],;,_P,,,__1,,,R7,,,_5,:,Array,[,Array,[,Boolean,,,3,],,,01030,],;,n,,,_Gr2,:,g,;,_1_,:,_,;,t,,,_5,,,n,:,_9H_,),{,Val,_,,,_,:,E_,;,Break,;,},$5U,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2416(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t_:_{}Class C:_21{Constructor (_c_l,H_Q41:Boolean ){} }Class _8:U7y_C{}Class Z:R{}Class _:Sl{Var _:Array [Array [Array [Array [String ,014_0],0X25],0b10100],0b10100]=!!!-New _().d._._;}''',
                '''Class,t_,:,_,{,},Class,C,:,_21,{,Constructor,(,_c_l,,,H_Q41,:,Boolean,),{,},},Class,_8,:,U7y_C,{,},Class,Z,:,R,{,},Class,_,:,Sl,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0140,],,,0X25,],,,0b10100,],,,0b10100,],=,!,!,!,-,New,_,(,),.,d,.,_,.,_,;,},<EOF>''',
                101
            )
        )

    def test_2417(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $8_,_,$_7,$3L,F_:String ;Destructor (){}Destructor (){_0::$m();}Var $k1,$7,f__:Array [Array [Array [Int ,1],040],3];}Class __{}''',
                '''Class,_,{,Var,$8_,,,_,,,$_7,,,$3L,,,F_,:,String,;,Destructor,(,),{,},Destructor,(,),{,_0,::,$m,(,),;,},Var,$k1,,,$7,,,f__,:,Array,[,Array,[,Array,[,Int,,,1,],,,040,],,,3,],;,},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_2418(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_:m{Var M,_,$R:Array [Array [Array [Array [Array [Float ,0B1],0b1],044],04_7],0XF];Constructor (){Break ;} }''',
                '''Class,M_,:,m,{,Var,M,,,_,,,$R,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0b1,],,,044,],,,047,],,,0XF,],;,Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2419(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w{Destructor (){}Destructor (){}Constructor (dv:String ;__:Array [Boolean ,0xA_E];R,__:__){Val _,f:_M;} }Class i5{}''',
                '''Class,_w,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,dv,:,String,;,__,:,Array,[,Boolean,,,0xAE,],;,R,,,__,:,__,),{,Val,_,,,f,:,_M,;,},},Class,i5,{,},<EOF>''',
                101
            )
        )

    def test_2420(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _O{}Class __y__{Destructor (){} }Class a:_{}Class G:_8S{Val $x:__U4;Var $T,__,_:u;}Class K_:t{}Class M_8_:_Q4{}Class S:_{}''',
                '''Class,_O,{,},Class,__y__,{,Destructor,(,),{,},},Class,a,:,_,{,},Class,G,:,_8S,{,Val,$x,:,__U4,;,Var,$T,,,__,,,_,:,u,;,},Class,K_,:,t,{,},Class,M_8_,:,_Q4,{,},Class,S,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2421(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i6_:t{}Class kr:_{Val _q__:Int ;_(){} }Class pI_f{Constructor (u:Boolean ;_,s,__,m,_A1:Array [String ,054];J,_2yYS5,f,I:Array [Int ,73]){} }''',
                '''Class,i6_,:,t,{,},Class,kr,:,_,{,Val,_q__,:,Int,;,_,(,),{,},},Class,pI_f,{,Constructor,(,u,:,Boolean,;,_,,,s,,,__,,,m,,,_A1,:,Array,[,String,,,054,],;,J,,,_2yYS5,,,f,,,I,:,Array,[,Int,,,73,],),{,},},<EOF>''',
                101
            )
        )

    def test_2422(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_p8{Val h:H;$h5(){}Val t,_k,_06h:Boolean ;Val $Me_X,$_,_,$3,K__:Array [Array [Array [Array [Boolean ,0B110100],4],0B110100],071];}''',
                '''Class,_,:,_p8,{,Val,h,:,H,;,$h5,(,),{,},Val,t,,,_k,,,_06h,:,Boolean,;,Val,$Me_X,,,$_,,,_,,,$3,,,K__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110100,],,,4,],,,0B110100,],,,071,],;,},<EOF>''',
                101
            )
        )

    def test_2423(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $2__:Array [Boolean ,055_5_2600];Val $_4K,_Jv53,Hy:Array [Boolean ,69_7_35_2];Destructor (){}Constructor (O,R:Boolean ;q,__,___,_:Array [Array [Array [Array [Array [Array [Float ,0X4],0B10001],0B110_1_0],01_26_3_6],01_1_6],0b1];g:Float ){} }''',
                '''Class,_,{,Var,$2__,:,Array,[,Boolean,,,05552600,],;,Val,$_4K,,,_Jv53,,,Hy,:,Array,[,Boolean,,,697352,],;,Destructor,(,),{,},Constructor,(,O,,,R,:,Boolean,;,q,,,__,,,___,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X4,],,,0B10001,],,,0B11010,],,,012636,],,,0116,],,,0b1,],;,g,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2424(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _z6LI_9Q{Destructor (){} }Class Q{Val $_9:String ;}Class __I:X{Var $t3,$w:o;}Class PD_:m_6{}Class Q8X8:j3{Constructor (qM_:Int ){} }''',
                '''Class,_z6LI_9Q,{,Destructor,(,),{,},},Class,Q,{,Val,$_9,:,String,;,},Class,__I,:,X,{,Var,$t3,,,$w,:,o,;,},Class,PD_,:,m_6,{,},Class,Q8X8,:,j3,{,Constructor,(,qM_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2425(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jm{$S4_3(__70,_:_;_,_:Int ;__,_:Array [Array [Array [Float ,0x10],5],0b1011001];M:Array [Array [Array [Array [Array [String ,0565],0B10_0],076],0X2],06]){Continue ;Break ;} }''',
                '''Class,jm,{,$S4_3,(,__70,,,_,:,_,;,_,,,_,:,Int,;,__,,,_,:,Array,[,Array,[,Array,[,Float,,,0x10,],,,5,],,,0b1011001,],;,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0565,],,,0B100,],,,076,],,,0X2,],,,06,],),{,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2426(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_gU{}Class _{Constructor (_,_2_,_E,_1_:Boolean ){Break ;}Val $_d,$73u30_,oN:Int ;$4p_(){} }Class _ko9{}''',
                '''Class,c,:,_gU,{,},Class,_,{,Constructor,(,_,,,_2_,,,_E,,,_1_,:,Boolean,),{,Break,;,},Val,$_d,,,$73u30_,,,oN,:,Int,;,$4p_,(,),{,},},Class,_ko9,{,},<EOF>''',
                101
            )
        )

    def test_2427(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:X{Constructor (J_,_:Float ;_:Float ;n,H5,r,_,c:Array [Array [Int ,0X6],26]){Break ;}Val $H_:Array [Array [String ,92_5],010];Constructor (){Break ;Var N9,_:Int ;Return ;} }Class p:z{}''',
                '''Class,__,:,X,{,Constructor,(,J_,,,_,:,Float,;,_,:,Float,;,n,,,H5,,,r,,,_,,,c,:,Array,[,Array,[,Int,,,0X6,],,,26,],),{,Break,;,},Val,$H_,:,Array,[,Array,[,String,,,925,],,,010,],;,Constructor,(,),{,Break,;,Var,N9,,,_,:,Int,;,Return,;,},},Class,p,:,z,{,},<EOF>''',
                101
            )
        )

    def test_2428(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B4:_{}Class n_:_{Val $3,__75,$5:Array [Float ,0134];Constructor (O0:Array [Array [Boolean ,0134],017]){Break ;} }''',
                '''Class,B4,:,_,{,},Class,n_,:,_,{,Val,$3,,,__75,,,$5,:,Array,[,Float,,,0134,],;,Constructor,(,O0,:,Array,[,Array,[,Boolean,,,0134,],,,017,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2429(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{Val _,__:___;}Class Vg2:D{_(__61,_:Array [Array [Array [Array [Array [Array [Int ,41],0B1],0X2],0115],0xB5],0471];__:ftf_;d8:Int ;y_:_I3H){} }Class en:a1_{}Class l__96:C3_{}''',
                '''Class,o,{,Val,_,,,__,:,___,;,},Class,Vg2,:,D,{,_,(,__61,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,41,],,,0B1,],,,0X2,],,,0115,],,,0xB5,],,,0471,],;,__,:,ftf_,;,d8,:,Int,;,y_,:,_I3H,),{,},},Class,en,:,a1_,{,},Class,l__96,:,C3_,{,},<EOF>''',
                101
            )
        )

    def test_2430(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:_w{Var $H,$_5:u5;_(_2,U,_v:Float ;V66:G){}Val iOis,Z:xN;Var $4,p9_,$7,Z_:Array [Array [Array [Array [String ,91],075_6],89_6],91];Val $0,$P:A;}Class _:s{}''',
                '''Class,B,:,_w,{,Var,$H,,,$_5,:,u5,;,_,(,_2,,,U,,,_v,:,Float,;,V66,:,G,),{,},Val,iOis,,,Z,:,xN,;,Var,$4,,,p9_,,,$7,,,Z_,:,Array,[,Array,[,Array,[,Array,[,String,,,91,],,,0756,],,,896,],,,91,],;,Val,$0,,,$P,:,A,;,},Class,_,:,s,{,},<EOF>''',
                101
            )
        )

    def test_2431(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w_:r4{Constructor (_B1:String ){Return ;}Var $7,_7,_,$68___P9:Array [Array [Array [Array [String ,0x5E],0b1_1],1],060];}''',
                '''Class,w_,:,r4,{,Constructor,(,_B1,:,String,),{,Return,;,},Var,$7,,,_7,,,_,,,$68___P9,:,Array,[,Array,[,Array,[,Array,[,String,,,0x5E,],,,0b11,],,,1,],,,060,],;,},<EOF>''',
                101
            )
        )

    def test_2432(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P__:_{Val _,A:Array [Array [Array [Boolean ,0x1_D],07_73],04_3];Constructor (){} }Class E_{}Class _:_{Var Z,__:Float ;}Class QiI6{}''',
                '''Class,P__,:,_,{,Val,_,,,A,:,Array,[,Array,[,Array,[,Boolean,,,0x1D,],,,0773,],,,043,],;,Constructor,(,),{,},},Class,E_,{,},Class,_,:,_,{,Var,Z,,,__,:,Float,;,},Class,QiI6,{,},<EOF>''',
                101
            )
        )

    def test_2433(self):
        self.assertTrue(
            TestLexer.test(
                '''Class GU{}Class c{Destructor (){Var B_7,vH__a,Q,F,WA:X_;}Constructor (k537_603:_;___7,R,_:Float ;w:Array [Int ,0B100110]){}Val $k,_:Array [Float ,0b1];}''',
                '''Class,GU,{,},Class,c,{,Destructor,(,),{,Var,B_7,,,vH__a,,,Q,,,F,,,WA,:,X_,;,},Constructor,(,k537_603,:,_,;,___7,,,R,,,_,:,Float,;,w,:,Array,[,Int,,,0B100110,],),{,},Val,$k,,,_,:,Array,[,Float,,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_2434(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class __{Constructor (_9,vD,_:Array [String ,0B11]){}Val z,Y,$_,$_:Array [Array [Array [String ,04_7462],0B1],65];}''',
                '''Class,__,{,},Class,__,{,Constructor,(,_9,,,vD,,,_,:,Array,[,String,,,0B11,],),{,},Val,z,,,Y,,,$_,,,$_,:,Array,[,Array,[,Array,[,String,,,047462,],,,0B1,],,,65,],;,},<EOF>''',
                101
            )
        )

    def test_2435(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __26{}Class _P:_{Var V,$_O5_:Float ;Destructor (){} }Class y:_{Val y_,$N_,$_k_Xc961:Float ;}Class _{Var u_,_:Array [Array [Array [Array [Boolean ,0b110001],0XE_0],0b1],012];Var A:String ;}Class x6:KcY{}Class _Zj1:__{Var $_:Array [Array [Array [Array [Boolean ,0B1_0],0xB_E],05],5];}''',
                '''Class,__26,{,},Class,_P,:,_,{,Var,V,,,$_O5_,:,Float,;,Destructor,(,),{,},},Class,y,:,_,{,Val,y_,,,$N_,,,$_k_Xc961,:,Float,;,},Class,_,{,Var,u_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b110001,],,,0XE0,],,,0b1,],,,012,],;,Var,A,:,String,;,},Class,x6,:,KcY,{,},Class,_Zj1,:,__,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10,],,,0xBE,],,,05,],,,5,],;,},<EOF>''',
                101
            )
        )

    def test_2436(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_:_{}Class A7{$33(__91:Array [Array [String ,0B10000],0X14_9_1];Y,Z,_:Array [Boolean ,05];s_,_2H,l,_7E,_913,_:Array [Int ,02];l:Array [String ,0b110111];_,_C:Int ){} }Class _5_6{Val $_R9H_:_;}''',
                '''Class,M_,:,_,{,},Class,A7,{,$33,(,__91,:,Array,[,Array,[,String,,,0B10000,],,,0X1491,],;,Y,,,Z,,,_,:,Array,[,Boolean,,,05,],;,s_,,,_2H,,,l,,,_7E,,,_913,,,_,:,Array,[,Int,,,02,],;,l,:,Array,[,String,,,0b110111,],;,_,,,_C,:,Int,),{,},},Class,_5_6,{,Val,$_R9H_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2437(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class q:_5{}Class G{}Class _8_:_6{Var _,$B__,_6,nL8_P,$__V9,$Cp,fyio,$_3_Bw,$6_:qy;Destructor (){ {i5E::$1e._();} }}Class h1:___3_7{}''',
                '''Class,__,{,},Class,q,:,_5,{,},Class,G,{,},Class,_8_,:,_6,{,Var,_,,,$B__,,,_6,,,nL8_P,,,$__V9,,,$Cp,,,fyio,,,$_3_Bw,,,$6_,:,qy,;,Destructor,(,),{,{,i5E,::,$1e,.,_,(,),;,},},},Class,h1,:,___3_7,{,},<EOF>''',
                101
            )
        )

    def test_2438(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_{$__(__:Array [String ,95];___8,_9,__:Array [Float ,0X2];_:_Y;Zf:Array [Array [Array [Array [Int ,0X253_1_A_B_A_A_9],0X4A],0X4A],0125];_:Float ){}Constructor (){Continue ;}Destructor (){} }''',
                '''Class,J_,{,$__,(,__,:,Array,[,String,,,95,],;,___8,,,_9,,,__,:,Array,[,Float,,,0X2,],;,_,:,_Y,;,Zf,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X2531ABAA9,],,,0X4A,],,,0X4A,],,,0125,],;,_,:,Float,),{,},Constructor,(,),{,Continue,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2439(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L8:_{Val $9:Int ;}Class T{O(){Continue ;}Constructor (__x_,_,_:Array [Float ,0B1];_,___,D:Array [Array [Array [Array [Array [Array [Int ,0x51],6_2_9],0B1_0],20],030],20]){Break ;}Val VJ,$uEgm8,_:Array [Boolean ,20];}Class o69:oO_{Var e:X_h_;}Class r:____{}''',
                '''Class,L8,:,_,{,Val,$9,:,Int,;,},Class,T,{,O,(,),{,Continue,;,},Constructor,(,__x_,,,_,,,_,:,Array,[,Float,,,0B1,],;,_,,,___,,,D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x51,],,,629,],,,0B10,],,,20,],,,030,],,,20,],),{,Break,;,},Val,VJ,,,$uEgm8,,,_,:,Array,[,Boolean,,,20,],;,},Class,o69,:,oO_,{,Var,e,:,X_h_,;,},Class,r,:,____,{,},<EOF>''',
                101
            )
        )

    def test_2440(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $4:Array [Array [Array [String ,3],57],03_5];}Class ___2:f{Var $6_,O,$_:Array [Float ,0xD];Val $_X__:Float ;}''',
                '''Class,_,{,Var,$4,:,Array,[,Array,[,Array,[,String,,,3,],,,57,],,,035,],;,},Class,___2,:,f,{,Var,$6_,,,O,,,$_,:,Array,[,Float,,,0xD,],;,Val,$_X__,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2441(self):
        self.assertTrue(
            TestLexer.test(
                '''Class zo_:J1{}Class _5d{Val $2:Int ;Val H,$_:P;$_(R_,_3:k){}Val V8g:Array [Array [Array [Boolean ,0x2],1],0b1];}Class i{Destructor (){} }''',
                '''Class,zo_,:,J1,{,},Class,_5d,{,Val,$2,:,Int,;,Val,H,,,$_,:,P,;,$_,(,R_,,,_3,:,k,),{,},Val,V8g,:,Array,[,Array,[,Array,[,Boolean,,,0x2,],,,1,],,,0b1,],;,},Class,i,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2442(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class fx4{Var $z_,$_:Array [Float ,0x10];Constructor (m,r:a3;_9,yH:Array [Int ,0B101000]){}Destructor (){}_16(){}Constructor (____:_){}Destructor (){} }''',
                '''Class,_,{,},Class,fx4,{,Var,$z_,,,$_,:,Array,[,Float,,,0x10,],;,Constructor,(,m,,,r,:,a3,;,_9,,,yH,:,Array,[,Int,,,0B101000,],),{,},Destructor,(,),{,},_16,(,),{,},Constructor,(,____,:,_,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2443(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:_Q{Var e,$9,_4:_;Constructor (){}Destructor (){Var ___:Array [Boolean ,06];} }Class _:s_p{}Class b8:_{}''',
                '''Class,w,:,_Q,{,Var,e,,,$9,,,_4,:,_,;,Constructor,(,),{,},Destructor,(,),{,Var,___,:,Array,[,Boolean,,,06,],;,},},Class,_,:,s_p,{,},Class,b8,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2444(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k2:_u{}Class g_{}Class _FT{Constructor (_1R2_:Array [Float ,0b111110];iK,_K,_m,Q:u;_:String ;w45,J05_:Array [Array [String ,074],0x9]){}Val _:Boolean ;}Class _5S{}Class _G4{}Class s:Z{Constructor (_g_H996_E7,_,KF_,_,__:Int ){Return ;} }''',
                '''Class,k2,:,_u,{,},Class,g_,{,},Class,_FT,{,Constructor,(,_1R2_,:,Array,[,Float,,,0b111110,],;,iK,,,_K,,,_m,,,Q,:,u,;,_,:,String,;,w45,,,J05_,:,Array,[,Array,[,String,,,074,],,,0x9,],),{,},Val,_,:,Boolean,;,},Class,_5S,{,},Class,_G4,{,},Class,s,:,Z,{,Constructor,(,_g_H996_E7,,,_,,,KF_,,,_,,,__,:,Int,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2445(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Destructor (){Return ;{} }Val $_n7:Array [Array [Boolean ,0X6],8];}Class _:I{Val j,$OP:n_33;}Class Z:_6{}''',
                '''Class,_,:,__,{,Destructor,(,),{,Return,;,{,},},Val,$_n7,:,Array,[,Array,[,Boolean,,,0X6,],,,8,],;,},Class,_,:,I,{,Val,j,,,$OP,:,n_33,;,},Class,Z,:,_6,{,},<EOF>''',
                101
            )
        )

    def test_2446(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _X{}Class _:b_{Destructor (){}Destructor (){}Constructor (){Continue ;}_(){}Var _5:Array [Int ,5_56];}Class P_O_6:C{Constructor (){Break ;}Destructor (){} }''',
                '''Class,_X,{,},Class,_,:,b_,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,Continue,;,},_,(,),{,},Var,_5,:,Array,[,Int,,,556,],;,},Class,P_O_6,:,C,{,Constructor,(,),{,Break,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2447(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L6:_{Constructor (_:Array [Array [Int ,0B1],013];q:Array [Float ,0X9];S,_,F:String ;_:u;_:Array [Boolean ,0B1100001];_:Array [Boolean ,03];_:Array [Array [Int ,013],0XBE];_:_;_:Array [Int ,0X3]){} }''',
                '''Class,L6,:,_,{,Constructor,(,_,:,Array,[,Array,[,Int,,,0B1,],,,013,],;,q,:,Array,[,Float,,,0X9,],;,S,,,_,,,F,:,String,;,_,:,u,;,_,:,Array,[,Boolean,,,0B1100001,],;,_,:,Array,[,Boolean,,,03,],;,_,:,Array,[,Array,[,Int,,,013,],,,0XBE,],;,_,:,_,;,_,:,Array,[,Int,,,0X3,],),{,},},<EOF>''',
                101
            )
        )

    def test_2448(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j:_{Destructor (){}Constructor (_:Array [Int ,4_56];F:Array [String ,074];Wu____Y___,_G,v7_,_:Array [String ,3];s:sP2;D:Array [Array [Int ,04_1],05]){} }Class _6:_{}Class Z__{Var z9:Float ;}''',
                '''Class,j,:,_,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Int,,,456,],;,F,:,Array,[,String,,,074,],;,Wu____Y___,,,_G,,,v7_,,,_,:,Array,[,String,,,3,],;,s,:,sP2,;,D,:,Array,[,Array,[,Int,,,041,],,,05,],),{,},},Class,_6,:,_,{,},Class,Z__,{,Var,z9,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2449(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:k668{Var _,q,_,_:Int ;}Class P:_{Val __,_i,$__,_,N4_:Boolean ;Constructor (a,f__:Int ;_:_;_lQ1_,_2_,___,U7J_:Boolean ;c,PDO_8:D){Continue ;} }''',
                '''Class,_,:,k668,{,Var,_,,,q,,,_,,,_,:,Int,;,},Class,P,:,_,{,Val,__,,,_i,,,$__,,,_,,,N4_,:,Boolean,;,Constructor,(,a,,,f__,:,Int,;,_,:,_,;,_lQ1_,,,_2_,,,___,,,U7J_,:,Boolean,;,c,,,PDO_8,:,D,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2450(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n1_:_93_{}Class __{}Class __c2{Constructor (_,b_:String ;f:String ){}Constructor (_:Array [String ,88];c17,aJ3_,__,I9:Array [Boolean ,1]){} }''',
                '''Class,n1_,:,_93_,{,},Class,__,{,},Class,__c2,{,Constructor,(,_,,,b_,:,String,;,f,:,String,),{,},Constructor,(,_,:,Array,[,String,,,88,],;,c17,,,aJ3_,,,__,,,I9,:,Array,[,Boolean,,,1,],),{,},},<EOF>''',
                101
            )
        )

    def test_2451(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{Constructor (){}Constructor (){}Constructor (){}Destructor (){Var z:Array [Array [Array [Boolean ,0x5F],0X37_0E_A_A],06_25_0];} }''',
                '''Class,i,{,Constructor,(,),{,},Constructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,Var,z,:,Array,[,Array,[,Array,[,Boolean,,,0x5F,],,,0X370EAA,],,,06250,],;,},},<EOF>''',
                101
            )
        )

    def test_2452(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_868z,n:_;i5,A:Array [Array [Float ,95],033];nTtO7,e:Array [Array [Int ,0B1_1],0B110]){F__::$8();Break ;}Val _,Q:_F_;}''',
                '''Class,_,{,Constructor,(,_868z,,,n,:,_,;,i5,,,A,:,Array,[,Array,[,Float,,,95,],,,033,],;,nTtO7,,,e,:,Array,[,Array,[,Int,,,0B11,],,,0B110,],),{,F__,::,$8,(,),;,Break,;,},Val,_,,,Q,:,_F_,;,},<EOF>''',
                101
            )
        )

    def test_2453(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _57_0_:xP{Val D,$80:Array [Int ,0x44];Destructor (){} }Class _Z:g{Var L:String ;}Class M:__{}Class _{Var e,L_:Float ;}''',
                '''Class,_57_0_,:,xP,{,Val,D,,,$80,:,Array,[,Int,,,0x44,],;,Destructor,(,),{,},},Class,_Z,:,g,{,Var,L,:,String,;,},Class,M,:,__,{,},Class,_,{,Var,e,,,L_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2454(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:_CQz{Var $2f6:C33;Constructor (z_:Array [Boolean ,0b1001101];_:Array [Float ,0b1001101];_,yVp3,rz,ODHP_:Float ){} }''',
                '''Class,w,:,_CQz,{,Var,$2f6,:,C33,;,Constructor,(,z_,:,Array,[,Boolean,,,0b1001101,],;,_,:,Array,[,Float,,,0b1001101,],;,_,,,yVp3,,,rz,,,ODHP_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2455(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{}Class _:_c4{$8__(){}$Cr(a,___x_,_,xfg8,A,_9:Array [Array [Int ,063],05];c,_S,F:Float ;i,n,JI680,t_N_r9_:Array [Array [Array [Float ,063],0b1_1],0x50]){}Val _5,_Z,t:Boolean ;e__9(_,H:_;X:Array [Array [Array [String ,9_0],0B101010],82]){Continue ;} }Class _:_{}Class __2l_9:__d{$3(S,_:Boolean ){} }Class _60:vQ{}''',
                '''Class,u,{,},Class,_,:,_c4,{,$8__,(,),{,},$Cr,(,a,,,___x_,,,_,,,xfg8,,,A,,,_9,:,Array,[,Array,[,Int,,,063,],,,05,],;,c,,,_S,,,F,:,Float,;,i,,,n,,,JI680,,,t_N_r9_,:,Array,[,Array,[,Array,[,Float,,,063,],,,0b11,],,,0x50,],),{,},Val,_5,,,_Z,,,t,:,Boolean,;,e__9,(,_,,,H,:,_,;,X,:,Array,[,Array,[,Array,[,String,,,90,],,,0B101010,],,,82,],),{,Continue,;,},},Class,_,:,_,{,},Class,__2l_9,:,__d,{,$3,(,S,,,_,:,Boolean,),{,},},Class,_60,:,vQ,{,},<EOF>''',
                101
            )
        )

    def test_2456(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class a{I_(){}Var __,_p5:Boolean ;}Class __tK9_:_5{i(){}c(Fj1,_,_:H4S;_0_:_){} }Class __R:__{Var V_b:Array [Array [Boolean ,5],0X3D];}Class WQ0_8__{Constructor (S1_K,_,_,_1,W,__5:Array [Boolean ,0X1]){} }''',
                '''Class,_,{,},Class,a,{,I_,(,),{,},Var,__,,,_p5,:,Boolean,;,},Class,__tK9_,:,_5,{,i,(,),{,},c,(,Fj1,,,_,,,_,:,H4S,;,_0_,:,_,),{,},},Class,__R,:,__,{,Var,V_b,:,Array,[,Array,[,Boolean,,,5,],,,0X3D,],;,},Class,WQ0_8__,{,Constructor,(,S1_K,,,_,,,_,,,_1,,,W,,,__5,:,Array,[,Boolean,,,0X1,],),{,},},<EOF>''',
                101
            )
        )

    def test_2457(self):
        self.assertTrue(
            TestLexer.test(
                '''Class wx:f{Val f_:O_;$7(_8:Array [Array [Boolean ,0b101011],062]){}Var e___J1:Array [String ,0B1_1];Destructor (){} }Class _:L9_{}Class _R944:_0g_II{$0_(){Break ;}Var $_:Array [Float ,0b101011];}Class __62_:_{}''',
                '''Class,wx,:,f,{,Val,f_,:,O_,;,$7,(,_8,:,Array,[,Array,[,Boolean,,,0b101011,],,,062,],),{,},Var,e___J1,:,Array,[,String,,,0B11,],;,Destructor,(,),{,},},Class,_,:,L9_,{,},Class,_R944,:,_0g_II,{,$0_,(,),{,Break,;,},Var,$_,:,Array,[,Float,,,0b101011,],;,},Class,__62_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2458(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c9:__{Y14(_04:Boolean ;__:Int ;p95,_8:__){}Var $06,$F,n,$241:Array [Array [Array [Array [Array [String ,0b1],0X32],0B1_1],0117],64];}Class _:z4{Val $r:Array [String ,0b10];Constructor (_:Int ;_1:String ;q_:Array [Array [Float ,0B111_0],0b1];T107,l,_:Int ){Break ;}Var $8_1:Float ;Constructor (_,_Y,_____08w:Boolean ;_:e){}Val y:Array [Array [Array [Array [Array [Array [Array [String ,0x1],0117],026],0X32],0x3E],0B1_1],0B1];}''',
                '''Class,c9,:,__,{,Y14,(,_04,:,Boolean,;,__,:,Int,;,p95,,,_8,:,__,),{,},Var,$06,,,$F,,,n,,,$241,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0X32,],,,0B11,],,,0117,],,,64,],;,},Class,_,:,z4,{,Val,$r,:,Array,[,String,,,0b10,],;,Constructor,(,_,:,Int,;,_1,:,String,;,q_,:,Array,[,Array,[,Float,,,0B1110,],,,0b1,],;,T107,,,l,,,_,:,Int,),{,Break,;,},Var,$8_1,:,Float,;,Constructor,(,_,,,_Y,,,_____08w,:,Boolean,;,_,:,e,),{,},Val,y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x1,],,,0117,],,,026,],,,0X32,],,,0x3E,],,,0B11,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_2459(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _R:F{$_(k,_U:R){} }Class p1{$_83(_W:Float ;p:_;r5730:Float ){ {{} }Continue ;}Destructor (){}e_0Md(){Continue ;} }Class D:iN__{Destructor (){Break ;} }''',
                '''Class,_R,:,F,{,$_,(,k,,,_U,:,R,),{,},},Class,p1,{,$_83,(,_W,:,Float,;,p,:,_,;,r5730,:,Float,),{,{,{,},},Continue,;,},Destructor,(,),{,},e_0Md,(,),{,Continue,;,},},Class,D,:,iN__,{,Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2460(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{Val O,A:Array [String ,0B1_0];}Class z{Val $5EN69rD:Array [String ,07];u_(){} }Class _{Val c:Array [Boolean ,0b11001];Constructor (c:Boolean ){} }Class KW{Var $m:Float ;}Class N3:_2{}''',
                '''Class,k,{,Val,O,,,A,:,Array,[,String,,,0B10,],;,},Class,z,{,Val,$5EN69rD,:,Array,[,String,,,07,],;,u_,(,),{,},},Class,_,{,Val,c,:,Array,[,Boolean,,,0b11001,],;,Constructor,(,c,:,Boolean,),{,},},Class,KW,{,Var,$m,:,Float,;,},Class,N3,:,_2,{,},<EOF>''',
                101
            )
        )

    def test_2461(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val _H,$N:Float ;Constructor (_:Array [Array [Array [Array [Boolean ,0xD_8],0x5B],024],0B1];_8,_6ZH:Boolean ;__:_O){} }Class _{Var $e:Array [Int ,024];}''',
                '''Class,__,{,Val,_H,,,$N,:,Float,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xD8,],,,0x5B,],,,024,],,,0B1,],;,_8,,,_6ZH,:,Boolean,;,__,:,_O,),{,},},Class,_,{,Var,$e,:,Array,[,Int,,,024,],;,},<EOF>''',
                101
            )
        )

    def test_2462(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k0__:R{Constructor (__P1:Array [Array [Array [Array [Array [Int ,30],0XA],0x5],30],0x5];P:Array [Array [Float ,0xC],0xDC_5_9_0_9_8_3];XG_f_Av_:h;_I,_:Boolean ){} }Class n___N:OT{}''',
                '''Class,_k0__,:,R,{,Constructor,(,__P1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,30,],,,0XA,],,,0x5,],,,30,],,,0x5,],;,P,:,Array,[,Array,[,Float,,,0xC,],,,0xDC590983,],;,XG_f_Av_,:,h,;,_I,,,_,:,Boolean,),{,},},Class,n___N,:,OT,{,},<EOF>''',
                101
            )
        )

    def test_2463(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9r{}Class __{Constructor (_:Array [Array [Array [Array [Array [Array [Boolean ,0b1011000],017],5],0X2],0X7_1],2];_,CC:String ;G,_,_,_K:Float ;oZ:_2){}Val $8,$_:Array [String ,0xDF_F_2];}Class X1{}''',
                '''Class,_9r,{,},Class,__,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1011000,],,,017,],,,5,],,,0X2,],,,0X71,],,,2,],;,_,,,CC,:,String,;,G,,,_,,,_,,,_K,:,Float,;,oZ,:,_2,),{,},Val,$8,,,$_,:,Array,[,String,,,0xDFF2,],;,},Class,X1,{,},<EOF>''',
                101
            )
        )

    def test_2464(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z_Q2:h{Constructor (_,ov,J:Array [Boolean ,015]){}Val _:Array [Float ,0B1011];}Class __{}Class jht{Constructor (XJ,R,A__,_,_,oY_:_7____K__9){Continue ;}Var $F:w;}''',
                '''Class,Z_Q2,:,h,{,Constructor,(,_,,,ov,,,J,:,Array,[,Boolean,,,015,],),{,},Val,_,:,Array,[,Float,,,0B1011,],;,},Class,__,{,},Class,jht,{,Constructor,(,XJ,,,R,,,A__,,,_,,,_,,,oY_,:,_7____K__9,),{,Continue,;,},Var,$F,:,w,;,},<EOF>''',
                101
            )
        )

    def test_2465(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:K{Val $_0,$_:Array [Array [Float ,0b111100],0x22];Constructor (H,EL_:Array [Array [Boolean ,077],8_3];EJ:Array [Array [Array [Array [Array [Array [String ,54],0X21],0x22],5_9],0X21],0X4_1]){} }''',
                '''Class,__,:,K,{,Val,$_0,,,$_,:,Array,[,Array,[,Float,,,0b111100,],,,0x22,],;,Constructor,(,H,,,EL_,:,Array,[,Array,[,Boolean,,,077,],,,83,],;,EJ,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,54,],,,0X21,],,,0x22,],,,59,],,,0X21,],,,0X41,],),{,},},<EOF>''',
                101
            )
        )

    def test_2466(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u:_{Constructor (Ch:Array [Int ,5_8]){} }Class G_:_{Var $1,_:Array [Float ,07];Var cm,H9_1,L__,$2_1U,$_,_3,$7:__;}''',
                '''Class,u,:,_,{,Constructor,(,Ch,:,Array,[,Int,,,58,],),{,},},Class,G_,:,_,{,Var,$1,,,_,:,Array,[,Float,,,07,],;,Var,cm,,,H9_1,,,L__,,,$2_1U,,,$_,,,_3,,,$7,:,__,;,},<EOF>''',
                101
            )
        )

    def test_2467(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_{}Class hoE72{Var _,$l,$_,$9q,$39:String ;Constructor (){Continue ;}Val R,_,buy,$S_:Array [Array [Array [Array [String ,3],27],27],0137];}Class z{Val $3:Boolean ;}''',
                '''Class,b_,{,},Class,hoE72,{,Var,_,,,$l,,,$_,,,$9q,,,$39,:,String,;,Constructor,(,),{,Continue,;,},Val,R,,,_,,,buy,,,$S_,:,Array,[,Array,[,Array,[,Array,[,String,,,3,],,,27,],,,27,],,,0137,],;,},Class,z,{,Val,$3,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2468(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Val _,w6_9:Array [Array [Array [Array [Array [Float ,01_0_72],6_4_8],0b1000101],0B1011111],98];}Class g{Var R,$9,$__:Array [String ,0B1011111];}Class C7_m86:_{}Class Xt_:t_W{}''',
                '''Class,S,{,Val,_,,,w6_9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01072,],,,648,],,,0b1000101,],,,0B1011111,],,,98,],;,},Class,g,{,Var,R,,,$9,,,$__,:,Array,[,String,,,0B1011111,],;,},Class,C7_m86,:,_,{,},Class,Xt_,:,t_W,{,},<EOF>''',
                101
            )
        )

    def test_2469(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:d_3V{$3(){}Val l:_6_67v;Constructor (){} }Class _:jXw_{Var $3:I56;}Class _:__{}Class G:h{}Class __:N_{Constructor (_,Z,_0:Array [Array [Array [Boolean ,0103],0b1011110],84]){} }''',
                '''Class,f,:,d_3V,{,$3,(,),{,},Val,l,:,_6_67v,;,Constructor,(,),{,},},Class,_,:,jXw_,{,Var,$3,:,I56,;,},Class,_,:,__,{,},Class,G,:,h,{,},Class,__,:,N_,{,Constructor,(,_,,,Z,,,_0,:,Array,[,Array,[,Array,[,Boolean,,,0103,],,,0b1011110,],,,84,],),{,},},<EOF>''',
                101
            )
        )

    def test_2470(self):
        self.assertTrue(
            TestLexer.test(
                '''Class wPL19n{}Class t{}Class m{Constructor (__7___:B;q:r_i_Bu_3_;_:Array [Float ,24];Q_:Int ;_,_:Array [Float ,24];R6_,B,_t:___8F;s9,W1f,_:ts__30){Return ;Val c:Array [Array [String ,0x41],24];}Destructor (){}Destructor (){} }''',
                '''Class,wPL19n,{,},Class,t,{,},Class,m,{,Constructor,(,__7___,:,B,;,q,:,r_i_Bu_3_,;,_,:,Array,[,Float,,,24,],;,Q_,:,Int,;,_,,,_,:,Array,[,Float,,,24,],;,R6_,,,B,,,_t,:,___8F,;,s9,,,W1f,,,_,:,ts__30,),{,Return,;,Val,c,:,Array,[,Array,[,String,,,0x41,],,,24,],;,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2471(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B8:_{}Class _{Val _:Array [Array [Array [Array [Array [Array [Array [Int ,0141],0x55],91],0X5],0141],84],0B10_1];}''',
                '''Class,B8,:,_,{,},Class,_,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0141,],,,0x55,],,,91,],,,0X5,],,,0141,],,,84,],,,0B101,],;,},<EOF>''',
                101
            )
        )

    def test_2472(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class N{Constructor (pu4,fu0,w,_iM:Float ;_,_5,_:Array [Array [Array [Array [Array [Array [Array [Float ,0X5E],0x47],0B1_01],0b1_0],0x8],02_3],0x7];_,z_,Z_:N){ {Continue ;} }}Class e:f{}Class O{}''',
                '''Class,_,{,},Class,N,{,Constructor,(,pu4,,,fu0,,,w,,,_iM,:,Float,;,_,,,_5,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X5E,],,,0x47,],,,0B101,],,,0b10,],,,0x8,],,,023,],,,0x7,],;,_,,,z_,,,Z_,:,N,),{,{,Continue,;,},},},Class,e,:,f,{,},Class,O,{,},<EOF>''',
                101
            )
        )

    def test_2473(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var _:I0Sb_;Var $35,$9,r,v,Z:Pz;Constructor (){} }Class o:_{Constructor (){} }Class __:W{}Class _3__6:_{}''',
                '''Class,_,:,_,{,Var,_,:,I0Sb_,;,Var,$35,,,$9,,,r,,,v,,,Z,:,Pz,;,Constructor,(,),{,},},Class,o,:,_,{,Constructor,(,),{,},},Class,__,:,W,{,},Class,_3__6,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2474(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y2:F{}Class D_:Z{_3__3(Z7:Int ;L,Ke3a:Array [Int ,06_3];_,_Z,l478,nm_:String ;_8aN,_8OQ38,_,_qH,j:Array [Array [Array [String ,31],0x44],31];M_y,a,p,g:Array [Array [Array [Boolean ,0x44],0111],0b1_1];_,H,O_,Ot,H_Mi:Array [Boolean ,0X58]){ {} }}''',
                '''Class,Y2,:,F,{,},Class,D_,:,Z,{,_3__3,(,Z7,:,Int,;,L,,,Ke3a,:,Array,[,Int,,,063,],;,_,,,_Z,,,l478,,,nm_,:,String,;,_8aN,,,_8OQ38,,,_,,,_qH,,,j,:,Array,[,Array,[,Array,[,String,,,31,],,,0x44,],,,31,],;,M_y,,,a,,,p,,,g,:,Array,[,Array,[,Array,[,Boolean,,,0x44,],,,0111,],,,0b11,],;,_,,,H,,,O_,,,Ot,,,H_Mi,:,Array,[,Boolean,,,0X58,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2475(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _L{}Class z:H{Constructor (I:String ){Var _:r5;}Constructor (___,j7:Array [Int ,046]){Break ;{} }}Class _{Constructor (){} }''',
                '''Class,_L,{,},Class,z,:,H,{,Constructor,(,I,:,String,),{,Var,_,:,r5,;,},Constructor,(,___,,,j7,:,Array,[,Int,,,046,],),{,Break,;,{,},},},Class,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2476(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F3:_{}Class _:_{}Class ___98_X{}Class _{}Class IE{$j(_:S){} }Class _{Constructor (_:Array [Boolean ,7]){} }Class b8_:_{Destructor (){Continue ;} }''',
                '''Class,F3,:,_,{,},Class,_,:,_,{,},Class,___98_X,{,},Class,_,{,},Class,IE,{,$j,(,_,:,S,),{,},},Class,_,{,Constructor,(,_,:,Array,[,Boolean,,,7,],),{,},},Class,b8_,:,_,{,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2477(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e1:M{$4_(j,O:Array [Array [Array [Boolean ,0B10001],041],0X1];_3_wPr,_7_,_6_h2:String ;N,J6I6:Array [Array [Float ,0X1],0x6];_,iS:Int ){} }''',
                '''Class,e1,:,M,{,$4_,(,j,,,O,:,Array,[,Array,[,Array,[,Boolean,,,0B10001,],,,041,],,,0X1,],;,_3_wPr,,,_7_,,,_6_h2,:,String,;,N,,,J6I6,:,Array,[,Array,[,Float,,,0X1,],,,0x6,],;,_,,,iS,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2478(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $6__4_:Array [Array [Array [Array [Array [Boolean ,0X2F],0X2F],0B100111],0b110],63];$ui(ju7GU3:Array [Array [Array [Float ,0B10],9],0xD]){ {} }}''',
                '''Class,_,{,Var,$6__4_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X2F,],,,0X2F,],,,0B100111,],,,0b110,],,,63,],;,$ui,(,ju7GU3,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,9,],,,0xD,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2479(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_1_{Constructor (B,y_5,N7d:Array [String ,76]){} }Class B{Constructor (I,qC_Vz1C,__Z:Float ){} }Class E_p{}''',
                '''Class,__,:,_1_,{,Constructor,(,B,,,y_5,,,N7d,:,Array,[,String,,,76,],),{,},},Class,B,{,Constructor,(,I,,,qC_Vz1C,,,__Z,:,Float,),{,},},Class,E_p,{,},<EOF>''',
                101
            )
        )

    def test_2480(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R:__{}Class _4{$_(zm,cZ,_4,yB3:Int ;_,_,_v,t,_:e;__Y:Array [Array [Array [Int ,0XA],1],0x1];_K,A3,O,_,_M_:x2iu){c::$3();} }Class _{$2(){}Constructor (_65_,__,l,Z,_9:Array [String ,07];u,__,__:Array [Array [Float ,075_2],11];KG:_0){Return ;}Constructor (p_1G4:Array [String ,066];k9e_,df,y,__:String ;_,j,_1F:u;F_:Boolean ){Continue ;} }''',
                '''Class,R,:,__,{,},Class,_4,{,$_,(,zm,,,cZ,,,_4,,,yB3,:,Int,;,_,,,_,,,_v,,,t,,,_,:,e,;,__Y,:,Array,[,Array,[,Array,[,Int,,,0XA,],,,1,],,,0x1,],;,_K,,,A3,,,O,,,_,,,_M_,:,x2iu,),{,c,::,$3,(,),;,},},Class,_,{,$2,(,),{,},Constructor,(,_65_,,,__,,,l,,,Z,,,_9,:,Array,[,String,,,07,],;,u,,,__,,,__,:,Array,[,Array,[,Float,,,0752,],,,11,],;,KG,:,_0,),{,Return,;,},Constructor,(,p_1G4,:,Array,[,String,,,066,],;,k9e_,,,df,,,y,,,__,:,String,;,_,,,j,,,_1F,:,u,;,F_,:,Boolean,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2481(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{Constructor (){Continue ;}Constructor (_:Float ;_3,_,_:String ;T_:Array [Int ,3_53];_,_9__,_:N_3;w:String ;f1:Array [Float ,07]){Return ;Continue ;} }Class _i___JV:_{}Class K5i:S{}Class X_:Z0{}Class _:_{}''',
                '''Class,_9,{,Constructor,(,),{,Continue,;,},Constructor,(,_,:,Float,;,_3,,,_,,,_,:,String,;,T_,:,Array,[,Int,,,353,],;,_,,,_9__,,,_,:,N_3,;,w,:,String,;,f1,:,Array,[,Float,,,07,],),{,Return,;,Continue,;,},},Class,_i___JV,:,_,{,},Class,K5i,:,S,{,},Class,X_,:,Z0,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2482(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{Destructor (){}Var $8:Array [Array [Array [Boolean ,0b1100001],0102],0102];Destructor (){}y_(){}Destructor (){}Constructor (){}Constructor (){}Val $_,$B,_,Kk:Int ;Destructor (){Return ;Return ;} }''',
                '''Class,u,{,Destructor,(,),{,},Var,$8,:,Array,[,Array,[,Array,[,Boolean,,,0b1100001,],,,0102,],,,0102,],;,Destructor,(,),{,},y_,(,),{,},Destructor,(,),{,},Constructor,(,),{,},Constructor,(,),{,},Val,$_,,,$B,,,_,,,Kk,:,Int,;,Destructor,(,),{,Return,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2483(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pGe2:r{}Class A{}Class d:p{Val $2,_LK,F,_,$_:Array [Array [Array [String ,0B110101],68],02];_(_,T_u,___3E_5_:__8_v0__;A:Float ){}Val _:Int ;}''',
                '''Class,pGe2,:,r,{,},Class,A,{,},Class,d,:,p,{,Val,$2,,,_LK,,,F,,,_,,,$_,:,Array,[,Array,[,Array,[,String,,,0B110101,],,,68,],,,02,],;,_,(,_,,,T_u,,,___3E_5_,:,__8_v0__,;,A,:,Float,),{,},Val,_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2484(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z_{}Class _s{}Class _:__{}Class ___{Var _:Array [Array [String ,40],03];}Class q:G8_{Var mB9,Z6_,CL6_:Array [Boolean ,0B1111];}''',
                '''Class,z_,{,},Class,_s,{,},Class,_,:,__,{,},Class,___,{,Var,_,:,Array,[,Array,[,String,,,40,],,,03,],;,},Class,q,:,G8_,{,Var,mB9,,,Z6_,,,CL6_,:,Array,[,Boolean,,,0B1111,],;,},<EOF>''',
                101
            )
        )

    def test_2485(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{}Class _{Destructor (){} }Class R{Var $P,_1:Array [Array [String ,0B10],42];D(_,I,_,_N,s6:Array [Array [Array [Array [Array [String ,0X1B],0B1001111],6],4_3],6]){}Var $1:_s___;}Class _p:_{}''',
                '''Class,r,{,},Class,_,{,Destructor,(,),{,},},Class,R,{,Var,$P,,,_1,:,Array,[,Array,[,String,,,0B10,],,,42,],;,D,(,_,,,I,,,_,,,_N,,,s6,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X1B,],,,0B1001111,],,,6,],,,43,],,,6,],),{,},Var,$1,:,_s___,;,},Class,_p,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2486(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{}Class j_:_{}Class z:n{}Class u:_oJ{Var $_,n_z:Array [Array [Array [Array [Boolean ,1_8],8_4_5],07],0b110100];}Class h_g{$_(w_,v_1:Boolean ;__:Array [Float ,0663_4]){Return ;} }Class _1Am7:_o{}''',
                '''Class,q,{,},Class,j_,:,_,{,},Class,z,:,n,{,},Class,u,:,_oJ,{,Var,$_,,,n_z,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,18,],,,845,],,,07,],,,0b110100,],;,},Class,h_g,{,$_,(,w_,,,v_1,:,Boolean,;,__,:,Array,[,Float,,,06634,],),{,Return,;,},},Class,_1Am7,:,_o,{,},<EOF>''',
                101
            )
        )

    def test_2487(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V__3{$6(_9_x,M,_U:Array [Array [Boolean ,9],54];y_:_){} }Class _9x{}Class _x9:d29_{}Class L:_89{}Class E49:_L{Var G_:_2;}''',
                '''Class,V__3,{,$6,(,_9_x,,,M,,,_U,:,Array,[,Array,[,Boolean,,,9,],,,54,],;,y_,:,_,),{,},},Class,_9x,{,},Class,_x9,:,d29_,{,},Class,L,:,_89,{,},Class,E49,:,_L,{,Var,G_,:,_2,;,},<EOF>''',
                101
            )
        )

    def test_2488(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __8:Q84{Var u:Float ;}Class _:_5_{$_(y1,_v8:Array [Array [Float ,0x1],0X2D]){}Constructor (){Val W_:Array [Int ,8];Continue ;} }''',
                '''Class,__8,:,Q84,{,Var,u,:,Float,;,},Class,_,:,_5_,{,$_,(,y1,,,_v8,:,Array,[,Array,[,Float,,,0x1,],,,0X2D,],),{,},Constructor,(,),{,Val,W_,:,Array,[,Int,,,8,],;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2489(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:_{$5(O_:cb1;_,_1,_5,_,U,_,y:Array [Boolean ,07];_,_J:_){}Constructor (Y0:Array [Array [Array [String ,02],0144],25]){} }Class k7{}Class _:w_6{}''',
                '''Class,l,:,_,{,$5,(,O_,:,cb1,;,_,,,_1,,,_5,,,_,,,U,,,_,,,y,:,Array,[,Boolean,,,07,],;,_,,,_J,:,_,),{,},Constructor,(,Y0,:,Array,[,Array,[,Array,[,String,,,02,],,,0144,],,,25,],),{,},},Class,k7,{,},Class,_,:,w_6,{,},<EOF>''',
                101
            )
        )

    def test_2490(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $M,$_6:u;}Class _{W(X8,__,_:Array [Array [Int ,0X21],49]){Break ;Break ;} }Class K_2{}Class I_:_5{Val Q,$u6__,$_iL:Array [Array [Array [Int ,0xB],0b1],4];}Class _:_{}Class _:_39__{Val $0:Array [Array [Int ,0b1_0_0],025];$__p(f:Array [Array [Array [Array [Array [Boolean ,0x1],025],0X7A_D],0b11100],7_3]){}Val $p:String ;}''',
                '''Class,_,{,Var,$M,,,$_6,:,u,;,},Class,_,{,W,(,X8,,,__,,,_,:,Array,[,Array,[,Int,,,0X21,],,,49,],),{,Break,;,Break,;,},},Class,K_2,{,},Class,I_,:,_5,{,Val,Q,,,$u6__,,,$_iL,:,Array,[,Array,[,Array,[,Int,,,0xB,],,,0b1,],,,4,],;,},Class,_,:,_,{,},Class,_,:,_39__,{,Val,$0,:,Array,[,Array,[,Int,,,0b100,],,,025,],;,$__p,(,f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x1,],,,025,],,,0X7AD,],,,0b11100,],,,73,],),{,},Val,$p,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2491(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __h_{Constructor (M7:_I;yv_:String ;l_:Array [Int ,02];Le:Array [Array [Int ,7_0_4],04_1]){Continue ;}__(__J,Q,ZB_:String ){Continue ;} }Class _{}Class _{}''',
                '''Class,__h_,{,Constructor,(,M7,:,_I,;,yv_,:,String,;,l_,:,Array,[,Int,,,02,],;,Le,:,Array,[,Array,[,Int,,,704,],,,041,],),{,Continue,;,},__,(,__J,,,Q,,,ZB_,:,String,),{,Continue,;,},},Class,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2492(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j:J{Constructor (q:_;d7x5ni,_,__:Array [Array [Float ,5_6],054]){ {} }}Class FO2_5{}Class s{}Class _:_9QSc{}Class C_{}''',
                '''Class,j,:,J,{,Constructor,(,q,:,_,;,d7x5ni,,,_,,,__,:,Array,[,Array,[,Float,,,56,],,,054,],),{,{,},},},Class,FO2_5,{,},Class,s,{,},Class,_,:,_9QSc,{,},Class,C_,{,},<EOF>''',
                101
            )
        )

    def test_2493(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K_{Constructor (x__l9N,_,CYm:Array [Float ,0B1101_1];ea5,L_:Array [Array [Float ,0b1001101],0xB]){} }Class _S_{Xl(S:_;____:Float ;f:Array [Float ,0B11000]){} }Class a5__:g{}''',
                '''Class,K_,{,Constructor,(,x__l9N,,,_,,,CYm,:,Array,[,Float,,,0B11011,],;,ea5,,,L_,:,Array,[,Array,[,Float,,,0b1001101,],,,0xB,],),{,},},Class,_S_,{,Xl,(,S,:,_,;,____,:,Float,;,f,:,Array,[,Float,,,0B11000,],),{,},},Class,a5__,:,g,{,},<EOF>''',
                101
            )
        )

    def test_2494(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{}Class w:_h{Destructor (){}Val $E,$8_3__:Float ;Constructor (p:D){Break ;} }Class j45mz:e{$1ZHk(){T1::$w.A();} }''',
                '''Class,d,{,},Class,w,:,_h,{,Destructor,(,),{,},Val,$E,,,$8_3__,:,Float,;,Constructor,(,p,:,D,),{,Break,;,},},Class,j45mz,:,e,{,$1ZHk,(,),{,T1,::,$w,.,A,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2495(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Array [String ,01];g3H:Array [Array [Array [Array [Boolean ,0B11100],015],0b101111],0XB0]){Break ;} }''',
                '''Class,_,{,Constructor,(,_,:,Array,[,String,,,01,],;,g3H,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11100,],,,015,],,,0b101111,],,,0XB0,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2496(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(c,_,Y022:Array [Array [String ,040],037];i:Array [Array [Float ,0b11],0X55];_,_:j;___,f25_:_3;K:Array [Int ,0b1];__,_K:Int ;__,t0_,qI9249Gp_6:Array [Float ,02];_:Array [Array [Boolean ,27],27];_:Array [Int ,0B101000]){}Var Sl,F6aN_,hgpNC:Array [String ,05];}''',
                '''Class,_,{,_,(,c,,,_,,,Y022,:,Array,[,Array,[,String,,,040,],,,037,],;,i,:,Array,[,Array,[,Float,,,0b11,],,,0X55,],;,_,,,_,:,j,;,___,,,f25_,:,_3,;,K,:,Array,[,Int,,,0b1,],;,__,,,_K,:,Int,;,__,,,t0_,,,qI9249Gp_6,:,Array,[,Float,,,02,],;,_,:,Array,[,Array,[,Boolean,,,27,],,,27,],;,_,:,Array,[,Int,,,0B101000,],),{,},Var,Sl,,,F6aN_,,,hgpNC,:,Array,[,String,,,05,],;,},<EOF>''',
                101
            )
        )

    def test_2497(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2:J{Constructor (_g5_:U;_:Array [Array [Array [Array [Array [Array [Int ,067],0b101101],0b101101],59],0X47],0b1_0_0];X,_7,_,_h,_:Boolean ){}Val $__5,_HA4_1__v4___Y,_D:_2K;}''',
                '''Class,_2,:,J,{,Constructor,(,_g5_,:,U,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,067,],,,0b101101,],,,0b101101,],,,59,],,,0X47,],,,0b100,],;,X,,,_7,,,_,,,_h,,,_,:,Boolean,),{,},Val,$__5,,,_HA4_1__v4___Y,,,_D,:,_2K,;,},<EOF>''',
                101
            )
        )

    def test_2498(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_ID{Val E,$R:Array [Array [Boolean ,0B11011],0b1];Constructor (p__:__;G:String ){}Var _:w;a(){}Constructor (){} }Class _:O{}Class _{}Class _:_q{}''',
                '''Class,_,:,_ID,{,Val,E,,,$R,:,Array,[,Array,[,Boolean,,,0B11011,],,,0b1,],;,Constructor,(,p__,:,__,;,G,:,String,),{,},Var,_,:,w,;,a,(,),{,},Constructor,(,),{,},},Class,_,:,O,{,},Class,_,{,},Class,_,:,_q,{,},<EOF>''',
                101
            )
        )

    def test_2499(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_1{_(){}Val _:Array [Array [Array [Int ,0105],0x23_28],0B1];Val $_:Array [Int ,0x42];}Class ___4:k{Val $34,$84,$_,_,_,$M,$_2,$m,_:Float ;}''',
                '''Class,_,:,_1,{,_,(,),{,},Val,_,:,Array,[,Array,[,Array,[,Int,,,0105,],,,0x2328,],,,0B1,],;,Val,$_,:,Array,[,Int,,,0x42,],;,},Class,___4,:,k,{,Val,$34,,,$84,,,$_,,,_,,,_,,,$M,,,$_2,,,$m,,,_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2500(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:p{__S6_(_3,_:Array [Float ,0x4B];r:I;r:Array [Array [Array [Array [Array [Array [Array [Int ,02_4],02_50],88],0X56],073],88],0B110100]){} }''',
                '''Class,k,:,p,{,__S6_,(,_3,,,_,:,Array,[,Float,,,0x4B,],;,r,:,I,;,r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,024,],,,0250,],,,88,],,,0X56,],,,073,],,,88,],,,0B110100,],),{,},},<EOF>''',
                101
            )
        )

    def test_2501(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M:n_1_{M(O,_:Array [Array [Array [String ,010],0B11110],75];__:El56;_p_l,P:String ;j_,b6__:Int ;___gDs611,g,t9M,u:Array [Float ,75];CV:Int ;H,J_:_){} }Class _9{}Class y:_4{Constructor (){} }''',
                '''Class,M,:,n_1_,{,M,(,O,,,_,:,Array,[,Array,[,Array,[,String,,,010,],,,0B11110,],,,75,],;,__,:,El56,;,_p_l,,,P,:,String,;,j_,,,b6__,:,Int,;,___gDs611,,,g,,,t9M,,,u,:,Array,[,Float,,,75,],;,CV,:,Int,;,H,,,J_,:,_,),{,},},Class,_9,{,},Class,y,:,_4,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2502(self):
        self.assertTrue(
            TestLexer.test(
                '''Class or:_{}Class _{Val _,$G,$0j,$8c:String ;Constructor (){} }Class _{Constructor (){}Constructor (s_,u1:Array [Array [Array [Array [String ,04],03_2],93],0b1001001];G,H2_,W_gl:__){}Constructor (){} }''',
                '''Class,or,:,_,{,},Class,_,{,Val,_,,,$G,,,$0j,,,$8c,:,String,;,Constructor,(,),{,},},Class,_,{,Constructor,(,),{,},Constructor,(,s_,,,u1,:,Array,[,Array,[,Array,[,Array,[,String,,,04,],,,032,],,,93,],,,0b1001001,],;,G,,,H2_,,,W_gl,:,__,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2503(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L{_2(_4_I1:Array [Array [Array [Boolean ,100],100],100]){}Destructor (){}_(E:Boolean ;_po,e,x,m6,_,X_:j_;IQ9:Array [Array [Int ,0b11110],0X59]){} }''',
                '''Class,L,{,_2,(,_4_I1,:,Array,[,Array,[,Array,[,Boolean,,,100,],,,100,],,,100,],),{,},Destructor,(,),{,},_,(,E,:,Boolean,;,_po,,,e,,,x,,,m6,,,_,,,X_,:,j_,;,IQ9,:,Array,[,Array,[,Int,,,0b11110,],,,0X59,],),{,},},<EOF>''',
                101
            )
        )

    def test_2504(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $A_,_,_jy_8_:Array [Int ,50];}Class ___6J:___g{}Class b{Destructor (){}Destructor (){Var _5__x,T:Array [Array [Array [String ,50],0xD],0B11];} }''',
                '''Class,_,{,Val,$A_,,,_,,,_jy_8_,:,Array,[,Int,,,50,],;,},Class,___6J,:,___g,{,},Class,b,{,Destructor,(,),{,},Destructor,(,),{,Var,_5__x,,,T,:,Array,[,Array,[,Array,[,String,,,50,],,,0xD,],,,0B11,],;,},},<EOF>''',
                101
            )
        )

    def test_2505(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _:Array [Float ,37];Constructor (){}$2(_,V3,_:_){} }Class _{Var $7:Int ;$D(){}Val L5s:R_8;N(){} }Class X:b___{}''',
                '''Class,_,{,Val,_,:,Array,[,Float,,,37,],;,Constructor,(,),{,},$2,(,_,,,V3,,,_,:,_,),{,},},Class,_,{,Var,$7,:,Int,;,$D,(,),{,},Val,L5s,:,R_8,;,N,(,),{,},},Class,X,:,b___,{,},<EOF>''',
                101
            )
        )

    def test_2506(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v2_841{$7F(D_:Boolean ){Return ;_0H6S::$5();{}Break ;}Val _,_:Array [Array [Array [Array [Array [Array [Array [Array [String ,0x5],11],0B1001100],02_3_1_13],11],07_22],01_5_7_0],0x2];}''',
                '''Class,v2_841,{,$7F,(,D_,:,Boolean,),{,Return,;,_0H6S,::,$5,(,),;,{,},Break,;,},Val,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x5,],,,11,],,,0B1001100,],,,023113,],,,11,],,,0722,],,,01570,],,,0x2,],;,},<EOF>''',
                101
            )
        )

    def test_2507(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J__{$_(_t0,VI,_4,m,L9,_V_B:Int ){} }Class _{Val $__,_w5:Array [Int ,0X5];Val $_:Array [Boolean ,0B1011000];Destructor (){}_3(){} }''',
                '''Class,J__,{,$_,(,_t0,,,VI,,,_4,,,m,,,L9,,,_V_B,:,Int,),{,},},Class,_,{,Val,$__,,,_w5,:,Array,[,Int,,,0X5,],;,Val,$_,:,Array,[,Boolean,,,0B1011000,],;,Destructor,(,),{,},_3,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2508(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:hm{Var $_,$4Aw0,y,$D,$8,_:___;Var $32,_,$7:Array [Boolean ,0X5B];Val $X3,C:Array [Array [String ,8],0xBA_94_1EA_F];}Class h:_u8{}Class _{}''',
                '''Class,__,:,hm,{,Var,$_,,,$4Aw0,,,y,,,$D,,,$8,,,_,:,___,;,Var,$32,,,_,,,$7,:,Array,[,Boolean,,,0X5B,],;,Val,$X3,,,C,:,Array,[,Array,[,String,,,8,],,,0xBA941EAF,],;,},Class,h,:,_u8,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2509(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _D8v{}Class l{Var $_,r:Array [Array [Array [Array [Array [Array [Array [Int ,0X6],0x4],06],0b10001],8_0],0B110001],0X2];}Class _2j_{_(A_:_){}Constructor (){} }Class ___:F{}''',
                '''Class,_D8v,{,},Class,l,{,Var,$_,,,r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X6,],,,0x4,],,,06,],,,0b10001,],,,80,],,,0B110001,],,,0X2,],;,},Class,_2j_,{,_,(,A_,:,_,),{,},Constructor,(,),{,},},Class,___,:,F,{,},<EOF>''',
                101
            )
        )

    def test_2510(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c:_D{$_(j:Array [String ,49];_:Float ;_1__d:__F3;M_,xn:Array [String ,0XB7];X,__:Array [Float ,7_7]){} }Class O54{}''',
                '''Class,_c,:,_D,{,$_,(,j,:,Array,[,String,,,49,],;,_,:,Float,;,_1__d,:,__F3,;,M_,,,xn,:,Array,[,String,,,0XB7,],;,X,,,__,:,Array,[,Float,,,77,],),{,},},Class,O54,{,},<EOF>''',
                101
            )
        )

    def test_2511(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _q{}Class _:O_kS{R(t:O){}Val $_,_:_H;$_(){}Val $r___5Z:Array [Array [Array [Array [Array [String ,051],07],051],1_9],29];}''',
                '''Class,_q,{,},Class,_,:,O_kS,{,R,(,t,:,O,),{,},Val,$_,,,_,:,_H,;,$_,(,),{,},Val,$r___5Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,051,],,,07,],,,051,],,,19,],,,29,],;,},<EOF>''',
                101
            )
        )

    def test_2512(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _LZ:d_{i(f8,_q,__1,q9k5:_;l84,_,P_,v6,K_A,_c,K__W__,__,_5,g1:Array [Array [Array [Array [Array [Float ,0b1000011],0116],0116],5],15]){Break ;}_6(){} }''',
                '''Class,_LZ,:,d_,{,i,(,f8,,,_q,,,__1,,,q9k5,:,_,;,l84,,,_,,,P_,,,v6,,,K_A,,,_c,,,K__W__,,,__,,,_5,,,g1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1000011,],,,0116,],,,0116,],,,5,],,,15,],),{,Break,;,},_6,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2513(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _:Qj6{}Class _6_W_f{}Class w_7J1:N6O{Constructor (j:Float ){Continue ;}Constructor (_1T,Y,RxB_,__,x:O){} }''',
                '''Class,_,:,_,{,},Class,_,:,Qj6,{,},Class,_6_W_f,{,},Class,w_7J1,:,N6O,{,Constructor,(,j,:,Float,),{,Continue,;,},Constructor,(,_1T,,,Y,,,RxB_,,,__,,,x,:,O,),{,},},<EOF>''',
                101
            )
        )

    def test_2514(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (L3,_:Boolean ){} }Class _:W{Val j,D_,e:juw96M5;Var d:Array [Array [Float ,0XB],100];Constructor (){} }''',
                '''Class,_,{,Constructor,(,L3,,,_,:,Boolean,),{,},},Class,_,:,W,{,Val,j,,,D_,,,e,:,juw96M5,;,Var,d,:,Array,[,Array,[,Float,,,0XB,],,,100,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2515(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Y5_{}Class d:_{Constructor (o,VJm6:Boolean ;Nn7_0:Array [Int ,6];fz:___;A3___S:Boolean ;xx6q,G3_:Int ){} }''',
                '''Class,_,:,Y5_,{,},Class,d,:,_,{,Constructor,(,o,,,VJm6,:,Boolean,;,Nn7_0,:,Array,[,Int,,,6,],;,fz,:,___,;,A3___S,:,Boolean,;,xx6q,,,G3_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2516(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G:Kh_{Var $7o8_8:Array [Array [Array [Array [Array [Array [Int ,0x22],0x22],0X17],0X17],0b1],0XE];Destructor (){} }''',
                '''Class,G,:,Kh_,{,Var,$7o8_8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x22,],,,0x22,],,,0X17,],,,0X17,],,,0b1,],,,0XE,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2517(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o17___:_B_1{Val $3:I_;$_2(){}_U4(){} }Class _69:I_6B4{}Class k_:_{Val $_,_,$_,$g_:Float ;Destructor (){Break ;} }''',
                '''Class,o17___,:,_B_1,{,Val,$3,:,I_,;,$_2,(,),{,},_U4,(,),{,},},Class,_69,:,I_6B4,{,},Class,k_,:,_,{,Val,$_,,,_,,,$_,,,$g_,:,Float,;,Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2518(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_3{}Class l:__{Var _0FH:Int ;Constructor (I,__5:Array [String ,0124]){_::$_c25();Val r:String ;}Val l26,_:Boolean ;}''',
                '''Class,_,:,_3,{,},Class,l,:,__,{,Var,_0FH,:,Int,;,Constructor,(,I,,,__5,:,Array,[,String,,,0124,],),{,_,::,$_c25,(,),;,Val,r,:,String,;,},Val,l26,,,_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2519(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:h{Val s5,S:Array [Int ,0B10_1];}Class t{}Class Y5v{Constructor (_:Array [Array [Array [String ,0xC],0b1010010],01];PG:Boolean ;__3V__:Array [Array [Array [Array [Array [Float ,9],0b1010010],0B1010001],0106],6];_Z9__f6d,N,_:M;_0_R_26_:Array [Array [Boolean ,0b1_0_01],0b1010010];U,_6:_;c:_;fy41,j:Boolean ;_,_:Array [Int ,0B1010001];x7:Int ){Continue ;Break ;}Destructor (){} }''',
                '''Class,_,:,h,{,Val,s5,,,S,:,Array,[,Int,,,0B101,],;,},Class,t,{,},Class,Y5v,{,Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0xC,],,,0b1010010,],,,01,],;,PG,:,Boolean,;,__3V__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,0b1010010,],,,0B1010001,],,,0106,],,,6,],;,_Z9__f6d,,,N,,,_,:,M,;,_0_R_26_,:,Array,[,Array,[,Boolean,,,0b1001,],,,0b1010010,],;,U,,,_6,:,_,;,c,:,_,;,fy41,,,j,:,Boolean,;,_,,,_,:,Array,[,Int,,,0B1010001,],;,x7,:,Int,),{,Continue,;,Break,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2520(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q_99{Val $2dfi:Array [Array [Array [Array [String ,0x4E],0b100011],0b1],0b100011];}Class _9{Val A,$__,$4:Array [Int ,6];}''',
                '''Class,Q_99,{,Val,$2dfi,:,Array,[,Array,[,Array,[,Array,[,String,,,0x4E,],,,0b100011,],,,0b1,],,,0b100011,],;,},Class,_9,{,Val,A,,,$__,,,$4,:,Array,[,Int,,,6,],;,},<EOF>''',
                101
            )
        )

    def test_2521(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_0{Val $a5_:Array [String ,33];}Class Q{}Class bi{Var ln,$D,$__,$zh_,__Y:R;$_(_:__0;sI:Array [Array [Int ,0b111001],33];_64,V6:Boolean ){} }Class em62_{}Class _Q{Var $3W,$_:Array [Boolean ,33];}''',
                '''Class,_,:,_0,{,Val,$a5_,:,Array,[,String,,,33,],;,},Class,Q,{,},Class,bi,{,Var,ln,,,$D,,,$__,,,$zh_,,,__Y,:,R,;,$_,(,_,:,__0,;,sI,:,Array,[,Array,[,Int,,,0b111001,],,,33,],;,_64,,,V6,:,Boolean,),{,},},Class,em62_,{,},Class,_Q,{,Var,$3W,,,$_,:,Array,[,Boolean,,,33,],;,},<EOF>''',
                101
            )
        )

    def test_2522(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Int ){Break ;} }Class _:_4{}Class qY0:p{Destructor (){Break ;} }Class OQ49H:_{_(){}Constructor (){}Var $_uOU_:Int ;}''',
                '''Class,_,{,Constructor,(,_,:,Int,),{,Break,;,},},Class,_,:,_4,{,},Class,qY0,:,p,{,Destructor,(,),{,Break,;,},},Class,OQ49H,:,_,{,_,(,),{,},Constructor,(,),{,},Var,$_uOU_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2523(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{_7(_:Array [String ,9];_,S18_6:L_5;_7:b_;_l_,P,n33_7_,I:Int ){}Var $fe,_7d:Array [Array [Float ,0X10],0x2_4_4];Constructor (){} }''',
                '''Class,K,{,_7,(,_,:,Array,[,String,,,9,],;,_,,,S18_6,:,L_5,;,_7,:,b_,;,_l_,,,P,,,n33_7_,,,I,:,Int,),{,},Var,$fe,,,_7d,:,Array,[,Array,[,Float,,,0X10,],,,0x244,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2524(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _J31{}Class _Y:f5{Destructor (){}Constructor (){}M(N,X__z,Q8:Array [String ,0xC];_,y,s8:Array [String ,0b101111]){ {} }}Class H{}''',
                '''Class,_J31,{,},Class,_Y,:,f5,{,Destructor,(,),{,},Constructor,(,),{,},M,(,N,,,X__z,,,Q8,:,Array,[,String,,,0xC,],;,_,,,y,,,s8,:,Array,[,String,,,0b101111,],),{,{,},},},Class,H,{,},<EOF>''',
                101
            )
        )

    def test_2525(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z8v4__U{$8(__,_:__;Xn3_,_:Array [Int ,50];_:Boolean ;_:Array [Array [String ,0X3],0B1_1]){}$6(){Continue ;} }Class F:f{}Class _p{}''',
                '''Class,z8v4__U,{,$8,(,__,,,_,:,__,;,Xn3_,,,_,:,Array,[,Int,,,50,],;,_,:,Boolean,;,_,:,Array,[,Array,[,String,,,0X3,],,,0B11,],),{,},$6,(,),{,Continue,;,},},Class,F,:,f,{,},Class,_p,{,},<EOF>''',
                101
            )
        )

    def test_2526(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q3{}Class Z:d{Destructor (){} }Class _:d_p{Lh(d:Array [Boolean ,02];_5:Array [Array [Array [Float ,7],0B1],6]){} }''',
                '''Class,Q3,{,},Class,Z,:,d,{,Destructor,(,),{,},},Class,_,:,d_p,{,Lh,(,d,:,Array,[,Boolean,,,02,],;,_5,:,Array,[,Array,[,Array,[,Float,,,7,],,,0B1,],,,6,],),{,},},<EOF>''',
                101
            )
        )

    def test_2527(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L1__k42{Var _,$d,$0cr6,$_,$_5:Array [String ,0XD7A7];$8k(_,K:Array [Boolean ,84];_,_,__,a,V_7:Array [Array [Array [Boolean ,49],0131],0xFD];__:Array [Array [Boolean ,0x3_28_F37],0B1000010];_:Array [Array [Array [Boolean ,0B1],0B1],05]){} }''',
                '''Class,L1__k42,{,Var,_,,,$d,,,$0cr6,,,$_,,,$_5,:,Array,[,String,,,0XD7A7,],;,$8k,(,_,,,K,:,Array,[,Boolean,,,84,],;,_,,,_,,,__,,,a,,,V_7,:,Array,[,Array,[,Array,[,Boolean,,,49,],,,0131,],,,0xFD,],;,__,:,Array,[,Array,[,Boolean,,,0x328F37,],,,0B1000010,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0B1,],,,05,],),{,},},<EOF>''',
                101
            )
        )

    def test_2528(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:n_{}Class H2Z__d7{}Class __la{}Class x:h{}Class W:C{}Class _B_{Destructor (){Val _:Int ;}Var _,$2w:Array [Array [Boolean ,022],2];}''',
                '''Class,n,:,n_,{,},Class,H2Z__d7,{,},Class,__la,{,},Class,x,:,h,{,},Class,W,:,C,{,},Class,_B_,{,Destructor,(,),{,Val,_,:,Int,;,},Var,_,,,$2w,:,Array,[,Array,[,Boolean,,,022,],,,2,],;,},<EOF>''',
                101
            )
        )

    def test_2529(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_c_{Destructor (){}$C6(Z,_v5u1__9,_3__e,_a,_,l:Array [Int ,0b1];__m,T,m_,__b:Array [Array [Array [Array [Array [Boolean ,0xC09_E6],0x4],0XC],0b1],39]){Return ;}Constructor (N1:Array [Float ,39]){ {}Return ;Continue ;Break ;} }''',
                '''Class,_,:,_c_,{,Destructor,(,),{,},$C6,(,Z,,,_v5u1__9,,,_3__e,,,_a,,,_,,,l,:,Array,[,Int,,,0b1,],;,__m,,,T,,,m_,,,__b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xC09E6,],,,0x4,],,,0XC,],,,0b1,],,,39,],),{,Return,;,},Constructor,(,N1,:,Array,[,Float,,,39,],),{,{,},Return,;,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2530(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:L_313RT{Var _3_:String ;Constructor (){}Destructor (){}Val _w_z0,Q,$_M_,e,t,$_,mi2,$_:_8_a;}Class i3:_9{}''',
                '''Class,_,:,L_313RT,{,Var,_3_,:,String,;,Constructor,(,),{,},Destructor,(,),{,},Val,_w_z0,,,Q,,,$_M_,,,e,,,t,,,$_,,,mi2,,,$_,:,_8_a,;,},Class,i3,:,_9,{,},<EOF>''',
                101
            )
        )

    def test_2531(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:Qv{Destructor (){}Var L79_,$K,$5,_,_,$_,$y,_,$8:Array [Array [Array [Array [Array [String ,023],023],0x34],0B1000010],8_3];Var $11:Array [Array [Boolean ,0B1000010],3152];}''',
                '''Class,n,:,Qv,{,Destructor,(,),{,},Var,L79_,,,$K,,,$5,,,_,,,_,,,$_,,,$y,,,_,,,$8,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,023,],,,023,],,,0x34,],,,0B1000010,],,,83,],;,Var,$11,:,Array,[,Array,[,Boolean,,,0B1000010,],,,3152,],;,},<EOF>''',
                101
            )
        )

    def test_2532(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9__:_{Destructor (){q_iL::$p8_();}Var $7:Array [Array [Boolean ,0x63],0X5C];}Class _9{Val _65b:s8_;}Class d1_4_:GQ{Destructor (){Break ;{} }}Class u:_T{Destructor (){Continue ;} }''',
                '''Class,_9__,:,_,{,Destructor,(,),{,q_iL,::,$p8_,(,),;,},Var,$7,:,Array,[,Array,[,Boolean,,,0x63,],,,0X5C,],;,},Class,_9,{,Val,_65b,:,s8_,;,},Class,d1_4_,:,GQ,{,Destructor,(,),{,Break,;,{,},},},Class,u,:,_T,{,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2533(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{_y(P,Hh,F8,_:Array [Array [Boolean ,02],0B10010]){H::$5();}Var $_:Array [Array [Array [Array [String ,6],5],04],96];}Class kR:_{}''',
                '''Class,r,{,_y,(,P,,,Hh,,,F8,,,_,:,Array,[,Array,[,Boolean,,,02,],,,0B10010,],),{,H,::,$5,(,),;,},Var,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,6,],,,5,],,,04,],,,96,],;,},Class,kR,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2534(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G22{Var _j4:Boolean ;}Class E:__f_0{$6(){}Val $m2n_:_;}Class m:N_{Var _d_,__4:Boolean ;Val $_,A,$_7,x,_30:Array [Boolean ,53];}''',
                '''Class,G22,{,Var,_j4,:,Boolean,;,},Class,E,:,__f_0,{,$6,(,),{,},Val,$m2n_,:,_,;,},Class,m,:,N_,{,Var,_d_,,,__4,:,Boolean,;,Val,$_,,,A,,,$_7,,,x,,,_30,:,Array,[,Boolean,,,53,],;,},<EOF>''',
                101
            )
        )

    def test_2535(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i2_{}Class yo{Var $2L_x8LTS,PB,$36_f,$q,$E:pv_0;$V(){Val _:Float ;}Var i_i__:Array [Boolean ,21];Constructor (X,__4U54:Array [Int ,0X20]){} }''',
                '''Class,i2_,{,},Class,yo,{,Var,$2L_x8LTS,,,PB,,,$36_f,,,$q,,,$E,:,pv_0,;,$V,(,),{,Val,_,:,Float,;,},Var,i_i__,:,Array,[,Boolean,,,21,],;,Constructor,(,X,,,__4U54,:,Array,[,Int,,,0X20,],),{,},},<EOF>''',
                101
            )
        )

    def test_2536(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x_:_{Constructor (_,__4wc,__:Float ;__:Array [String ,071];ShM7wJ2,__55,r,_:p;M61,L4_,f_:Array [Array [Boolean ,07_7_1],034]){} }''',
                '''Class,x_,:,_,{,Constructor,(,_,,,__4wc,,,__,:,Float,;,__,:,Array,[,String,,,071,],;,ShM7wJ2,,,__55,,,r,,,_,:,p,;,M61,,,L4_,,,f_,:,Array,[,Array,[,Boolean,,,0771,],,,034,],),{,},},<EOF>''',
                101
            )
        )

    def test_2537(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val h,__:Array [Array [Array [Float ,021_5_30],0x2E],28];}Class _:_ga{Constructor (__F:_7){Break ;}_(){} }Class l_{}''',
                '''Class,_,{,Val,h,,,__,:,Array,[,Array,[,Array,[,Float,,,021530,],,,0x2E,],,,28,],;,},Class,_,:,_ga,{,Constructor,(,__F,:,_7,),{,Break,;,},_,(,),{,},},Class,l_,{,},<EOF>''',
                101
            )
        )

    def test_2538(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:rB{Val $S_g:F=--""._D._p44;_M(G:Float ;_:Float ){} }Class _{}Class F_k{Constructor (_,__UB,__,__8,_7E___9_:_;_:String ){} }''',
                '''Class,r,:,rB,{,Val,$S_g,:,F,=,-,-,,.,_D,.,_p44,;,_M,(,G,:,Float,;,_,:,Float,),{,},},Class,_,{,},Class,F_k,{,Constructor,(,_,,,__UB,,,__,,,__8,,,_7E___9_,:,_,;,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2539(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:___9{Var $z,Sj,$g,e,I4x035,__6_8k__3,$b7:U;}Class _{Destructor (){}Val $__:S8;}Class M:__41{}Class Sf:_{}''',
                '''Class,L,:,___9,{,Var,$z,,,Sj,,,$g,,,e,,,I4x035,,,__6_8k__3,,,$b7,:,U,;,},Class,_,{,Destructor,(,),{,},Val,$__,:,S8,;,},Class,M,:,__41,{,},Class,Sf,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2540(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Val $8_C,$_,$O_:Array [Array [String ,0123],06_44];Var _,_,$q,$__,l_,F,t_:Array [Array [Boolean ,0XA05_1],4_1];}Class I:_{}''',
                '''Class,S,{,Val,$8_C,,,$_,,,$O_,:,Array,[,Array,[,String,,,0123,],,,0644,],;,Var,_,,,_,,,$q,,,$__,,,l_,,,F,,,t_,:,Array,[,Array,[,Boolean,,,0XA051,],,,41,],;,},Class,I,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2541(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class rlTn{Var $W_03,$8,_a,$6_,$L2mc,$_,J:Array [Array [String ,0X92C],69];Var _:Boolean ;_0R(){} }Class __6:I{Constructor (___:Array [Float ,0b1011001]){}Var _q4:Float ;}Class _20{}''',
                '''Class,_,{,},Class,rlTn,{,Var,$W_03,,,$8,,,_a,,,$6_,,,$L2mc,,,$_,,,J,:,Array,[,Array,[,String,,,0X92C,],,,69,],;,Var,_,:,Boolean,;,_0R,(,),{,},},Class,__6,:,I,{,Constructor,(,___,:,Array,[,Float,,,0b1011001,],),{,},Var,_q4,:,Float,;,},Class,_20,{,},<EOF>''',
                101
            )
        )

    def test_2542(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __l{Constructor (hN:String ;X0,_4u8:Int ){} }Class MU:QX_{_(){}$_(_,_,_X:Array [Array [Array [Float ,76],0XE],0112];_3,_7mn7u,__m,C_9:_b){} }Class _:q{}''',
                '''Class,__l,{,Constructor,(,hN,:,String,;,X0,,,_4u8,:,Int,),{,},},Class,MU,:,QX_,{,_,(,),{,},$_,(,_,,,_,,,_X,:,Array,[,Array,[,Array,[,Float,,,76,],,,0XE,],,,0112,],;,_3,,,_7mn7u,,,__m,,,C_9,:,_b,),{,},},Class,_,:,q,{,},<EOF>''',
                101
            )
        )

    def test_2543(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class V_:_8{}Class d{Constructor (d:m;_,_,_9,J_:Array [Array [String ,4],4];_:Array [Int ,0111]){ {} }}Class _E:_{}Class _:Q{}''',
                '''Class,_,{,},Class,V_,:,_8,{,},Class,d,{,Constructor,(,d,:,m,;,_,,,_,,,_9,,,J_,:,Array,[,Array,[,String,,,4,],,,4,],;,_,:,Array,[,Int,,,0111,],),{,{,},},},Class,_E,:,_,{,},Class,_,:,Q,{,},<EOF>''',
                101
            )
        )

    def test_2544(self):
        self.assertTrue(
            TestLexer.test(
                '''Class EF{Val Y:G_;Var _,$by:Boolean ;}Class _:_o{}Class ___{Destructor (){} }Class J_:E{Val r,n:Array [Array [Array [String ,0x6],0x57],0136];Var $4:Array [Array [Array [Array [Float ,83],0136],83],0X1821];}Class _2:x{Var $I,$S,$X,$_:Array [Array [Array [Array [Array [Int ,0136],1_00],0136],0136],83];Destructor (){} }Class _{}''',
                '''Class,EF,{,Val,Y,:,G_,;,Var,_,,,$by,:,Boolean,;,},Class,_,:,_o,{,},Class,___,{,Destructor,(,),{,},},Class,J_,:,E,{,Val,r,,,n,:,Array,[,Array,[,Array,[,String,,,0x6,],,,0x57,],,,0136,],;,Var,$4,:,Array,[,Array,[,Array,[,Array,[,Float,,,83,],,,0136,],,,83,],,,0X1821,],;,},Class,_2,:,x,{,Var,$I,,,$S,,,$X,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0136,],,,100,],,,0136,],,,0136,],,,83,],;,Destructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2545(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:D{Var $8:Array [Array [Float ,42],42];Constructor (){}$_7(_:_8g3){} }Class A{}Class Q{Val _,$C,_:Array [Float ,065];}''',
                '''Class,_,:,D,{,Var,$8,:,Array,[,Array,[,Float,,,42,],,,42,],;,Constructor,(,),{,},$_7,(,_,:,_8g3,),{,},},Class,A,{,},Class,Q,{,Val,_,,,$C,,,_,:,Array,[,Float,,,065,],;,},<EOF>''',
                101
            )
        )

    def test_2546(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c{}Class _{Val $y,$Gq:Array [Array [Array [Boolean ,0x8],1],0x8];Val _:Float ;Destructor (){}Val $kxP_1:r8;}Class __:__{Val $s__r6N5:_O;}''',
                '''Class,c,{,},Class,_,{,Val,$y,,,$Gq,:,Array,[,Array,[,Array,[,Boolean,,,0x8,],,,1,],,,0x8,],;,Val,_,:,Float,;,Destructor,(,),{,},Val,$kxP_1,:,r8,;,},Class,__,:,__,{,Val,$s__r6N5,:,_O,;,},<EOF>''',
                101
            )
        )

    def test_2547(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _gJt:A5{Destructor (){}Constructor (_:String ;y3e,J_:Boolean ;v,a3:Array [Array [Array [Array [Boolean ,0133],0b100010],0xF],1];SF:uyA){} }Class _1K_:_{}''',
                '''Class,_gJt,:,A5,{,Destructor,(,),{,},Constructor,(,_,:,String,;,y3e,,,J_,:,Boolean,;,v,,,a3,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0133,],,,0b100010,],,,0xF,],,,1,],;,SF,:,uyA,),{,},},Class,_1K_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2548(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5{Constructor (m:Array [Array [Int ,0b111010],0xE8];_,yZqB:Array [Array [Array [Array [Array [Array [Boolean ,0x60],0xF3],0107],0X8],89],0b111010]){} }''',
                '''Class,_5,{,Constructor,(,m,:,Array,[,Array,[,Int,,,0b111010,],,,0xE8,],;,_,,,yZqB,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x60,],,,0xF3,],,,0107,],,,0X8,],,,89,],,,0b111010,],),{,},},<EOF>''',
                101
            )
        )

    def test_2549(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___{}Class _:ia_5_{Constructor (_,_N:Int ;_:Array [Int ,013];Kv,c_:Array [Array [Float ,0b1_10],7]){} }Class _7{}''',
                '''Class,_,:,___,{,},Class,_,:,ia_5_,{,Constructor,(,_,,,_N,:,Int,;,_,:,Array,[,Int,,,013,],;,Kv,,,c_,:,Array,[,Array,[,Float,,,0b110,],,,7,],),{,},},Class,_7,{,},<EOF>''',
                101
            )
        )

    def test_2550(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:P_v{Var $K:Array [Boolean ,38]=!!-U::$U16_7;}Class h53_1{}Class i:_r___{Destructor (){}Val $_,__,t,__30,_Z5:Array [Boolean ,0B110000];}''',
                '''Class,y,:,P_v,{,Var,$K,:,Array,[,Boolean,,,38,],=,!,!,-,U,::,$U16_7,;,},Class,h53_1,{,},Class,i,:,_r___,{,Destructor,(,),{,},Val,$_,,,__,,,t,,,__30,,,_Z5,:,Array,[,Boolean,,,0B110000,],;,},<EOF>''',
                101
            )
        )

    def test_2551(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _:Array [Array [Array [Array [Array [Array [Float ,8_5],85],85],0X45],5],0X45];Var _d,f,$z:Array [String ,0B1];}''',
                '''Class,_,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,85,],,,85,],,,85,],,,0X45,],,,5,],,,0X45,],;,Var,_d,,,f,,,$z,:,Array,[,String,,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_2552(self):
        self.assertTrue(
            TestLexer.test(
                '''Class qk__{}Class w:_j{Val $_,E,$e,$_,$_,L,$_3,_,$1_z,$5,$o6K8,__:Array [Boolean ,54];}Class s{}Class d_:_V6_{Var N_,$_4:J;}''',
                '''Class,qk__,{,},Class,w,:,_j,{,Val,$_,,,E,,,$e,,,$_,,,$_,,,L,,,$_3,,,_,,,$1_z,,,$5,,,$o6K8,,,__,:,Array,[,Boolean,,,54,],;,},Class,s,{,},Class,d_,:,_V6_,{,Var,N_,,,$_4,:,J,;,},<EOF>''',
                101
            )
        )

    def test_2553(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T64{}Class m3G_:t_{}Class F{Constructor (Af,fN,_Qi2,r:String ;_:Float ){Break ;}Constructor (){} }Class Q{}''',
                '''Class,T64,{,},Class,m3G_,:,t_,{,},Class,F,{,Constructor,(,Af,,,fN,,,_Qi2,,,r,:,String,;,_,:,Float,),{,Break,;,},Constructor,(,),{,},},Class,Q,{,},<EOF>''',
                101
            )
        )

    def test_2554(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __:_{Var $8,$_:K;Destructor (){} }Class __{Destructor (){Val wX_8E4:Array [Array [Boolean ,07],0B1011];}Val _,_,__08:_;}''',
                '''Class,_,{,},Class,__,:,_,{,Var,$8,,,$_,:,K,;,Destructor,(,),{,},},Class,__,{,Destructor,(,),{,Val,wX_8E4,:,Array,[,Array,[,Boolean,,,07,],,,0B1011,],;,},Val,_,,,_,,,__08,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2555(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class V{}Class o6{Val $v8_7:Int ;$CE(_3179S471J:_;_qC,_o:Array [Array [String ,072],07]){} }Class f{Constructor (){}Var $_,$_:_;}Class L5:_{}''',
                '''Class,_,{,},Class,V,{,},Class,o6,{,Val,$v8_7,:,Int,;,$CE,(,_3179S471J,:,_,;,_qC,,,_o,:,Array,[,Array,[,String,,,072,],,,07,],),{,},},Class,f,{,Constructor,(,),{,},Var,$_,,,$_,:,_,;,},Class,L5,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2556(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:_6{}Class h8H{Val t,$R5:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,053],05],053],0b11_0],0b1],0X8],0XA_FBF],0b1],5];}Class _c:_41{}''',
                '''Class,h,:,_6,{,},Class,h8H,{,Val,t,,,$R5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,053,],,,05,],,,053,],,,0b110,],,,0b1,],,,0X8,],,,0XAFBF,],,,0b1,],,,5,],;,},Class,_c,:,_41,{,},<EOF>''',
                101
            )
        )

    def test_2557(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P{Var AQ4:Array [Int ,046];Destructor (){}Constructor (R,Q,w_i2,J_7:_3;_8:Array [Array [String ,0x35],83];Q0,_K:Array [String ,0x35];_:Y){} }Class _u:F5{}Class _A{Destructor (){Return ;} }''',
                '''Class,_P,{,Var,AQ4,:,Array,[,Int,,,046,],;,Destructor,(,),{,},Constructor,(,R,,,Q,,,w_i2,,,J_7,:,_3,;,_8,:,Array,[,Array,[,String,,,0x35,],,,83,],;,Q0,,,_K,:,Array,[,String,,,0x35,],;,_,:,Y,),{,},},Class,_u,:,F5,{,},Class,_A,{,Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2558(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V_7_u_:_{}Class e{}Class v{Destructor (){} }Class _{Destructor (){} }Class U_7_92:_12{}Class _E{Var i,$4:ljz;}Class X:lh5{}Class _{_(___,y:Int ){} }''',
                '''Class,V_7_u_,:,_,{,},Class,e,{,},Class,v,{,Destructor,(,),{,},},Class,_,{,Destructor,(,),{,},},Class,U_7_92,:,_12,{,},Class,_E,{,Var,i,,,$4,:,ljz,;,},Class,X,:,lh5,{,},Class,_,{,_,(,___,,,y,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2559(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _h{}Class l:_{}Class u8:B0{$9(D:Array [Array [Array [Array [Array [Boolean ,02572],01],051],0b110],0x2B];___:Array [Float ,3];_,_:Array [String ,0xD];j:Float ){Break ;} }''',
                '''Class,_h,{,},Class,l,:,_,{,},Class,u8,:,B0,{,$9,(,D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,02572,],,,01,],,,051,],,,0b110,],,,0x2B,],;,___,:,Array,[,Float,,,3,],;,_,,,_,:,Array,[,String,,,0xD,],;,j,:,Float,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2560(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_I{Val k:Float ;}Class q__1:N{Var c,$f,$__,$15,V0W:__;Constructor (_:Float ;_:JXd;___:String ;R:Boolean ;_,__4:_;_Oovx5_:_;__,_w:_){}Var $3T5:Int ;}''',
                '''Class,__,:,_I,{,Val,k,:,Float,;,},Class,q__1,:,N,{,Var,c,,,$f,,,$__,,,$15,,,V0W,:,__,;,Constructor,(,_,:,Float,;,_,:,JXd,;,___,:,String,;,R,:,Boolean,;,_,,,__4,:,_,;,_Oovx5_,:,_,;,__,,,_w,:,_,),{,},Var,$3T5,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2561(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _9:_{$1_3Cg(){} }Class y{Var A76,wo_:Array [Array [Array [Array [Array [Array [Array [Float ,96],0b1_1],0x3C],030],9],0b1],0XB];}Class _w{Constructor (){Break ;} }''',
                '''Class,__,{,},Class,_9,:,_,{,$1_3Cg,(,),{,},},Class,y,{,Var,A76,,,wo_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,96,],,,0b11,],,,0x3C,],,,030,],,,9,],,,0b1,],,,0XB,],;,},Class,_w,{,Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2562(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C9:_{}Class __{}Class _{Constructor (__:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,051],3],0X25],0x9_7],0B1001110],38],0B100],29],0b110011],1];_3_:Array [Array [Array [Array [Boolean ,0x62],0x62],01_5],38]){} }''',
                '''Class,C9,:,_,{,},Class,__,{,},Class,_,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,051,],,,3,],,,0X25,],,,0x97,],,,0B1001110,],,,38,],,,0B100,],,,29,],,,0b110011,],,,1,],;,_3_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x62,],,,0x62,],,,015,],,,38,],),{,},},<EOF>''',
                101
            )
        )

    def test_2563(self):
        self.assertTrue(
            TestLexer.test(
                '''Class LR:_iWcz{}Class _H{}Class Jk{}Class b_s:__6_{}Class X:_{}Class x:_{}Class _:_{}Class ed:M{Constructor (HNA7,vi,Z,iA,__1:Array [Array [Array [Float ,49_8],0x4B],0XF];i,_:Array [Int ,0b1];_949f,_O__P_,_t:Array [Int ,0B1_1]){}Val $c_:_u;}''',
                '''Class,LR,:,_iWcz,{,},Class,_H,{,},Class,Jk,{,},Class,b_s,:,__6_,{,},Class,X,:,_,{,},Class,x,:,_,{,},Class,_,:,_,{,},Class,ed,:,M,{,Constructor,(,HNA7,,,vi,,,Z,,,iA,,,__1,:,Array,[,Array,[,Array,[,Float,,,498,],,,0x4B,],,,0XF,],;,i,,,_,:,Array,[,Int,,,0b1,],;,_949f,,,_O__P_,,,_t,:,Array,[,Int,,,0B11,],),{,},Val,$c_,:,_u,;,},<EOF>''',
                101
            )
        )

    def test_2564(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _i:Z{}Class _{_(){}Constructor (_,_3_1:Float ;o_,_,G:W;n2,R2:Array [Int ,23]){Return ;}Var $_,_7:Array [Int ,0B11_1];}Class J3_8:y_{}''',
                '''Class,_i,:,Z,{,},Class,_,{,_,(,),{,},Constructor,(,_,,,_3_1,:,Float,;,o_,,,_,,,G,:,W,;,n2,,,R2,:,Array,[,Int,,,23,],),{,Return,;,},Var,$_,,,_7,:,Array,[,Int,,,0B111,],;,},Class,J3_8,:,y_,{,},<EOF>''',
                101
            )
        )

    def test_2565(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V{Constructor (){Return ;} }Class U:u_58h_{}Class Nq{Constructor (NE_8_G_,e,oD_:Array [String ,9]){ {} }}''',
                '''Class,_V,{,Constructor,(,),{,Return,;,},},Class,U,:,u_58h_,{,},Class,Nq,{,Constructor,(,NE_8_G_,,,e,,,oD_,:,Array,[,String,,,9,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2566(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:z{Val $3,$_52_,tT_:Array [Array [Boolean ,0b10],0X9];Var A6,$_8_3__,w:Array [Array [String ,07_50_3],0b1001011];}''',
                '''Class,_,:,z,{,Val,$3,,,$_52_,,,tT_,:,Array,[,Array,[,Boolean,,,0b10,],,,0X9,],;,Var,A6,,,$_8_3__,,,w,:,Array,[,Array,[,String,,,07503,],,,0b1001011,],;,},<EOF>''',
                101
            )
        )

    def test_2567(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){Return ;} }Class _9{Constructor (J1A,Y,Z6:D;B:String ;t,_:Array [Int ,0B10]){Break ;Null ._.E();} }''',
                '''Class,_,{,Destructor,(,),{,Return,;,},},Class,_9,{,Constructor,(,J1A,,,Y,,,Z6,:,D,;,B,:,String,;,t,,,_,:,Array,[,Int,,,0B10,],),{,Break,;,Null,.,_,.,E,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2568(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _r5__:_{Var $0,X_j8_9:u7___;Var $7K,$0Q,_31,_0,i7__,_,p3,Ky9m:Int ;$_____(){} }Class __:P{__L(_:p8_0;m:Int ;S,_:U){Continue ;} }''',
                '''Class,_r5__,:,_,{,Var,$0,,,X_j8_9,:,u7___,;,Var,$7K,,,$0Q,,,_31,,,_0,,,i7__,,,_,,,p3,,,Ky9m,:,Int,;,$_____,(,),{,},},Class,__,:,P,{,__L,(,_,:,p8_0,;,m,:,Int,;,S,,,_,:,U,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2569(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_6{Val q:Array [Array [Array [Array [Int ,0X4],0x64],05],053];}Class Ui9{}Class i:h_J{}Class t:AO{}Class d:_u{}Class _:_{Destructor (){Val q0V3y7__,e_:Array [Array [Array [Array [Int ,06],0b1],063],1_7];}_(){} }''',
                '''Class,_,:,_6,{,Val,q,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X4,],,,0x64,],,,05,],,,053,],;,},Class,Ui9,{,},Class,i,:,h_J,{,},Class,t,:,AO,{,},Class,d,:,_u,{,},Class,_,:,_,{,Destructor,(,),{,Val,q0V3y7__,,,e_,:,Array,[,Array,[,Array,[,Array,[,Int,,,06,],,,0b1,],,,063,],,,17,],;,},_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2570(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C0:M_u__{Destructor (){} }Class _68{}Class G{n(l,_:Int ;_G,_,A:Int ;h:Int ;_:Array [Boolean ,0XD165_9];ZQ_,____:S;__,_,V2:Array [Int ,77]){} }Class _{Var $_5K,X,QO,$F,_0:_;}''',
                '''Class,C0,:,M_u__,{,Destructor,(,),{,},},Class,_68,{,},Class,G,{,n,(,l,,,_,:,Int,;,_G,,,_,,,A,:,Int,;,h,:,Int,;,_,:,Array,[,Boolean,,,0XD1659,],;,ZQ_,,,____,:,S,;,__,,,_,,,V2,:,Array,[,Int,,,77,],),{,},},Class,_,{,Var,$_5K,,,X,,,QO,,,$F,,,_0,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2571(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:n{}Class _:_{Val a1:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,071],02],0X4F],10],8_1],065],0X4F],85],0B1100];}''',
                '''Class,y,:,n,{,},Class,_,:,_,{,Val,a1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,071,],,,02,],,,0X4F,],,,10,],,,81,],,,065,],,,0X4F,],,,85,],,,0B1100,],;,},<EOF>''',
                101
            )
        )

    def test_2572(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{E(_,_:Float ;w:Array [Array [Float ,022],0X3_0_8];H,_:Boolean ){}Var $_,_13_q8,$y__,n_7:Array [Array [String ,0b1100001],0X3E];Constructor (K__,I47_TA:Array [String ,022]){Var d:Array [Int ,04_74];} }''',
                '''Class,_,{,E,(,_,,,_,:,Float,;,w,:,Array,[,Array,[,Float,,,022,],,,0X308,],;,H,,,_,:,Boolean,),{,},Var,$_,,,_13_q8,,,$y__,,,n_7,:,Array,[,Array,[,String,,,0b1100001,],,,0X3E,],;,Constructor,(,K__,,,I47_TA,:,Array,[,String,,,022,],),{,Var,d,:,Array,[,Int,,,0474,],;,},},<EOF>''',
                101
            )
        )

    def test_2573(self):
        self.assertTrue(
            TestLexer.test(
                '''Class PNh2:__o{Var $B,g:Array [Array [Int ,0x3],0b1];Constructor (_,_,_Y_a__5:Array [Boolean ,034];__:Int ;_:E7){} }''',
                '''Class,PNh2,:,__o,{,Var,$B,,,g,:,Array,[,Array,[,Int,,,0x3,],,,0b1,],;,Constructor,(,_,,,_,,,_Y_a__5,:,Array,[,Boolean,,,034,],;,__,:,Int,;,_,:,E7,),{,},},<EOF>''',
                101
            )
        )

    def test_2574(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L8:C84{Constructor (_Yi_,t_32,_,r_v1:Array [Float ,0x40]){Val _7_:Array [Array [Int ,0b100011],04_4];}Destructor (){}Var _,$1_:___s7c2;}''',
                '''Class,L8,:,C84,{,Constructor,(,_Yi_,,,t_32,,,_,,,r_v1,:,Array,[,Float,,,0x40,],),{,Val,_7_,:,Array,[,Array,[,Int,,,0b100011,],,,044,],;,},Destructor,(,),{,},Var,_,,,$1_,:,___s7c2,;,},<EOF>''',
                101
            )
        )

    def test_2575(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:D{Constructor (_3:Boolean ;P_,_,_,_,J,__,_l8:Array [Boolean ,9];U:D_Ie_00_5;T8___:Array [Array [Float ,0XA],0b1];_wf_,__:_){} }Class R92_01{}''',
                '''Class,_,:,D,{,Constructor,(,_3,:,Boolean,;,P_,,,_,,,_,,,_,,,J,,,__,,,_l8,:,Array,[,Boolean,,,9,],;,U,:,D_Ie_00_5,;,T8___,:,Array,[,Array,[,Float,,,0XA,],,,0b1,],;,_wf_,,,__,:,_,),{,},},Class,R92_01,{,},<EOF>''',
                101
            )
        )

    def test_2576(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Uae{Val $8C:Array [Array [Array [Array [Array [Array [Array [Boolean ,0B1],04_1],2],49],0b1],0B1001],59];}Class _Z{}''',
                '''Class,Uae,{,Val,$8C,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,041,],,,2,],,,49,],,,0b1,],,,0B1001,],,,59,],;,},Class,_Z,{,},<EOF>''',
                101
            )
        )

    def test_2577(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:cNwH_y{}Class _2m{Constructor (_,__:a;_,U:Float ;Y,_,_,f:_8;d1:T8;bK_I0:Array [Array [Array [Boolean ,0x4F],01_4],0XC]){Var o__,D5_8P2:h;} }''',
                '''Class,_,:,cNwH_y,{,},Class,_2m,{,Constructor,(,_,,,__,:,a,;,_,,,U,:,Float,;,Y,,,_,,,_,,,f,:,_8,;,d1,:,T8,;,bK_I0,:,Array,[,Array,[,Array,[,Boolean,,,0x4F,],,,014,],,,0XC,],),{,Var,o__,,,D5_8P2,:,h,;,},},<EOF>''',
                101
            )
        )

    def test_2578(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j__:_{e(y:ax;_l__,Z8,L,u:Float ;__4lA,N5_7l_:L4_){}$9(){} }Class _p{Var $j_gq_E,$R,R,f_:Array [Array [Boolean ,0B11],92];}''',
                '''Class,j__,:,_,{,e,(,y,:,ax,;,_l__,,,Z8,,,L,,,u,:,Float,;,__4lA,,,N5_7l_,:,L4_,),{,},$9,(,),{,},},Class,_p,{,Var,$j_gq_E,,,$R,,,R,,,f_,:,Array,[,Array,[,Boolean,,,0B11,],,,92,],;,},<EOF>''',
                101
            )
        )

    def test_2579(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{Var $V:String ;Destructor (){}Destructor (){}Constructor (){} }Class _{Var rv:Int ;}Class I:iE7{Var $N:Float ;Val _4,_:Array [String ,32];}''',
                '''Class,T,{,Var,$V,:,String,;,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},Class,_,{,Var,rv,:,Int,;,},Class,I,:,iE7,{,Var,$N,:,Float,;,Val,_4,,,_,:,Array,[,String,,,32,],;,},<EOF>''',
                101
            )
        )

    def test_2580(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_0w{}Class H_VXv03{p__(__:Array [Boolean ,0b1_1];_m,_7V4:Float ;l:V;_,_hG:Array [Array [String ,0b1],8]){} }''',
                '''Class,_,:,_0w,{,},Class,H_VXv03,{,p__,(,__,:,Array,[,Boolean,,,0b11,],;,_m,,,_7V4,:,Float,;,l,:,V,;,_,,,_hG,:,Array,[,Array,[,String,,,0b1,],,,8,],),{,},},<EOF>''',
                101
            )
        )

    def test_2581(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (r,u,NB,__,_81:_;__n,T:Array [Array [Array [Array [String ,0b1011],0x17],023],0b1011];__9:UJ;_:Float ;_0:_t){}Constructor (){} }Class k{}''',
                '''Class,_,:,_,{,Constructor,(,r,,,u,,,NB,,,__,,,_81,:,_,;,__n,,,T,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1011,],,,0x17,],,,023,],,,0b1011,],;,__9,:,UJ,;,_,:,Float,;,_0,:,_t,),{,},Constructor,(,),{,},},Class,k,{,},<EOF>''',
                101
            )
        )

    def test_2582(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___3{}Class _s:_{}Class _Kw_:_{Val $5:Array [Float ,100];Val $1:Array [Array [Int ,8],07_2_4];}Class _3g18:_d{}''',
                '''Class,___3,{,},Class,_s,:,_,{,},Class,_Kw_,:,_,{,Val,$5,:,Array,[,Float,,,100,],;,Val,$1,:,Array,[,Array,[,Int,,,8,],,,0724,],;,},Class,_3g18,:,_d,{,},<EOF>''',
                101
            )
        )

    def test_2583(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __3n8{}Class e__:_J4{}Class c_Q:_86{Constructor (_4,_5X:Array [Array [Int ,0x8_01_C],0b1_0];_,_2vM_960__tM:Z){} }''',
                '''Class,__3n8,{,},Class,e__,:,_J4,{,},Class,c_Q,:,_86,{,Constructor,(,_4,,,_5X,:,Array,[,Array,[,Int,,,0x801C,],,,0b10,],;,_,,,_2vM_960__tM,:,Z,),{,},},<EOF>''',
                101
            )
        )

    def test_2584(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __5_8{Val __,$_zqF,_62_6_0,_7__:Array [Boolean ,0b1010111];$G(m,__g,__:_7;__,q:o;_:_;k,___:Boolean ){} }Class _0{}''',
                '''Class,__5_8,{,Val,__,,,$_zqF,,,_62_6_0,,,_7__,:,Array,[,Boolean,,,0b1010111,],;,$G,(,m,,,__g,,,__,:,_7,;,__,,,q,:,o,;,_,:,_,;,k,,,___,:,Boolean,),{,},},Class,_0,{,},<EOF>''',
                101
            )
        )

    def test_2585(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Z{Destructor (){ {P::$5Yc_();} }Constructor (){}Val ___08,$A_:Float ;Var $_,_:Array [Array [String ,0B1001011],0b10];}Class N{}Class _9:_R_v{}''',
                '''Class,_Z,{,Destructor,(,),{,{,P,::,$5Yc_,(,),;,},},Constructor,(,),{,},Val,___08,,,$A_,:,Float,;,Var,$_,,,_,:,Array,[,Array,[,String,,,0B1001011,],,,0b10,],;,},Class,N,{,},Class,_9,:,_R_v,{,},<EOF>''',
                101
            )
        )

    def test_2586(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _38_c___K{Constructor (__P2RH:Array [Array [String ,076],0B1];H:Boolean ){}_2(N20_px:A;s1,_,_,l,_4,C__,B,g_,_8wG,y,_:_u;_uu:wh){} }Class V_:y{Var $4,_,$4o,$506v_,__U:Array [Array [Array [Int ,0B11],015],076];}''',
                '''Class,_38_c___K,{,Constructor,(,__P2RH,:,Array,[,Array,[,String,,,076,],,,0B1,],;,H,:,Boolean,),{,},_2,(,N20_px,:,A,;,s1,,,_,,,_,,,l,,,_4,,,C__,,,B,,,g_,,,_8wG,,,y,,,_,:,_u,;,_uu,:,wh,),{,},},Class,V_,:,y,{,Var,$4,,,_,,,$4o,,,$506v_,,,__U,:,Array,[,Array,[,Array,[,Int,,,0B11,],,,015,],,,076,],;,},<EOF>''',
                101
            )
        )

    def test_2587(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b38:F6{}Class oQ{Destructor (){Continue ;}Destructor (){Continue ;}Constructor (){} }Class Do_{}Class f_1{}''',
                '''Class,b38,:,F6,{,},Class,oQ,{,Destructor,(,),{,Continue,;,},Destructor,(,),{,Continue,;,},Constructor,(,),{,},},Class,Do_,{,},Class,f_1,{,},<EOF>''',
                101
            )
        )

    def test_2588(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{Destructor (){}__1(__,_,_2G:Float ){} }Class h0{}Class S{Constructor (x_8:qT;t_0:__36){}$_51p(H6,_,_5,n:Array [Array [String ,0b1],020];__k48DT:Array [Array [String ,0B1_1_0],020]){} }Class _V{Constructor (s,_:Array [Array [Array [String ,0B1100001],05],1];B1_:Int ){} }Class _{}''',
                '''Class,g,{,Destructor,(,),{,},__1,(,__,,,_,,,_2G,:,Float,),{,},},Class,h0,{,},Class,S,{,Constructor,(,x_8,:,qT,;,t_0,:,__36,),{,},$_51p,(,H6,,,_,,,_5,,,n,:,Array,[,Array,[,String,,,0b1,],,,020,],;,__k48DT,:,Array,[,Array,[,String,,,0B110,],,,020,],),{,},},Class,_V,{,Constructor,(,s,,,_,:,Array,[,Array,[,Array,[,String,,,0B1100001,],,,05,],,,1,],;,B1_,:,Int,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2589(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P1:_i{Var $0:Array [Array [Array [Array [Array [Boolean ,21],8],0b1_1_01_1_0],0b1111100],0x1A];}Class _:A{}''',
                '''Class,_P1,:,_i,{,Var,$0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,21,],,,8,],,,0b110110,],,,0b1111100,],,,0x1A,],;,},Class,_,:,A,{,},<EOF>''',
                101
            )
        )

    def test_2590(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__x{}Class lUU{}Class l{Ab(_m,_:String ){Continue ;}Val V,$__:__8T;}Class _0{}Class _:e{}Class _9:x8i{}''',
                '''Class,_,:,__x,{,},Class,lUU,{,},Class,l,{,Ab,(,_m,,,_,:,String,),{,Continue,;,},Val,V,,,$__,:,__8T,;,},Class,_0,{,},Class,_,:,e,{,},Class,_9,:,x8i,{,},<EOF>''',
                101
            )
        )

    def test_2591(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{_6__(J,c:_5;_,_,E:Array [Array [Boolean ,0B1],0B1]){} }Class _46d{Destructor (){ {}Break ;{} }}Class _:_{}''',
                '''Class,__,{,_6__,(,J,,,c,:,_5,;,_,,,_,,,E,:,Array,[,Array,[,Boolean,,,0B1,],,,0B1,],),{,},},Class,_46d,{,Destructor,(,),{,{,},Break,;,{,},},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2592(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var __3_1:Array [Float ,7_5];}Class s{}Class F{_(N___,_1_,m:_;_,_8__,Y,j:Float ;_,o5:__O_Lq){}Constructor (){Continue ;Val _:Array [Array [Array [Float ,9],0X16],026];Var V,_,_4,_,_8z9,O:_R;} }Class Q:F{}''',
                '''Class,_,{,Var,__3_1,:,Array,[,Float,,,75,],;,},Class,s,{,},Class,F,{,_,(,N___,,,_1_,,,m,:,_,;,_,,,_8__,,,Y,,,j,:,Float,;,_,,,o5,:,__O_Lq,),{,},Constructor,(,),{,Continue,;,Val,_,:,Array,[,Array,[,Array,[,Float,,,9,],,,0X16,],,,026,],;,Var,V,,,_,,,_4,,,_,,,_8z9,,,O,:,_R,;,},},Class,Q,:,F,{,},<EOF>''',
                101
            )
        )

    def test_2593(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){Break ;}Var $FQ:String ;}Class a:___nN{Constructor (_:yt){Val Y:H;Break ;}Constructor (){} }''',
                '''Class,__,{,Destructor,(,),{,Break,;,},Var,$FQ,:,String,;,},Class,a,:,___nN,{,Constructor,(,_,:,yt,),{,Val,Y,:,H,;,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2594(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{Val $5_d,$a__6,_5,__6:Float ;}Class _{}Class _O{$4s(_,vU,M_G,YC8,__j_3_1:Mv){}Val $_,$_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,8],067],0b1011001],8],020],5],0xE3],067],0B101011],067],07_63];Var $_h:Int ;}Class q3:_{}Class O_{}''',
                '''Class,f,{,Val,$5_d,,,$a__6,,,_5,,,__6,:,Float,;,},Class,_,{,},Class,_O,{,$4s,(,_,,,vU,,,M_G,,,YC8,,,__j_3_1,:,Mv,),{,},Val,$_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,067,],,,0b1011001,],,,8,],,,020,],,,5,],,,0xE3,],,,067,],,,0B101011,],,,067,],,,0763,],;,Var,$_h,:,Int,;,},Class,q3,:,_,{,},Class,O_,{,},<EOF>''',
                101
            )
        )

    def test_2595(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ts{S(___2iI:Array [Float ,033];A,a,_K:Array [String ,0x2B];n:Array [Array [Array [Array [Boolean ,90],0x4_C],0B1],5];E_,_:Array [Float ,0x2B];a,__:Array [Boolean ,0B111110]){} }Class _2G:p{}''',
                '''Class,Ts,{,S,(,___2iI,:,Array,[,Float,,,033,],;,A,,,a,,,_K,:,Array,[,String,,,0x2B,],;,n,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,90,],,,0x4C,],,,0B1,],,,5,],;,E_,,,_,:,Array,[,Float,,,0x2B,],;,a,,,__,:,Array,[,Boolean,,,0B111110,],),{,},},Class,_2G,:,p,{,},<EOF>''',
                101
            )
        )

    def test_2596(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _p{}Class B_:__{}Class _{Var _,$9:Array [Array [String ,0B11_1],03];Constructor (_7e08s,__:u6){} }Class _:_{Var $K:Boolean ;}Class D{}Class W{}Class _{}''',
                '''Class,_p,{,},Class,B_,:,__,{,},Class,_,{,Var,_,,,$9,:,Array,[,Array,[,String,,,0B111,],,,03,],;,Constructor,(,_7e08s,,,__,:,u6,),{,},},Class,_,:,_,{,Var,$K,:,Boolean,;,},Class,D,{,},Class,W,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2597(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N6:q28_{}Class _{}Class W:h{Constructor (rP,dN:Int ;_,_8_,GD6_,w,_2:Float ;Z4_:Array [Float ,8_6];W_:x_;_zb:Boolean ;GR:_M4o){}Destructor (){} }''',
                '''Class,N6,:,q28_,{,},Class,_,{,},Class,W,:,h,{,Constructor,(,rP,,,dN,:,Int,;,_,,,_8_,,,GD6_,,,w,,,_2,:,Float,;,Z4_,:,Array,[,Float,,,86,],;,W_,:,x_,;,_zb,:,Boolean,;,GR,:,_M4o,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2598(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2__{}Class _0:_p{}Class ___{}Class _v{Constructor (){ {Continue ;} }}Class _9X:_Rp4__7{}Class _9{Var $w:Array [Boolean ,0x37];}Class m0_:_{Val $8E,$WU9,$2L_C_:e_;Constructor (){} }''',
                '''Class,_2__,{,},Class,_0,:,_p,{,},Class,___,{,},Class,_v,{,Constructor,(,),{,{,Continue,;,},},},Class,_9X,:,_Rp4__7,{,},Class,_9,{,Var,$w,:,Array,[,Boolean,,,0x37,],;,},Class,m0_,:,_,{,Val,$8E,,,$WU9,,,$2L_C_,:,e_,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2599(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:J3{}Class d7:Os{V(L,_:i_;_G1:Float ;_NG:Float ){} }Class _8_4:Y{_(v:Array [Array [Float ,8_68_3],07];v,QF:Float ){r::$b();} }''',
                '''Class,_,:,J3,{,},Class,d7,:,Os,{,V,(,L,,,_,:,i_,;,_G1,:,Float,;,_NG,:,Float,),{,},},Class,_8_4,:,Y,{,_,(,v,:,Array,[,Array,[,Float,,,8683,],,,07,],;,v,,,QF,:,Float,),{,r,::,$b,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2600(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _,VJ,$E_,KK0n__:Array [Array [Array [Array [Array [Array [Boolean ,658],0X1],0X5E],0123],0b1],0x48];}Class x{Constructor (JM2,_,__W,O,Z,_X,_:_;W:_){Continue ;Var d,_,_Wt:Array [Array [Array [Boolean ,06],07300_23],0123];} }Class N_{}''',
                '''Class,_,{,Val,_,,,VJ,,,$E_,,,KK0n__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,658,],,,0X1,],,,0X5E,],,,0123,],,,0b1,],,,0x48,],;,},Class,x,{,Constructor,(,JM2,,,_,,,__W,,,O,,,Z,,,_X,,,_,:,_,;,W,:,_,),{,Continue,;,Var,d,,,_,,,_Wt,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,0730023,],,,0123,],;,},},Class,N_,{,},<EOF>''',
                101
            )
        )

    def test_2601(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_9{Var _v,$0,$B9:vv1;Constructor (Hx_j:Boolean ;_:__){ {{Continue ;Continue ;} }Break ;Var jI,_5,_F:A5;}$W(){}Xz(){} }''',
                '''Class,l_9,{,Var,_v,,,$0,,,$B9,:,vv1,;,Constructor,(,Hx_j,:,Boolean,;,_,:,__,),{,{,{,Continue,;,Continue,;,},},Break,;,Var,jI,,,_5,,,_F,:,A5,;,},$W,(,),{,},Xz,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2602(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __6_5{}Class _{}Class r{Constructor (){}Destructor (){} }Class e3_:_{$C(){Continue ;{} }Val $0:Array [String ,0b10];_(){}N_M(_:String ;M:_;_U:Boolean ;_7,_:o2_D8;o,x:Array [Float ,0x1D]){} }''',
                '''Class,__6_5,{,},Class,_,{,},Class,r,{,Constructor,(,),{,},Destructor,(,),{,},},Class,e3_,:,_,{,$C,(,),{,Continue,;,{,},},Val,$0,:,Array,[,String,,,0b10,],;,_,(,),{,},N_M,(,_,:,String,;,M,:,_,;,_U,:,Boolean,;,_7,,,_,:,o2_D8,;,o,,,x,:,Array,[,Float,,,0x1D,],),{,},},<EOF>''',
                101
            )
        )

    def test_2603(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class _6_{_(b_,_,_I,__2,x_,i,ql0,y:Array [Array [String ,8],0x2];__t:Array [Float ,0XC]){Continue ;} }''',
                '''Class,_,{,Constructor,(,),{,},},Class,_6_,{,_,(,b_,,,_,,,_I,,,__2,,,x_,,,i,,,ql0,,,y,:,Array,[,Array,[,String,,,8,],,,0x2,],;,__t,:,Array,[,Float,,,0XC,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2604(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x0:_{Constructor (J_:Array [Boolean ,0B11010];l:Boolean ;_,_,_2_79,T_,_B624,_4T,L74:Array [Array [Array [Float ,56],0x5A],0x7A44]){} }''',
                '''Class,x0,:,_,{,Constructor,(,J_,:,Array,[,Boolean,,,0B11010,],;,l,:,Boolean,;,_,,,_,,,_2_79,,,T_,,,_B624,,,_4T,,,L74,:,Array,[,Array,[,Array,[,Float,,,56,],,,0x5A,],,,0x7A44,],),{,},},<EOF>''',
                101
            )
        )

    def test_2605(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __7_M4M:_{$_Q(N,A,F:Boolean ){ {} }Var $7B,$___G,__,$7___7:Array [Array [String ,0x6_1],3];}Class _:_{}Class _15:_t{Constructor (P:Array [String ,59];j2,A:String ){} }''',
                '''Class,__7_M4M,:,_,{,$_Q,(,N,,,A,,,F,:,Boolean,),{,{,},},Var,$7B,,,$___G,,,__,,,$7___7,:,Array,[,Array,[,String,,,0x61,],,,3,],;,},Class,_,:,_,{,},Class,_15,:,_t,{,Constructor,(,P,:,Array,[,String,,,59,],;,j2,,,A,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2606(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Var ___:Array [String ,04];}Class _{Var $7:Array [Array [Array [Boolean ,22_7_07],0x12],0B1];}Class _6Q_:n0{Var $o9___:Array [Array [Array [Array [Boolean ,91],0x6_A9],76],0B1010100];Val $_,$q,$__,$_7,_n6_,Ha:h;R(_:Array [Int ,0x12]){} }Class _{Destructor (){} }Class _G:_5r_{}''',
                '''Class,_,:,__,{,Var,___,:,Array,[,String,,,04,],;,},Class,_,{,Var,$7,:,Array,[,Array,[,Array,[,Boolean,,,22707,],,,0x12,],,,0B1,],;,},Class,_6Q_,:,n0,{,Var,$o9___,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,91,],,,0x6A9,],,,76,],,,0B1010100,],;,Val,$_,,,$q,,,$__,,,$_7,,,_n6_,,,Ha,:,h,;,R,(,_,:,Array,[,Int,,,0x12,],),{,},},Class,_,{,Destructor,(,),{,},},Class,_G,:,_5r_,{,},<EOF>''',
                101
            )
        )

    def test_2607(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3:c__{Constructor (__,_,_:Boolean ;E,ww,zD5,_,_:N){}Constructor (s4_:String ;es:Array [String ,78];_,h,T9:_9D;S,_f:Int ;z,_,___,s,__:String ){}Constructor (){} }Class r:_{}''',
                '''Class,_3,:,c__,{,Constructor,(,__,,,_,,,_,:,Boolean,;,E,,,ww,,,zD5,,,_,,,_,:,N,),{,},Constructor,(,s4_,:,String,;,es,:,Array,[,String,,,78,],;,_,,,h,,,T9,:,_9D,;,S,,,_f,:,Int,;,z,,,_,,,___,,,s,,,__,:,String,),{,},Constructor,(,),{,},},Class,r,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2608(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$_(O:String ){} }Class H{Constructor (q:Array [Array [String ,0b10],0xF]){} }Class l5{Var __:Array [Array [Float ,1_1_5],7];}''',
                '''Class,_,{,$_,(,O,:,String,),{,},},Class,H,{,Constructor,(,q,:,Array,[,Array,[,String,,,0b10,],,,0xF,],),{,},},Class,l5,{,Var,__,:,Array,[,Array,[,Float,,,115,],,,7,],;,},<EOF>''',
                101
            )
        )

    def test_2609(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _e:_{$8(_Z1:Boolean ;D,_:Boolean ;_,m22,OT2o,u0_,_A,_,_:Array [Array [String ,0B11],02];_,b_,__1,S,E:Bf;S__7:String ;_2:Array [String ,8]){} }Class t{}''',
                '''Class,_,{,},Class,_e,:,_,{,$8,(,_Z1,:,Boolean,;,D,,,_,:,Boolean,;,_,,,m22,,,OT2o,,,u0_,,,_A,,,_,,,_,:,Array,[,Array,[,String,,,0B11,],,,02,],;,_,,,b_,,,__1,,,S,,,E,:,Bf,;,S__7,:,String,;,_2,:,Array,[,String,,,8,],),{,},},Class,t,{,},<EOF>''',
                101
            )
        )

    def test_2610(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:_{}Class _:W{S4(g,ce8:Array [Boolean ,4];_:String ;_3,_v__e:Array [Array [Int ,23],8];_:Float ;E5H6VN,s,n,_7:Array [Array [String ,0x9_A9_3A],0B1]){} }Class G2G_:_{Val _:N;}''',
                '''Class,r,:,_,{,},Class,_,:,W,{,S4,(,g,,,ce8,:,Array,[,Boolean,,,4,],;,_,:,String,;,_3,,,_v__e,:,Array,[,Array,[,Int,,,23,],,,8,],;,_,:,Float,;,E5H6VN,,,s,,,n,,,_7,:,Array,[,Array,[,String,,,0x9A93A,],,,0B1,],),{,},},Class,G2G_,:,_,{,Val,_,:,N,;,},<EOF>''',
                101
            )
        )

    def test_2611(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b:_9{}Class Jpi:_{}Class _K{Constructor (){Continue ;}Val j,$_,$_:__;}Class v6{Constructor (_vx,_0,_xu1,__:Int ){} }''',
                '''Class,b,:,_9,{,},Class,Jpi,:,_,{,},Class,_K,{,Constructor,(,),{,Continue,;,},Val,j,,,$_,,,$_,:,__,;,},Class,v6,{,Constructor,(,_vx,,,_0,,,_xu1,,,__,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2612(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __0:X{Val $X:Int ;Var $__,L,$r6,$K,j8_:k;_(X,Q6,n:Array [Array [Array [Float ,0X1],0X61],0b1011100]){} }Class o{_NJ(_,Y__,_4:_iW){Return ;_::$_();Val _:Float ;} }Class __:D{}''',
                '''Class,__0,:,X,{,Val,$X,:,Int,;,Var,$__,,,L,,,$r6,,,$K,,,j8_,:,k,;,_,(,X,,,Q6,,,n,:,Array,[,Array,[,Array,[,Float,,,0X1,],,,0X61,],,,0b1011100,],),{,},},Class,o,{,_NJ,(,_,,,Y__,,,_4,:,_iW,),{,Return,;,_,::,$_,(,),;,Val,_,:,Float,;,},},Class,__,:,D,{,},<EOF>''',
                101
            )
        )

    def test_2613(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v:_8{Var _:Array [Array [Array [Array [Array [Array [String ,0x3],040_3],0X4],0x7],14],0xE];Destructor (){Break ;Break ;} }''',
                '''Class,_v,:,_8,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x3,],,,0403,],,,0X4,],,,0x7,],,,14,],,,0xE,],;,Destructor,(,),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2614(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _U__B_:E8{Constructor (u,R,_,__Y,__0_,i,n,x4O:Float ){} }Class S:R_{}Class K1_t:_{Var I__:Int ;}Class C_3_{}''',
                '''Class,_U__B_,:,E8,{,Constructor,(,u,,,R,,,_,,,__Y,,,__0_,,,i,,,n,,,x4O,:,Float,),{,},},Class,S,:,R_,{,},Class,K1_t,:,_,{,Var,I__,:,Int,;,},Class,C_3_,{,},<EOF>''',
                101
            )
        )

    def test_2615(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pXc_{Var Rc:_;Constructor (_:String ;_3_1,_L_91:Array [Int ,0x5E];g_:Array [Array [Boolean ,0XE2],05_107];Q:Float ){}$_(_,o_:Array [Array [Array [Boolean ,0b1_0],0X6_8],02_1];h4w:Float ;t_g,r24:A){}Destructor (){}Val _:Array [Array [Array [Array [Float ,59],07_2_4_7],59],06];Constructor (){Continue ;} }Class r:_{Val $l_:Array [Array [Array [Array [Boolean ,0B11],0134],59],0xE_1C8];}Class a_0C0:_uT8{}''',
                '''Class,pXc_,{,Var,Rc,:,_,;,Constructor,(,_,:,String,;,_3_1,,,_L_91,:,Array,[,Int,,,0x5E,],;,g_,:,Array,[,Array,[,Boolean,,,0XE2,],,,05107,],;,Q,:,Float,),{,},$_,(,_,,,o_,:,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0X68,],,,021,],;,h4w,:,Float,;,t_g,,,r24,:,A,),{,},Destructor,(,),{,},Val,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,59,],,,07247,],,,59,],,,06,],;,Constructor,(,),{,Continue,;,},},Class,r,:,_,{,Val,$l_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11,],,,0134,],,,59,],,,0xE1C8,],;,},Class,a_0C0,:,_uT8,{,},<EOF>''',
                101
            )
        )

    def test_2616(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:cY_49i_{}Class _E_{}Class _:_7{}Class __:_47{Destructor (){}$V(F,oL2:_T){} }Class _:_{}Class _{Constructor (_:Boolean ;E__:Array [Boolean ,0x17]){} }Class E_:_t{}Class J{}''',
                '''Class,_,:,cY_49i_,{,},Class,_E_,{,},Class,_,:,_7,{,},Class,__,:,_47,{,Destructor,(,),{,},$V,(,F,,,oL2,:,_T,),{,},},Class,_,:,_,{,},Class,_,{,Constructor,(,_,:,Boolean,;,E__,:,Array,[,Boolean,,,0x17,],),{,},},Class,E_,:,_t,{,},Class,J,{,},<EOF>''',
                101
            )
        )

    def test_2617(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _vK:p_5d{}Class r_u5_8M65:JF{Constructor (Wj_i9,_l_:_u43;_,o:v_){}__(){} }Class o4261:_P__0{Val $1,$3,$v6,_D:String ;}''',
                '''Class,_vK,:,p_5d,{,},Class,r_u5_8M65,:,JF,{,Constructor,(,Wj_i9,,,_l_,:,_u43,;,_,,,o,:,v_,),{,},__,(,),{,},},Class,o4261,:,_P__0,{,Val,$1,,,$3,,,$v6,,,_D,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2618(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _qU{}Class _:_{Var $k:Int ;}Class j8426b:n{}Class Y:O_08I4{}Class _Q:_{Var $_:String ;}Class __{}Class R{}''',
                '''Class,_qU,{,},Class,_,:,_,{,Var,$k,:,Int,;,},Class,j8426b,:,n,{,},Class,Y,:,O_08I4,{,},Class,_Q,:,_,{,Var,$_,:,String,;,},Class,__,{,},Class,R,{,},<EOF>''',
                101
            )
        )

    def test_2619(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_p2(){}Constructor (G7:Boolean ;_:Array [Array [Int ,43],0X12];_T,_,Z2Hn:I3y;_,_:_;_,W:Array [Array [String ,0X12],02];_:Array [String ,0X4B]){} }''',
                '''Class,_,{,_p2,(,),{,},Constructor,(,G7,:,Boolean,;,_,:,Array,[,Array,[,Int,,,43,],,,0X12,],;,_T,,,_,,,Z2Hn,:,I3y,;,_,,,_,:,_,;,_,,,W,:,Array,[,Array,[,String,,,0X12,],,,02,],;,_,:,Array,[,String,,,0X4B,],),{,},},<EOF>''',
                101
            )
        )

    def test_2620(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M4:_{Constructor (f,p,J,_17_8,X:L4_2){} }Class __{}Class j1:u{W_(__:Float ){} }Class d{}Class s{Destructor (){} }Class _:f{}Class n:_{Val ___:X;Var _v:Int ;}Class f{Constructor (P,__a,_:Float ){Continue ;Break ;} }''',
                '''Class,_M4,:,_,{,Constructor,(,f,,,p,,,J,,,_17_8,,,X,:,L4_2,),{,},},Class,__,{,},Class,j1,:,u,{,W_,(,__,:,Float,),{,},},Class,d,{,},Class,s,{,Destructor,(,),{,},},Class,_,:,f,{,},Class,n,:,_,{,Val,___,:,X,;,Var,_v,:,Int,;,},Class,f,{,Constructor,(,P,,,__a,,,_,:,Float,),{,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2621(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_2B2:_{}Class _:_{}Class SF7{Constructor (){} }Class r{}Class _I_:Q{Var $S,__A21A9,y,G,$6w:ug;Constructor (){} }''',
                '''Class,h_2B2,:,_,{,},Class,_,:,_,{,},Class,SF7,{,Constructor,(,),{,},},Class,r,{,},Class,_I_,:,Q,{,Var,$S,,,__A21A9,,,y,,,G,,,$6w,:,ug,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2622(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$6x645(_,_:_8;__:Array [String ,04_2];_G,_,_,__n8S:Float ;u_6:Int ;_2_42:q;q7k,V3_,_:Array [Array [Array [Array [Boolean ,0674_7],0B111111],77],6]){I_546::$_22();}Var _,$nn7Q42ij,m:Int ;}Class bY:__{_60(__:Array [Array [Array [Boolean ,01],0B111111],0X3D]){Continue ;} }''',
                '''Class,_,{,$6x645,(,_,,,_,:,_8,;,__,:,Array,[,String,,,042,],;,_G,,,_,,,_,,,__n8S,:,Float,;,u_6,:,Int,;,_2_42,:,q,;,q7k,,,V3_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,06747,],,,0B111111,],,,77,],,,6,],),{,I_546,::,$_22,(,),;,},Var,_,,,$nn7Q42ij,,,m,:,Int,;,},Class,bY,:,__,{,_60,(,__,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,0B111111,],,,0X3D,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2623(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _n{Var __1_,$3,f:R;Var _,$z,$W,_3:Boolean ;}Class _:_{}Class P:_Z{Destructor (){}Constructor (_2Z:Array [Array [Int ,01_04],043];_m54M,_:Array [Boolean ,13]){} }Class H{Destructor (){} }''',
                '''Class,_n,{,Var,__1_,,,$3,,,f,:,R,;,Var,_,,,$z,,,$W,,,_3,:,Boolean,;,},Class,_,:,_,{,},Class,P,:,_Z,{,Destructor,(,),{,},Constructor,(,_2Z,:,Array,[,Array,[,Int,,,0104,],,,043,],;,_m54M,,,_,:,Array,[,Boolean,,,13,],),{,},},Class,H,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2624(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Constructor (){}Val c_4T,_,_:sI;Constructor (u3,_:Array [Array [Array [Float ,0x26],0B1],0111];e5:NKx;_D,__,__:Array [Float ,0X43];pK_:Array [Float ,01_6_2];_Q:T_Ek;z,_9_,_:Array [Array [Array [String ,4],5],7]){} }''',
                '''Class,___,{,Constructor,(,),{,},Val,c_4T,,,_,,,_,:,sI,;,Constructor,(,u3,,,_,:,Array,[,Array,[,Array,[,Float,,,0x26,],,,0B1,],,,0111,],;,e5,:,NKx,;,_D,,,__,,,__,:,Array,[,Float,,,0X43,],;,pK_,:,Array,[,Float,,,0162,],;,_Q,:,T_Ek,;,z,,,_9_,,,_,:,Array,[,Array,[,Array,[,String,,,4,],,,5,],,,7,],),{,},},<EOF>''',
                101
            )
        )

    def test_2625(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B1:_Q4{}Class J:_S{}Class f:_{Constructor (_,S7:hN8;h7:Array [Float ,0b1];P,_:Array [String ,0b1];_,cb,___B_,x4,_,___f__T,b9,__,sN:Float ){}Var $0:E=--B::$4.n6();}Class nG9{}''',
                '''Class,B1,:,_Q4,{,},Class,J,:,_S,{,},Class,f,:,_,{,Constructor,(,_,,,S7,:,hN8,;,h7,:,Array,[,Float,,,0b1,],;,P,,,_,:,Array,[,String,,,0b1,],;,_,,,cb,,,___B_,,,x4,,,_,,,___f__T,,,b9,,,__,,,sN,:,Float,),{,},Var,$0,:,E,=,-,-,B,::,$4,.,n6,(,),;,},Class,nG9,{,},<EOF>''',
                101
            )
        )

    def test_2626(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $m,$_:Array [Array [Array [Array [Float ,0b1],015_7],03],0b1_0_11];Destructor (){ {} }Var _252:Array [Float ,0X47];}''',
                '''Class,_,:,_,{,Var,$m,,,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0157,],,,03,],,,0b1011,],;,Destructor,(,),{,{,},},Var,_252,:,Array,[,Float,,,0X47,],;,},<EOF>''',
                101
            )
        )

    def test_2627(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:O_{Var _qY1U,D1_67,_:Float ;}Class M6{Constructor (_,_i,x,G6u_,vs:Array [Array [Array [Int ,0xD_2],046],0B11111];_5qh:Boolean ;c29,U:Int ){}Constructor (Q,_:Int ){} }''',
                '''Class,_,:,O_,{,Var,_qY1U,,,D1_67,,,_,:,Float,;,},Class,M6,{,Constructor,(,_,,,_i,,,x,,,G6u_,,,vs,:,Array,[,Array,[,Array,[,Int,,,0xD2,],,,046,],,,0B11111,],;,_5qh,:,Boolean,;,c29,,,U,:,Int,),{,},Constructor,(,Q,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2628(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{Constructor (o,_4_1X:Array [Array [Array [Array [Array [Array [Boolean ,0B11100],0B11100],0B11111],0x1],0B1_11],7_8]){} }Class B_:H4_K8_{}''',
                '''Class,K,{,Constructor,(,o,,,_4_1X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11100,],,,0B11100,],,,0B11111,],,,0x1,],,,0B111,],,,78,],),{,},},Class,B_,:,H4_K8_,{,},<EOF>''',
                101
            )
        )

    def test_2629(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:lO_5{Var $2:Array [Array [Boolean ,626],92]=---New _4A8().a_.z0_8r()/k__::$0._r();}Class Ja4l{}Class _{Val $00_,_Z_,a,$5__2,$oW2_:Array [Boolean ,024];}''',
                '''Class,_,:,lO_5,{,Var,$2,:,Array,[,Array,[,Boolean,,,626,],,,92,],=,-,-,-,New,_4A8,(,),.,a_,.,z0_8r,(,),/,k__,::,$0,.,_r,(,),;,},Class,Ja4l,{,},Class,_,{,Val,$00_,,,_Z_,,,a,,,$5__2,,,$oW2_,:,Array,[,Boolean,,,024,],;,},<EOF>''',
                101
            )
        )

    def test_2630(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7:___Gc{}Class _N:_{Val $z:Float ;Val g_50,J_:Array [Float ,72];Constructor (_,_,_,Q:Array [String ,72]){Break ;}Val I:Array [Float ,0b111011];}''',
                '''Class,_7,:,___Gc,{,},Class,_N,:,_,{,Val,$z,:,Float,;,Val,g_50,,,J_,:,Array,[,Float,,,72,],;,Constructor,(,_,,,_,,,_,,,Q,:,Array,[,String,,,72,],),{,Break,;,},Val,I,:,Array,[,Float,,,0b111011,],;,},<EOF>''',
                101
            )
        )

    def test_2631(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:uW_1{Constructor (g:_11;__W__n,v6,A,_,__,_,E,_:Array [Float ,061]){}Constructor (_6a,f,z98:Int ;j:Int ;_7:W){} }''',
                '''Class,S,:,uW_1,{,Constructor,(,g,:,_11,;,__W__n,,,v6,,,A,,,_,,,__,,,_,,,E,,,_,:,Array,[,Float,,,061,],),{,},Constructor,(,_6a,,,f,,,z98,:,Int,;,j,:,Int,;,_7,:,W,),{,},},<EOF>''',
                101
            )
        )

    def test_2632(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h__:mfX2__o2{}Class G{J(_C:Float ;z9:G;b,_:Array [Boolean ,0b1];RD_,_:_;_:Array [Array [Array [Array [String ,0B1],0XF_C],0x5_1],0B110100]){Break ;} }''',
                '''Class,h__,:,mfX2__o2,{,},Class,G,{,J,(,_C,:,Float,;,z9,:,G,;,b,,,_,:,Array,[,Boolean,,,0b1,],;,RD_,,,_,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0XFC,],,,0x51,],,,0B110100,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2633(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z:_{Val U5,_s,$S0,_4:f;Constructor (){} }Class qU{Val $9,__5:Array [Array [Boolean ,0X2],0b11101];Destructor (){}$W(_7,G,_6,K_,EI,ce4:Array [Array [Array [Int ,0137],7_214],0x56_4_3];x:Array [Array [Boolean ,02],1_7]){} }''',
                '''Class,Z,:,_,{,Val,U5,,,_s,,,$S0,,,_4,:,f,;,Constructor,(,),{,},},Class,qU,{,Val,$9,,,__5,:,Array,[,Array,[,Boolean,,,0X2,],,,0b11101,],;,Destructor,(,),{,},$W,(,_7,,,G,,,_6,,,K_,,,EI,,,ce4,:,Array,[,Array,[,Array,[,Int,,,0137,],,,7214,],,,0x5643,],;,x,:,Array,[,Array,[,Boolean,,,02,],,,17,],),{,},},<EOF>''',
                101
            )
        )

    def test_2634(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Ay9{}Class _O2:S{Var $mW:Boolean ;}Class I5D:T_{Var G,$U1_7R_8o,$X86,$B_44:Boolean ;Destructor (){ {} }}''',
                '''Class,_,:,Ay9,{,},Class,_O2,:,S,{,Var,$mW,:,Boolean,;,},Class,I5D,:,T_,{,Var,G,,,$U1_7R_8o,,,$X86,,,$B_44,:,Boolean,;,Destructor,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2635(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h{}Class N{}Class W{Val $_549,$8:G_;}Class _{Var $_:String ;Var $_,$7,$_,$3:Array [Array [Boolean ,023],0b1_1];}Class _{}''',
                '''Class,h,{,},Class,N,{,},Class,W,{,Val,$_549,,,$8,:,G_,;,},Class,_,{,Var,$_,:,String,;,Var,$_,,,$7,,,$_,,,$3,:,Array,[,Array,[,Boolean,,,023,],,,0b11,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2636(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:_i{Val $o,$_:Int ;$_(j,_50,_R:_;D:_UDr;Kq9_03,B:Array [Int ,48];_4:Float ;u0,_:Array [Array [Int ,046],0x1];M__:Boolean ;n:Array [Float ,0b11_1];AE:___1qM){} }''',
                '''Class,A,:,_i,{,Val,$o,,,$_,:,Int,;,$_,(,j,,,_50,,,_R,:,_,;,D,:,_UDr,;,Kq9_03,,,B,:,Array,[,Int,,,48,],;,_4,:,Float,;,u0,,,_,:,Array,[,Array,[,Int,,,046,],,,0x1,],;,M__,:,Boolean,;,n,:,Array,[,Float,,,0b111,],;,AE,:,___1qM,),{,},},<EOF>''',
                101
            )
        )

    def test_2637(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class r4:_5{Var _2:Array [Array [Array [Int ,0X5F],0B1100],66];$_(){} }Class B8{}Class _:VF{$11_(){}D(K:Array [String ,0X5F]){}Val _,$_:Int ;Var $t_w,$F6m_,$_:Float ;}''',
                '''Class,_,:,_,{,},Class,r4,:,_5,{,Var,_2,:,Array,[,Array,[,Array,[,Int,,,0X5F,],,,0B1100,],,,66,],;,$_,(,),{,},},Class,B8,{,},Class,_,:,VF,{,$11_,(,),{,},D,(,K,:,Array,[,String,,,0X5F,],),{,},Val,_,,,$_,:,Int,;,Var,$t_w,,,$F6m_,,,$_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2638(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $Q:Array [Array [Array [Boolean ,0x1],0X5E],57];}Class _6_4_{Val $_:Array [Array [String ,0B1_1],047];}Class _:xGt{}''',
                '''Class,_,{,Val,$Q,:,Array,[,Array,[,Array,[,Boolean,,,0x1,],,,0X5E,],,,57,],;,},Class,_6_4_,{,Val,$_,:,Array,[,Array,[,String,,,0B11,],,,047,],;,},Class,_,:,xGt,{,},<EOF>''',
                101
            )
        )

    def test_2639(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:U{}Class E{Constructor (_,_3:c;__,_h28_:Array [Array [Boolean ,0B110001],0b101101];F104:_;gA:DxJ_e){} }Class C:_{}''',
                '''Class,__,:,U,{,},Class,E,{,Constructor,(,_,,,_3,:,c,;,__,,,_h28_,:,Array,[,Array,[,Boolean,,,0B110001,],,,0b101101,],;,F104,:,_,;,gA,:,DxJ_e,),{,},},Class,C,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2640(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _vp{Val $Ht,$_:Array [Boolean ,7416_792];Val $_:d13;Var M:J;Constructor (_1,_8:Array [Boolean ,0B1];_8:Array [Int ,0b11_000]){Return ;} }''',
                '''Class,_vp,{,Val,$Ht,,,$_,:,Array,[,Boolean,,,7416792,],;,Val,$_,:,d13,;,Var,M,:,J,;,Constructor,(,_1,,,_8,:,Array,[,Boolean,,,0B1,],;,_8,:,Array,[,Int,,,0b11000,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2641(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0{$6p3(_:Float ;_:_66;c__X,_N:Array [Boolean ,01];Uv,_:Array [String ,0B1];_,P,v:__740x;K,_,_:Array [Int ,99];mPf_,e_,v81_5,____:v){} }Class D:_2{}''',
                '''Class,_0,{,$6p3,(,_,:,Float,;,_,:,_66,;,c__X,,,_N,:,Array,[,Boolean,,,01,],;,Uv,,,_,:,Array,[,String,,,0B1,],;,_,,,P,,,v,:,__740x,;,K,,,_,,,_,:,Array,[,Int,,,99,],;,mPf_,,,e_,,,v81_5,,,____,:,v,),{,},},Class,D,:,_2,{,},<EOF>''',
                101
            )
        )

    def test_2642(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cN9X{K(hL,_Bh67ZJ,__t_Z_,U,_0_:Array [String ,52];_wL_,x_,_9,_,_,k,Q,_,i:_K;_8e86:M_){} }Class Y0:_37{Val v:Array [Array [Float ,0b1_01],0xF8_3];}''',
                '''Class,cN9X,{,K,(,hL,,,_Bh67ZJ,,,__t_Z_,,,U,,,_0_,:,Array,[,String,,,52,],;,_wL_,,,x_,,,_9,,,_,,,_,,,k,,,Q,,,_,,,i,:,_K,;,_8e86,:,M_,),{,},},Class,Y0,:,_37,{,Val,v,:,Array,[,Array,[,Float,,,0b101,],,,0xF83,],;,},<EOF>''',
                101
            )
        )

    def test_2643(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:m_{Constructor (){} }Class t_{Var $_,mfs,_4_k:Array [Array [Array [Array [Boolean ,04_7_2],5],9_3],0x17];}''',
                '''Class,__,:,m_,{,Constructor,(,),{,},},Class,t_,{,Var,$_,,,mfs,,,_4_k,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0472,],,,5,],,,93,],,,0x17,],;,},<EOF>''',
                101
            )
        )

    def test_2644(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,P,Ne,YY___6:String ;_:Array [Array [Array [Boolean ,0B110],0X57],0123];P_:Float ;_:_6){Break ;Return ;} }''',
                '''Class,_,{,Constructor,(,_,,,P,,,Ne,,,YY___6,:,String,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0B110,],,,0X57,],,,0123,],;,P_,:,Float,;,_,:,_6,),{,Break,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2645(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{Destructor (){} }Class _:qU{}Class _{Val T5:Int ;Constructor (){Continue ;O2::$_._();}Constructor (_I,_3:AJ_f){} }''',
                '''Class,r,{,Destructor,(,),{,},},Class,_,:,qU,{,},Class,_,{,Val,T5,:,Int,;,Constructor,(,),{,Continue,;,O2,::,$_,.,_,(,),;,},Constructor,(,_I,,,_3,:,AJ_f,),{,},},<EOF>''',
                101
            )
        )

    def test_2646(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $_,_2F,$1,O,$_5,A:Q;Var s,$L:Float ;}Class _:_{Constructor (){}Var $z,$K_,$X:Array [Boolean ,04];Constructor (Kr8__6,r:f;n8,_3:Float ;J_:Array [Array [Int ,0X35_C_8],0X16];_,_4:Boolean ;___,_1,t,_F:String ;_0_:Boolean ){} }Class c{}Class c{}''',
                '''Class,_,{,Val,$_,,,_2F,,,$1,,,O,,,$_5,,,A,:,Q,;,Var,s,,,$L,:,Float,;,},Class,_,:,_,{,Constructor,(,),{,},Var,$z,,,$K_,,,$X,:,Array,[,Boolean,,,04,],;,Constructor,(,Kr8__6,,,r,:,f,;,n8,,,_3,:,Float,;,J_,:,Array,[,Array,[,Int,,,0X35C8,],,,0X16,],;,_,,,_4,:,Boolean,;,___,,,_1,,,t,,,_F,:,String,;,_0_,:,Boolean,),{,},},Class,c,{,},Class,c,{,},<EOF>''',
                101
            )
        )

    def test_2647(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7E_c:U7_{Var $m__O_,$Y9:Boolean ;Constructor (){Return ;}Destructor (){}Constructor (PG_PE,__N,L:Array [Boolean ,8]){}Constructor (U:Array [Array [Array [Int ,06],0b110100],1720];Y:_5){} }Class A:f{Var bp7d_:t5;}Class i0C:_u{}''',
                '''Class,_7E_c,:,U7_,{,Var,$m__O_,,,$Y9,:,Boolean,;,Constructor,(,),{,Return,;,},Destructor,(,),{,},Constructor,(,PG_PE,,,__N,,,L,:,Array,[,Boolean,,,8,],),{,},Constructor,(,U,:,Array,[,Array,[,Array,[,Int,,,06,],,,0b110100,],,,1720,],;,Y,:,_5,),{,},},Class,A,:,f,{,Var,bp7d_,:,t5,;,},Class,i0C,:,_u,{,},<EOF>''',
                101
            )
        )

    def test_2648(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _3{}Class __{_(J:String ){Break ;Continue ;Break ;} }Class U{}Class D{}Class l{}Class j_6:_z{Destructor (){} }''',
                '''Class,_,:,_,{,},Class,_3,{,},Class,__,{,_,(,J,:,String,),{,Break,;,Continue,;,Break,;,},},Class,U,{,},Class,D,{,},Class,l,{,},Class,j_6,:,_z,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2649(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F_:y02_{}Class i_5_:D{}Class E5{$_(Tw,_J:Array [Array [Int ,0X3A],0B1]){} }Class y_:_{Var _0,_v_1Q:Boolean ;}Class _:_7{}''',
                '''Class,F_,:,y02_,{,},Class,i_5_,:,D,{,},Class,E5,{,$_,(,Tw,,,_J,:,Array,[,Array,[,Int,,,0X3A,],,,0B1,],),{,},},Class,y_,:,_,{,Var,_0,,,_v_1Q,:,Boolean,;,},Class,_,:,_7,{,},<EOF>''',
                101
            )
        )

    def test_2650(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:R{}Class C:_{$u_s(hi6B:Array [Array [Array [Int ,05],6_8],0b110111];_25:Float ;h9KS_A5:String ;N80e:Array [Array [Boolean ,4],05];N,G:Array [Array [Boolean ,0xCA],2_13]){} }Class _o:y_{}Class _C{}''',
                '''Class,_,{,},Class,_,:,R,{,},Class,C,:,_,{,$u_s,(,hi6B,:,Array,[,Array,[,Array,[,Int,,,05,],,,68,],,,0b110111,],;,_25,:,Float,;,h9KS_A5,:,String,;,N80e,:,Array,[,Array,[,Boolean,,,4,],,,05,],;,N,,,G,:,Array,[,Array,[,Boolean,,,0xCA,],,,213,],),{,},},Class,_o,:,y_,{,},Class,_C,{,},<EOF>''',
                101
            )
        )

    def test_2651(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class Mr7:__7__I{Var ari_:Float ;$_F_2_C3(){}Constructor (){} }Class _o_:o{Destructor (){} }Class A{}''',
                '''Class,_,:,_,{,},Class,Mr7,:,__7__I,{,Var,ari_,:,Float,;,$_F_2_C3,(,),{,},Constructor,(,),{,},},Class,_o_,:,o,{,Destructor,(,),{,},},Class,A,{,},<EOF>''',
                101
            )
        )

    def test_2652(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:ENw{Var _7:U;Constructor (_6:Float ){}Destructor (){}Val _,$8,$7:Array [Array [Array [Boolean ,0X1E],0X1E],0xB8_8_3_4];}''',
                '''Class,_,:,ENw,{,Var,_7,:,U,;,Constructor,(,_6,:,Float,),{,},Destructor,(,),{,},Val,_,,,$8,,,$7,:,Array,[,Array,[,Array,[,Boolean,,,0X1E,],,,0X1E,],,,0xB8834,],;,},<EOF>''',
                101
            )
        )

    def test_2653(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_,_,t:String ;__M0,ea_g6_,_q_,s,P:Int ;_,Y2__,I,T17l:P;_,_S6:Boolean ;r1_,A_4O:L){} }Class _:N{}''',
                '''Class,_,:,_,{,Constructor,(,_,,,_,,,t,:,String,;,__M0,,,ea_g6_,,,_q_,,,s,,,P,:,Int,;,_,,,Y2__,,,I,,,T17l,:,P,;,_,,,_S6,:,Boolean,;,r1_,,,A_4O,:,L,),{,},},Class,_,:,N,{,},<EOF>''',
                101
            )
        )

    def test_2654(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jy_Wxn{}Class s:m{Destructor (){} }Class __{}Class _0:k{}Class _:o{}Class __:a_{Var _:String ;Var $3z,$97:Array [Array [Array [Int ,0X33],0B1001010],025_3];}''',
                '''Class,jy_Wxn,{,},Class,s,:,m,{,Destructor,(,),{,},},Class,__,{,},Class,_0,:,k,{,},Class,_,:,o,{,},Class,__,:,a_,{,Var,_,:,String,;,Var,$3z,,,$97,:,Array,[,Array,[,Array,[,Int,,,0X33,],,,0B1001010,],,,0253,],;,},<EOF>''',
                101
            )
        )

    def test_2655(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _U9x2:__{}Class _0X{}Class _68:_{Var _:Boolean ;}Class x_U6:x__{Var _:H;Constructor (_,__,I:Array [String ,0b10];p,_:n){} }''',
                '''Class,_U9x2,:,__,{,},Class,_0X,{,},Class,_68,:,_,{,Var,_,:,Boolean,;,},Class,x_U6,:,x__,{,Var,_,:,H,;,Constructor,(,_,,,__,,,I,:,Array,[,String,,,0b10,],;,p,,,_,:,n,),{,},},<EOF>''',
                101
            )
        )

    def test_2656(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:i_{Constructor (){}Constructor (i:String ;_9:Int ;r1,_,m:Array [Array [Array [String ,0X33],0106],70];_3_5_:Array [Array [Array [Boolean ,0x44],0X33],0x44];_:__;_3__,wh6,X,_,_5:String ){Continue ;Continue ;} }''',
                '''Class,C,:,i_,{,Constructor,(,),{,},Constructor,(,i,:,String,;,_9,:,Int,;,r1,,,_,,,m,:,Array,[,Array,[,Array,[,String,,,0X33,],,,0106,],,,70,],;,_3_5_,:,Array,[,Array,[,Array,[,Boolean,,,0x44,],,,0X33,],,,0x44,],;,_,:,__,;,_3__,,,wh6,,,X,,,_,,,_5,:,String,),{,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2657(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U_:___{Constructor (){} }Class _:_{Constructor (_:Array [Array [Array [Boolean ,0XA],0x8_3],0X17];tK:Boolean ){} }''',
                '''Class,U_,:,___,{,Constructor,(,),{,},},Class,_,:,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Boolean,,,0XA,],,,0x83,],,,0X17,],;,tK,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2658(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var __:Array [Array [Array [String ,073],0B100101],0b10];Val $m:Boolean ;Constructor (V,X__q5:Int ){} }Class G{}''',
                '''Class,_,:,_,{,Var,__,:,Array,[,Array,[,Array,[,String,,,073,],,,0B100101,],,,0b10,],;,Val,$m,:,Boolean,;,Constructor,(,V,,,X__q5,:,Int,),{,},},Class,G,{,},<EOF>''',
                101
            )
        )

    def test_2659(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:_nq{Val $X,$912E65:Int ;Val $_,_,_,$__:Array [Array [Array [Array [Array [Array [Boolean ,57],04_4_4],0b1101],0x3A],0125],0B1011001];}''',
                '''Class,K,:,_nq,{,Val,$X,,,$912E65,:,Int,;,Val,$_,,,_,,,_,,,$__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,57,],,,0444,],,,0b1101,],,,0x3A,],,,0125,],,,0B1011001,],;,},<EOF>''',
                101
            )
        )

    def test_2660(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9:_U{Constructor (_:Array [Array [Array [String ,0b1],6_08],03];_b,h8C,G:Array [Int ,0x3];O:U2){} }Class _c:N3{}''',
                '''Class,_9,:,_U,{,Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0b1,],,,608,],,,03,],;,_b,,,h8C,,,G,:,Array,[,Int,,,0x3,],;,O,:,U2,),{,},},Class,_c,:,N3,{,},<EOF>''',
                101
            )
        )

    def test_2661(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z9:_0{Val $85,E:_;Destructor (){} }Class fe_SR:L{Constructor (M__R7_K:Array [Array [Float ,07_5],02410_3_57];F5_:__){} }Class r{Var ZYq,E_:Array [Array [String ,0122],0X2];}''',
                '''Class,z9,:,_0,{,Val,$85,,,E,:,_,;,Destructor,(,),{,},},Class,fe_SR,:,L,{,Constructor,(,M__R7_K,:,Array,[,Array,[,Float,,,075,],,,02410357,],;,F5_,:,__,),{,},},Class,r,{,Var,ZYq,,,E_,:,Array,[,Array,[,String,,,0122,],,,0X2,],;,},<EOF>''',
                101
            )
        )

    def test_2662(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7{Constructor (__X0,_:Float ){}Constructor (M5_:Array [Array [Boolean ,0B1_0],033];N,k,N:Array [Array [Array [Array [Int ,04],3],033],0B11001];M:eP2_;_6:W){} }Class ___{}''',
                '''Class,_7,{,Constructor,(,__X0,,,_,:,Float,),{,},Constructor,(,M5_,:,Array,[,Array,[,Boolean,,,0B10,],,,033,],;,N,,,k,,,N,:,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,3,],,,033,],,,0B11001,],;,M,:,eP2_,;,_6,:,W,),{,},},Class,___,{,},<EOF>''',
                101
            )
        )

    def test_2663(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:K{Constructor (WH,b:Float ){}Val s1_33_:Array [Int ,0B1100011];Constructor (){Break ;}Constructor (I,U_,__9:Boolean ){Continue ;} }''',
                '''Class,_,:,K,{,Constructor,(,WH,,,b,:,Float,),{,},Val,s1_33_,:,Array,[,Int,,,0B1100011,],;,Constructor,(,),{,Break,;,},Constructor,(,I,,,U_,,,__9,:,Boolean,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2664(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val Z_Q_:Float ;Qn(_,xcy:_2;O:Array [Int ,6];_,b,_,_:String ;_:p2dJ;t_,S,X,Qam:Float ){}Destructor (){Break ;} }''',
                '''Class,_,{,Val,Z_Q_,:,Float,;,Qn,(,_,,,xcy,:,_2,;,O,:,Array,[,Int,,,6,],;,_,,,b,,,_,,,_,:,String,;,_,:,p2dJ,;,t_,,,S,,,X,,,Qam,:,Float,),{,},Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2665(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8:v{}Class A{Val _:Array [Float ,10];$_(K,YC6_:X;E:Array [Array [Array [Array [Array [Boolean ,07],07_2],10],62],07]){Var __,x4_,S_,_:_G;} }''',
                '''Class,_8,:,v,{,},Class,A,{,Val,_,:,Array,[,Float,,,10,],;,$_,(,K,,,YC6_,:,X,;,E,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,07,],,,072,],,,10,],,,62,],,,07,],),{,Var,__,,,x4_,,,S_,,,_,:,_G,;,},},<EOF>''',
                101
            )
        )

    def test_2666(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P7U2M:_8A{}Class T{}Class i:y{u__(){Break ;}Constructor (){}OCHJ(_v,_k,_,_:H6;k:Array [Float ,057]){}Var s___s__k,M,$_8,_E,$z:_;}''',
                '''Class,P7U2M,:,_8A,{,},Class,T,{,},Class,i,:,y,{,u__,(,),{,Break,;,},Constructor,(,),{,},OCHJ,(,_v,,,_k,,,_,,,_,:,H6,;,k,:,Array,[,Float,,,057,],),{,},Var,s___s__k,,,M,,,$_8,,,_E,,,$z,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2667(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:_jn0__{Val _,$_:Array [Array [Array [Array [String ,0b10111],0XB],40],40];}Class n:_{Val $6_:Z;}Class _8{}Class M{}''',
                '''Class,e,:,_jn0__,{,Val,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b10111,],,,0XB,],,,40,],,,40,],;,},Class,n,:,_,{,Val,$6_,:,Z,;,},Class,_8,{,},Class,M,{,},<EOF>''',
                101
            )
        )

    def test_2668(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3:A{$L4_5(S:_){Break ;Continue ;}$4__(_,r,_,P:E_1_sa;_:Array [Array [Int ,0XB],04_7]){}s(){} }Class E9{}Class p1Z_Z_:F_53{$841(){} }''',
                '''Class,_3,:,A,{,$L4_5,(,S,:,_,),{,Break,;,Continue,;,},$4__,(,_,,,r,,,_,,,P,:,E_1_sa,;,_,:,Array,[,Array,[,Int,,,0XB,],,,047,],),{,},s,(,),{,},},Class,E9,{,},Class,p1Z_Z_,:,F_53,{,$841,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2669(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _W:G{_J(r4,g:String ;j:Array [Array [Array [Boolean ,0b100000],0x29],014]){} }Class GD_{Var W__:Array [Int ,51_2_9_4];}''',
                '''Class,_,{,},Class,_W,:,G,{,_J,(,r4,,,g,:,String,;,j,:,Array,[,Array,[,Array,[,Boolean,,,0b100000,],,,0x29,],,,014,],),{,},},Class,GD_,{,Var,W__,:,Array,[,Int,,,51294,],;,},<EOF>''',
                101
            )
        )

    def test_2670(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:_c{Val $Vy__,$_D,_:Boolean ;Constructor (d___:_;__o1__,_,__:Boolean ;__,_Kp,k:_7;H9:_sP){}Val _,$_FX_8,$_,A0:Int ;}''',
                '''Class,g,:,_c,{,Val,$Vy__,,,$_D,,,_,:,Boolean,;,Constructor,(,d___,:,_,;,__o1__,,,_,,,__,:,Boolean,;,__,,,_Kp,,,k,:,_7,;,H9,:,_sP,),{,},Val,_,,,$_FX_8,,,$_,,,A0,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2671(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:F{s(){Continue ;}Val $A7:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0b111001],0105],0B1],0B1],2],29],0105],0XA],0XA],29];}''',
                '''Class,n,:,F,{,s,(,),{,Continue,;,},Val,$A7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b111001,],,,0105,],,,0B1,],,,0B1,],,,2,],,,29,],,,0105,],,,0XA,],,,0XA,],,,29,],;,},<EOF>''',
                101
            )
        )

    def test_2672(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:C{Val $97_:Array [Array [Array [Array [Array [Array [Array [Int ,07],63],07_77],0x3F],0B110110],0B10],046];Destructor (){}Constructor (){} }''',
                '''Class,e,:,C,{,Val,$97_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,07,],,,63,],,,0777,],,,0x3F,],,,0B110110,],,,0B10,],,,046,],;,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2673(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __p4:_x{Var _:_;Constructor (_33_:Array [Array [Boolean ,0b1],70]){Continue ;Continue ;} }Class _u{}Class E4E:____7V7B{}Class XJ:UJ{Val __4,$JLz:z2__S;}''',
                '''Class,__p4,:,_x,{,Var,_,:,_,;,Constructor,(,_33_,:,Array,[,Array,[,Boolean,,,0b1,],,,70,],),{,Continue,;,Continue,;,},},Class,_u,{,},Class,E4E,:,____7V7B,{,},Class,XJ,:,UJ,{,Val,__4,,,$JLz,:,z2__S,;,},<EOF>''',
                101
            )
        )

    def test_2674(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c6_:rP__s_X{__58(_,_,_,p,_:Float ;_,_9r,_Bv:Array [Boolean ,05_3]){} }Class __{}Class _{Destructor (){}Destructor (){}Val $Y:G5;Var _33:Int ;}Class ctm{_T8O(F,y98,__,C,b:Int ){Continue ;H::$4();Break ;} }''',
                '''Class,c6_,:,rP__s_X,{,__58,(,_,,,_,,,_,,,p,,,_,:,Float,;,_,,,_9r,,,_Bv,:,Array,[,Boolean,,,053,],),{,},},Class,__,{,},Class,_,{,Destructor,(,),{,},Destructor,(,),{,},Val,$Y,:,G5,;,Var,_33,:,Int,;,},Class,ctm,{,_T8O,(,F,,,y98,,,__,,,C,,,b,:,Int,),{,Continue,;,H,::,$4,(,),;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2675(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:W__{}Class M5{_(){Break ;}$_v(_Z:Array [Array [Array [String ,0B10],93],04];___:String ){Return ;}Var $M,_P6_:_U_;Val __n_031,$2_:Array [Int ,93];}''',
                '''Class,_,:,W__,{,},Class,M5,{,_,(,),{,Break,;,},$_v,(,_Z,:,Array,[,Array,[,Array,[,String,,,0B10,],,,93,],,,04,],;,___,:,String,),{,Return,;,},Var,$M,,,_P6_,:,_U_,;,Val,__n_031,,,$2_,:,Array,[,Int,,,93,],;,},<EOF>''',
                101
            )
        )

    def test_2676(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w{Destructor (){}Var $JG,$9,$4_:_7;Val $_:Array [Array [Array [Array [Int ,07],0X3D],0B11101],027];Destructor (){}Val $5:Array [Boolean ,0x4_4_A];$9(_49_:Array [String ,0b1]){}_(Tl4_8_,_t,D1_7:H_B){Break ;} }''',
                '''Class,w,{,Destructor,(,),{,},Var,$JG,,,$9,,,$4_,:,_7,;,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Int,,,07,],,,0X3D,],,,0B11101,],,,027,],;,Destructor,(,),{,},Val,$5,:,Array,[,Boolean,,,0x44A,],;,$9,(,_49_,:,Array,[,String,,,0b1,],),{,},_,(,Tl4_8_,,,_t,,,D1_7,:,H_B,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2677(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __i8:B{}Class F{}Class _{Var $v,_,_,$8_,_:Boolean ;}Class kh{$_2D3(X_B5__,_,Nw:String ;U_:Float ){} }Class w:s{}''',
                '''Class,__i8,:,B,{,},Class,F,{,},Class,_,{,Var,$v,,,_,,,_,,,$8_,,,_,:,Boolean,;,},Class,kh,{,$_2D3,(,X_B5__,,,_,,,Nw,:,String,;,U_,:,Float,),{,},},Class,w,:,s,{,},<EOF>''',
                101
            )
        )

    def test_2678(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _b__8oW{$0_(_1:ojx_;s:String ){} }Class v{}Class __{}Class _YIhGa7{Destructor (){_8_::$_();Var f:Int ;}Destructor (){} }''',
                '''Class,_b__8oW,{,$0_,(,_1,:,ojx_,;,s,:,String,),{,},},Class,v,{,},Class,__,{,},Class,_YIhGa7,{,Destructor,(,),{,_8_,::,$_,(,),;,Var,f,:,Int,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2679(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4j{$Hn(_,A:Array [Boolean ,043];W:___){Continue ;} }Class _:r{}Class P{Constructor (){} }Class _:q{}Class _e:RQB{}''',
                '''Class,_4j,{,$Hn,(,_,,,A,:,Array,[,Boolean,,,043,],;,W,:,___,),{,Continue,;,},},Class,_,:,r,{,},Class,P,{,Constructor,(,),{,},},Class,_,:,q,{,},Class,_e,:,RQB,{,},<EOF>''',
                101
            )
        )

    def test_2680(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Val $a87sU_5:_;$_(__2D,_3:Array [String ,0B1]){}Val r8DC0I___,G:_i_;}Class _{}Class Mr:_53{Val $l,$66_:Int ;}Class _0_:_{}''',
                '''Class,Q,{,Val,$a87sU_5,:,_,;,$_,(,__2D,,,_3,:,Array,[,String,,,0B1,],),{,},Val,r8DC0I___,,,G,:,_i_,;,},Class,_,{,},Class,Mr,:,_53,{,Val,$l,,,$66_,:,Int,;,},Class,_0_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2681(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g_:x__{_0(_,OT_:S_;__,c1:x;w:Array [Array [Array [Array [Array [Array [Float ,9],6_9],50],0XB_7],02],0B100110];e:Int ;__:Array [Array [Float ,50],0XE0]){} }''',
                '''Class,g_,:,x__,{,_0,(,_,,,OT_,:,S_,;,__,,,c1,:,x,;,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,69,],,,50,],,,0XB7,],,,02,],,,0B100110,],;,e,:,Int,;,__,:,Array,[,Array,[,Float,,,50,],,,0XE0,],),{,},},<EOF>''',
                101
            )
        )

    def test_2682(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:_c0{}Class __9:a2__t_rF{$0s_(x8_E9:String ;_k,_:String ){} }Class _3:_{Constructor (_,v:_g;_:h;_2,_:Array [Array [Array [Array [Boolean ,0B10011],057_6_2_02],3],0b1100000]){} }Class _{}''',
                '''Class,I,:,_c0,{,},Class,__9,:,a2__t_rF,{,$0s_,(,x8_E9,:,String,;,_k,,,_,:,String,),{,},},Class,_3,:,_,{,Constructor,(,_,,,v,:,_g,;,_,:,h,;,_2,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10011,],,,0576202,],,,3,],,,0b1100000,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2683(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{p_(q:Array [Array [Array [String ,81_6_9_2],0B1010100],05];n:Array [Array [Array [Array [Boolean ,0b11101],07],0x4B],89]){}Constructor (){Continue ;Val z78:_;} }Class _{}''',
                '''Class,_,{,p_,(,q,:,Array,[,Array,[,Array,[,String,,,81692,],,,0B1010100,],,,05,],;,n,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11101,],,,07,],,,0x4B,],,,89,],),{,},Constructor,(,),{,Continue,;,Val,z78,:,_,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2684(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _,$_:Array [Float ,0b1];Val $H_,e,_:Boolean ;Destructor (){}Var _,$_T,$4Q,_H,$t0_,c14z_,_,$L_q:Float ;}''',
                '''Class,_,{,Val,_,,,$_,:,Array,[,Float,,,0b1,],;,Val,$H_,,,e,,,_,:,Boolean,;,Destructor,(,),{,},Var,_,,,$_T,,,$4Q,,,_H,,,$t0_,,,c14z_,,,_,,,$L_q,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2685(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _45_2{_(B_i:Array [Array [Array [Array [Array [Array [Int ,4_6_4],052],0X2],0b1_0_1],0x38],052];f:Boolean ;GxE:V_6){} }''',
                '''Class,_45_2,{,_,(,B_i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,464,],,,052,],,,0X2,],,,0b101,],,,0x38,],,,052,],;,f,:,Boolean,;,GxE,:,V_6,),{,},},<EOF>''',
                101
            )
        )

    def test_2686(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:_{Val $__,$6,_:Array [Array [Array [Array [Array [Array [Boolean ,01_2],0xE],0B1_0_0100],0x8],0x6],0b1011101];}Class _:_6{}Class _:_L6{}''',
                '''Class,W,:,_,{,Val,$__,,,$6,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,012,],,,0xE,],,,0B100100,],,,0x8,],,,0x6,],,,0b1011101,],;,},Class,_,:,_6,{,},Class,_,:,_L6,{,},<EOF>''',
                101
            )
        )

    def test_2687(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:__27k{f(B6,__9,i:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,5],021],11],11],11],07],0x54],02_3],01]){} }Class __3_ak:__{}Class _{Val f:Array [Array [Array [Array [Array [Array [Int ,0B1101],071],8],0B1101],0b1011001],0B1101];}''',
                '''Class,h,:,__27k,{,f,(,B6,,,__9,,,i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,5,],,,021,],,,11,],,,11,],,,11,],,,07,],,,0x54,],,,023,],,,01,],),{,},},Class,__3_ak,:,__,{,},Class,_,{,Val,f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1101,],,,071,],,,8,],,,0B1101,],,,0b1011001,],,,0B1101,],;,},<EOF>''',
                101
            )
        )

    def test_2688(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f_{}Class b7:_6__N_{Constructor (Q4,__3:Float ;sC_:Array [Array [Array [Array [Array [Array [Array [String ,2],0X4B],5],053],0b1],053],0XDD_6_E];K__Ex:Array [Boolean ,0X4B]){} }''',
                '''Class,f_,{,},Class,b7,:,_6__N_,{,Constructor,(,Q4,,,__3,:,Float,;,sC_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,2,],,,0X4B,],,,5,],,,053,],,,0b1,],,,053,],,,0XDD6E,],;,K__Ex,:,Array,[,Boolean,,,0X4B,],),{,},},<EOF>''',
                101
            )
        )

    def test_2689(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M:_S78_{Var _5:Array [Array [String ,0X48],05];}Class _:_{Constructor (_t,ix,_2G:_;_6,S4,K,g:Array [Float ,0xA];_i,C,A,_,_C:Array [Boolean ,046_05];w8:_;_:Array [Array [Float ,0B101101],81];_,S_,_:Array [Array [Array [Boolean ,81],81],0B111]){ {} }}Class zMB:__077P{}''',
                '''Class,_M,:,_S78_,{,Var,_5,:,Array,[,Array,[,String,,,0X48,],,,05,],;,},Class,_,:,_,{,Constructor,(,_t,,,ix,,,_2G,:,_,;,_6,,,S4,,,K,,,g,:,Array,[,Float,,,0xA,],;,_i,,,C,,,A,,,_,,,_C,:,Array,[,Boolean,,,04605,],;,w8,:,_,;,_,:,Array,[,Array,[,Float,,,0B101101,],,,81,],;,_,,,S_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,81,],,,81,],,,0B111,],),{,{,},},},Class,zMB,:,__077P,{,},<EOF>''',
                101
            )
        )

    def test_2690(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o98:h{}Class P:H{}Class _{Constructor (_:Array [Array [Array [Array [String ,07_0_7],8],03_3_30],05]){} }''',
                '''Class,o98,:,h,{,},Class,P,:,H,{,},Class,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0707,],,,8,],,,03330,],,,05,],),{,},},<EOF>''',
                101
            )
        )

    def test_2691(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Qo{}Class _:_4{$____(){Continue ;}Var ha,Z8Q_x3O,Ul:u1;Var $4:Array [Array [Array [Float ,0B1],0X55],072];}''',
                '''Class,Qo,{,},Class,_,:,_4,{,$____,(,),{,Continue,;,},Var,ha,,,Z8Q_x3O,,,Ul,:,u1,;,Var,$4,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0X55,],,,072,],;,},<EOF>''',
                101
            )
        )

    def test_2692(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i_2{Val t_G,$3,$4:Array [Array [Array [Array [Array [Array [Array [Array [Float ,065],71_8],0X29],036],0b1_1],036],0X29],0B10];Val $_:Float ;}Class _{Var $_,$6,$1g_,U:WA;Constructor (){} }''',
                '''Class,i_2,{,Val,t_G,,,$3,,,$4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,065,],,,718,],,,0X29,],,,036,],,,0b11,],,,036,],,,0X29,],,,0B10,],;,Val,$_,:,Float,;,},Class,_,{,Var,$_,,,$6,,,$1g_,,,U,:,WA,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2693(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{J4__l6T(_:f){} }Class q:_P1{Destructor (){}Var _,_,w_64,$k:_;$E__(P:Array [Array [Array [Array [Array [Array [Array [Int ,91],91],05],031],91],0x2_4],91];_:String ;Z,h:VH6;_8_77,_H:Array [Float ,0B1];a,s6:Boolean ;R,u:Boolean ){} }Class B23L{}''',
                '''Class,i,{,J4__l6T,(,_,:,f,),{,},},Class,q,:,_P1,{,Destructor,(,),{,},Var,_,,,_,,,w_64,,,$k,:,_,;,$E__,(,P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,91,],,,91,],,,05,],,,031,],,,91,],,,0x24,],,,91,],;,_,:,String,;,Z,,,h,:,VH6,;,_8_77,,,_H,:,Array,[,Float,,,0B1,],;,a,,,s6,:,Boolean,;,R,,,u,:,Boolean,),{,},},Class,B23L,{,},<EOF>''',
                101
            )
        )

    def test_2694(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _68_:G{Val k,$5_:Array [Array [Array [Float ,0b1_0],052],0x62];Var B3d5:Boolean =-_5__::$_4.u().mQ().m().Hq_wIv_8__();}''',
                '''Class,_68_,:,G,{,Val,k,,,$5_,:,Array,[,Array,[,Array,[,Float,,,0b10,],,,052,],,,0x62,],;,Var,B3d5,:,Boolean,=,-,_5__,::,$_4,.,u,(,),.,mQ,(,),.,m,(,),.,Hq_wIv_8__,(,),;,},<EOF>''',
                101
            )
        )

    def test_2695(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{U_(_,_K,_5j:Array [Array [String ,0b1001001],0B1];__:Array [Array [Float ,0104],0B1_1]){} }Class _a12{Constructor (_t,__s,_94,__f,T_D8:Array [Array [Array [Array [String ,0B111],01_1],3],93];A:_s;y_lTcsO:Int ;_:G){} }''',
                '''Class,l,{,U_,(,_,,,_K,,,_5j,:,Array,[,Array,[,String,,,0b1001001,],,,0B1,],;,__,:,Array,[,Array,[,Float,,,0104,],,,0B11,],),{,},},Class,_a12,{,Constructor,(,_t,,,__s,,,_94,,,__f,,,T_D8,:,Array,[,Array,[,Array,[,Array,[,String,,,0B111,],,,011,],,,3,],,,93,],;,A,:,_s,;,y_lTcsO,:,Int,;,_,:,G,),{,},},<EOF>''',
                101
            )
        )

    def test_2696(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A{}Class _7:P{Val _:Array [Array [Array [Array [Array [Boolean ,92_9_19],0x2B],0x2B],80],0x9];}Class _H1_{}Class _{Destructor (){Continue ;}Destructor (){} }Class v{}''',
                '''Class,A,{,},Class,_7,:,P,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,92919,],,,0x2B,],,,0x2B,],,,80,],,,0x9,],;,},Class,_H1_,{,},Class,_,{,Destructor,(,),{,Continue,;,},Destructor,(,),{,},},Class,v,{,},<EOF>''',
                101
            )
        )

    def test_2697(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_A:Array [String ,02];l,_,_0_R,X_6m:Array [Array [Array [Int ,0xF],0X1F],044];_6_,W,x__:Int ;J71:Int ){Break ;}Constructor (){} }''',
                '''Class,_,{,Constructor,(,_A,:,Array,[,String,,,02,],;,l,,,_,,,_0_R,,,X_6m,:,Array,[,Array,[,Array,[,Int,,,0xF,],,,0X1F,],,,044,],;,_6_,,,W,,,x__,:,Int,;,J71,:,Int,),{,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2698(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f_7{Var _F943z_67__,$j:Array [Int ,0x7];Constructor (d:Int ){}Constructor (_M:_;_N:Array [Array [Float ,95],07];_:Int ;SF_:Float ){J::$_6();} }''',
                '''Class,f_7,{,Var,_F943z_67__,,,$j,:,Array,[,Int,,,0x7,],;,Constructor,(,d,:,Int,),{,},Constructor,(,_M,:,_,;,_N,:,Array,[,Array,[,Float,,,95,],,,07,],;,_,:,Int,;,SF_,:,Float,),{,J,::,$_6,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2699(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{$y(V,p:Array [Array [Array [Boolean ,0X5A],0XDC_1],0b1_1_0];_,V,fK8,ro,Z_,_f__,O_9:K4;M:b5;LR:Array [Array [Float ,0b1001100],02]){} }''',
                '''Class,__,{,$y,(,V,,,p,:,Array,[,Array,[,Array,[,Boolean,,,0X5A,],,,0XDC1,],,,0b110,],;,_,,,V,,,fK8,,,ro,,,Z_,,,_f__,,,O_9,:,K4,;,M,:,b5,;,LR,:,Array,[,Array,[,Float,,,0b1001100,],,,02,],),{,},},<EOF>''',
                101
            )
        )

    def test_2700(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class j:_A_4A{Val x,$8i0,D,_L:Z8vN90;}Class A:z_{}Class _{}Class _{}Class _{}Class d_{}Class _{}Class n1:_{}''',
                '''Class,__,{,},Class,j,:,_A_4A,{,Val,x,,,$8i0,,,D,,,_L,:,Z8vN90,;,},Class,A,:,z_,{,},Class,_,{,},Class,_,{,},Class,_,{,},Class,d_,{,},Class,_,{,},Class,n1,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2701(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $5U_rJ:Array [String ,0132];Constructor (__,_:Boolean ;_:Boolean ;hI,___:Array [String ,3_05];g:Array [Array [String ,4_50],0XB]){} }''',
                '''Class,_,{,Val,$5U_rJ,:,Array,[,String,,,0132,],;,Constructor,(,__,,,_,:,Boolean,;,_,:,Boolean,;,hI,,,___,:,Array,[,String,,,305,],;,g,:,Array,[,Array,[,String,,,450,],,,0XB,],),{,},},<EOF>''',
                101
            )
        )

    def test_2702(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Q4{Constructor (_,A8_X,p:Array [Array [Array [String ,0X60],19],5]){} }Class z:__{Constructor (){Break ;Break ;} }''',
                '''Class,_,:,Q4,{,Constructor,(,_,,,A8_X,,,p,:,Array,[,Array,[,Array,[,String,,,0X60,],,,19,],,,5,],),{,},},Class,z,:,__,{,Constructor,(,),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2703(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V:_u2{Constructor (P,_,h:Array [Array [Array [Array [String ,0x3],062],0x3],0B1];j,N_,_,_7,r,_t,__,_e:Float ;_:Float ){} }Class _8k:_p{}''',
                '''Class,V,:,_u2,{,Constructor,(,P,,,_,,,h,:,Array,[,Array,[,Array,[,Array,[,String,,,0x3,],,,062,],,,0x3,],,,0B1,],;,j,,,N_,,,_,,,_7,,,r,,,_t,,,__,,,_e,:,Float,;,_,:,Float,),{,},},Class,_8k,:,_p,{,},<EOF>''',
                101
            )
        )

    def test_2704(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P55:__{}Class q_{}Class t_{Val $_t,$_RUuW_j_6_L,$9y18_:Array [Array [Array [Boolean ,0b1],0B1_0],0x28];}''',
                '''Class,P55,:,__,{,},Class,q_,{,},Class,t_,{,Val,$_t,,,$_RUuW_j_6_L,,,$9y18_,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0B10,],,,0x28,],;,},<EOF>''',
                101
            )
        )

    def test_2705(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a7_:G{Var $_:String ;l_9(L0,_6_8,_9t,_4,x,_,_,_,R_,_,TGt,xv,__:Int ;_:Float ;t5,m:_4){Var FO_:Array [Array [Float ,0b1],7];}$_(o:Array [Boolean ,0B11]){} }Class _{}''',
                '''Class,a7_,:,G,{,Var,$_,:,String,;,l_9,(,L0,,,_6_8,,,_9t,,,_4,,,x,,,_,,,_,,,_,,,R_,,,_,,,TGt,,,xv,,,__,:,Int,;,_,:,Float,;,t5,,,m,:,_4,),{,Var,FO_,:,Array,[,Array,[,Float,,,0b1,],,,7,],;,},$_,(,o,:,Array,[,Boolean,,,0B11,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2706(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class og0{}Class _O4:_k4{Val $_D,U,$0:Array [String ,0B110110];Destructor (){} }Class E:_18{}Class __:W9{Var $__0_,$___,$_3,__:s_64_0__;}''',
                '''Class,__,{,},Class,og0,{,},Class,_O4,:,_k4,{,Val,$_D,,,U,,,$0,:,Array,[,String,,,0B110110,],;,Destructor,(,),{,},},Class,E,:,_18,{,},Class,__,:,W9,{,Var,$__0_,,,$___,,,$_3,,,__,:,s_64_0__,;,},<EOF>''',
                101
            )
        )

    def test_2707(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_a92:d{Destructor (){} }Class P91:_w__{$o_3(___,r,__,_:Array [Float ,22];_r_:Array [String ,0X7DD];T:Re){} }Class _W{}''',
                '''Class,I_a92,:,d,{,Destructor,(,),{,},},Class,P91,:,_w__,{,$o_3,(,___,,,r,,,__,,,_,:,Array,[,Float,,,22,],;,_r_,:,Array,[,String,,,0X7DD,],;,T,:,Re,),{,},},Class,_W,{,},<EOF>''',
                101
            )
        )

    def test_2708(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{U(h0:Array [Int ,0X3A]){}Destructor (){}Destructor (){}nb4(_,_:_8;__,F_O:Array [Array [Float ,534_06],0B1]){} }''',
                '''Class,_,{,U,(,h0,:,Array,[,Int,,,0X3A,],),{,},Destructor,(,),{,},Destructor,(,),{,},nb4,(,_,,,_,:,_8,;,__,,,F_O,:,Array,[,Array,[,Float,,,53406,],,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_2709(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:x_{Val _2_,$64,$K,_,_9,F,y,y:l252;}Class _3:__{}Class qn_61__:_{}Class l{Constructor (){}$_(_,_2,_:D_o_;m,_:_9z_q_){} }Class M{Destructor (){ {} }__(){} }''',
                '''Class,_,:,x_,{,Val,_2_,,,$64,,,$K,,,_,,,_9,,,F,,,y,,,y,:,l252,;,},Class,_3,:,__,{,},Class,qn_61__,:,_,{,},Class,l,{,Constructor,(,),{,},$_,(,_,,,_2,,,_,:,D_o_,;,m,,,_,:,_9z_q_,),{,},},Class,M,{,Destructor,(,),{,{,},},__,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2710(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Destructor (){} }Class v_{Var $O08:_;}Class W{$Y__X(){}Constructor (_0_4:Array [Array [Int ,0114],13]){} }''',
                '''Class,_,:,_,{,Destructor,(,),{,},},Class,v_,{,Var,$O08,:,_,;,},Class,W,{,$Y__X,(,),{,},Constructor,(,_0_4,:,Array,[,Array,[,Int,,,0114,],,,13,],),{,},},<EOF>''',
                101
            )
        )

    def test_2711(self):
        self.assertTrue(
            TestLexer.test(
                '''Class bJ_:_{Var bh8_:zGm;Destructor (){} }Class a7:_{Var $u:Array [Array [Boolean ,053],0B1010011];}Class _7{__q(u_H8M_:Array [String ,02_5];e,xq,m,_58_a,a,_4:Array [String ,4]){Continue ;}Destructor (){} }''',
                '''Class,bJ_,:,_,{,Var,bh8_,:,zGm,;,Destructor,(,),{,},},Class,a7,:,_,{,Var,$u,:,Array,[,Array,[,Boolean,,,053,],,,0B1010011,],;,},Class,_7,{,__q,(,u_H8M_,:,Array,[,String,,,025,],;,e,,,xq,,,m,,,_58_a,,,a,,,_4,:,Array,[,String,,,4,],),{,Continue,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2712(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_{}Class I:l_v9{}Class _:B_{Var $o__:Boolean ;Val $W:Array [Boolean ,51_8];$__80(_I,W1,k,Gr,_,d_:Float ;_,y:_;_8___00:Array [Array [Array [Array [Float ,0X3B],72],0xE],72];_:E){} }Class Mh{}''',
                '''Class,P,:,_,{,},Class,I,:,l_v9,{,},Class,_,:,B_,{,Var,$o__,:,Boolean,;,Val,$W,:,Array,[,Boolean,,,518,],;,$__80,(,_I,,,W1,,,k,,,Gr,,,_,,,d_,:,Float,;,_,,,y,:,_,;,_8___00,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X3B,],,,72,],,,0xE,],,,72,],;,_,:,E,),{,},},Class,Mh,{,},<EOF>''',
                101
            )
        )

    def test_2713(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e:L{b05(__:String ;_,o5,_:Boolean ;_X:Array [Array [Array [Array [Array [Boolean ,06_4],0114],7],0114],0X414_7]){}Val Z_:Array [Array [Boolean ,04],0x2B];}''',
                '''Class,_e,:,L,{,b05,(,__,:,String,;,_,,,o5,,,_,:,Boolean,;,_X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,064,],,,0114,],,,7,],,,0114,],,,0X4147,],),{,},Val,Z_,:,Array,[,Array,[,Boolean,,,04,],,,0x2B,],;,},<EOF>''',
                101
            )
        )

    def test_2714(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $4__:_8;}Class k{_(_:Array [Boolean ,0x12];__:Array [Array [Float ,04],0b11101]){}Destructor (){}Var N:a;}Class td{$5(){} }''',
                '''Class,_,{,Var,$4__,:,_8,;,},Class,k,{,_,(,_,:,Array,[,Boolean,,,0x12,],;,__,:,Array,[,Array,[,Float,,,04,],,,0b11101,],),{,},Destructor,(,),{,},Var,N,:,a,;,},Class,td,{,$5,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2715(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $6_G:b;Val g,$p,$MVWW2,_:_;}Class X:d_{Var $Z62,g:Array [Boolean ,0b1_11_1];Val V_,$38l3__,c,_:Boolean ;}''',
                '''Class,_,{,Val,$6_G,:,b,;,Val,g,,,$p,,,$MVWW2,,,_,:,_,;,},Class,X,:,d_,{,Var,$Z62,,,g,:,Array,[,Boolean,,,0b1111,],;,Val,V_,,,$38l3__,,,c,,,_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2716(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Destructor (){}Val c2,_n__,a00_:Array [Array [Array [Int ,0103],0B100011],0103];Destructor (){}Val $_,_:Array [Boolean ,0B100011];Constructor (G0,_,T3:S){Break ;} }''',
                '''Class,_,{,Destructor,(,),{,},Destructor,(,),{,},Val,c2,,,_n__,,,a00_,:,Array,[,Array,[,Array,[,Int,,,0103,],,,0B100011,],,,0103,],;,Destructor,(,),{,},Val,$_,,,_,:,Array,[,Boolean,,,0B100011,],;,Constructor,(,G0,,,_,,,T3,:,S,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2717(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{}Class Z7_:z{Destructor (){Break ;}w9(p:w80){}Constructor (_5:Array [Int ,90];_H_,__,W,jS:Int ;uG6BR_:Eb){}Val $_5,$n51H:Array [Array [Boolean ,0XD],91];}Class _7e:V_{}''',
                '''Class,___,{,},Class,Z7_,:,z,{,Destructor,(,),{,Break,;,},w9,(,p,:,w80,),{,},Constructor,(,_5,:,Array,[,Int,,,90,],;,_H_,,,__,,,W,,,jS,:,Int,;,uG6BR_,:,Eb,),{,},Val,$_5,,,$n51H,:,Array,[,Array,[,Boolean,,,0XD,],,,91,],;,},Class,_7e,:,V_,{,},<EOF>''',
                101
            )
        )

    def test_2718(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T8{}Class X3:K{}Class _A:___90{Var n,B,$_,g,$74A_:String ;}Class y46e{Constructor (z_:Array [Array [Array [Array [Boolean ,99],0x7],0B11001],0b11110]){Var EM,W_,j:__6;Val C:Float ;} }Class M{}Class v{}''',
                '''Class,T8,{,},Class,X3,:,K,{,},Class,_A,:,___90,{,Var,n,,,B,,,$_,,,g,,,$74A_,:,String,;,},Class,y46e,{,Constructor,(,z_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,99,],,,0x7,],,,0B11001,],,,0b11110,],),{,Var,EM,,,W_,,,j,:,__6,;,Val,C,:,Float,;,},},Class,M,{,},Class,v,{,},<EOF>''',
                101
            )
        )

    def test_2719(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_C_jR{Constructor (_3,GLhq,g:Array [Float ,0X40];s_5:Boolean ){} }Class _73{Val _:Int ;}Class __:_4b_{Destructor (){} }Class Y{Val n:String ;}Class _:_{}''',
                '''Class,v_C_jR,{,Constructor,(,_3,,,GLhq,,,g,:,Array,[,Float,,,0X40,],;,s_5,:,Boolean,),{,},},Class,_73,{,Val,_,:,Int,;,},Class,__,:,_4b_,{,Destructor,(,),{,},},Class,Y,{,Val,n,:,String,;,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2720(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4:M{}Class _dQ:_b3{Var Zj:x;}Class _{Var $_,$__i:Array [Array [Array [Array [Boolean ,62],0X1B],0B1001001],03_17];}''',
                '''Class,_4,:,M,{,},Class,_dQ,:,_b3,{,Var,Zj,:,x,;,},Class,_,{,Var,$_,,,$__i,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,62,],,,0X1B,],,,0B1001001,],,,0317,],;,},<EOF>''',
                101
            )
        )

    def test_2721(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:B{Val $3f_2u_,$a,$_9f,_c,$__3:Array [Boolean ,3_673_3];}Class R{Var $r2_,F,$_:iL;Constructor (){}Destructor (){ {Break ;} }Constructor (_:Array [Array [Boolean ,05],013];_:_4){} }''',
                '''Class,d,:,B,{,Val,$3f_2u_,,,$a,,,$_9f,,,_c,,,$__3,:,Array,[,Boolean,,,36733,],;,},Class,R,{,Var,$r2_,,,F,,,$_,:,iL,;,Constructor,(,),{,},Destructor,(,),{,{,Break,;,},},Constructor,(,_,:,Array,[,Array,[,Boolean,,,05,],,,013,],;,_,:,_4,),{,},},<EOF>''',
                101
            )
        )

    def test_2722(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I_{$8(q:Array [Int ,8_0];M:Boolean ;l_4:Int ){Var j_,o_03:Q;Break ;}B_9(Un__9_y_,_,_T3:N1_){} }Class F{}Class x_:_6_8{}Class _{}''',
                '''Class,_,:,I_,{,$8,(,q,:,Array,[,Int,,,80,],;,M,:,Boolean,;,l_4,:,Int,),{,Var,j_,,,o_03,:,Q,;,Break,;,},B_9,(,Un__9_y_,,,_,,,_T3,:,N1_,),{,},},Class,F,{,},Class,x_,:,_6_8,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2723(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4{Constructor (Wp:Int ;S,_:__;_3,_4:Array [Float ,56]){} }Class d__{}Class tW4P{}Class _{Destructor (){} }Class _s_:_EE{}''',
                '''Class,_4,{,Constructor,(,Wp,:,Int,;,S,,,_,:,__,;,_3,,,_4,:,Array,[,Float,,,56,],),{,},},Class,d__,{,},Class,tW4P,{,},Class,_,{,Destructor,(,),{,},},Class,_s_,:,_EE,{,},<EOF>''',
                101
            )
        )

    def test_2724(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M_3:ZF{Constructor (__:__;_,K:Float ;_9_6,_,_,_,I:L;pP,v93,_9,_:_;r,_GMr7:Float ;o:h;R,g_:Array [Array [Array [Array [Float ,056],7],0B1],77]){} }Class p:_{}Class _:g{Val $_,$8,$i:Array [Int ,0B1_0];}''',
                '''Class,M_3,:,ZF,{,Constructor,(,__,:,__,;,_,,,K,:,Float,;,_9_6,,,_,,,_,,,_,,,I,:,L,;,pP,,,v93,,,_9,,,_,:,_,;,r,,,_GMr7,:,Float,;,o,:,h,;,R,,,g_,:,Array,[,Array,[,Array,[,Array,[,Float,,,056,],,,7,],,,0B1,],,,77,],),{,},},Class,p,:,_,{,},Class,_,:,g,{,Val,$_,,,$8,,,$i,:,Array,[,Int,,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_2725(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C__6_C:Zu{Val v,w5v__,$_,$_u:c4703;Var L,$_,$__0,$_,_6,$_:Array [Boolean ,010];Constructor (){Break ;} }Class _:b{Constructor (__:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,06_6],06],0b1],0B1_00_0],0X9_2_2_A],5_86],06],03],5],0x36];_:Boolean ){} }Class __e:_{}Class __{Constructor (r,b1a_:Array [Int ,0X36];S9:Q){} }Class __:_{}''',
                '''Class,C__6_C,:,Zu,{,Val,v,,,w5v__,,,$_,,,$_u,:,c4703,;,Var,L,,,$_,,,$__0,,,$_,,,_6,,,$_,:,Array,[,Boolean,,,010,],;,Constructor,(,),{,Break,;,},},Class,_,:,b,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,066,],,,06,],,,0b1,],,,0B1000,],,,0X922A,],,,586,],,,06,],,,03,],,,5,],,,0x36,],;,_,:,Boolean,),{,},},Class,__e,:,_,{,},Class,__,{,Constructor,(,r,,,b1a_,:,Array,[,Int,,,0X36,],;,S9,:,Q,),{,},},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2726(self):
        self.assertTrue(
            TestLexer.test(
                '''Class hTE{q_(_:Array [Array [Float ,55],7];_8,_,R,hy:b){}Constructor (G_y:Array [String ,0B101001]){} }Class x:g____{_(){} }''',
                '''Class,hTE,{,q_,(,_,:,Array,[,Array,[,Float,,,55,],,,7,],;,_8,,,_,,,R,,,hy,:,b,),{,},Constructor,(,G_y,:,Array,[,String,,,0B101001,],),{,},},Class,x,:,g____,{,_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2727(self):
        self.assertTrue(
            TestLexer.test(
                '''Class YA{$6(__,_9:_;D9:_;F1,__:Array [String ,0x21];s,s_D:Array [Float ,0X1];__,_Yh:_;_:_j;C_,V,j_,p,t7,V,_:Boolean ;t:Array [Array [Array [Array [Float ,2],850],07],0B111001];R_2,s,t,f6_0Yn9__:_;_U:Array [Int ,1_9_847];_,_,w_6LBW,T,m3:Float ;___n8,R__,x:String ;rRo49:k_1;X,_:Array [Array [Array [Array [Boolean ,0X1],2],042],3];_4_:_79;b,_3E5_2:String ;h:Array [Array [Array [Array [String ,042],05],05_0],042];_e6,X_0:Array [Array [Boolean ,2],0X1];t_8,H7,kgG2_9,nm4,p,_0U,g:w_;qO6_:_){} }''',
                '''Class,YA,{,$6,(,__,,,_9,:,_,;,D9,:,_,;,F1,,,__,:,Array,[,String,,,0x21,],;,s,,,s_D,:,Array,[,Float,,,0X1,],;,__,,,_Yh,:,_,;,_,:,_j,;,C_,,,V,,,j_,,,p,,,t7,,,V,,,_,:,Boolean,;,t,:,Array,[,Array,[,Array,[,Array,[,Float,,,2,],,,850,],,,07,],,,0B111001,],;,R_2,,,s,,,t,,,f6_0Yn9__,:,_,;,_U,:,Array,[,Int,,,19847,],;,_,,,_,,,w_6LBW,,,T,,,m3,:,Float,;,___n8,,,R__,,,x,:,String,;,rRo49,:,k_1,;,X,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X1,],,,2,],,,042,],,,3,],;,_4_,:,_79,;,b,,,_3E5_2,:,String,;,h,:,Array,[,Array,[,Array,[,Array,[,String,,,042,],,,05,],,,050,],,,042,],;,_e6,,,X_0,:,Array,[,Array,[,Boolean,,,2,],,,0X1,],;,t_8,,,H7,,,kgG2_9,,,nm4,,,p,,,_0U,,,g,:,w_,;,qO6_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2728(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _DP_E{Constructor (_I,_j:Array [Array [Array [Array [Int ,0b1],96_4],071],0B1];t11J_9N0:_5D7){} }Class y3_{}''',
                '''Class,_DP_E,{,Constructor,(,_I,,,_j,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,964,],,,071,],,,0B1,],;,t11J_9N0,:,_5D7,),{,},},Class,y3_,{,},<EOF>''',
                101
            )
        )

    def test_2729(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9Qv:_7_{}Class _:_{}Class SEApy{}Class G{Constructor (){}$_(){} }Class _{$___f(C:Array [String ,2];_:T_){} }''',
                '''Class,_9Qv,:,_7_,{,},Class,_,:,_,{,},Class,SEApy,{,},Class,G,{,Constructor,(,),{,},$_,(,),{,},},Class,_,{,$___f,(,C,:,Array,[,String,,,2,],;,_,:,T_,),{,},},<EOF>''',
                101
            )
        )

    def test_2730(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var B8,_:__Uh_8;Val g:Array [Array [Array [Array [Int ,0x1],060],04],0B1001011];}Class _{Destructor (){}Var s:String ;}''',
                '''Class,_,{,Var,B8,,,_,:,__Uh_8,;,Val,g,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x1,],,,060,],,,04,],,,0B1001011,],;,},Class,_,{,Destructor,(,),{,},Var,s,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2731(self):
        self.assertTrue(
            TestLexer.test(
                '''Class UU{}Class S{}Class _1__:_{Var J,J__:Array [Array [String ,0x4],03];}Class _{}Class n{Val Th,m,$_,$_8:B;}Class _{}''',
                '''Class,UU,{,},Class,S,{,},Class,_1__,:,_,{,Var,J,,,J__,:,Array,[,Array,[,String,,,0x4,],,,03,],;,},Class,_,{,},Class,n,{,Val,Th,,,m,,,$_,,,$_8,:,B,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2732(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o___:_{Constructor (){}Constructor (){}Constructor (_k,B_E,L6:Array [Int ,0B1_1];_:Array [Int ,38];_,R4,_fC:__0_){} }''',
                '''Class,o___,:,_,{,Constructor,(,),{,},Constructor,(,),{,},Constructor,(,_k,,,B_E,,,L6,:,Array,[,Int,,,0B11,],;,_,:,Array,[,Int,,,38,],;,_,,,R4,,,_fC,:,__0_,),{,},},<EOF>''',
                101
            )
        )

    def test_2733(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{Constructor (z,__5t:_;l_E,__8,_:String ;v0,_5:String ;_5,i:i3;B:Float ;D:_D_){} }Class _:W_{Val _:Boolean ;}Class m{}''',
                '''Class,n,{,Constructor,(,z,,,__5t,:,_,;,l_E,,,__8,,,_,:,String,;,v0,,,_5,:,String,;,_5,,,i,:,i3,;,B,:,Float,;,D,:,_D_,),{,},},Class,_,:,W_,{,Val,_,:,Boolean,;,},Class,m,{,},<EOF>''',
                101
            )
        )

    def test_2734(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{_(x__:Array [Float ,053];_5,__:_;__:_;_,F8__,_,N_:_;E:S;d1:fu;w:Array [Int ,0b1_1];__,f52:String ;__:Float ;F,r:String ){} }Class qO_:_{}''',
                '''Class,___,{,_,(,x__,:,Array,[,Float,,,053,],;,_5,,,__,:,_,;,__,:,_,;,_,,,F8__,,,_,,,N_,:,_,;,E,:,S,;,d1,:,fu,;,w,:,Array,[,Int,,,0b11,],;,__,,,f52,:,String,;,__,:,Float,;,F,,,r,:,String,),{,},},Class,qO_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2735(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:u1{Constructor (z15_:_S4_;_:I_z;u:Array [Boolean ,0X56];I:Array [Int ,0x7];_:Array [Array [Array [Array [Array [Boolean ,02_7_7],0b110010],0X56],0X56],0x16];_:Boolean ;_:Array [Array [Int ,0x16],0xF];_2:Int ;_WC:Array [Array [Float ,9],0X8A];o,V___,_,__:String ){} }''',
                '''Class,_,:,u1,{,Constructor,(,z15_,:,_S4_,;,_,:,I_z,;,u,:,Array,[,Boolean,,,0X56,],;,I,:,Array,[,Int,,,0x7,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0277,],,,0b110010,],,,0X56,],,,0X56,],,,0x16,],;,_,:,Boolean,;,_,:,Array,[,Array,[,Int,,,0x16,],,,0xF,],;,_2,:,Int,;,_WC,:,Array,[,Array,[,Float,,,9,],,,0X8A,],;,o,,,V___,,,_,,,__,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2736(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J4_6_5:_{}Class Oq:_RD3_N_{Var Z_:__;Var _O:_p6l_5_;}Class _{}Class _5_{$_(_,N_S9,H,_s:h9){} }Class P{}Class __:__{}''',
                '''Class,J4_6_5,:,_,{,},Class,Oq,:,_RD3_N_,{,Var,Z_,:,__,;,Var,_O,:,_p6l_5_,;,},Class,_,{,},Class,_5_,{,$_,(,_,,,N_S9,,,H,,,_s,:,h9,),{,},},Class,P,{,},Class,__,:,__,{,},<EOF>''',
                101
            )
        )

    def test_2737(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (d_:Array [Array [Array [Boolean ,062],0X14],0X14];R5_0WP,G,g2,_:Int ;Y2,_:g;O6,_3,_,b0,b2:Int ;_,r:Array [Array [Boolean ,0x1],9]){} }''',
                '''Class,_,{,Constructor,(,d_,:,Array,[,Array,[,Array,[,Boolean,,,062,],,,0X14,],,,0X14,],;,R5_0WP,,,G,,,g2,,,_,:,Int,;,Y2,,,_,:,g,;,O6,,,_3,,,_,,,b0,,,b2,:,Int,;,_,,,r,:,Array,[,Array,[,Boolean,,,0x1,],,,9,],),{,},},<EOF>''',
                101
            )
        )

    def test_2738(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:p_V{$x(h5_8,_:Boolean ;_0,d_,_:Float ){Return ;} }Class x:__{Val $_d,t:Array [Int ,0X24];$_4(B:Array [Array [Array [Array [Boolean ,0B1_1],03],05],2_1]){ {Return ;}Var B2,_T63:_W_;} }''',
                '''Class,q,:,p_V,{,$x,(,h5_8,,,_,:,Boolean,;,_0,,,d_,,,_,:,Float,),{,Return,;,},},Class,x,:,__,{,Val,$_d,,,t,:,Array,[,Int,,,0X24,],;,$_4,(,B,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11,],,,03,],,,05,],,,21,],),{,{,Return,;,},Var,B2,,,_T63,:,_W_,;,},},<EOF>''',
                101
            )
        )

    def test_2739(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{$_(){}Constructor (_:Array [String ,0b1_00];_:String ;t4,_5_,qe9,_i:_18;_:Array [Array [Float ,0B1],0114]){Return ;} }Class __{}Class d3_6__E5CD6{}''',
                '''Class,q,{,$_,(,),{,},Constructor,(,_,:,Array,[,String,,,0b100,],;,_,:,String,;,t4,,,_5_,,,qe9,,,_i,:,_18,;,_,:,Array,[,Array,[,Float,,,0B1,],,,0114,],),{,Return,;,},},Class,__,{,},Class,d3_6__E5CD6,{,},<EOF>''',
                101
            )
        )

    def test_2740(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:O{Var $7d:String ;$6(){Break ;Val V:Boolean ;}_(_,H2vy:Array [Array [Array [String ,0x4F],37],0b11_0_1]){} }''',
                '''Class,c,:,O,{,Var,$7d,:,String,;,$6,(,),{,Break,;,Val,V,:,Boolean,;,},_,(,_,,,H2vy,:,Array,[,Array,[,Array,[,String,,,0x4F,],,,37,],,,0b1101,],),{,},},<EOF>''',
                101
            )
        )

    def test_2741(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yf_{Val h,$2:At;Var p5,$_1_,$A,$P6N_:String ;i_(_,_,h,_,E:Int ;_,_7__4:Array [String ,051]){Continue ;} }''',
                '''Class,yf_,{,Val,h,,,$2,:,At,;,Var,p5,,,$_1_,,,$A,,,$P6N_,:,String,;,i_,(,_,,,_,,,h,,,_,,,E,:,Int,;,_,,,_7__4,:,Array,[,String,,,051,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2742(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _26___{O(_,_:String ;_:i;A_:Int ){}Val $u_3,N5,D__:Boolean ;}Class _{}Class _V{Destructor (){Continue ;}Val j:Array [Float ,45];}Class _:l{Var $53_8:_7r;}Class i:w{}''',
                '''Class,_26___,{,O,(,_,,,_,:,String,;,_,:,i,;,A_,:,Int,),{,},Val,$u_3,,,N5,,,D__,:,Boolean,;,},Class,_,{,},Class,_V,{,Destructor,(,),{,Continue,;,},Val,j,:,Array,[,Float,,,45,],;,},Class,_,:,l,{,Var,$53_8,:,_7r,;,},Class,i,:,w,{,},<EOF>''',
                101
            )
        )

    def test_2743(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _f:s{$_(_:j;A_,q0,d_,E,i0_:String ;g_,_1F,_8o,_:Float ;__n:_r;_,_,Q9,K:_1_;g,_X:Float ;m,a:Float ){} }''',
                '''Class,_f,:,s,{,$_,(,_,:,j,;,A_,,,q0,,,d_,,,E,,,i0_,:,String,;,g_,,,_1F,,,_8o,,,_,:,Float,;,__n,:,_r,;,_,,,_,,,Q9,,,K,:,_1_,;,g,,,_X,:,Float,;,m,,,a,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2744(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:_{Constructor (_9:f){}Val _71__,$_8L:Array [Array [Array [Boolean ,0b1],97],0b1];Var K,$N,$_,$l_F_:Boolean ;Destructor (){}Val $R_7:String ;}''',
                '''Class,_0,:,_,{,Constructor,(,_9,:,f,),{,},Val,_71__,,,$_8L,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,97,],,,0b1,],;,Var,K,,,$N,,,$_,,,$l_F_,:,Boolean,;,Destructor,(,),{,},Val,$R_7,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2745(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{Constructor (){} }Class q:H{Constructor (_:Boolean ){} }Class Q{Val $4:M__;}Class _{$q(_,_4:K2_;O,k5,_g,_5,p_,UI,__,_,z0hs_,j2_73:Boolean ){} }''',
                '''Class,p,{,Constructor,(,),{,},},Class,q,:,H,{,Constructor,(,_,:,Boolean,),{,},},Class,Q,{,Val,$4,:,M__,;,},Class,_,{,$q,(,_,,,_4,:,K2_,;,O,,,k5,,,_g,,,_5,,,p_,,,UI,,,__,,,_,,,z0hs_,,,j2_73,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2746(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B_:_{}Class E:n9__{Constructor (_:Array [Float ,0b1000001];_,Q:dW){}Val __y:Array [Array [Float ,0B1011011],0b1000001];}Class U:x{_(_1_5_,F8_6,p7:Array [Float ,0X8_54]){} }''',
                '''Class,B_,:,_,{,},Class,E,:,n9__,{,Constructor,(,_,:,Array,[,Float,,,0b1000001,],;,_,,,Q,:,dW,),{,},Val,__y,:,Array,[,Array,[,Float,,,0B1011011,],,,0b1000001,],;,},Class,U,:,x,{,_,(,_1_5_,,,F8_6,,,p7,:,Array,[,Float,,,0X854,],),{,},},<EOF>''',
                101
            )
        )

    def test_2747(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:M{Destructor (){}Destructor (){} }Class m__6{Constructor (r,_:Array [Float ,56]){}Val $K:Int ;}Class _I_U{Destructor (){} }''',
                '''Class,_,:,M,{,Destructor,(,),{,},Destructor,(,),{,},},Class,m__6,{,Constructor,(,r,,,_,:,Array,[,Float,,,56,],),{,},Val,$K,:,Int,;,},Class,_I_U,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2748(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a_7:d{Var G_B,c,_W:String ;Destructor (){___::$j();Var k_:_6;}Destructor (){Return ;Continue ;} }Class _:f1{Constructor (){} }Class A5v{}''',
                '''Class,a_7,:,d,{,Var,G_B,,,c,,,_W,:,String,;,Destructor,(,),{,___,::,$j,(,),;,Var,k_,:,_6,;,},Destructor,(,),{,Return,;,Continue,;,},},Class,_,:,f1,{,Constructor,(,),{,},},Class,A5v,{,},<EOF>''',
                101
            )
        )

    def test_2749(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Constructor (__Aq,_:Float ;l,GA_5,_Ua,o,_,_:Float ){} }Class _:_{Var $_4:Array [Array [Int ,0B1001110],6];}''',
                '''Class,__,:,_,{,Constructor,(,__Aq,,,_,:,Float,;,l,,,GA_5,,,_Ua,,,o,,,_,,,_,:,Float,),{,},},Class,_,:,_,{,Var,$_4,:,Array,[,Array,[,Int,,,0B1001110,],,,6,],;,},<EOF>''',
                101
            )
        )

    def test_2750(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $_,C:Array [Array [Float ,3],40];}Class i9{}Class JRd{Constructor (){Break ;Continue ;}Val $_,_2:Boolean ;}''',
                '''Class,_,:,_,{,Var,$_,,,C,:,Array,[,Array,[,Float,,,3,],,,40,],;,},Class,i9,{,},Class,JRd,{,Constructor,(,),{,Break,;,Continue,;,},Val,$_,,,_2,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2751(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_4:Array [Array [Array [String ,0X188],0x16],01];I,_:String ;N:Array [String ,073];_Sw_,_:F;_k__:Array [Boolean ,7_0];_3U_,_d_,_:Int ){} }''',
                '''Class,_,:,_,{,Constructor,(,_4,:,Array,[,Array,[,Array,[,String,,,0X188,],,,0x16,],,,01,],;,I,,,_,:,String,;,N,:,Array,[,String,,,073,],;,_Sw_,,,_,:,F,;,_k__,:,Array,[,Boolean,,,70,],;,_3U_,,,_d_,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2752(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:O_{Destructor (){}I(){} }Class jB4{}Class _:v{}Class __{Constructor (_,c5L,__Y:Array [Boolean ,77]){} }Class m15_c:_{$77X(_,_5,_:_;_,j_:String ){} }Class bj:__p{}Class _{}Class ST:h{Destructor (){}Val v,$16:Int ;}''',
                '''Class,_,:,O_,{,Destructor,(,),{,},I,(,),{,},},Class,jB4,{,},Class,_,:,v,{,},Class,__,{,Constructor,(,_,,,c5L,,,__Y,:,Array,[,Boolean,,,77,],),{,},},Class,m15_c,:,_,{,$77X,(,_,,,_5,,,_,:,_,;,_,,,j_,:,String,),{,},},Class,bj,:,__p,{,},Class,_,{,},Class,ST,:,h,{,Destructor,(,),{,},Val,v,,,$16,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2753(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{$7(v:Array [Array [Int ,41],41]){_1::$3_n_4_();Break ;{} }Var $_,t:y_9;}Class __V{Destructor (){Return ;} }''',
                '''Class,_,:,__,{,$7,(,v,:,Array,[,Array,[,Int,,,41,],,,41,],),{,_1,::,$3_n_4_,(,),;,Break,;,{,},},Var,$_,,,t,:,y_9,;,},Class,__V,{,Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2754(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$23__(_h__E,r:_;PD:H4q_o;_3E:String ;___69QU4:Array [Int ,0130];_:f;Ta:u5){}Var $X,c,E_,_3:_;}Class _w:_p__q{}Class _t:b{Val w,_QVlV3e:String ;}''',
                '''Class,_,{,$23__,(,_h__E,,,r,:,_,;,PD,:,H4q_o,;,_3E,:,String,;,___69QU4,:,Array,[,Int,,,0130,],;,_,:,f,;,Ta,:,u5,),{,},Var,$X,,,c,,,E_,,,_3,:,_,;,},Class,_w,:,_p__q,{,},Class,_t,:,b,{,Val,w,,,_QVlV3e,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2755(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class v_a:_YK0{$_h(){} }Class _9:_O_V___{}Class m_e:Eq__{$8_3(_:_;vO5_5,rQ_X:Int ;Qj4ab_,a:Array [Array [Array [Boolean ,0X8],0XB],0B1_1_0_0]){} }Class o4:e_s{Val x,$__,_,R,_,t9,_,$g:String ;}''',
                '''Class,_,{,},Class,v_a,:,_YK0,{,$_h,(,),{,},},Class,_9,:,_O_V___,{,},Class,m_e,:,Eq__,{,$8_3,(,_,:,_,;,vO5_5,,,rQ_X,:,Int,;,Qj4ab_,,,a,:,Array,[,Array,[,Array,[,Boolean,,,0X8,],,,0XB,],,,0B1100,],),{,},},Class,o4,:,e_s,{,Val,x,,,$__,,,_,,,R,,,_,,,t9,,,_,,,$g,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2756(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{Constructor (j,_9,Y:_;__R7G__,O95_G:Array [Array [Boolean ,2],07];Y_,z_h_:Array [Array [Array [Boolean ,0B101000],0X7],44]){} }''',
                '''Class,X,{,Constructor,(,j,,,_9,,,Y,:,_,;,__R7G__,,,O95_G,:,Array,[,Array,[,Boolean,,,2,],,,07,],;,Y_,,,z_h_,:,Array,[,Array,[,Array,[,Boolean,,,0B101000,],,,0X7,],,,44,],),{,},},<EOF>''',
                101
            )
        )

    def test_2757(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___V:r{Var _C:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,7_4],0b1],03_5_1],0B1],0x9],0x3B],0x8],0xC],034];}''',
                '''Class,___V,:,r,{,Var,_C,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,74,],,,0b1,],,,0351,],,,0B1,],,,0x9,],,,0x3B,],,,0x8,],,,0xC,],,,034,],;,},<EOF>''',
                101
            )
        )

    def test_2758(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_f_{Constructor (_w__,i,_7,_:Boolean ;_7_0P:_;v,_:N;W_:Array [Float ,0b111101];__1:Array [Array [Int ,0B1],0x1_2_AC_A]){}Constructor (_:Array [String ,0117]){}$5L3(_:_){} }''',
                '''Class,z,:,_f_,{,Constructor,(,_w__,,,i,,,_7,,,_,:,Boolean,;,_7_0P,:,_,;,v,,,_,:,N,;,W_,:,Array,[,Float,,,0b111101,],;,__1,:,Array,[,Array,[,Int,,,0B1,],,,0x12ACA,],),{,},Constructor,(,_,:,Array,[,String,,,0117,],),{,},$5L3,(,_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2759(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H78{Destructor (){Continue ;} }Class _526_8_9n:R_{Var _,$qF,$7,$86_S9,Lp,$Z,Dg1:_;Constructor (w:String ;_,_hU,O,_:_A){}Val _:Float ;}Class R__:_{M_(){} }''',
                '''Class,H78,{,Destructor,(,),{,Continue,;,},},Class,_526_8_9n,:,R_,{,Var,_,,,$qF,,,$7,,,$86_S9,,,Lp,,,$Z,,,Dg1,:,_,;,Constructor,(,w,:,String,;,_,,,_hU,,,O,,,_,:,_A,),{,},Val,_,:,Float,;,},Class,R__,:,_,{,M_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2760(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:X{}Class _7_G:__{}Class lO:_{Constructor (_:_76;_,_,x_,_,_H_1_:Array [Array [Boolean ,4],0175]){}Destructor (){} }''',
                '''Class,T,:,X,{,},Class,_7_G,:,__,{,},Class,lO,:,_,{,Constructor,(,_,:,_76,;,_,,,_,,,x_,,,_,,,_H_1_,:,Array,[,Array,[,Boolean,,,4,],,,0175,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2761(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:U266{}Class _9{}Class __1G6:__5_8{$6L(_0m,h,_,VL,O_,_:String ;__0_WR,G:Int ;_:_Q_;m:Array [Array [Array [Float ,6_17],0X2],0x6];z2,_,B,__:Array [String ,0B1_0110_1_0_0];W:Array [Float ,88];tQ,X:Float ){} }Class d99zp{Var $3,$2_cd:Array [String ,0b1_0_1];Var y:Array [String ,88];}''',
                '''Class,S,:,U266,{,},Class,_9,{,},Class,__1G6,:,__5_8,{,$6L,(,_0m,,,h,,,_,,,VL,,,O_,,,_,:,String,;,__0_WR,,,G,:,Int,;,_,:,_Q_,;,m,:,Array,[,Array,[,Array,[,Float,,,617,],,,0X2,],,,0x6,],;,z2,,,_,,,B,,,__,:,Array,[,String,,,0B10110100,],;,W,:,Array,[,Float,,,88,],;,tQ,,,X,:,Float,),{,},},Class,d99zp,{,Var,$3,,,$2_cd,:,Array,[,String,,,0b101,],;,Var,y,:,Array,[,String,,,88,],;,},<EOF>''',
                101
            )
        )

    def test_2762(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _K:L{}Class _:___{Constructor (){Continue ;}Destructor (){ {}Continue ;}Var $__8,$q:Array [Float ,067];Constructor (_:Array [Float ,0X13]){} }''',
                '''Class,_K,:,L,{,},Class,_,:,___,{,Constructor,(,),{,Continue,;,},Destructor,(,),{,{,},Continue,;,},Var,$__8,,,$q,:,Array,[,Float,,,067,],;,Constructor,(,_,:,Array,[,Float,,,0X13,],),{,},},<EOF>''',
                101
            )
        )

    def test_2763(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,HB:Array [Boolean ,7_8];_,R_4Gg,r,_,v,E:Array [Int ,0x41];_:Array [Array [Array [Array [String ,54],061],0x41],42_1_6_6_82_7]){} }Class _{}''',
                '''Class,_,{,Constructor,(,_,,,HB,:,Array,[,Boolean,,,78,],;,_,,,R_4Gg,,,r,,,_,,,v,,,E,:,Array,[,Int,,,0x41,],;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,54,],,,061,],,,0x41,],,,42166827,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2764(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __YX{}Class v:_{}Class Jao_:vn7{Val $_:Float ;Destructor (){T_::$2();} }Class __{}Class __8u__Q:N{}Class _:G{Val $___0:Array [Array [Boolean ,01_13_1_70_7],01_267];}Class E7:C{Var $_:E;}Class P7w:_{}''',
                '''Class,__YX,{,},Class,v,:,_,{,},Class,Jao_,:,vn7,{,Val,$_,:,Float,;,Destructor,(,),{,T_,::,$2,(,),;,},},Class,__,{,},Class,__8u__Q,:,N,{,},Class,_,:,G,{,Val,$___0,:,Array,[,Array,[,Boolean,,,01131707,],,,01267,],;,},Class,E7,:,C,{,Var,$_,:,E,;,},Class,P7w,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2765(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var t:r;Val _:_;Var _,n,_,__14n:Array [Float ,71];Constructor (B_9,__3:String ){}Val W:Array [Float ,0x1E];Constructor (){Continue ;} }''',
                '''Class,_,{,Var,t,:,r,;,Val,_,:,_,;,Var,_,,,n,,,_,,,__14n,:,Array,[,Float,,,71,],;,Constructor,(,B_9,,,__3,:,String,),{,},Val,W,:,Array,[,Float,,,0x1E,],;,Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2766(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (f_,a,_:Array [Boolean ,031];_W:Int ;_:R;_,ew,_0,__,___7_,LC0:Array [Array [Int ,0B1001101],0131];af:Array [Int ,0XC];_p,Q03,_PJ,_A_,_R,__8:T){} }''',
                '''Class,_,:,_,{,Constructor,(,f_,,,a,,,_,:,Array,[,Boolean,,,031,],;,_W,:,Int,;,_,:,R,;,_,,,ew,,,_0,,,__,,,___7_,,,LC0,:,Array,[,Array,[,Int,,,0B1001101,],,,0131,],;,af,:,Array,[,Int,,,0XC,],;,_p,,,Q03,,,_PJ,,,_A_,,,_R,,,__8,:,T,),{,},},<EOF>''',
                101
            )
        )

    def test_2767(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z{Var $5:Array [Array [Boolean ,0127],53];Val $_,_jR,$_,$00_:Array [Array [Array [Array [Array [String ,0xF],07_0],0B1],033],0xF];}Class ytv{}''',
                '''Class,Z,{,Var,$5,:,Array,[,Array,[,Boolean,,,0127,],,,53,],;,Val,$_,,,_jR,,,$_,,,$00_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xF,],,,070,],,,0B1,],,,033,],,,0xF,],;,},Class,ytv,{,},<EOF>''',
                101
            )
        )

    def test_2768(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{__h(_,____f,S5:Float ;_,W:Array [Float ,0B1_1];r:String ;_,Z:Array [Array [Array [Float ,0b1],0xC],0XC];_,_52I:Boolean ){} }''',
                '''Class,_,{,__h,(,_,,,____f,,,S5,:,Float,;,_,,,W,:,Array,[,Float,,,0B11,],;,r,:,String,;,_,,,Z,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,0xC,],,,0XC,],;,_,,,_52I,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2769(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e_{$E__x(_5,_:h;_:Array [Array [Array [Array [String ,03],022],0b1001100],77]){}$M(){Return ;} }Class R:k{Destructor (){} }''',
                '''Class,e_,{,$E__x,(,_5,,,_,:,h,;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,03,],,,022,],,,0b1001100,],,,77,],),{,},$M,(,),{,Return,;,},},Class,R,:,k,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2770(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K__:_{Val _,__m_5__:Array [Array [Boolean ,40],40];$6(_,k2,_:Float ;k:Int ;_5,VJ4_:Int ;N_W,_,__P4:Array [Boolean ,6_11_2_3];_:_27;_,_:Array [Array [Boolean ,0XF],061];RC,C8,_:ks9){_5::$K();Continue ;v::$i();} }Class Z__75{Destructor (){} }''',
                '''Class,K__,:,_,{,Val,_,,,__m_5__,:,Array,[,Array,[,Boolean,,,40,],,,40,],;,$6,(,_,,,k2,,,_,:,Float,;,k,:,Int,;,_5,,,VJ4_,:,Int,;,N_W,,,_,,,__P4,:,Array,[,Boolean,,,61123,],;,_,:,_27,;,_,,,_,:,Array,[,Array,[,Boolean,,,0XF,],,,061,],;,RC,,,C8,,,_,:,ks9,),{,_5,::,$K,(,),;,Continue,;,v,::,$i,(,),;,},},Class,Z__75,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2771(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X:y7Q{}Class _:B{}Class wK{}Class __{Constructor (J_0,_6,g,Ut:_9;i:Float ;t:Array [Array [Array [Float ,0B1],0x12],053];_6,_:pX6;UZ:_c_){}Val __,$_:Array [Int ,04];}Class k:__{}''',
                '''Class,X,:,y7Q,{,},Class,_,:,B,{,},Class,wK,{,},Class,__,{,Constructor,(,J_0,,,_6,,,g,,,Ut,:,_9,;,i,:,Float,;,t,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0x12,],,,053,],;,_6,,,_,:,pX6,;,UZ,:,_c_,),{,},Val,__,,,$_,:,Array,[,Int,,,04,],;,},Class,k,:,__,{,},<EOF>''',
                101
            )
        )

    def test_2772(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class _Y3_B7B3n:L{Constructor (__:Array [Array [Array [Float ,0115],0xE_6],0115];I:Array [Float ,86]){} }''',
                '''Class,__,{,},Class,_Y3_B7B3n,:,L,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Float,,,0115,],,,0xE6,],,,0115,],;,I,:,Array,[,Float,,,86,],),{,},},<EOF>''',
                101
            )
        )

    def test_2773(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:__{_(_,Z,_:Array [Array [Boolean ,0X37],45];_x38728:Array [Array [Boolean ,0B1],0x2_5_00];_:Array [Array [Boolean ,0b11000],1]){} }Class D:_S_{}''',
                '''Class,q,:,__,{,_,(,_,,,Z,,,_,:,Array,[,Array,[,Boolean,,,0X37,],,,45,],;,_x38728,:,Array,[,Array,[,Boolean,,,0B1,],,,0x2500,],;,_,:,Array,[,Array,[,Boolean,,,0b11000,],,,1,],),{,},},Class,D,:,_S_,{,},<EOF>''',
                101
            )
        )

    def test_2774(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H:_{Destructor (){} }Class _:c4{Constructor (_,G:Array [Array [Array [Array [Int ,0b1],05],0b1_0],1_24];_:y3){}_(__Y:Boolean ;_,n,_:Boolean ;_:Boolean ;_,_2d09:String ;A:_;N:Array [Array [Array [Array [Array [Array [Array [Int ,0X4D],0X4],0B1011100],0X4D],054],6_9],0b1010111]){}Br(){} }Class i:_{Val _:Array [Array [Float ,0x5],50];}''',
                '''Class,H,:,_,{,Destructor,(,),{,},},Class,_,:,c4,{,Constructor,(,_,,,G,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,05,],,,0b10,],,,124,],;,_,:,y3,),{,},_,(,__Y,:,Boolean,;,_,,,n,,,_,:,Boolean,;,_,:,Boolean,;,_,,,_2d09,:,String,;,A,:,_,;,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X4D,],,,0X4,],,,0B1011100,],,,0X4D,],,,054,],,,69,],,,0b1010111,],),{,},Br,(,),{,},},Class,i,:,_,{,Val,_,:,Array,[,Array,[,Float,,,0x5,],,,50,],;,},<EOF>''',
                101
            )
        )

    def test_2775(self):
        self.assertTrue(
            TestLexer.test(
                '''Class bO_:_Z_{Val $6_,$_:Array [Array [Array [Array [Float ,13],0B1],0xE2_0],0B1100010];}Class __{Val _U4,$Y:Array [Boolean ,13];}Class _{}Class __{$1_(){} }''',
                '''Class,bO_,:,_Z_,{,Val,$6_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,13,],,,0B1,],,,0xE20,],,,0B1100010,],;,},Class,__,{,Val,_U4,,,$Y,:,Array,[,Boolean,,,13,],;,},Class,_,{,},Class,__,{,$1_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2776(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$6x(_:Array [Boolean ,026]){} }Class Y:_{}Class D{}Class _{}Class _9_{Destructor (){ {Break ;}_x::$3();Continue ;} }Class _23_{}''',
                '''Class,_,{,$6x,(,_,:,Array,[,Boolean,,,026,],),{,},},Class,Y,:,_,{,},Class,D,{,},Class,_,{,},Class,_9_,{,Destructor,(,),{,{,Break,;,},_x,::,$3,(,),;,Continue,;,},},Class,_23_,{,},<EOF>''',
                101
            )
        )

    def test_2777(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:zR{Constructor (Z_3:Array [Int ,0b1_10]){}Constructor (W:_;_w,R:Array [Boolean ,4_5213353];_:_;F5_:Boolean ){Return ;}Var _8:String ;Var $XZ_3,P5:P;_D(){} }''',
                '''Class,K,:,zR,{,Constructor,(,Z_3,:,Array,[,Int,,,0b110,],),{,},Constructor,(,W,:,_,;,_w,,,R,:,Array,[,Boolean,,,45213353,],;,_,:,_,;,F5_,:,Boolean,),{,Return,;,},Var,_8,:,String,;,Var,$XZ_3,,,P5,:,P,;,_D,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2778(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class o7{}Class V5{Constructor (l,_,_V:String ;_:Array [Int ,18_2];_,cR7w,J:Array [Int ,0X70_B];__:Int ){} }''',
                '''Class,_,{,},Class,o7,{,},Class,V5,{,Constructor,(,l,,,_,,,_V,:,String,;,_,:,Array,[,Int,,,182,],;,_,,,cR7w,,,J,:,Array,[,Int,,,0X70B,],;,__,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2779(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:z{Val z,_,GD:Array [String ,01];Val $_,$0,_,p:Array [Float ,58];}Class Mi68{F(_:Array [Array [Array [Array [Array [Array [Int ,0b1_0],0x15],0x15],06553],0113],58];V_____,_,__:Z__;___4,J,w7,x1,u:Boolean ){Val __y,V,o,S:_w8_;} }''',
                '''Class,_,:,z,{,Val,z,,,_,,,GD,:,Array,[,String,,,01,],;,Val,$_,,,$0,,,_,,,p,:,Array,[,Float,,,58,],;,},Class,Mi68,{,F,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10,],,,0x15,],,,0x15,],,,06553,],,,0113,],,,58,],;,V_____,,,_,,,__,:,Z__,;,___4,,,J,,,w7,,,x1,,,u,:,Boolean,),{,Val,__y,,,V,,,o,,,S,:,_w8_,;,},},<EOF>''',
                101
            )
        )

    def test_2780(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{Constructor (d:Array [Array [Array [Array [Array [Array [Array [String ,0B1],0B1_10_0_11],025],05],96],0X4B],06];b,_8,_:Boolean ){Var s__M:Z___5;} }Class t{Constructor (){} }''',
                '''Class,g,{,Constructor,(,d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0B110011,],,,025,],,,05,],,,96,],,,0X4B,],,,06,],;,b,,,_8,,,_,:,Boolean,),{,Var,s__M,:,Z___5,;,},},Class,t,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2781(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K9{}Class w:z{Constructor (_:String ){} }Class i9_:EWD{}Class _F{Val __,$_:Array [Boolean ,02_5_1];Var $__r___8,s5e:Array [Boolean ,02];}''',
                '''Class,K9,{,},Class,w,:,z,{,Constructor,(,_,:,String,),{,},},Class,i9_,:,EWD,{,},Class,_F,{,Val,__,,,$_,:,Array,[,Boolean,,,0251,],;,Var,$__r___8,,,s5e,:,Array,[,Boolean,,,02,],;,},<EOF>''',
                101
            )
        )

    def test_2782(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_Wa_P9{}Class T1_{Constructor (bu4,d:_;n:Array [Array [Array [Array [Array [Array [Float ,0B1],0X90EB_0F],0B1],02],0b1],06];H_:Array [Array [Array [Array [String ,0B1010000],69],69],0B1010000];q_k,_:Int ;t,v:bZ;i,H:Int ){}Var R,_,$_:Boolean ;}Class _:q8{}''',
                '''Class,_0_Wa_P9,{,},Class,T1_,{,Constructor,(,bu4,,,d,:,_,;,n,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0X90EB0F,],,,0B1,],,,02,],,,0b1,],,,06,],;,H_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1010000,],,,69,],,,69,],,,0B1010000,],;,q_k,,,_,:,Int,;,t,,,v,:,bZ,;,i,,,H,:,Int,),{,},Var,R,,,_,,,$_,:,Boolean,;,},Class,_,:,q8,{,},<EOF>''',
                101
            )
        )

    def test_2783(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_3{}Class L62j{Constructor (){Return ;} }Class _:_{}Class q4:c55{Val y:Boolean ;Constructor (){} }Class _{}Class P1:Q_{}''',
                '''Class,N,:,_3,{,},Class,L62j,{,Constructor,(,),{,Return,;,},},Class,_,:,_,{,},Class,q4,:,c55,{,Val,y,:,Boolean,;,Constructor,(,),{,},},Class,_,{,},Class,P1,:,Q_,{,},<EOF>''',
                101
            )
        )

    def test_2784(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:h89{}Class _M:z_0_6E{Var $_8,$_0,X5:Array [String ,0b1_0];Var $A3,$_,$6,_,C4__:Array [Array [Array [Float ,0x3],0b111],0b1_01];}Class _l__:Ls_{Val _,$n8:Array [Int ,20];}''',
                '''Class,_,:,h89,{,},Class,_M,:,z_0_6E,{,Var,$_8,,,$_0,,,X5,:,Array,[,String,,,0b10,],;,Var,$A3,,,$_,,,$6,,,_,,,C4__,:,Array,[,Array,[,Array,[,Float,,,0x3,],,,0b111,],,,0b101,],;,},Class,_l__,:,Ls_,{,Val,_,,,$n8,:,Array,[,Int,,,20,],;,},<EOF>''',
                101
            )
        )

    def test_2785(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __{}Class e{$_0B(O9:x;_:_;P,V,J:String ){}___z9(___:Array [String ,0X38];A,E,o_,_J:i_x;Y,__55,z,_KL,z:Boolean ;_:u;z5B:Float ){}Val _,$6e4_,_2,$_,_:Array [Int ,56];Ya(jA:Array [Array [Float ,28],6];_,_,_,_,p:Array [Array [Int ,2],0B1_0]){}Destructor (){ {} }}''',
                '''Class,_,{,},Class,__,{,},Class,e,{,$_0B,(,O9,:,x,;,_,:,_,;,P,,,V,,,J,:,String,),{,},___z9,(,___,:,Array,[,String,,,0X38,],;,A,,,E,,,o_,,,_J,:,i_x,;,Y,,,__55,,,z,,,_KL,,,z,:,Boolean,;,_,:,u,;,z5B,:,Float,),{,},Val,_,,,$6e4_,,,_2,,,$_,,,_,:,Array,[,Int,,,56,],;,Ya,(,jA,:,Array,[,Array,[,Float,,,28,],,,6,],;,_,,,_,,,_,,,_,,,p,:,Array,[,Array,[,Int,,,2,],,,0B10,],),{,},Destructor,(,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2786(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _:Array [String ,34];}Class __y6_:Y864{Val $__,d_u_,N9:Float ;Constructor (){}Val _,E0,$m:Boolean ;}''',
                '''Class,_,{,Var,_,:,Array,[,String,,,34,],;,},Class,__y6_,:,Y864,{,Val,$__,,,d_u_,,,N9,:,Float,;,Constructor,(,),{,},Val,_,,,E0,,,$m,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2787(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M:_{Destructor (){Val u,_B:__97;}Constructor (p4:Array [Array [Boolean ,0B101011],81]){Continue ;Break ;} }Class _:__{}''',
                '''Class,_M,:,_,{,Destructor,(,),{,Val,u,,,_B,:,__97,;,},Constructor,(,p4,:,Array,[,Array,[,Boolean,,,0B101011,],,,81,],),{,Continue,;,Break,;,},},Class,_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_2788(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b1:_{}Class _r_{Var $619:_;Constructor (_:Int ;C:Array [Boolean ,0b10]){Break ;Continue ;Break ;}Var UO,X:Array [Array [String ,010],0b101011];}''',
                '''Class,b1,:,_,{,},Class,_r_,{,Var,$619,:,_,;,Constructor,(,_,:,Int,;,C,:,Array,[,Boolean,,,0b10,],),{,Break,;,Continue,;,Break,;,},Var,UO,,,X,:,Array,[,Array,[,String,,,010,],,,0b101011,],;,},<EOF>''',
                101
            )
        )

    def test_2789(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k8__:O{}Class Q{P_(_:Array [Array [Int ,04_74_3],0xE_7_7];m__W_N__,_1,C,_:_){} }Class __{}Class LD5:_2___{Var _:__;$_(L:Array [Array [Boolean ,0b1011],06_1];UG1:Array [Array [String ,035],0x9]){z_o::$2()._2_X();} }''',
                '''Class,_k8__,:,O,{,},Class,Q,{,P_,(,_,:,Array,[,Array,[,Int,,,04743,],,,0xE77,],;,m__W_N__,,,_1,,,C,,,_,:,_,),{,},},Class,__,{,},Class,LD5,:,_2___,{,Var,_,:,__,;,$_,(,L,:,Array,[,Array,[,Boolean,,,0b1011,],,,061,],;,UG1,:,Array,[,Array,[,String,,,035,],,,0x9,],),{,z_o,::,$2,(,),.,_2_X,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2790(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{Constructor (f_x,_,_91:Array [Array [Array [Boolean ,0b101101],02],0xEC];C,M,_f:Float ){} }Class _{}Class ___p{$EgQ(){} }Class UD{Var _:Array [Array [Array [Array [Array [Int ,36],0b101101],8_2],04],0B1010];}Class I{}''',
                '''Class,B,{,Constructor,(,f_x,,,_,,,_91,:,Array,[,Array,[,Array,[,Boolean,,,0b101101,],,,02,],,,0xEC,],;,C,,,M,,,_f,:,Float,),{,},},Class,_,{,},Class,___p,{,$EgQ,(,),{,},},Class,UD,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,36,],,,0b101101,],,,82,],,,04,],,,0B1010,],;,},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_2791(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V6{Var _2F:Array [Float ,0X38];Var r:x_0JU_q;}Class _2:__4{Destructor (){} }Class J{}Class _Wj_{z_MWt(D:Float ){} }''',
                '''Class,V6,{,Var,_2F,:,Array,[,Float,,,0X38,],;,Var,r,:,x_0JU_q,;,},Class,_2,:,__4,{,Destructor,(,),{,},},Class,J,{,},Class,_Wj_,{,z_MWt,(,D,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2792(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __5:_{}Class I{__z2CB(v,kN_,_,Y:lD1m;_YvA:Float ){} }Class z:W1{$4(_:Z6;V,_:Nu_;__k,t,t8u,_v,v,U6c:Array [Array [Array [Array [Boolean ,6],0124],04],0B1001111]){} }Class _{}''',
                '''Class,__5,:,_,{,},Class,I,{,__z2CB,(,v,,,kN_,,,_,,,Y,:,lD1m,;,_YvA,:,Float,),{,},},Class,z,:,W1,{,$4,(,_,:,Z6,;,V,,,_,:,Nu_,;,__k,,,t,,,t8u,,,_v,,,v,,,U6c,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,6,],,,0124,],,,04,],,,0B1001111,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2793(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _9,$q_,DL10,$4:Float ;Constructor (_:Int ){}$_(Y,_6,b1K9:Array [Array [Boolean ,0B110001],011];_,L,_0C__:Array [Array [String ,0b111],0X7]){}Val $_:X;}''',
                '''Class,_,{,Var,_9,,,$q_,,,DL10,,,$4,:,Float,;,Constructor,(,_,:,Int,),{,},$_,(,Y,,,_6,,,b1K9,:,Array,[,Array,[,Boolean,,,0B110001,],,,011,],;,_,,,L,,,_0C__,:,Array,[,Array,[,String,,,0b111,],,,0X7,],),{,},Val,$_,:,X,;,},<EOF>''',
                101
            )
        )

    def test_2794(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G_5__:Z{Val $_1,_:Array [Array [Array [Float ,0b1111],0X6],0x33];}Class _:m{Constructor (__,_,Y:Array [String ,60]){}Destructor (){Continue ;} }Class __{}Class Y__:__{Destructor (){} }''',
                '''Class,G_5__,:,Z,{,Val,$_1,,,_,:,Array,[,Array,[,Array,[,Float,,,0b1111,],,,0X6,],,,0x33,],;,},Class,_,:,m,{,Constructor,(,__,,,_,,,Y,:,Array,[,String,,,60,],),{,},Destructor,(,),{,Continue,;,},},Class,__,{,},Class,Y__,:,__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2795(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:X_{Var e:Array [Boolean ,0b1];Constructor (){}Var $1_:_;Constructor (G:Boolean ;d:Float ;Db:Oc){}Constructor (){} }''',
                '''Class,E,:,X_,{,Var,e,:,Array,[,Boolean,,,0b1,],;,Constructor,(,),{,},Var,$1_,:,_,;,Constructor,(,G,:,Boolean,;,d,:,Float,;,Db,:,Oc,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2796(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _3g:g_{$5_(_8,_:Int ;q8:Array [Float ,0B101010]){}Val _,$6,$7,_,$q6J_:Array [Array [Array [Int ,7],0X19],97];}Class _9{}''',
                '''Class,_,{,},Class,_3g,:,g_,{,$5_,(,_8,,,_,:,Int,;,q8,:,Array,[,Float,,,0B101010,],),{,},Val,_,,,$6,,,$7,,,_,,,$q6J_,:,Array,[,Array,[,Array,[,Int,,,7,],,,0X19,],,,97,],;,},Class,_9,{,},<EOF>''',
                101
            )
        )

    def test_2797(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:P{}Class v{$_(Wj:Int ;_:Array [Float ,0b1_0];_,n,U:Array [Boolean ,0X35];b_:Array [Array [Array [Boolean ,0x5],021],6]){} }''',
                '''Class,U,:,P,{,},Class,v,{,$_,(,Wj,:,Int,;,_,:,Array,[,Float,,,0b10,],;,_,,,n,,,U,:,Array,[,Boolean,,,0X35,],;,b_,:,Array,[,Array,[,Array,[,Boolean,,,0x5,],,,021,],,,6,],),{,},},<EOF>''',
                101
            )
        )

    def test_2798(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:a{}Class _6{}Class _:__{Constructor (G,__:Array [Float ,012];H:Array [Boolean ,0X4]){}f(E,_,B:n__0;_0_Z:Array [Float ,41]){} }''',
                '''Class,_,:,a,{,},Class,_6,{,},Class,_,:,__,{,Constructor,(,G,,,__,:,Array,[,Float,,,012,],;,H,:,Array,[,Boolean,,,0X4,],),{,},f,(,E,,,_,,,B,:,n__0,;,_0_Z,:,Array,[,Float,,,41,],),{,},},<EOF>''',
                101
            )
        )

    def test_2799(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$9__1(){} }Class _{Constructor (n,_,_,_,_,w:Array [Float ,01];_Ue__:Array [Array [Array [String ,0B100011],02],8]){}Var $o:_J;}''',
                '''Class,_,{,$9__1,(,),{,},},Class,_,{,Constructor,(,n,,,_,,,_,,,_,,,_,,,w,:,Array,[,Float,,,01,],;,_Ue__,:,Array,[,Array,[,Array,[,String,,,0B100011,],,,02,],,,8,],),{,},Var,$o,:,_J,;,},<EOF>''',
                101
            )
        )

    def test_2800(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _A0_t_j65:R{}Class t:_{Val T:Array [Float ,3_6];Constructor (l:Array [Array [Boolean ,0x2C],0XB];Y_,T,_l__:w;E:Array [Float ,0X7]){}Var _,$3z:Array [Array [String ,04_6],1];}''',
                '''Class,_A0_t_j65,:,R,{,},Class,t,:,_,{,Val,T,:,Array,[,Float,,,36,],;,Constructor,(,l,:,Array,[,Array,[,Boolean,,,0x2C,],,,0XB,],;,Y_,,,T,,,_l__,:,w,;,E,:,Array,[,Float,,,0X7,],),{,},Var,_,,,$3z,:,Array,[,Array,[,String,,,046,],,,1,],;,},<EOF>''',
                101
            )
        )

    def test_2801(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (i,L:Array [Int ,0B10010];O:Array [Array [Float ,8],0X11];Xj6,__,_,_____:Int ){} }Class A:____{}Class _:E9R{}''',
                '''Class,_,{,Constructor,(,i,,,L,:,Array,[,Int,,,0B10010,],;,O,:,Array,[,Array,[,Float,,,8,],,,0X11,],;,Xj6,,,__,,,_,,,_____,:,Int,),{,},},Class,A,:,____,{,},Class,_,:,E9R,{,},<EOF>''',
                101
            )
        )

    def test_2802(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ____{$1(__7_:h;_,h2__:U64){}Destructor (){}z(){}Constructor (){} }Class A:F8{}Class B_0E_4:y8{Constructor (){} }''',
                '''Class,____,{,$1,(,__7_,:,h,;,_,,,h2__,:,U64,),{,},Destructor,(,),{,},z,(,),{,},Constructor,(,),{,},},Class,A,:,F8,{,},Class,B_0E_4,:,y8,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2803(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H{Var $9,$_:String ;}Class _f:H0{}Class I6J:D{}Class C:_{Var _K_T:Boolean ;Val $U,k_,$6:String ;}Class _:_{}Class t_N:xa__5{i1(){}Destructor (){} }''',
                '''Class,H,{,Var,$9,,,$_,:,String,;,},Class,_f,:,H0,{,},Class,I6J,:,D,{,},Class,C,:,_,{,Var,_K_T,:,Boolean,;,Val,$U,,,k_,,,$6,:,String,;,},Class,_,:,_,{,},Class,t_N,:,xa__5,{,i1,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2804(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ct{Destructor (){}Constructor (){}Var _2Y,$_,_3U,_ux2,$__,wf_0,$Y_V6,$_:_;}Class I0_{x_9_1_x(_4:Float ;nf7:Boolean ){} }Class _s:__i{b(){} }''',
                '''Class,ct,{,Destructor,(,),{,},Constructor,(,),{,},Var,_2Y,,,$_,,,_3U,,,_ux2,,,$__,,,wf_0,,,$Y_V6,,,$_,:,_,;,},Class,I0_,{,x_9_1_x,(,_4,:,Float,;,nf7,:,Boolean,),{,},},Class,_s,:,__i,{,b,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2805(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _72,_,_Uv,$8,X2o:M_;Var S:Float ;}Class _:__8{}Class d{Constructor (G_,_2,g,_:String ){} }Class _Z{Var $6:Boolean ;}''',
                '''Class,_,{,Val,_72,,,_,,,_Uv,,,$8,,,X2o,:,M_,;,Var,S,:,Float,;,},Class,_,:,__8,{,},Class,d,{,Constructor,(,G_,,,_2,,,g,,,_,:,String,),{,},},Class,_Z,{,Var,$6,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2806(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O2:t{}Class s{$_(_,V6A:A1){} }Class s5:OF{}Class _{}Class _{Constructor (__:String ;p__I:_l;Z57Rn:qO;j,_:Array [Array [Array [Array [Float ,25],0X3],07],0B1100100]){} }''',
                '''Class,O2,:,t,{,},Class,s,{,$_,(,_,,,V6A,:,A1,),{,},},Class,s5,:,OF,{,},Class,_,{,},Class,_,{,Constructor,(,__,:,String,;,p__I,:,_l,;,Z57Rn,:,qO,;,j,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,25,],,,0X3,],,,07,],,,0B1100100,],),{,},},<EOF>''',
                101
            )
        )

    def test_2807(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{}Class qN:_{Constructor (_:Int ){Return ;}Constructor (N,_:Int ;_:Float ;_:Array [Array [Array [Array [Int ,0b1],0b10000],5_7_270],6]){}Val k,$9,$__0:Array [Array [Boolean ,0x6],0b1_1];Var v:__;}''',
                '''Class,v,{,},Class,qN,:,_,{,Constructor,(,_,:,Int,),{,Return,;,},Constructor,(,N,,,_,:,Int,;,_,:,Float,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0b10000,],,,57270,],,,6,],),{,},Val,k,,,$9,,,$__0,:,Array,[,Array,[,Boolean,,,0x6,],,,0b11,],;,Var,v,:,__,;,},<EOF>''',
                101
            )
        )

    def test_2808(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _q_6b{Constructor (_:Array [Array [Int ,0B1_0],0b1010111];D,s5,k:Float ;__,__,__:Array [String ,0b1010111]){Break ;Break ;} }''',
                '''Class,_q_6b,{,Constructor,(,_,:,Array,[,Array,[,Int,,,0B10,],,,0b1010111,],;,D,,,s5,,,k,:,Float,;,__,,,__,,,__,:,Array,[,String,,,0b1010111,],),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2809(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{}Class j:_{Val $2_,l,_,$_,$z_DX:Array [Array [Array [Array [String ,0b10],0x63],0X3_5],70];}Class ud6{Destructor (){}Var _,_:m;}Class _:t{}Class _Z1e_6{}Class _{}''',
                '''Class,m,{,},Class,j,:,_,{,Val,$2_,,,l,,,_,,,$_,,,$z_DX,:,Array,[,Array,[,Array,[,Array,[,String,,,0b10,],,,0x63,],,,0X35,],,,70,],;,},Class,ud6,{,Destructor,(,),{,},Var,_,,,_,:,m,;,},Class,_,:,t,{,},Class,_Z1e_6,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2810(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _L3x_:_El9{Constructor (NUz_u_4M1_:Array [Array [Float ,0x3E],0X1A];v:Float ){}Destructor (){}Constructor (o:_){} }''',
                '''Class,_L3x_,:,_El9,{,Constructor,(,NUz_u_4M1_,:,Array,[,Array,[,Float,,,0x3E,],,,0X1A,],;,v,:,Float,),{,},Destructor,(,),{,},Constructor,(,o,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2811(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:C{}Class _:AIx{Constructor (B,z,_:Array [String ,0X8_9_0]){}Val $6_,$_,nI:Array [Array [Int ,0b10_1],47];}''',
                '''Class,c,:,C,{,},Class,_,:,AIx,{,Constructor,(,B,,,z,,,_,:,Array,[,String,,,0X890,],),{,},Val,$6_,,,$_,,,nI,:,Array,[,Array,[,Int,,,0b101,],,,47,],;,},<EOF>''',
                101
            )
        )

    def test_2812(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:y{}Class n55{$__18o_(O,_oK,_,__62:Array [Boolean ,0XE];M:A_;_:y;_0,y:Int ;__K,l:Boolean ){Var ___,_:Array [Int ,0136];} }Class _a_:y4_X{Destructor (){} }''',
                '''Class,_,:,y,{,},Class,n55,{,$__18o_,(,O,,,_oK,,,_,,,__62,:,Array,[,Boolean,,,0XE,],;,M,:,A_,;,_,:,y,;,_0,,,y,:,Int,;,__K,,,l,:,Boolean,),{,Var,___,,,_,:,Array,[,Int,,,0136,],;,},},Class,_a_,:,y4_X,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2813(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U17_6p{Q3(){Break ;}Constructor (y,E_:Array [Int ,1_0];__,U,__P7y,_,P_2:Array [Array [Float ,0b1000010],0B1010010]){} }Class i_{}Class K{}''',
                '''Class,U17_6p,{,Q3,(,),{,Break,;,},Constructor,(,y,,,E_,:,Array,[,Int,,,10,],;,__,,,U,,,__P7y,,,_,,,P_2,:,Array,[,Array,[,Float,,,0b1000010,],,,0B1010010,],),{,},},Class,i_,{,},Class,K,{,},<EOF>''',
                101
            )
        )

    def test_2814(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val df_8___7:_;Constructor (){}Constructor (){Return ;} }Class F{Constructor (_Z,_:_mq;m,E,S2:Boolean ){} }Class _72_K__:_{}''',
                '''Class,__,{,Val,df_8___7,:,_,;,Constructor,(,),{,},Constructor,(,),{,Return,;,},},Class,F,{,Constructor,(,_Z,,,_,:,_mq,;,m,,,E,,,S2,:,Boolean,),{,},},Class,_72_K__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2815(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:d___{}Class __:__{Var $G02,$S:Boolean ;}Class q4_{Var $1,Sy:Array [Boolean ,0X6];_(_,F2z8,_9_:Int ){} }Class I:N7_32_{}''',
                '''Class,_,:,d___,{,},Class,__,:,__,{,Var,$G02,,,$S,:,Boolean,;,},Class,q4_,{,Var,$1,,,Sy,:,Array,[,Boolean,,,0X6,],;,_,(,_,,,F2z8,,,_9_,:,Int,),{,},},Class,I,:,N7_32_,{,},<EOF>''',
                101
            )
        )

    def test_2816(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3:_77{}Class _61:_{}Class _:_w{Var L3y,$5,$0:Array [Array [Array [Array [String ,0b1101],05_36_476_47_3],057],0X21];}''',
                '''Class,_3,:,_77,{,},Class,_61,:,_,{,},Class,_,:,_w,{,Var,L3y,,,$5,,,$0,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1101,],,,0536476473,],,,057,],,,0X21,],;,},<EOF>''',
                101
            )
        )

    def test_2817(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__:Array [String ,71_44];___,_:Boolean ;Z_,__,D:Array [Array [Boolean ,067],0b1]){Break ;} }''',
                '''Class,_,{,Constructor,(,__,:,Array,[,String,,,7144,],;,___,,,_,:,Boolean,;,Z_,,,__,,,D,:,Array,[,Array,[,Boolean,,,067,],,,0b1,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2818(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:o{Var $CM:Float ;$_(N_,_O,W:Array [Array [Array [Int ,0B1_1],0b111],07];V6:_1){Continue ;} }Class _{Val $8,$6:Array [Boolean ,06];Destructor (){}Constructor (_:Array [String ,99]){} }Class j7_w:z{}Class _6:_p{}Class __n5_5_42g{}''',
                '''Class,_,:,o,{,Var,$CM,:,Float,;,$_,(,N_,,,_O,,,W,:,Array,[,Array,[,Array,[,Int,,,0B11,],,,0b111,],,,07,],;,V6,:,_1,),{,Continue,;,},},Class,_,{,Val,$8,,,$6,:,Array,[,Boolean,,,06,],;,Destructor,(,),{,},Constructor,(,_,:,Array,[,String,,,99,],),{,},},Class,j7_w,:,z,{,},Class,_6,:,_p,{,},Class,__n5_5_42g,{,},<EOF>''',
                101
            )
        )

    def test_2819(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _r{}Class _{}Class _71m{}Class C:_{M0(_B:_){}Val $h_,$__:Array [Array [Array [Int ,0X10],0B1],0xDBEB];Destructor (){} }''',
                '''Class,_r,{,},Class,_,{,},Class,_71m,{,},Class,C,:,_,{,M0,(,_B,:,_,),{,},Val,$h_,,,$__,:,Array,[,Array,[,Array,[,Int,,,0X10,],,,0B1,],,,0xDBEB,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2820(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _f:G_{}Class y_:__{}Class _{}Class Z5QO:____{Rl_m(_:_;_0,w,_,_,vM1_G:String ;e,CU:Float ){Continue ;} }Class _Z__S{Constructor (__3__:o){} }''',
                '''Class,_f,:,G_,{,},Class,y_,:,__,{,},Class,_,{,},Class,Z5QO,:,____,{,Rl_m,(,_,:,_,;,_0,,,w,,,_,,,_,,,vM1_G,:,String,;,e,,,CU,:,Float,),{,Continue,;,},},Class,_Z__S,{,Constructor,(,__3__,:,o,),{,},},<EOF>''',
                101
            )
        )

    def test_2821(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:_d40_{$d_AI_j(){}Var __5_P,_:Array [Array [Float ,0B1_0_0],0XF];Var $q:Array [Float ,01];Var x_Jz_:Array [Array [Array [String ,0X9],0B1011010],06];}''',
                '''Class,h,:,_d40_,{,$d_AI_j,(,),{,},Var,__5_P,,,_,:,Array,[,Array,[,Float,,,0B100,],,,0XF,],;,Var,$q,:,Array,[,Float,,,01,],;,Var,x_Jz_,:,Array,[,Array,[,Array,[,String,,,0X9,],,,0B1011010,],,,06,],;,},<EOF>''',
                101
            )
        )

    def test_2822(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _O{Destructor (){} }Class I6{}Class y:I{Destructor (){}Val M8,$_,_,o:Array [Array [Array [Float ,0B1],01],0X6_0BE];}Class _:rP9_{}Class C:_z{Val f_:Array [Int ,30];}''',
                '''Class,_O,{,Destructor,(,),{,},},Class,I6,{,},Class,y,:,I,{,Destructor,(,),{,},Val,M8,,,$_,,,_,,,o,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,01,],,,0X60BE,],;,},Class,_,:,rP9_,{,},Class,C,:,_z,{,Val,f_,:,Array,[,Int,,,30,],;,},<EOF>''',
                101
            )
        )

    def test_2823(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J__:S{$8(_,_,_:_;S_:Array [Array [String ,0X4_2],0b1_111];__Z:_){} }Class _:O_{Var $U:qu;}Class Kq:e3{$z_(___,Q:__){Break ;} }''',
                '''Class,J__,:,S,{,$8,(,_,,,_,,,_,:,_,;,S_,:,Array,[,Array,[,String,,,0X42,],,,0b1111,],;,__Z,:,_,),{,},},Class,_,:,O_,{,Var,$U,:,qu,;,},Class,Kq,:,e3,{,$z_,(,___,,,Q,:,__,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2824(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1sQ:N_{Val $2M_8,$90__,_53:String ;Constructor (____5nl,_5__:Array [Array [Array [Array [Int ,0b10110],0X4],0b10110],0B1]){} }''',
                '''Class,_1sQ,:,N_,{,Val,$2M_8,,,$90__,,,_53,:,String,;,Constructor,(,____5nl,,,_5__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b10110,],,,0X4,],,,0b10110,],,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_2825(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class ___:S{Var $9:Y;}Class _:_e__{Constructor (_,_4,h:Array [Array [Array [Array [Float ,0B1101],43],43],6];_,X,k13t,P:_M;lPj,T9L:Float ;_:Int ){} }''',
                '''Class,_,:,_,{,},Class,___,:,S,{,Var,$9,:,Y,;,},Class,_,:,_e__,{,Constructor,(,_,,,_4,,,h,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1101,],,,43,],,,43,],,,6,],;,_,,,X,,,k13t,,,P,:,_M,;,lPj,,,T9L,:,Float,;,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_2826(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8_160{$_(_s:Array [Array [Array [Array [Float ,0b1],5_2],063],0B1_0];Q:V;N:Array [Array [Boolean ,063],0B11];e:Int ;D,_,_X_,_,_:_5l_){} }''',
                '''Class,_8_160,{,$_,(,_s,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,52,],,,063,],,,0B10,],;,Q,:,V,;,N,:,Array,[,Array,[,Boolean,,,063,],,,0B11,],;,e,:,Int,;,D,,,_,,,_X_,,,_,,,_,:,_5l_,),{,},},<EOF>''',
                101
            )
        )

    def test_2827(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:V{}Class __{Destructor (){} }Class d{Val $M_b_tPg:Array [Array [Array [Array [Array [Array [Float ,0101],0B1],0101],0X64],0B10],0X64];}''',
                '''Class,n,:,V,{,},Class,__,{,Destructor,(,),{,},},Class,d,{,Val,$M_b_tPg,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0101,],,,0B1,],,,0101,],,,0X64,],,,0B10,],,,0X64,],;,},<EOF>''',
                101
            )
        )

    def test_2828(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _b:_11{Constructor (D_5D4:P_4_;y7:Float ;__:Int ;fkT,X_:Array [Float ,0xD]){}Constructor (F_,_,_,_4x,_,Le:t){} }Class _:s{Var $1_:Array [Array [Array [Array [Array [Float ,014],6],014],6],01];$r(){} }''',
                '''Class,_b,:,_11,{,Constructor,(,D_5D4,:,P_4_,;,y7,:,Float,;,__,:,Int,;,fkT,,,X_,:,Array,[,Float,,,0xD,],),{,},Constructor,(,F_,,,_,,,_,,,_4x,,,_,,,Le,:,t,),{,},},Class,_,:,s,{,Var,$1_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,014,],,,6,],,,014,],,,6,],,,01,],;,$r,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2829(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Constructor (pt:Array [Array [String ,100],032];_Bm_,_3,_,G:_;___,_,__:Float ;_,p_:Array [Array [String ,0b1001010],1_8_75_9_2_9]){} }''',
                '''Class,_,:,__,{,Constructor,(,pt,:,Array,[,Array,[,String,,,100,],,,032,],;,_Bm_,,,_3,,,_,,,G,:,_,;,___,,,_,,,__,:,Float,;,_,,,p_,:,Array,[,Array,[,String,,,0b1001010,],,,1875929,],),{,},},<EOF>''',
                101
            )
        )

    def test_2830(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:h_{}Class _z:v__{}Class W{}Class _Y{Var _,__y,_,$_Sp___5v:Array [Boolean ,07];Constructor (X,_:b;__:String ){} }''',
                '''Class,q,:,h_,{,},Class,_z,:,v__,{,},Class,W,{,},Class,_Y,{,Var,_,,,__y,,,_,,,$_Sp___5v,:,Array,[,Boolean,,,07,],;,Constructor,(,X,,,_,:,b,;,__,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2831(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:V{}Class Ep:x{Destructor (){Continue ;}Val _:Array [Array [Array [Array [Float ,05_6],33],051],962];Var H,_,$_:g;}Class s3:w6{}''',
                '''Class,_,:,V,{,},Class,Ep,:,x,{,Destructor,(,),{,Continue,;,},Val,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,056,],,,33,],,,051,],,,962,],;,Var,H,,,_,,,$_,:,g,;,},Class,s3,:,w6,{,},<EOF>''',
                101
            )
        )

    def test_2832(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$_(_e:Array [Int ,76]){}F_(_T__,_,_k:_;_,_a:Array [Float ,76];_:Array [Array [Boolean ,0x45],5]){} }Class _8y2{}''',
                '''Class,_,:,_,{,$_,(,_e,:,Array,[,Int,,,76,],),{,},F_,(,_T__,,,_,,,_k,:,_,;,_,,,_a,:,Array,[,Float,,,76,],;,_,:,Array,[,Array,[,Boolean,,,0x45,],,,5,],),{,},},Class,_8y2,{,},<EOF>''',
                101
            )
        )

    def test_2833(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6{}Class _:_{}Class b__PTw:o{Constructor (){Continue ;}$_397(Q9_,___mVMG4:_){}Val _,_,$_m:TF__r754h7;}''',
                '''Class,_6,{,},Class,_,:,_,{,},Class,b__PTw,:,o,{,Constructor,(,),{,Continue,;,},$_397,(,Q9_,,,___mVMG4,:,_,),{,},Val,_,,,_,,,$_m,:,TF__r754h7,;,},<EOF>''',
                101
            )
        )

    def test_2834(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _:_;__(___:Array [String ,0B1000100];_:Array [Array [Array [Array [Array [Array [Boolean ,067],19],0b101110],02],067],4_32]){} }''',
                '''Class,_,{,Var,_,:,_,;,__,(,___,:,Array,[,String,,,0B1000100,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,067,],,,19,],,,0b101110,],,,02,],,,067,],,,432,],),{,},},<EOF>''',
                101
            )
        )

    def test_2835(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _uo:o2__{Destructor (){__::$_8.fe_.N.h._Tp55();}Constructor (_,r:String ){} }Class _K_:AT7{Val _36,O,b:Array [Float ,045];}''',
                '''Class,_uo,:,o2__,{,Destructor,(,),{,__,::,$_8,.,fe_,.,N,.,h,.,_Tp55,(,),;,},Constructor,(,_,,,r,:,String,),{,},},Class,_K_,:,AT7,{,Val,_36,,,O,,,b,:,Array,[,Float,,,045,],;,},<EOF>''',
                101
            )
        )

    def test_2836(self):
        self.assertTrue(
            TestLexer.test(
                '''Class aw_:t__{Constructor (){___::$_()._.C_();} }Class __:Y{Destructor (){Break ;Continue ;}Pz(wC:_3K){} }Class _7{}Class _{Val $_:Array [Int ,0X33];Constructor (){}Constructor (){} }Class gs{}Class _:_7_{}Class _:tDm{}''',
                '''Class,aw_,:,t__,{,Constructor,(,),{,___,::,$_,(,),.,_,.,C_,(,),;,},},Class,__,:,Y,{,Destructor,(,),{,Break,;,Continue,;,},Pz,(,wC,:,_3K,),{,},},Class,_7,{,},Class,_,{,Val,$_,:,Array,[,Int,,,0X33,],;,Constructor,(,),{,},Constructor,(,),{,},},Class,gs,{,},Class,_,:,_7_,{,},Class,_,:,tDm,{,},<EOF>''',
                101
            )
        )

    def test_2837(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:I_A{}Class h{Val U:_9;e3(__,E_:Int ;_,gRR_,G,_:Array [Float ,07];R3d:Array [String ,0x7]){}Var _l:Array [Float ,0B1000111];}''',
                '''Class,J,:,I_A,{,},Class,h,{,Val,U,:,_9,;,e3,(,__,,,E_,:,Int,;,_,,,gRR_,,,G,,,_,:,Array,[,Float,,,07,],;,R3d,:,Array,[,String,,,0x7,],),{,},Var,_l,:,Array,[,Float,,,0B1000111,],;,},<EOF>''',
                101
            )
        )

    def test_2838(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:_{Constructor (oHo___,_7c1:Array [Array [Boolean ,074],0b1];__:Array [Array [String ,0b1_00_0],0b1]){ {Break ;Continue ;} }}''',
                '''Class,k,:,_,{,Constructor,(,oHo___,,,_7c1,:,Array,[,Array,[,Boolean,,,074,],,,0b1,],;,__,:,Array,[,Array,[,String,,,0b1000,],,,0b1,],),{,{,Break,;,Continue,;,},},},<EOF>''',
                101
            )
        )

    def test_2839(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{}Class h:_{Constructor (t_:Array [Boolean ,0X8];_:Array [Int ,1];P:Array [Array [Int ,90_6],046];x:Array [Int ,0x10]){} }''',
                '''Class,M,{,},Class,h,:,_,{,Constructor,(,t_,:,Array,[,Boolean,,,0X8,],;,_,:,Array,[,Int,,,1,],;,P,:,Array,[,Array,[,Int,,,906,],,,046,],;,x,:,Array,[,Int,,,0x10,],),{,},},<EOF>''',
                101
            )
        )

    def test_2840(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o6_{Var $__j:q;Val $fx__,$X,U,$_9d4,$23:L;Var $_,$_A_:Array [Array [Array [Array [Boolean ,0x4],0x9],0X9],0X9];}''',
                '''Class,o6_,{,Var,$__j,:,q,;,Val,$fx__,,,$X,,,U,,,$_9d4,,,$23,:,L,;,Var,$_,,,$_A_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x4,],,,0x9,],,,0X9,],,,0X9,],;,},<EOF>''',
                101
            )
        )

    def test_2841(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:V{}Class __0__52_:p{_(__2d2,c,A,jd_:Array [Array [Array [Float ,0B1],0X7],0b100110];___vO,O_,_:String ){} }Class cd{Val $sZ,$i,g:_;Destructor (){ {}Var X5:Array [Boolean ,0b100110];}Val R,fK:Float ;}''',
                '''Class,__,:,V,{,},Class,__0__52_,:,p,{,_,(,__2d2,,,c,,,A,,,jd_,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0X7,],,,0b100110,],;,___vO,,,O_,,,_,:,String,),{,},},Class,cd,{,Val,$sZ,,,$i,,,g,:,_,;,Destructor,(,),{,{,},Var,X5,:,Array,[,Boolean,,,0b100110,],;,},Val,R,,,fK,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2842(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5__{}Class _g{}Class _:i{}Class _i:_{}Class S{Val v86f_,J:_5;Constructor (_:Int ;_,H:String ){} }Class _{}Class _Z:_{Constructor (_:Float ){Val E:Boolean ;Continue ;}Var _:String ;}''',
                '''Class,_5__,{,},Class,_g,{,},Class,_,:,i,{,},Class,_i,:,_,{,},Class,S,{,Val,v86f_,,,J,:,_5,;,Constructor,(,_,:,Int,;,_,,,H,:,String,),{,},},Class,_,{,},Class,_Z,:,_,{,Constructor,(,_,:,Float,),{,Val,E,:,Boolean,;,Continue,;,},Var,_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2843(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _x_:u{Var __:zd;Val dN4,x:String ;}Class __{_(_,Y,_:String ){}Var $__f,$_4,T,$_:Array [Array [Boolean ,0X58],0x4];Var v3__,$_9:Boolean ;}''',
                '''Class,_x_,:,u,{,Var,__,:,zd,;,Val,dN4,,,x,:,String,;,},Class,__,{,_,(,_,,,Y,,,_,:,String,),{,},Var,$__f,,,$_4,,,T,,,$_,:,Array,[,Array,[,Boolean,,,0X58,],,,0x4,],;,Var,v3__,,,$_9,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2844(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:_{Val $1,$3575:Array [Array [Array [Boolean ,06],0X18],42];Constructor (){ {} }Constructor (){Break ;}Var ll:e;}''',
                '''Class,Y,:,_,{,Val,$1,,,$3575,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,0X18,],,,42,],;,Constructor,(,),{,{,},},Constructor,(,),{,Break,;,},Var,ll,:,e,;,},<EOF>''',
                101
            )
        )

    def test_2845(self):
        self.assertTrue(
            TestLexer.test(
                '''Class fV{}Class p:_{$__(_H_,__:Int ;_:x;__p:_;_,_7:D;_:_5P7_X;_O:R;_,_:Int ;_,_6,Ry,__:p;_9:_;_:Array [Int ,05]){}$dA(G:h){} }Class L__0:l__{}''',
                '''Class,fV,{,},Class,p,:,_,{,$__,(,_H_,,,__,:,Int,;,_,:,x,;,__p,:,_,;,_,,,_7,:,D,;,_,:,_5P7_X,;,_O,:,R,;,_,,,_,:,Int,;,_,,,_6,,,Ry,,,__,:,p,;,_9,:,_,;,_,:,Array,[,Int,,,05,],),{,},$dA,(,G,:,h,),{,},},Class,L__0,:,l__,{,},<EOF>''',
                101
            )
        )

    def test_2846(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t8:e{Var _,$3,_:P8;$_(_:Array [Array [Boolean ,0b11],9];_4_:_;G,x:Int ;_,K,sU_M,ni4_6,Z,l_:Array [String ,0b1_1_0_11];I:String ){}Var D:__B8_3;}''',
                '''Class,t8,:,e,{,Var,_,,,$3,,,_,:,P8,;,$_,(,_,:,Array,[,Array,[,Boolean,,,0b11,],,,9,],;,_4_,:,_,;,G,,,x,:,Int,;,_,,,K,,,sU_M,,,ni4_6,,,Z,,,l_,:,Array,[,String,,,0b11011,],;,I,:,String,),{,},Var,D,:,__B8_3,;,},<EOF>''',
                101
            )
        )

    def test_2847(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k4:y_8{Constructor (_5:Array [String ,0X7C];g1:o_0){}Var A,Y_:Array [Array [Boolean ,3],0B1_0];Var $4_,_,__:Array [Array [String ,061],0B1];}''',
                '''Class,k4,:,y_8,{,Constructor,(,_5,:,Array,[,String,,,0X7C,],;,g1,:,o_0,),{,},Var,A,,,Y_,:,Array,[,Array,[,Boolean,,,3,],,,0B10,],;,Var,$4_,,,_,,,__,:,Array,[,Array,[,String,,,061,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_2848(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_7:_7{}Class v{}Class _{Var O:Array [Boolean ,0B11];}Class __:_{L_OV(_92_r_,K8,p:Boolean ;r,_:_6;Z5_i_,_1_,r:Array [Array [String ,045],045];Q,HZ,VP,_i,_:d_;W_,c_3__,_71_3S_:_;R,___3:_;_s495V:Int ){} }Class _{}''',
                '''Class,h_7,:,_7,{,},Class,v,{,},Class,_,{,Var,O,:,Array,[,Boolean,,,0B11,],;,},Class,__,:,_,{,L_OV,(,_92_r_,,,K8,,,p,:,Boolean,;,r,,,_,:,_6,;,Z5_i_,,,_1_,,,r,:,Array,[,Array,[,String,,,045,],,,045,],;,Q,,,HZ,,,VP,,,_i,,,_,:,d_,;,W_,,,c_3__,,,_71_3S_,:,_,;,R,,,___3,:,_,;,_s495V,:,Int,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2849(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class e{Constructor (_:l_;C:Boolean ;ha_v_,o,Mv_,_:v;U:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0124],25],35_34],25],0B1_0_1],011],0124],0b10],15_6]){Continue ;} }''',
                '''Class,_,{,},Class,e,{,Constructor,(,_,:,l_,;,C,:,Boolean,;,ha_v_,,,o,,,Mv_,,,_,:,v,;,U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0124,],,,25,],,,3534,],,,25,],,,0B101,],,,011,],,,0124,],,,0b10,],,,156,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2850(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:a{}Class P{Var wj_6,____,_,$_,$_:ug;}Class Rf:A{}Class oCF_U:A_2{Var $_2:Array [Array [Array [Int ,3],0b1100011],0130];Constructor (){} }Class T_:M{}''',
                '''Class,U,:,a,{,},Class,P,{,Var,wj_6,,,____,,,_,,,$_,,,$_,:,ug,;,},Class,Rf,:,A,{,},Class,oCF_U,:,A_2,{,Var,$_2,:,Array,[,Array,[,Array,[,Int,,,3,],,,0b1100011,],,,0130,],;,Constructor,(,),{,},},Class,T_,:,M,{,},<EOF>''',
                101
            )
        )

    def test_2851(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H96:_{Constructor (_64q,_X:_;_Ga_6:_;_i:_v3;_:a3){} }Class _:j{Var _:O;}Class _H{}Class _{}Class Mq_Q:F{Var Vn,$6__:___;}''',
                '''Class,H96,:,_,{,Constructor,(,_64q,,,_X,:,_,;,_Ga_6,:,_,;,_i,:,_v3,;,_,:,a3,),{,},},Class,_,:,j,{,Var,_,:,O,;,},Class,_H,{,},Class,_,{,},Class,Mq_Q,:,F,{,Var,Vn,,,$6__,:,___,;,},<EOF>''',
                101
            )
        )

    def test_2852(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z:_{$g(n_d1,A_:Array [Array [Float ,037],037];__h982,__07Q_O3,t,_0893:Boolean ){}Constructor (__31,xR_,U5cs:Array [Float ,0b1001101];__:Float ;lx,BtyRrn,Vc:Float ){} }''',
                '''Class,Z,:,_,{,$g,(,n_d1,,,A_,:,Array,[,Array,[,Float,,,037,],,,037,],;,__h982,,,__07Q_O3,,,t,,,_0893,:,Boolean,),{,},Constructor,(,__31,,,xR_,,,U5cs,:,Array,[,Float,,,0b1001101,],;,__,:,Float,;,lx,,,BtyRrn,,,Vc,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2853(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3MKZ:_{Constructor (____q:_;__:Array [Boolean ,0x3A];_2_19,_,B_2,_2,_:_O;E_R,r,R,o,e,v,K:String ){} }Class _{}''',
                '''Class,_3MKZ,:,_,{,Constructor,(,____q,:,_,;,__,:,Array,[,Boolean,,,0x3A,],;,_2_19,,,_,,,B_2,,,_2,,,_,:,_O,;,E_R,,,r,,,R,,,o,,,e,,,v,,,K,:,String,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2854(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:G2{Val P,__7_:__;Destructor (){}Var y_,j_p___6:String ;Destructor (){} }Class _{}Class _L:_{Constructor (e1:b_){Return ;}Var $_:Boolean ;Constructor (){} }Class _D{jV_(){Return ;} }Class Y8:_je{}''',
                '''Class,g,:,G2,{,Val,P,,,__7_,:,__,;,Destructor,(,),{,},Var,y_,,,j_p___6,:,String,;,Destructor,(,),{,},},Class,_,{,},Class,_L,:,_,{,Constructor,(,e1,:,b_,),{,Return,;,},Var,$_,:,Boolean,;,Constructor,(,),{,},},Class,_D,{,jV_,(,),{,Return,;,},},Class,Y8,:,_je,{,},<EOF>''',
                101
            )
        )

    def test_2855(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class U{_34K(_,BC,_:Array [Array [Float ,0B1],0x25];_K,_,_7Dj__,t,U:Array [String ,0B1010101]){}Val _:String ;}Class n:__{Var s,$_:Array [String ,05];Val e_5J:i2W5_;Var O,$_,$g8G_,N8x,_I:Array [Array [Boolean ,0x25],8];}''',
                '''Class,_,{,},Class,U,{,_34K,(,_,,,BC,,,_,:,Array,[,Array,[,Float,,,0B1,],,,0x25,],;,_K,,,_,,,_7Dj__,,,t,,,U,:,Array,[,String,,,0B1010101,],),{,},Val,_,:,String,;,},Class,n,:,__,{,Var,s,,,$_,:,Array,[,String,,,05,],;,Val,e_5J,:,i2W5_,;,Var,O,,,$_,,,$g8G_,,,N8x,,,_I,:,Array,[,Array,[,Boolean,,,0x25,],,,8,],;,},<EOF>''',
                101
            )
        )

    def test_2856(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W_:___{Val $1:__;}Class v_{Constructor (ww:__;Y:E;MIQ:Array [Array [Array [Int ,0142],0X2C],0XFD];N:Array [Int ,02_7]){}_4P(){}Val $_9:Boolean ;$76(_,C,W:Q;g7_325:Float ;__,SS3_4,F:Array [String ,0x1F];_pc,VP,_8:Array [Array [Array [Float ,0142],56],0142];a:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B1],0X7B],45_1],0b100_0],0X2C],1],03],0142],0B1]){Break ;} }Class _{}Class _:M{}''',
                '''Class,W_,:,___,{,Val,$1,:,__,;,},Class,v_,{,Constructor,(,ww,:,__,;,Y,:,E,;,MIQ,:,Array,[,Array,[,Array,[,Int,,,0142,],,,0X2C,],,,0XFD,],;,N,:,Array,[,Int,,,027,],),{,},_4P,(,),{,},Val,$_9,:,Boolean,;,$76,(,_,,,C,,,W,:,Q,;,g7_325,:,Float,;,__,,,SS3_4,,,F,:,Array,[,String,,,0x1F,],;,_pc,,,VP,,,_8,:,Array,[,Array,[,Array,[,Float,,,0142,],,,56,],,,0142,],;,a,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0X7B,],,,451,],,,0b1000,],,,0X2C,],,,1,],,,03,],,,0142,],,,0B1,],),{,Break,;,},},Class,_,{,},Class,_,:,M,{,},<EOF>''',
                101
            )
        )

    def test_2857(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l_:_9m6{$f(_m_:Int ){ {Continue ;} }}Class _:_{Constructor (){} }Class F:i_{Destructor (){}Val _,$F7:_;Constructor (_3:y;_s,_,M,_:L){Continue ;} }''',
                '''Class,l_,:,_9m6,{,$f,(,_m_,:,Int,),{,{,Continue,;,},},},Class,_,:,_,{,Constructor,(,),{,},},Class,F,:,i_,{,Destructor,(,),{,},Val,_,,,$F7,:,_,;,Constructor,(,_3,:,y,;,_s,,,_,,,M,,,_,:,L,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2858(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:C{J3_(__,Xc____2:Array [Array [Array [Array [Array [Array [Boolean ,0xD_A_CD],0x2],0b111_1],0X48],0X6B_6],68]){} }''',
                '''Class,_,:,C,{,J3_,(,__,,,Xc____2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xDACD,],,,0x2,],,,0b1111,],,,0X48,],,,0X6B6,],,,68,],),{,},},<EOF>''',
                101
            )
        )

    def test_2859(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:x7X_{Var $65:Array [Array [Array [Array [Array [Boolean ,0b1],03],74],0X1F],07_6];}Class w:__9{Constructor (r:Array [Array [Array [Int ,74],012],02_3_3_3];C3C___Z:Float ){}Var _g,$z:Boolean ;Val A:Float ;}''',
                '''Class,C,:,x7X_,{,Var,$65,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,03,],,,74,],,,0X1F,],,,076,],;,},Class,w,:,__9,{,Constructor,(,r,:,Array,[,Array,[,Array,[,Int,,,74,],,,012,],,,02333,],;,C3C___Z,:,Float,),{,},Var,_g,,,$z,:,Boolean,;,Val,A,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2860(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (C,M0w:Array [Array [Array [String ,01],0X6_6],0617];_,_,_v:Int ){} }Class D:T{Val $nD5:_;}''',
                '''Class,_,{,Constructor,(,C,,,M0w,:,Array,[,Array,[,Array,[,String,,,01,],,,0X66,],,,0617,],;,_,,,_,,,_v,:,Int,),{,},},Class,D,:,T,{,Val,$nD5,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2861(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{}Class _w0:N{Constructor (){} }Class _:Gn8V_{Destructor (){Continue ;_::$S();}_4s61b(){Break ;Continue ;} }''',
                '''Class,o,{,},Class,_w0,:,N,{,Constructor,(,),{,},},Class,_,:,Gn8V_,{,Destructor,(,),{,Continue,;,_,::,$S,(,),;,},_4s61b,(,),{,Break,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2862(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P5_{}Class __:_7_2{$T(_:Array [Array [Array [Boolean ,016],016],0b1]){}Constructor (_:t){}Val $____,f34W0i,f166:Array [Array [Boolean ,0b1],0B11];}''',
                '''Class,P5_,{,},Class,__,:,_7_2,{,$T,(,_,:,Array,[,Array,[,Array,[,Boolean,,,016,],,,016,],,,0b1,],),{,},Constructor,(,_,:,t,),{,},Val,$____,,,f34W0i,,,f166,:,Array,[,Array,[,Boolean,,,0b1,],,,0B11,],;,},<EOF>''',
                101
            )
        )

    def test_2863(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class b1:_{Val $_:_;}Class N7_{Constructor (){}Destructor (){} }Class F_{}Class ____:A{_uq(){}_(_:Boolean ){ {}Break ;} }Class _C2__:Z_8{Val $i,_30:Boolean ;}''',
                '''Class,_,{,},Class,b1,:,_,{,Val,$_,:,_,;,},Class,N7_,{,Constructor,(,),{,},Destructor,(,),{,},},Class,F_,{,},Class,____,:,A,{,_uq,(,),{,},_,(,_,:,Boolean,),{,{,},Break,;,},},Class,_C2__,:,Z_8,{,Val,$i,,,_30,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2864(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A58y:__9{Constructor (_0_d9:_;_,m:Array [Array [Array [Array [Boolean ,0xB],04],05_704_0_2],0B110];r,__:Float ;K_:e){}Val __81J:_;}''',
                '''Class,A58y,:,__9,{,Constructor,(,_0_d9,:,_,;,_,,,m,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xB,],,,04,],,,0570402,],,,0B110,],;,r,,,__,:,Float,;,K_,:,e,),{,},Val,__81J,:,_,;,},<EOF>''',
                101
            )
        )

    def test_2865(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:f_b{Var $_,$tu_:_;$53_(h,j:String ){Continue ;_v::$6().b1.m__P.h5.ZotqY();_jS2::$_KI7._o._B._();} }Class _:jM7q{}''',
                '''Class,W,:,f_b,{,Var,$_,,,$tu_,:,_,;,$53_,(,h,,,j,:,String,),{,Continue,;,_v,::,$6,(,),.,b1,.,m__P,.,h5,.,ZotqY,(,),;,_jS2,::,$_KI7,.,_o,.,_B,.,_,(,),;,},},Class,_,:,jM7q,{,},<EOF>''',
                101
            )
        )

    def test_2866(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8:_K{$_(_3,F:_;_:Int ){}Var _:__2=!g::$y_W4k_2.__G_._();Val $9:Float ;Var $3_:Array [Array [Array [Boolean ,0x1A],0X6D_7],77];$__(){} }Class _{Constructor (D_6a,UN_v_Nl92e4_4G:Int ;z:Int ){ {} }}''',
                '''Class,_8,:,_K,{,$_,(,_3,,,F,:,_,;,_,:,Int,),{,},Var,_,:,__2,=,!,g,::,$y_W4k_2,.,__G_,.,_,(,),;,Val,$9,:,Float,;,Var,$3_,:,Array,[,Array,[,Array,[,Boolean,,,0x1A,],,,0X6D7,],,,77,],;,$__,(,),{,},},Class,_,{,Constructor,(,D_6a,,,UN_v_Nl92e4_4G,:,Int,;,z,:,Int,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2867(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Y{I(J,g38,_f:Array [Array [Boolean ,053],8_5];D,u:Boolean ;e,_:GVX;_1w,Q4_,_H,i1,_,_8hm:Boolean ){} }''',
                '''Class,_,:,Y,{,I,(,J,,,g38,,,_f,:,Array,[,Array,[,Boolean,,,053,],,,85,],;,D,,,u,:,Boolean,;,e,,,_,:,GVX,;,_1w,,,Q4_,,,_H,,,i1,,,_,,,_8hm,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2868(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{}Class _:R_{Constructor (s:Array [Array [Array [Array [Array [Int ,02],60],7],60],0115];_6:Float ){Return ;} }Class Y2y:k{}''',
                '''Class,X,{,},Class,_,:,R_,{,Constructor,(,s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,02,],,,60,],,,7,],,,60,],,,0115,],;,_6,:,Float,),{,Return,;,},},Class,Y2y,:,k,{,},<EOF>''',
                101
            )
        )

    def test_2869(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:i2{Val $30:Xu;}Class _{Destructor (){d::$_w__();} }Class M{Var qH0,_,$5:Array [Array [Array [Array [Array [Array [Int ,012],40],0xA],83_2],4],0b111_10];}''',
                '''Class,_,{,},Class,_,:,i2,{,Val,$30,:,Xu,;,},Class,_,{,Destructor,(,),{,d,::,$_w__,(,),;,},},Class,M,{,Var,qH0,,,_,,,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,012,],,,40,],,,0xA,],,,832,],,,4,],,,0b11110,],;,},<EOF>''',
                101
            )
        )

    def test_2870(self):
        self.assertTrue(
            TestLexer.test(
                '''Class hO{Val $3_:Float ;Val $_E,$_,$1Y:kSa;$_(qd__,_i:Array [String ,52]){}Val C_J__,$isN_,_:Array [String ,0b11111];}''',
                '''Class,hO,{,Val,$3_,:,Float,;,Val,$_E,,,$_,,,$1Y,:,kSa,;,$_,(,qd__,,,_i,:,Array,[,String,,,52,],),{,},Val,C_J__,,,$isN_,,,_,:,Array,[,String,,,0b11111,],;,},<EOF>''',
                101
            )
        )

    def test_2871(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:rs__{Constructor (L:Array [Boolean ,020_20];_,__,_:Array [Array [Array [Array [Array [Int ,0x5],57],6_823],0B1_0],0xC];_k:f){}Var Y:N;j(_:Array [Array [Array [Array [Array [Array [Array [Boolean ,027],0b10],0b100000],07],2_2],0xD1],0x53]){}Destructor (){} }Class __{}''',
                '''Class,_,:,rs__,{,Constructor,(,L,:,Array,[,Boolean,,,02020,],;,_,,,__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x5,],,,57,],,,6823,],,,0B10,],,,0xC,],;,_k,:,f,),{,},Var,Y,:,N,;,j,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,027,],,,0b10,],,,0b100000,],,,07,],,,22,],,,0xD1,],,,0x53,],),{,},Destructor,(,),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_2872(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ur:e{Destructor (){Break ;}Destructor (){}Var $E,o0:Array [Array [Array [String ,02],0b111100],04];Val __:Boolean ;}''',
                '''Class,ur,:,e,{,Destructor,(,),{,Break,;,},Destructor,(,),{,},Var,$E,,,o0,:,Array,[,Array,[,Array,[,String,,,02,],,,0b111100,],,,04,],;,Val,__,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_2873(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:r24xr__r1c{$n(_o:Array [Array [Array [Array [Int ,0xE_C0],0b111001],0b1],05];D,F:N;_:String ;o:D){}Constructor (_:Boolean ){} }Class y3{Var $rp_,_,$r,$r,g38:Array [Float ,34];}''',
                '''Class,T,:,r24xr__r1c,{,$n,(,_o,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xEC0,],,,0b111001,],,,0b1,],,,05,],;,D,,,F,:,N,;,_,:,String,;,o,:,D,),{,},Constructor,(,_,:,Boolean,),{,},},Class,y3,{,Var,$rp_,,,_,,,$r,,,$r,,,g38,:,Array,[,Float,,,34,],;,},<EOF>''',
                101
            )
        )

    def test_2874(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{}Class B__{}Class _{Var __M_,s:_;_(Y_U,_,_,_:dPG;Sr:Array [Array [Array [Array [Array [Array [Int ,3],01],84],0B11],0X1],02];_:Float ){} }Class _:oAi{}Class _{Val $C:Int ;}''',
                '''Class,___,{,},Class,B__,{,},Class,_,{,Var,__M_,,,s,:,_,;,_,(,Y_U,,,_,,,_,,,_,:,dPG,;,Sr,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,3,],,,01,],,,84,],,,0B11,],,,0X1,],,,02,],;,_,:,Float,),{,},},Class,_,:,oAi,{,},Class,_,{,Val,$C,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_2875(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:u_{Var _:Array [Array [Array [Array [Array [Array [Array [String ,27],0B100100],05],0b10111],0b10111],037],0B100100];_(_2:Int ;cw5,_3,_,MG:String ){}Var $_,g01__S:Array [Int ,76];}''',
                '''Class,__,:,u_,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,27,],,,0B100100,],,,05,],,,0b10111,],,,0b10111,],,,037,],,,0B100100,],;,_,(,_2,:,Int,;,cw5,,,_3,,,_,,,MG,:,String,),{,},Var,$_,,,g01__S,:,Array,[,Int,,,76,],;,},<EOF>''',
                101
            )
        )

    def test_2876(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N{_(U_W:_;_:p7){ {} }Var _:Float ;Val $_M_jw7,$I_7,$__,_4:Array [Int ,0b1_00];Var $_,$_,$9:Array [Boolean ,07];}''',
                '''Class,N,{,_,(,U_W,:,_,;,_,:,p7,),{,{,},},Var,_,:,Float,;,Val,$_M_jw7,,,$I_7,,,$__,,,_4,:,Array,[,Int,,,0b100,],;,Var,$_,,,$_,,,$9,:,Array,[,Boolean,,,07,],;,},<EOF>''',
                101
            )
        )

    def test_2877(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{}Class __{_0(z,_8,X5:r;_3F:T_4Vp;i,_:Boolean ){}Constructor (_,_,_U,__:Int ;PS_,pF1,__:Y;Q,_79_,_W9,R_,_0_2_:Int ){}$c4(_,j_5,B:Array [Array [Float ,39],0B1010010];_:n;_9__,_2k,_SX3:String ){Return ;} }''',
                '''Class,J,{,},Class,__,{,_0,(,z,,,_8,,,X5,:,r,;,_3F,:,T_4Vp,;,i,,,_,:,Boolean,),{,},Constructor,(,_,,,_,,,_U,,,__,:,Int,;,PS_,,,pF1,,,__,:,Y,;,Q,,,_79_,,,_W9,,,R_,,,_0_2_,:,Int,),{,},$c4,(,_,,,j_5,,,B,:,Array,[,Array,[,Float,,,39,],,,0B1010010,],;,_,:,n,;,_9__,,,_2k,,,_SX3,:,String,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2878(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val $E_,w1,Sv:Array [Array [Array [Array [Array [String ,88_4_1_2],07],4_8],043],0X6];Constructor (X__:Float ;M,____J1,_,_,cu,__3__,_:String ){Break ;} }''',
                '''Class,_,:,_,{,Val,$E_,,,w1,,,Sv,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,88412,],,,07,],,,48,],,,043,],,,0X6,],;,Constructor,(,X__,:,Float,;,M,,,____J1,,,_,,,_,,,cu,,,__3__,,,_,:,String,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2879(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_0_:q{Constructor (_,Og,_:Array [Array [Float ,0x3_4],0B10101];d_,__:__;_,_7_,k,_,_,p1:Array [Float ,0x46];x:Array [Boolean ,0B1_101_0];_:j16){Continue ;} }Class ___1{}''',
                '''Class,_1_0_,:,q,{,Constructor,(,_,,,Og,,,_,:,Array,[,Array,[,Float,,,0x34,],,,0B10101,],;,d_,,,__,:,__,;,_,,,_7_,,,k,,,_,,,_,,,p1,:,Array,[,Float,,,0x46,],;,x,:,Array,[,Boolean,,,0B11010,],;,_,:,j16,),{,Continue,;,},},Class,___1,{,},<EOF>''',
                101
            )
        )

    def test_2880(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:_{Constructor (__,o7M__A43,_,_:Int ;_:Array [Array [Array [Int ,33_5],64],0B1_0_11_1_1];F8A_E,s,__:__;__:String ;_,G:String ){}$_4_(){} }''',
                '''Class,x,:,_,{,Constructor,(,__,,,o7M__A43,,,_,,,_,:,Int,;,_,:,Array,[,Array,[,Array,[,Int,,,335,],,,64,],,,0B101111,],;,F8A_E,,,s,,,__,:,__,;,__,:,String,;,_,,,G,:,String,),{,},$_4_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2881(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __2v273{Destructor (){}Destructor (){} }Class __{Destructor (){}$y(_:Array [Int ,2]){Break ;Var r5:Array [Array [Array [Array [String ,021],2],0X7],0x19];} }''',
                '''Class,__2v273,{,Destructor,(,),{,},Destructor,(,),{,},},Class,__,{,Destructor,(,),{,},$y,(,_,:,Array,[,Int,,,2,],),{,Break,;,Var,r5,:,Array,[,Array,[,Array,[,Array,[,String,,,021,],,,2,],,,0X7,],,,0x19,],;,},},<EOF>''',
                101
            )
        )

    def test_2882(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _rc4{Constructor (cR,F_:Array [Int ,81];N,_0,_J,_,__0_Bz,_:Array [Array [Array [Array [Array [Boolean ,0b11],9],0b1010000],0b10_1],07];t,J_:a_;_x_,_9:q;_:p){kd::$A2();} }''',
                '''Class,_rc4,{,Constructor,(,cR,,,F_,:,Array,[,Int,,,81,],;,N,,,_0,,,_J,,,_,,,__0_Bz,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,9,],,,0b1010000,],,,0b101,],,,07,],;,t,,,J_,:,a_,;,_x_,,,_9,:,q,;,_,:,p,),{,kd,::,$A2,(,),;,},},<EOF>''',
                101
            )
        )

    def test_2883(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val $_,J:Array [Array [Array [Array [Boolean ,0B110001],2],0x7E],0b100];Var __,$23x,_,b:Array [Array [Array [Boolean ,0B1],0x45],0X34];}Class K:l{Val $_,$_4:a7_9_95O;}''',
                '''Class,_,:,_,{,Val,$_,,,J,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110001,],,,2,],,,0x7E,],,,0b100,],;,Var,__,,,$23x,,,_,,,b,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0x45,],,,0X34,],;,},Class,K,:,l,{,Val,$_,,,$_4,:,a7_9_95O,;,},<EOF>''',
                101
            )
        )

    def test_2884(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P8{Constructor (N,_9:Array [String ,82];_Y:Array [Array [Boolean ,0X9],0X7]){}Constructor (_Ej__:Int ;s,U,_1n,_:Array [String ,45];c:Array [Array [Float ,0B111110],075];_h:Int ){Val D,__,N__Q_,J,g2,z_p_7:s;} }''',
                '''Class,P8,{,Constructor,(,N,,,_9,:,Array,[,String,,,82,],;,_Y,:,Array,[,Array,[,Boolean,,,0X9,],,,0X7,],),{,},Constructor,(,_Ej__,:,Int,;,s,,,U,,,_1n,,,_,:,Array,[,String,,,45,],;,c,:,Array,[,Array,[,Float,,,0B111110,],,,075,],;,_h,:,Int,),{,Val,D,,,__,,,N__Q_,,,J,,,g2,,,z_p_7,:,s,;,},},<EOF>''',
                101
            )
        )

    def test_2885(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J9_6C4_{}Class __:_{}Class n_S:p_I{}Class y2_ht__{Var $_:Float ;$8(V,v_0p_2:String ){Return ;Continue ;} }''',
                '''Class,J9_6C4_,{,},Class,__,:,_,{,},Class,n_S,:,p_I,{,},Class,y2_ht__,{,Var,$_,:,Float,;,$8,(,V,,,v_0p_2,:,String,),{,Return,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2886(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:_{$0(){Break ;} }Class _4UH:hQ{Var Jut:Array [String ,0X35];Val _,$_M_5,$t:_;}Class N:P9{}Class N:_69{Constructor (){Break ;} }''',
                '''Class,___,:,_,{,$0,(,),{,Break,;,},},Class,_4UH,:,hQ,{,Var,Jut,:,Array,[,String,,,0X35,],;,Val,_,,,$_M_5,,,$t,:,_,;,},Class,N,:,P9,{,},Class,N,:,_69,{,Constructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2887(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k0I_:J2{Wl9(P:Array [Array [Int ,026],0x2D];__,_4:_8){} }Class _L_:_y{}Class u{Val _,x:Array [Boolean ,06_40];Val _31_,_,$_0:String ;}''',
                '''Class,k0I_,:,J2,{,Wl9,(,P,:,Array,[,Array,[,Int,,,026,],,,0x2D,],;,__,,,_4,:,_8,),{,},},Class,_L_,:,_y,{,},Class,u,{,Val,_,,,x,:,Array,[,Boolean,,,0640,],;,Val,_31_,,,_,,,$_0,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2888(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:_0{__0(_:Array [Int ,0X8];__,_,_,_8:Array [Array [Float ,0xA_7_E7],0b11101];o_K:v_){}Val $5:Array [Array [String ,0x23],0b1];}''',
                '''Class,Q,:,_0,{,__0,(,_,:,Array,[,Int,,,0X8,],;,__,,,_,,,_,,,_8,:,Array,[,Array,[,Float,,,0xA7E7,],,,0b11101,],;,o_K,:,v_,),{,},Val,$5,:,Array,[,Array,[,String,,,0x23,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_2889(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:q{Val $_O:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,02],0X6],2],77],0113],0113],0113],0113],0X6],0B1011000],03_20_6];}''',
                '''Class,_,:,q,{,Val,$_O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,02,],,,0X6,],,,2,],,,77,],,,0113,],,,0113,],,,0113,],,,0113,],,,0X6,],,,0B1011000,],,,03206,],;,},<EOF>''',
                101
            )
        )

    def test_2890(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___4:_{Val Q_Q:Array [String ,5];}Class _:_{}Class oZ__{}Class _{}Class p:_{}Class k{Var $_:Array [Array [Int ,0X7_F],0131];Destructor (){} }''',
                '''Class,___4,:,_,{,Val,Q_Q,:,Array,[,String,,,5,],;,},Class,_,:,_,{,},Class,oZ__,{,},Class,_,{,},Class,p,:,_,{,},Class,k,{,Var,$_,:,Array,[,Array,[,Int,,,0X7F,],,,0131,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2891(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{Destructor (){} }Class __:_{_J(_,Q,__:Float ;T:m47){}Constructor (y,_:String ;HSW:Float ){Break ;} }Class _k{}Class UO3{Destructor (){} }Class I:Gu0{$S(P,v__1R:Float ){Continue ;} }''',
                '''Class,m,{,Destructor,(,),{,},},Class,__,:,_,{,_J,(,_,,,Q,,,__,:,Float,;,T,:,m47,),{,},Constructor,(,y,,,_,:,String,;,HSW,:,Float,),{,Break,;,},},Class,_k,{,},Class,UO3,{,Destructor,(,),{,},},Class,I,:,Gu0,{,$S,(,P,,,v__1R,:,Float,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2892(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{Constructor (Ra_,OQ_:Array [Array [Array [Array [Array [Array [Array [Int ,0X36],57],0B1011110],0b110101],57],0X36],0B1]){} }Class w_X9_NPlc:V{Constructor (_,_U45,Z7l:Array [Array [Array [Array [Array [Int ,66_0_5],0B1011110],0b110101],0xF],07];_:Float ){} }''',
                '''Class,p,{,Constructor,(,Ra_,,,OQ_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X36,],,,57,],,,0B1011110,],,,0b110101,],,,57,],,,0X36,],,,0B1,],),{,},},Class,w_X9_NPlc,:,V,{,Constructor,(,_,,,_U45,,,Z7l,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,6605,],,,0B1011110,],,,0b110101,],,,0xF,],,,07,],;,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2893(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __s_{Var $s0_3980,$_v_7:Array [Array [Array [Array [Array [Array [Float ,0B10_01],1],0XA],0X3],010],0354];}Class _3:dU{}Class kTF:_1_{}''',
                '''Class,__s_,{,Var,$s0_3980,,,$_v_7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1001,],,,1,],,,0XA,],,,0X3,],,,010,],,,0354,],;,},Class,_3,:,dU,{,},Class,kTF,:,_1_,{,},<EOF>''',
                101
            )
        )

    def test_2894(self):
        self.assertTrue(
            TestLexer.test(
                '''Class FQ_n0:_kN{}Class _iq:_{Val $_,L,r,$_,_:String ;}Class _:__b{}Class zO__{Constructor (z,y_:Array [Array [Array [Float ,0x22],36],06_0];_I,_Zo:Array [Array [Array [String ,01],0x22],04]){} }''',
                '''Class,FQ_n0,:,_kN,{,},Class,_iq,:,_,{,Val,$_,,,L,,,r,,,$_,,,_,:,String,;,},Class,_,:,__b,{,},Class,zO__,{,Constructor,(,z,,,y_,:,Array,[,Array,[,Array,[,Float,,,0x22,],,,36,],,,060,],;,_I,,,_Zo,:,Array,[,Array,[,Array,[,String,,,01,],,,0x22,],,,04,],),{,},},<EOF>''',
                101
            )
        )

    def test_2895(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S_:n8X{Var $s5C:_;Var _,$4__74,$4w,___2,$_:Array [Float ,0X9];Constructor (_,a,Z3,C:___2__Za;_,_,Wc_a1:String ;L4:Float ;_:Iq__1){} }Class P:_3{Var M_7,$b:h;}''',
                '''Class,S_,:,n8X,{,Var,$s5C,:,_,;,Var,_,,,$4__74,,,$4w,,,___2,,,$_,:,Array,[,Float,,,0X9,],;,Constructor,(,_,,,a,,,Z3,,,C,:,___2__Za,;,_,,,_,,,Wc_a1,:,String,;,L4,:,Float,;,_,:,Iq__1,),{,},},Class,P,:,_3,{,Var,M_7,,,$b,:,h,;,},<EOF>''',
                101
            )
        )

    def test_2896(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _o:_{$z__(){}Destructor (){}Destructor (){Continue ;} }Class V{$WQj(O:Array [String ,054];_8,__0:b_C;y_:_E_53;K:Boolean ){} }''',
                '''Class,_o,:,_,{,$z__,(,),{,},Destructor,(,),{,},Destructor,(,),{,Continue,;,},},Class,V,{,$WQj,(,O,:,Array,[,String,,,054,],;,_8,,,__0,:,b_C,;,y_,:,_E_53,;,K,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_2897(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,k0t,qNs:Array [Array [Array [Float ,0B100110],5],04_2];U,b,_60EuU:e4;_,L4__C_1:String ){} }''',
                '''Class,_,{,Constructor,(,_,,,k0t,,,qNs,:,Array,[,Array,[,Array,[,Float,,,0B100110,],,,5,],,,042,],;,U,,,b,,,_60EuU,:,e4,;,_,,,L4__C_1,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2898(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{$8(_L__F,_P,_,_:Array [Array [String ,0112],54]){ {} }}Class ___:E{Destructor (){} }Class N:Jd4_{}Class fDE{}Class FW7:_4{}''',
                '''Class,_,:,_,{,$8,(,_L__F,,,_P,,,_,,,_,:,Array,[,Array,[,String,,,0112,],,,54,],),{,{,},},},Class,___,:,E,{,Destructor,(,),{,},},Class,N,:,Jd4_,{,},Class,fDE,{,},Class,FW7,:,_4,{,},<EOF>''',
                101
            )
        )

    def test_2899(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_M_{}Class _H{$4_(D:Array [Array [Array [Int ,58],03_6_3],04]){Break ;} }Class _rdG2{Destructor (){ {}{_::$2();} }}Class Z0:x94{}''',
                '''Class,_,:,_M_,{,},Class,_H,{,$4_,(,D,:,Array,[,Array,[,Array,[,Int,,,58,],,,0363,],,,04,],),{,Break,;,},},Class,_rdG2,{,Destructor,(,),{,{,},{,_,::,$2,(,),;,},},},Class,Z0,:,x94,{,},<EOF>''',
                101
            )
        )

    def test_2900(self):
        self.assertTrue(
            TestLexer.test(
                '''Class lkO{Destructor (){}$__t(__H:Array [Array [Int ,0124],03];Y,_5,j:String ;d:Float ){}Constructor (){}Var J,_:r;}''',
                '''Class,lkO,{,Destructor,(,),{,},$__t,(,__H,:,Array,[,Array,[,Int,,,0124,],,,03,],;,Y,,,_5,,,j,:,String,;,d,:,Float,),{,},Constructor,(,),{,},Var,J,,,_,:,r,;,},<EOF>''',
                101
            )
        )

    def test_2901(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kn:_B{$_(Y,__:Array [Array [Array [Float ,0101],0b101001],1_0_51];_o8:Array [Boolean ,01];j8_,e,K:_;_,MW,R:jv_){} }''',
                '''Class,kn,:,_B,{,$_,(,Y,,,__,:,Array,[,Array,[,Array,[,Float,,,0101,],,,0b101001,],,,1051,],;,_o8,:,Array,[,Boolean,,,01,],;,j8_,,,e,,,K,:,_,;,_,,,MW,,,R,:,jv_,),{,},},<EOF>''',
                101
            )
        )

    def test_2902(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __R:M{Var $_:String ;Destructor (){}$_0(r,r_:Array [Float ,0x57];K___m_:Float ;O,_,E,_q:Array [Int ,0B1_00_0101];I,__,_,_,g2,g_:Boolean ;Y:W8;u,_,r:Int ;_S,_9:Boolean ){}Var __,$_,sN,$VG_K,$__,$2,$0__R:_8;}Class z0:X{}''',
                '''Class,__R,:,M,{,Var,$_,:,String,;,Destructor,(,),{,},$_0,(,r,,,r_,:,Array,[,Float,,,0x57,],;,K___m_,:,Float,;,O,,,_,,,E,,,_q,:,Array,[,Int,,,0B1000101,],;,I,,,__,,,_,,,_,,,g2,,,g_,:,Boolean,;,Y,:,W8,;,u,,,_,,,r,:,Int,;,_S,,,_9,:,Boolean,),{,},Var,__,,,$_,,,sN,,,$VG_K,,,$__,,,$2,,,$0__R,:,_8,;,},Class,z0,:,X,{,},<EOF>''',
                101
            )
        )

    def test_2903(self):
        self.assertTrue(
            TestLexer.test(
                '''Class rK{Var Q,$_M_a0P,$_49,_3U,M,_7b:Array [Array [Int ,051],0xE_4];M_(){}_(l:String ;P,_,_7_,_,__4:Array [Array [Boolean ,0xC],0b1011100]){} }''',
                '''Class,rK,{,Var,Q,,,$_M_a0P,,,$_49,,,_3U,,,M,,,_7b,:,Array,[,Array,[,Int,,,051,],,,0xE4,],;,M_,(,),{,},_,(,l,:,String,;,P,,,_,,,_7_,,,_,,,__4,:,Array,[,Array,[,Boolean,,,0xC,],,,0b1011100,],),{,},},<EOF>''',
                101
            )
        )

    def test_2904(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Tz:__{}Class T{}Class _{Val $s,$K_W,q_:T;Var $C:j;Destructor (){} }Class S{}Class C:F{}Class _{Val $7:String ;Val _,C,G_,$q:Array [Array [Int ,94],0b1001011];Var $R,w:Array [Array [Array [Array [Boolean ,5],0x4],025],0X9];Val a:Float ;}''',
                '''Class,Tz,:,__,{,},Class,T,{,},Class,_,{,Val,$s,,,$K_W,,,q_,:,T,;,Var,$C,:,j,;,Destructor,(,),{,},},Class,S,{,},Class,C,:,F,{,},Class,_,{,Val,$7,:,String,;,Val,_,,,C,,,G_,,,$q,:,Array,[,Array,[,Int,,,94,],,,0b1001011,],;,Var,$R,,,w,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,5,],,,0x4,],,,025,],,,0X9,],;,Val,a,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_2905(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K8:_{Destructor (){ {} }$T(a7,b,f,_8___,B,_a,_9:Array [String ,04];s_:_4;_s,_v:Array [Array [Int ,0X5_8],0B1];j:Array [Array [Boolean ,0B1001],0101];Q,_O5:vl;v,_,__7:_){} }''',
                '''Class,K8,:,_,{,Destructor,(,),{,{,},},$T,(,a7,,,b,,,f,,,_8___,,,B,,,_a,,,_9,:,Array,[,String,,,04,],;,s_,:,_4,;,_s,,,_v,:,Array,[,Array,[,Int,,,0X58,],,,0B1,],;,j,:,Array,[,Array,[,Boolean,,,0B1001,],,,0101,],;,Q,,,_O5,:,vl,;,v,,,_,,,__7,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_2906(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l___U{Constructor (F_G_V_,_:Float ;K:Array [String ,0x35]){}Destructor (){_::$_8()._N();{} }}Class _:_{}''',
                '''Class,l___U,{,Constructor,(,F_G_V_,,,_,:,Float,;,K,:,Array,[,String,,,0x35,],),{,},Destructor,(,),{,_,::,$_8,(,),.,_N,(,),;,{,},},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2907(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class uq_4:_0_{Val b:Array [Array [Array [Array [Array [Float ,0112],0b1_1_1],93],0X4],0112];Var _6:Array [Array [Int ,0112],0x22];}''',
                '''Class,_,:,_,{,},Class,uq_4,:,_0_,{,Val,b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0112,],,,0b111,],,,93,],,,0X4,],,,0112,],;,Var,_6,:,Array,[,Array,[,Int,,,0112,],,,0x22,],;,},<EOF>''',
                101
            )
        )

    def test_2908(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7{}Class Y__6_:Q{Constructor (){}Constructor (){} }Class _:p{m(_p:Float ;__:k64;H:Array [Boolean ,0X57]){}Var Q:Q8;Destructor (){}Val $_:Array [Array [Float ,0X57],0X57];}''',
                '''Class,_7,{,},Class,Y__6_,:,Q,{,Constructor,(,),{,},Constructor,(,),{,},},Class,_,:,p,{,m,(,_p,:,Float,;,__,:,k64,;,H,:,Array,[,Boolean,,,0X57,],),{,},Var,Q,:,Q8,;,Destructor,(,),{,},Val,$_,:,Array,[,Array,[,Float,,,0X57,],,,0X57,],;,},<EOF>''',
                101
            )
        )

    def test_2909(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __2:u{}Class B{}Class l_:S{Destructor (){ {} }Var _9:__a_114_;Constructor (_,_g5,t2,_:Float ;__h:_;C,_:_;__X_1,M8:Array [Array [Array [Int ,0B1_1],0x26],0B1];x,_,I3:Array [Array [Int ,0XD],5];__KAl_,y:String ){} }''',
                '''Class,__2,:,u,{,},Class,B,{,},Class,l_,:,S,{,Destructor,(,),{,{,},},Var,_9,:,__a_114_,;,Constructor,(,_,,,_g5,,,t2,,,_,:,Float,;,__h,:,_,;,C,,,_,:,_,;,__X_1,,,M8,:,Array,[,Array,[,Array,[,Int,,,0B11,],,,0x26,],,,0B1,],;,x,,,_,,,I3,:,Array,[,Array,[,Int,,,0XD,],,,5,],;,__KAl_,,,y,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2910(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9y6a_:_D{}Class q_:w6q{}Class _{$___(){} }Class __{c(){} }Class _0_O:xH{}Class _C{Val $_7,___,_59,O:gg;}Class d_2{Destructor (){Continue ;} }Class ___{n4_4_E(){} }''',
                '''Class,_9y6a_,:,_D,{,},Class,q_,:,w6q,{,},Class,_,{,$___,(,),{,},},Class,__,{,c,(,),{,},},Class,_0_O,:,xH,{,},Class,_C,{,Val,$_7,,,___,,,_59,,,O,:,gg,;,},Class,d_2,{,Destructor,(,),{,Continue,;,},},Class,___,{,n4_4_E,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2911(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:__{}Class __:A_{Constructor (_t:Float ;_:Array [Array [Float ,0b1_0],0b1];MY__MA,P,cb2_42:Array [Array [Int ,0X1],5]){} }''',
                '''Class,v,:,__,{,},Class,__,:,A_,{,Constructor,(,_t,:,Float,;,_,:,Array,[,Array,[,Float,,,0b10,],,,0b1,],;,MY__MA,,,P,,,cb2_42,:,Array,[,Array,[,Int,,,0X1,],,,5,],),{,},},<EOF>''',
                101
            )
        )

    def test_2912(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:_{}Class _q2:_k_{}Class _:_{_(O:___wt;MGY_,H8:Array [Float ,0x38];_,K_:Array [Array [Float ,04_5_3],01];W6t_Bl:Array [Array [Array [Array [String ,28],28],0B1],04_25];Z4_8,_7_:Boolean ){}Var _,_:B;}''',
                '''Class,g,:,_,{,},Class,_q2,:,_k_,{,},Class,_,:,_,{,_,(,O,:,___wt,;,MGY_,,,H8,:,Array,[,Float,,,0x38,],;,_,,,K_,:,Array,[,Array,[,Float,,,0453,],,,01,],;,W6t_Bl,:,Array,[,Array,[,Array,[,Array,[,String,,,28,],,,28,],,,0B1,],,,0425,],;,Z4_8,,,_7_,:,Boolean,),{,},Var,_,,,_,:,B,;,},<EOF>''',
                101
            )
        )

    def test_2913(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:i_7b_3_{Val $_:Float ;Constructor (L:_;_3_L:Array [Array [Array [Int ,8],48],6_3]){} }Class x{}Class ___1_{}''',
                '''Class,_,:,i_7b_3_,{,Val,$_,:,Float,;,Constructor,(,L,:,_,;,_3_L,:,Array,[,Array,[,Array,[,Int,,,8,],,,48,],,,63,],),{,},},Class,x,{,},Class,___1_,{,},<EOF>''',
                101
            )
        )

    def test_2914(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y2_5_47C:_{Constructor (){}Val $19,_11_:Array [Boolean ,076];Val $d5K_,$6,hXj5355_,$_0_8:x_;Var $_h52P__4,$oj_,$_:ss;Var K,$O,_z_,$3,$e,E,$C,_,to:__2;}Class _7:_u{}Class mH:s5096{}''',
                '''Class,y2_5_47C,:,_,{,Constructor,(,),{,},Val,$19,,,_11_,:,Array,[,Boolean,,,076,],;,Val,$d5K_,,,$6,,,hXj5355_,,,$_0_8,:,x_,;,Var,$_h52P__4,,,$oj_,,,$_,:,ss,;,Var,K,,,$O,,,_z_,,,$3,,,$e,,,E,,,$C,,,_,,,to,:,__2,;,},Class,_7,:,_u,{,},Class,mH,:,s5096,{,},<EOF>''',
                101
            )
        )

    def test_2915(self):
        self.assertTrue(
            TestLexer.test(
                '''Class WsR1{Val _,$_UU_,O,$V:Array [Int ,01];$W(_Q,_O__39m,k:String ){}m9__(){}Constructor (_:String ){}Val __HX2_1,o,$iM4R:SE;}''',
                '''Class,WsR1,{,Val,_,,,$_UU_,,,O,,,$V,:,Array,[,Int,,,01,],;,$W,(,_Q,,,_O__39m,,,k,:,String,),{,},m9__,(,),{,},Constructor,(,_,:,String,),{,},Val,__HX2_1,,,o,,,$iM4R,:,SE,;,},<EOF>''',
                101
            )
        )

    def test_2916(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6:W{Var $L:Array [Array [Float ,0x5E],0117];}Class E0{Val $6J:P;Destructor (){}Val $d:IF5;Constructor (){Return ;} }Class __pr:q_{}Class l:C{}''',
                '''Class,_6,:,W,{,Var,$L,:,Array,[,Array,[,Float,,,0x5E,],,,0117,],;,},Class,E0,{,Val,$6J,:,P,;,Destructor,(,),{,},Val,$d,:,IF5,;,Constructor,(,),{,Return,;,},},Class,__pr,:,q_,{,},Class,l,:,C,{,},<EOF>''',
                101
            )
        )

    def test_2917(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___04:_fU{}Class _kc:_{Var $9,$__,yz:Array [Array [Array [Array [Array [Array [Array [Array [String ,02],04_3],5_1],0b1],076],0B1_1],0XD],0X56];}''',
                '''Class,___04,:,_fU,{,},Class,_kc,:,_,{,Var,$9,,,$__,,,yz,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,043,],,,51,],,,0b1,],,,076,],,,0B11,],,,0XD,],,,0X56,],;,},<EOF>''',
                101
            )
        )

    def test_2918(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Q9_{Var $6,G:Boolean ;}Class t:C90_{Destructor (){} }Class _:_10_{Var _,$_1,_f36E_8HI_:B_;}Class k__S_1_1{}''',
                '''Class,_Q9_,{,Var,$6,,,G,:,Boolean,;,},Class,t,:,C90_,{,Destructor,(,),{,},},Class,_,:,_10_,{,Var,_,,,$_1,,,_f36E_8HI_,:,B_,;,},Class,k__S_1_1,{,},<EOF>''',
                101
            )
        )

    def test_2919(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var __6,m:Array [Array [Array [Array [Boolean ,5],0B1110],4_5],03_6_33];}Class O:_{Val __C_:Array [Boolean ,0b111010];}''',
                '''Class,_,{,Var,__6,,,m,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,5,],,,0B1110,],,,45,],,,03633,],;,},Class,O,:,_,{,Val,__C_,:,Array,[,Boolean,,,0b111010,],;,},<EOF>''',
                101
            )
        )

    def test_2920(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:_{}Class QfR{}Class _:n_0_{}Class Kz__:_W{Destructor (){Break ;}Constructor (_:Array [Array [Float ,0B101_0],024];u:Array [Boolean ,0xB9C1_7]){}Val _,$8,__:___;}''',
                '''Class,U,:,_,{,},Class,QfR,{,},Class,_,:,n_0_,{,},Class,Kz__,:,_W,{,Destructor,(,),{,Break,;,},Constructor,(,_,:,Array,[,Array,[,Float,,,0B1010,],,,024,],;,u,:,Array,[,Boolean,,,0xB9C17,],),{,},Val,_,,,$8,,,__,:,___,;,},<EOF>''',
                101
            )
        )

    def test_2921(self):
        self.assertTrue(
            TestLexer.test(
                '''Class MGBbE0_z:D{Var $H_4_x,_:Array [Array [Array [Array [Array [Array [Array [Boolean ,06_7_3],59],0x8_0D_6],03],0b1],02],0x14];}''',
                '''Class,MGBbE0_z,:,D,{,Var,$H_4_x,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0673,],,,59,],,,0x80D6,],,,03,],,,0b1,],,,02,],,,0x14,],;,},<EOF>''',
                101
            )
        )

    def test_2922(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_v:u46{}Class _51Y5K7:j{Constructor (_:Array [Array [Array [Array [Array [Array [Array [Array [Int ,17],0B1010000],0X4_8_6F],0B1010000],0x5],077],580],0x4E];T__,_,e__:e___;M_:Array [Int ,0B11_1];Xz,V__,A,H:String ){G3::$n();Continue ;} }''',
                '''Class,d_v,:,u46,{,},Class,_51Y5K7,:,j,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,17,],,,0B1010000,],,,0X486F,],,,0B1010000,],,,0x5,],,,077,],,,580,],,,0x4E,],;,T__,,,_,,,e__,:,e___,;,M_,:,Array,[,Int,,,0B111,],;,Xz,,,V__,,,A,,,H,:,String,),{,G3,::,$n,(,),;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_2923(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_,f,B,_,_:l){} }Class W_:_9_{}Class H_L{Var $lh:Array [Boolean ,53];Destructor (){} }Class _{}Class dm3:_{}''',
                '''Class,_,:,_,{,Constructor,(,_,,,f,,,B,,,_,,,_,:,l,),{,},},Class,W_,:,_9_,{,},Class,H_L,{,Var,$lh,:,Array,[,Boolean,,,53,],;,Destructor,(,),{,},},Class,_,{,},Class,dm3,:,_,{,},<EOF>''',
                101
            )
        )

    def test_2924(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{Constructor (__UA,_Ta:Array [Array [Array [Array [Boolean ,0B1],0X20],0x3E],053];L:Array [Array [Array [Float ,05_0],0x74],26];NhV48,_,_A,q2Fu,m:String ;P,l,w:V){}Var $_:Array [Boolean ,0B1_1_10_0_010_0_0_1_1_0];}''',
                '''Class,n,{,Constructor,(,__UA,,,_Ta,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0X20,],,,0x3E,],,,053,],;,L,:,Array,[,Array,[,Array,[,Float,,,050,],,,0x74,],,,26,],;,NhV48,,,_,,,_A,,,q2Fu,,,m,:,String,;,P,,,l,,,w,:,V,),{,},Var,$_,:,Array,[,Boolean,,,0B1110001000110,],;,},<EOF>''',
                101
            )
        )

    def test_2925(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:_{Destructor (){}Constructor (_:S8;C:_;_7_8,Q_:Float ;Vp__kw,_,U:Array [Array [Boolean ,0XD],0620_7_73];I,I:Array [Int ,0B1];r_,c2n2,h,_1:Array [Array [Array [Boolean ,8],9],015];cm,u_,_,G:Array [Array [Float ,0xE],0B1110]){Val _0_:Float ;}Var J_,b,__:Array [Array [Float ,0X3A],87];Constructor (Q,y:Array [Array [Array [Boolean ,6],87],0b1011000];_,a:Array [Array [Float ,87],0XB_68_B_9_6]){} }''',
                '''Class,C,:,_,{,Destructor,(,),{,},Constructor,(,_,:,S8,;,C,:,_,;,_7_8,,,Q_,:,Float,;,Vp__kw,,,_,,,U,:,Array,[,Array,[,Boolean,,,0XD,],,,0620773,],;,I,,,I,:,Array,[,Int,,,0B1,],;,r_,,,c2n2,,,h,,,_1,:,Array,[,Array,[,Array,[,Boolean,,,8,],,,9,],,,015,],;,cm,,,u_,,,_,,,G,:,Array,[,Array,[,Float,,,0xE,],,,0B1110,],),{,Val,_0_,:,Float,;,},Var,J_,,,b,,,__,:,Array,[,Array,[,Float,,,0X3A,],,,87,],;,Constructor,(,Q,,,y,:,Array,[,Array,[,Array,[,Boolean,,,6,],,,87,],,,0b1011000,],;,_,,,a,:,Array,[,Array,[,Float,,,87,],,,0XB68B96,],),{,},},<EOF>''',
                101
            )
        )

    def test_2926(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2_{Var $_,$7,_7W,D:String ;Constructor (_,I,__:Float ;Y,_,_:Array [Array [Array [Array [Array [Boolean ,03],31],036],0XC_5A],0127]){} }Class AA{}''',
                '''Class,_2_,{,Var,$_,,,$7,,,_7W,,,D,:,String,;,Constructor,(,_,,,I,,,__,:,Float,;,Y,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,03,],,,31,],,,036,],,,0XC5A,],,,0127,],),{,},},Class,AA,{,},<EOF>''',
                101
            )
        )

    def test_2927(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W{Destructor (){}_T(n,K8:Boolean ;s,_Ch:T;_DR,_:Array [Array [String ,33],7]){}Constructor (_6sj,u9:Array [Array [Array [Array [Array [Array [Array [Int ,037202],0x3_6_8_7],0b11_0_11_0],0b1011],0x3],053],59];_d:Boolean ;c0_,r8q:Array [Boolean ,5_6];_P:Array [Array [String ,0x3],0x5];p:Array [Boolean ,0b1011];_:Float ;_4:String ){} }''',
                '''Class,W,{,Destructor,(,),{,},_T,(,n,,,K8,:,Boolean,;,s,,,_Ch,:,T,;,_DR,,,_,:,Array,[,Array,[,String,,,33,],,,7,],),{,},Constructor,(,_6sj,,,u9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,037202,],,,0x3687,],,,0b110110,],,,0b1011,],,,0x3,],,,053,],,,59,],;,_d,:,Boolean,;,c0_,,,r8q,:,Array,[,Boolean,,,56,],;,_P,:,Array,[,Array,[,String,,,0x3,],,,0x5,],;,p,:,Array,[,Boolean,,,0b1011,],;,_,:,Float,;,_4,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2928(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J4:___{}Class _:W__709_6zU3{Val z9:l0D9;Var $n8_K,_r8,_z:W8_;}Class h:v_{Destructor (){} }Class _4{Constructor (_:Boolean ;r:L_81_){Var c_,x:String ;{} }}Class _:o{Var $_4j_Q,_5n:Array [Array [String ,7],0x7C];}''',
                '''Class,J4,:,___,{,},Class,_,:,W__709_6zU3,{,Val,z9,:,l0D9,;,Var,$n8_K,,,_r8,,,_z,:,W8_,;,},Class,h,:,v_,{,Destructor,(,),{,},},Class,_4,{,Constructor,(,_,:,Boolean,;,r,:,L_81_,),{,Var,c_,,,x,:,String,;,{,},},},Class,_,:,o,{,Var,$_4j_Q,,,_5n,:,Array,[,Array,[,String,,,7,],,,0x7C,],;,},<EOF>''',
                101
            )
        )

    def test_2929(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:_1u{Constructor (){Var w___:Z;Return ;}Constructor (){} }Class ___w:EY{Var k:Boolean ;Destructor (){ {} }_(){}s(Id,J_,__8:Boolean ;_:Array [Boolean ,021];_7,_363__2iay_:_){ {} }}''',
                '''Class,g,:,_1u,{,Constructor,(,),{,Var,w___,:,Z,;,Return,;,},Constructor,(,),{,},},Class,___w,:,EY,{,Var,k,:,Boolean,;,Destructor,(,),{,{,},},_,(,),{,},s,(,Id,,,J_,,,__8,:,Boolean,;,_,:,Array,[,Boolean,,,021,],;,_7,,,_363__2iay_,:,_,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_2930(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d0:_{Destructor (){Var Wq1,_:_;}$e_G(_8Y,Qo,_6:Float ;G,v1_1,P_:_K_;C,L,_,H,B_,_,_,_P_4F:Array [Int ,0b1];U0,_,_:Int ;P:g_){tV::$z();}Destructor (){Return ;} }Class B:_{}Class _l{}Class ___H{Destructor (){} }''',
                '''Class,d0,:,_,{,Destructor,(,),{,Var,Wq1,,,_,:,_,;,},$e_G,(,_8Y,,,Qo,,,_6,:,Float,;,G,,,v1_1,,,P_,:,_K_,;,C,,,L,,,_,,,H,,,B_,,,_,,,_,,,_P_4F,:,Array,[,Int,,,0b1,],;,U0,,,_,,,_,:,Int,;,P,:,g_,),{,tV,::,$z,(,),;,},Destructor,(,),{,Return,;,},},Class,B,:,_,{,},Class,_l,{,},Class,___H,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2931(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i:___{}Class K:_{Var $5:Array [String ,55];_(N__,_,Q9N:String ){} }Class _P:v{Val $_x2_,ee:Array [Boolean ,55];}Class _:d{}Class N{}''',
                '''Class,i,:,___,{,},Class,K,:,_,{,Var,$5,:,Array,[,String,,,55,],;,_,(,N__,,,_,,,Q9N,:,String,),{,},},Class,_P,:,v,{,Val,$_x2_,,,ee,:,Array,[,Boolean,,,55,],;,},Class,_,:,d,{,},Class,N,{,},<EOF>''',
                101
            )
        )

    def test_2932(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8:X{Constructor (s,_,_0,j:Array [Array [String ,0X11],0x7_5];_e_5__j05f6,S:d_l3){} }Class Td_2U{Var _:__3i;}''',
                '''Class,_8,:,X,{,Constructor,(,s,,,_,,,_0,,,j,:,Array,[,Array,[,String,,,0X11,],,,0x75,],;,_e_5__j05f6,,,S,:,d_l3,),{,},},Class,Td_2U,{,Var,_,:,__3i,;,},<EOF>''',
                101
            )
        )

    def test_2933(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{Val $_2907:String ;Val x,$___,E5_,$_tN_2:Array [Array [Array [Boolean ,0B100111],0B100111],6_36_9_5];}Class h:hr_{Val $_:jP;}''',
                '''Class,k,{,Val,$_2907,:,String,;,Val,x,,,$___,,,E5_,,,$_tN_2,:,Array,[,Array,[,Array,[,Boolean,,,0B100111,],,,0B100111,],,,63695,],;,},Class,h,:,hr_,{,Val,$_,:,jP,;,},<EOF>''',
                101
            )
        )

    def test_2934(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:_{Constructor (sO,M,U,Mo:f;_,o,__:Array [Array [Array [Array [Float ,0125],4],0b10100],56_0]){V::$_();Val ___:__4;} }''',
                '''Class,F,:,_,{,Constructor,(,sO,,,M,,,U,,,Mo,:,f,;,_,,,o,,,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0125,],,,4,],,,0b10100,],,,560,],),{,V,::,$_,(,),;,Val,___,:,__4,;,},},<EOF>''',
                101
            )
        )

    def test_2935(self):
        self.assertTrue(
            TestLexer.test(
                '''Class mlE{f(M7:_;t8,X2_,_:Array [Boolean ,76];_X,_:Array [Array [Array [String ,2],0b1],025];D,_3:Int ;B_K5:Int ;R,e_:Int ;_H5,_t,_,_,i4,J,P,_:String ){} }''',
                '''Class,mlE,{,f,(,M7,:,_,;,t8,,,X2_,,,_,:,Array,[,Boolean,,,76,],;,_X,,,_,:,Array,[,Array,[,Array,[,String,,,2,],,,0b1,],,,025,],;,D,,,_3,:,Int,;,B_K5,:,Int,;,R,,,e_,:,Int,;,_H5,,,_t,,,_,,,_,,,i4,,,J,,,P,,,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2936(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:Y{Var $0,$8Hg_2:_;}Class a_:_yk__{$_(){}Destructor (){} }Class _n:kVU{Val P,$_2,_32_,a,$10,$__X0H,$kIZ_,$_,ln_,$_7:Array [Float ,047];}Class _L21{}''',
                '''Class,q,:,Y,{,Var,$0,,,$8Hg_2,:,_,;,},Class,a_,:,_yk__,{,$_,(,),{,},Destructor,(,),{,},},Class,_n,:,kVU,{,Val,P,,,$_2,,,_32_,,,a,,,$10,,,$__X0H,,,$kIZ_,,,$_,,,ln_,,,$_7,:,Array,[,Float,,,047,],;,},Class,_L21,{,},<EOF>''',
                101
            )
        )

    def test_2937(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{$6(_:v;_,_0:Int ;o,z_,_,_1_:_9;Ik2,__:String ;s_:Float ;_:String ;_qr,_5h,rW4X:Array [Boolean ,0B1_1_0];U1,h_:Float ;_H:Array [Array [Array [Float ,062],0x61],71]){}Val $g__,$M_D2q:C;}''',
                '''Class,p,{,$6,(,_,:,v,;,_,,,_0,:,Int,;,o,,,z_,,,_,,,_1_,:,_9,;,Ik2,,,__,:,String,;,s_,:,Float,;,_,:,String,;,_qr,,,_5h,,,rW4X,:,Array,[,Boolean,,,0B110,],;,U1,,,h_,:,Float,;,_H,:,Array,[,Array,[,Array,[,Float,,,062,],,,0x61,],,,71,],),{,},Val,$g__,,,$M_D2q,:,C,;,},<EOF>''',
                101
            )
        )

    def test_2938(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$_0(_:Array [Array [Float ,0X5B],0b1001011];Me_Y1:Boolean ;f,_:P6;r8Z,a_,i:p__;_:_W;_5x_,_:Int ){}Constructor (){}Destructor (){}$__T(){}$J(__b_,rh0v:Int ;k:String ){} }Class p{}''',
                '''Class,_,{,$_0,(,_,:,Array,[,Array,[,Float,,,0X5B,],,,0b1001011,],;,Me_Y1,:,Boolean,;,f,,,_,:,P6,;,r8Z,,,a_,,,i,:,p__,;,_,:,_W,;,_5x_,,,_,:,Int,),{,},Constructor,(,),{,},Destructor,(,),{,},$__T,(,),{,},$J,(,__b_,,,rh0v,:,Int,;,k,:,String,),{,},},Class,p,{,},<EOF>''',
                101
            )
        )

    def test_2939(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o2{Constructor (_:Array [Array [Array [Int ,0X4C],7_9],6];_,_9_7L,_:Array [Int ,2];w_vu:_;_V1:Array [String ,13]){} }''',
                '''Class,o2,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,0X4C,],,,79,],,,6,],;,_,,,_9_7L,,,_,:,Array,[,Int,,,2,],;,w_vu,:,_,;,_V1,:,Array,[,String,,,13,],),{,},},<EOF>''',
                101
            )
        )

    def test_2940(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{Constructor (){Break ;Var h_75:_;Val _4,_t:Array [Array [String ,0XC],0X3];Continue ;Var _:Array [Array [Int ,0116],0x2F];Break ;New _()._.U84().__664o().q();Break ;Return ;} }''',
                '''Class,f,{,Constructor,(,),{,Break,;,Var,h_75,:,_,;,Val,_4,,,_t,:,Array,[,Array,[,String,,,0XC,],,,0X3,],;,Continue,;,Var,_,:,Array,[,Array,[,Int,,,0116,],,,0x2F,],;,Break,;,New,_,(,),.,_,.,U84,(,),.,__664o,(,),.,q,(,),;,Break,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2941(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:qw{}Class E_{}Class Qy:i{Var P_p7:Array [Array [Array [Float ,0X19],0x34],0B1110];$8(i,xi:Array [String ,0x34]){} }''',
                '''Class,_,:,qw,{,},Class,E_,{,},Class,Qy,:,i,{,Var,P_p7,:,Array,[,Array,[,Array,[,Float,,,0X19,],,,0x34,],,,0B1110,],;,$8,(,i,,,xi,:,Array,[,String,,,0x34,],),{,},},<EOF>''',
                101
            )
        )

    def test_2942(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H4a:p{_(_,_1,cO87_:Boolean ;l0:Array [Array [String ,0B1000101],025_1]){} }Class _:C{}Class m:_23{}Class ____3__R_{}Class k_{}''',
                '''Class,H4a,:,p,{,_,(,_,,,_1,,,cO87_,:,Boolean,;,l0,:,Array,[,Array,[,String,,,0B1000101,],,,0251,],),{,},},Class,_,:,C,{,},Class,m,:,_23,{,},Class,____3__R_,{,},Class,k_,{,},<EOF>''',
                101
            )
        )

    def test_2943(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G:_c{}Class _:B_{Constructor (_9H01,_:A05I;_:Array [String ,0x1]){ {Break ;{} }} }Class A_{}Class ___ZC{Var Y:_G;Val $_,$5Cn__1:Array [Array [Float ,0B100011],76];}''',
                '''Class,G,:,_c,{,},Class,_,:,B_,{,Constructor,(,_9H01,,,_,:,A05I,;,_,:,Array,[,String,,,0x1,],),{,{,Break,;,{,},},},},Class,A_,{,},Class,___ZC,{,Var,Y,:,_G,;,Val,$_,,,$5Cn__1,:,Array,[,Array,[,Float,,,0B100011,],,,76,],;,},<EOF>''',
                101
            )
        )

    def test_2944(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_V4n{Var $8:Float ;$Yh8(_24:Boolean ){}Val $_,YQ12:Int ;Val $8,lM,c2_,_,fM:Boolean ;}Class h9_z_gi{}Class y_:t_{}''',
                '''Class,b_V4n,{,Var,$8,:,Float,;,$Yh8,(,_24,:,Boolean,),{,},Val,$_,,,YQ12,:,Int,;,Val,$8,,,lM,,,c2_,,,_,,,fM,:,Boolean,;,},Class,h9_z_gi,{,},Class,y_,:,t_,{,},<EOF>''',
                101
            )
        )

    def test_2945(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _S{Destructor (){}Constructor (_6Q:Array [Int ,0b101000];__,_E:Int ;X,E,P_:Boolean ;_f:Boolean ;f:String ){} }''',
                '''Class,_S,{,Destructor,(,),{,},Constructor,(,_6Q,:,Array,[,Int,,,0b101000,],;,__,,,_E,:,Int,;,X,,,E,,,P_,:,Boolean,;,_f,:,Boolean,;,f,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_2946(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __2{}Class _{Val D:_;H(_HT9,Z:Int ;__8,yXz31_:Array [String ,0b1];_7_3,__:v){} }Class J_6{}Class I{}''',
                '''Class,_,{,},Class,__2,{,},Class,_,{,Val,D,:,_,;,H,(,_HT9,,,Z,:,Int,;,__8,,,yXz31_,:,Array,[,String,,,0b1,],;,_7_3,,,__,:,v,),{,},},Class,J_6,{,},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_2947(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{}Class l{Constructor (M,g8,j_8n,_o,_:Boolean ;___G_,_,_,Q,_:Array [Float ,07_13_3];_,S:Array [Array [Array [Float ,02],0B10_0],49]){} }''',
                '''Class,o,{,},Class,l,{,Constructor,(,M,,,g8,,,j_8n,,,_o,,,_,:,Boolean,;,___G_,,,_,,,_,,,Q,,,_,:,Array,[,Float,,,07133,],;,_,,,S,:,Array,[,Array,[,Array,[,Float,,,02,],,,0B100,],,,49,],),{,},},<EOF>''',
                101
            )
        )

    def test_2948(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{u(__0,S:Array [Array [Array [Array [Array [Array [Int ,73],6],7],454_589],0B1],0x7_D];__:_){Break ;} }Class B:__Of8U{}''',
                '''Class,__,{,u,(,__0,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,73,],,,6,],,,7,],,,454589,],,,0B1,],,,0x7D,],;,__,:,_,),{,Break,;,},},Class,B,:,__Of8U,{,},<EOF>''',
                101
            )
        )

    def test_2949(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __6K_:_{Constructor (_,_,_,CD9_,h_:String ;L4Ew:Array [Array [Array [String ,0xA_7_D_8],84],0B111];k:Array [Boolean ,0x29];_:Int ){}Var $9:Array [Float ,0b1_0];}''',
                '''Class,__6K_,:,_,{,Constructor,(,_,,,_,,,_,,,CD9_,,,h_,:,String,;,L4Ew,:,Array,[,Array,[,Array,[,String,,,0xA7D8,],,,84,],,,0B111,],;,k,:,Array,[,Boolean,,,0x29,],;,_,:,Int,),{,},Var,$9,:,Array,[,Float,,,0b10,],;,},<EOF>''',
                101
            )
        )

    def test_2950(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4:M{Destructor (){} }Class _:_8{Constructor (_,_,_6D__T:Array [Array [Array [Int ,0b111],0B1],017]){}$LS(){}Val j_:Array [String ,53];}Class _:_L94__{}Class h21_{Constructor (){Continue ;}Constructor (){}Var _X,g,R,_:__;Var _c:_7;Constructor (){} }''',
                '''Class,_4,:,M,{,Destructor,(,),{,},},Class,_,:,_8,{,Constructor,(,_,,,_,,,_6D__T,:,Array,[,Array,[,Array,[,Int,,,0b111,],,,0B1,],,,017,],),{,},$LS,(,),{,},Val,j_,:,Array,[,String,,,53,],;,},Class,_,:,_L94__,{,},Class,h21_,{,Constructor,(,),{,Continue,;,},Constructor,(,),{,},Var,_X,,,g,,,R,,,_,:,__,;,Var,_c,:,_7,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2951(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_KcCT{h(){}Var V03,$1:Array [Array [Array [Array [Array [Array [Array [Boolean ,0111],0b1000110],0b1000110],9],06],0b1000110],0111];}Class _gL{}''',
                '''Class,_,:,_KcCT,{,h,(,),{,},Var,V03,,,$1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0111,],,,0b1000110,],,,0b1000110,],,,9,],,,06,],,,0b1000110,],,,0111,],;,},Class,_gL,{,},<EOF>''',
                101
            )
        )

    def test_2952(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:o_u_{}Class __m{Var $f:Int ;$t(a__r,_:Array [Int ,057_1_7_54];__6_l,__:Int ;N_7_:Float ;_1_:Int ;ne7,___,s:Array [Array [Array [Int ,0B10100],0137],49];_:_;Rq:q1B7){} }Class p:_{}Class _{}''',
                '''Class,_,:,o_u_,{,},Class,__m,{,Var,$f,:,Int,;,$t,(,a__r,,,_,:,Array,[,Int,,,0571754,],;,__6_l,,,__,:,Int,;,N_7_,:,Float,;,_1_,:,Int,;,ne7,,,___,,,s,:,Array,[,Array,[,Array,[,Int,,,0B10100,],,,0137,],,,49,],;,_,:,_,;,Rq,:,q1B7,),{,},},Class,p,:,_,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2953(self):
        self.assertTrue(
            TestLexer.test(
                '''Class fD2LR{}Class R:CZ4U{}Class C{Var __:Int ;FS(){} }Class O:_1{_(){Val M_8S,B2,u:Array [Boolean ,2_88_8];{} }}''',
                '''Class,fD2LR,{,},Class,R,:,CZ4U,{,},Class,C,{,Var,__,:,Int,;,FS,(,),{,},},Class,O,:,_1,{,_,(,),{,Val,M_8S,,,B2,,,u,:,Array,[,Boolean,,,2888,],;,{,},},},<EOF>''',
                101
            )
        )

    def test_2954(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{Constructor (z,d_:Float ;_:Array [Array [Boolean ,066],8_0_3_9_7];_9:String ;t7,U,_K,_D,_K2,SQzb:v;U__,_,f,U_a82,_:Array [Boolean ,21];h_,F9_,d:Array [Array [Array [Float ,8553],06_4],0X48]){}Var _:Array [Float ,0b1_00];$8___4(_:Array [Boolean ,3]){}Destructor (){} }''',
                '''Class,_,:,__,{,Constructor,(,z,,,d_,:,Float,;,_,:,Array,[,Array,[,Boolean,,,066,],,,80397,],;,_9,:,String,;,t7,,,U,,,_K,,,_D,,,_K2,,,SQzb,:,v,;,U__,,,_,,,f,,,U_a82,,,_,:,Array,[,Boolean,,,21,],;,h_,,,F9_,,,d,:,Array,[,Array,[,Array,[,Float,,,8553,],,,064,],,,0X48,],),{,},Var,_,:,Array,[,Float,,,0b100,],;,$8___4,(,_,:,Array,[,Boolean,,,3,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2955(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,_,_3,V00p3:__){} }Class G:_{Var $sX:_;}Class I:_{}Class _{}Class w{Destructor (){}Val $x:Float ;}Class f:G{}''',
                '''Class,_,{,Constructor,(,_,,,_,,,_3,,,V00p3,:,__,),{,},},Class,G,:,_,{,Var,$sX,:,_,;,},Class,I,:,_,{,},Class,_,{,},Class,w,{,Destructor,(,),{,},Val,$x,:,Float,;,},Class,f,:,G,{,},<EOF>''',
                101
            )
        )

    def test_2956(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E_75:_q_{o(k:Boolean ;q:Float ;Lj:Array [Array [Array [Boolean ,14],0x63],9_1];IC,e5:Float ;_:e_z){} }Class _1{}''',
                '''Class,E_75,:,_q_,{,o,(,k,:,Boolean,;,q,:,Float,;,Lj,:,Array,[,Array,[,Array,[,Boolean,,,14,],,,0x63,],,,91,],;,IC,,,e5,:,Float,;,_,:,e_z,),{,},},Class,_1,{,},<EOF>''',
                101
            )
        )

    def test_2957(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Val $_:__5V1;Constructor (_:Jks_;_U,_,_T8d:_x;_1_:Int ;j,_:Array [Array [Int ,0x1F],5_7]){Continue ;} }Class a{}''',
                '''Class,S,{,Val,$_,:,__5V1,;,Constructor,(,_,:,Jks_,;,_U,,,_,,,_T8d,:,_x,;,_1_,:,Int,;,j,,,_,:,Array,[,Array,[,Int,,,0x1F,],,,57,],),{,Continue,;,},},Class,a,{,},<EOF>''',
                101
            )
        )

    def test_2958(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w{}Class SS{Val _,V1_:dg3_;}Class Y{Var $_0T,$s___,$6_8f__6z:Int ;}Class Q_{}Class W_6QK_9__{}Class t{}''',
                '''Class,_w,{,},Class,SS,{,Val,_,,,V1_,:,dg3_,;,},Class,Y,{,Var,$_0T,,,$s___,,,$6_8f__6z,:,Int,;,},Class,Q_,{,},Class,W_6QK_9__,{,},Class,t,{,},<EOF>''',
                101
            )
        )

    def test_2959(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:C{}Class _{}Class x:t{Val N:Array [String ,0X48];}Class _{Val $0__,$J,_3,_,N,$8O:_V;_(__1R5,_5,_,y__:Array [String ,0140]){} }''',
                '''Class,_,:,C,{,},Class,_,{,},Class,x,:,t,{,Val,N,:,Array,[,String,,,0X48,],;,},Class,_,{,Val,$0__,,,$J,,,_3,,,_,,,N,,,$8O,:,_V,;,_,(,__1R5,,,_5,,,_,,,y__,:,Array,[,String,,,0140,],),{,},},<EOF>''',
                101
            )
        )

    def test_2960(self):
        self.assertTrue(
            TestLexer.test(
                '''Class nN_I:_{}Class M:_p{__8(_k_:Boolean ){}Constructor (T,c,Bxn,w,_7p_,j:Array [Int ,0b1011110];_,mi,A_,C4:Int ){Continue ;Var _:Boolean ;}Destructor (){} }Class _{}''',
                '''Class,nN_I,:,_,{,},Class,M,:,_p,{,__8,(,_k_,:,Boolean,),{,},Constructor,(,T,,,c,,,Bxn,,,w,,,_7p_,,,j,:,Array,[,Int,,,0b1011110,],;,_,,,mi,,,A_,,,C4,:,Int,),{,Continue,;,Var,_,:,Boolean,;,},Destructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2961(self):
        self.assertTrue(
            TestLexer.test(
                '''Class eG03_{}Class S{Destructor (){}Constructor (IW3:Array [Float ,0B1010010];_:Array [Array [Array [Array [Float ,787],0B10_0],0X6_7],0XB]){} }Class _{}Class _:E{}''',
                '''Class,eG03_,{,},Class,S,{,Destructor,(,),{,},Constructor,(,IW3,:,Array,[,Float,,,0B1010010,],;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,787,],,,0B100,],,,0X67,],,,0XB,],),{,},},Class,_,{,},Class,_,:,E,{,},<EOF>''',
                101
            )
        )

    def test_2962(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:g_{Constructor (){}Val _40,$_,$4,U4:Boolean ;}Class zS:k{Destructor (){}Constructor (j,K6:_;b_b4:Array [Int ,0x2B]){} }''',
                '''Class,q,:,g_,{,Constructor,(,),{,},Val,_40,,,$_,,,$4,,,U4,:,Boolean,;,},Class,zS,:,k,{,Destructor,(,),{,},Constructor,(,j,,,K6,:,_,;,b_b4,:,Array,[,Int,,,0x2B,],),{,},},<EOF>''',
                101
            )
        )

    def test_2963(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_4_{Var I,u7L__8:Boolean ;}Class ne{z(___q,S2_,__:_;_,ao_o,__o:Float ;_,J:Array [Array [Array [Array [Boolean ,0x4E],0XC_7],0140],054];s,X__:Array [Boolean ,0x4E];_,_,_:Boolean ;k,v:_9_;w,P,__,f,_E,j59,l8_,__87J_1:Array [Array [Array [Boolean ,8],0x4E],9];_:Array [Array [Float ,0b1],0B101_00100];_,qL,j:o_){Var K1,I1__:_;} }''',
                '''Class,z,:,_4_,{,Var,I,,,u7L__8,:,Boolean,;,},Class,ne,{,z,(,___q,,,S2_,,,__,:,_,;,_,,,ao_o,,,__o,:,Float,;,_,,,J,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x4E,],,,0XC7,],,,0140,],,,054,],;,s,,,X__,:,Array,[,Boolean,,,0x4E,],;,_,,,_,,,_,:,Boolean,;,k,,,v,:,_9_,;,w,,,P,,,__,,,f,,,_E,,,j59,,,l8_,,,__87J_1,:,Array,[,Array,[,Array,[,Boolean,,,8,],,,0x4E,],,,9,],;,_,:,Array,[,Array,[,Float,,,0b1,],,,0B10100100,],;,_,,,qL,,,j,:,o_,),{,Var,K1,,,I1__,:,_,;,},},<EOF>''',
                101
            )
        )

    def test_2964(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_kF{Destructor (){Val g,_08,_:Array [Array [Float ,02],2_2];} }Class Ea_9{}Class _T:_{$_ru(){} }Class x___6{Val $8:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1010],0126],0B1010],0126],04],0x3E],871_6],0x3E],034],65];}Class X7{Destructor (){} }Class __:_{Val _:__;}''',
                '''Class,_,:,_kF,{,Destructor,(,),{,Val,g,,,_08,,,_,:,Array,[,Array,[,Float,,,02,],,,22,],;,},},Class,Ea_9,{,},Class,_T,:,_,{,$_ru,(,),{,},},Class,x___6,{,Val,$8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1010,],,,0126,],,,0B1010,],,,0126,],,,04,],,,0x3E,],,,8716,],,,0x3E,],,,034,],,,65,],;,},Class,X7,{,Destructor,(,),{,},},Class,__,:,_,{,Val,_,:,__,;,},<EOF>''',
                101
            )
        )

    def test_2965(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class X{$_5_n(){Var t,AZH,C3__7:Array [Boolean ,0X3];}Constructor (){Break ;{} }Val $5,$_8,$_,$_:_V;}''',
                '''Class,_,{,},Class,X,{,$_5_n,(,),{,Var,t,,,AZH,,,C3__7,:,Array,[,Boolean,,,0X3,],;,},Constructor,(,),{,Break,;,{,},},Val,$5,,,$_8,,,$_,,,$_,:,_V,;,},<EOF>''',
                101
            )
        )

    def test_2966(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Zv:L_o{}Class Q:_{}Class e{N(N,W_:O;g_:Array [Array [Array [Array [Array [Array [Array [String ,0XC],0XA4_9],0xC_C],04360_5_6],47],34],0106]){}$84(){} }Class _Z{}''',
                '''Class,Zv,:,L_o,{,},Class,Q,:,_,{,},Class,e,{,N,(,N,,,W_,:,O,;,g_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XC,],,,0XA49,],,,0xCC,],,,0436056,],,,47,],,,34,],,,0106,],),{,},$84,(,),{,},},Class,_Z,{,},<EOF>''',
                101
            )
        )

    def test_2967(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Destructor (){} }Class _52R{Destructor (){}Val $_,$_:Array [Array [String ,8],8];$__(){} }Class K{}Class ___0:_5{}''',
                '''Class,a,{,Destructor,(,),{,},},Class,_52R,{,Destructor,(,),{,},Val,$_,,,$_,:,Array,[,Array,[,String,,,8,],,,8,],;,$__,(,),{,},},Class,K,{,},Class,___0,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_2968(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{Destructor (){} }Class _:_{Destructor (){} }Class y6{}Class F:__I{}Class __{}Class e{}Class j1__Ac{Constructor (){} }Class __{Val $69_w_ix4,I,mL7,$5:String ;}Class U{Destructor (){}Var $_Z_,c:String ;}''',
                '''Class,G,{,Destructor,(,),{,},},Class,_,:,_,{,Destructor,(,),{,},},Class,y6,{,},Class,F,:,__I,{,},Class,__,{,},Class,e,{,},Class,j1__Ac,{,Constructor,(,),{,},},Class,__,{,Val,$69_w_ix4,,,I,,,mL7,,,$5,:,String,;,},Class,U,{,Destructor,(,),{,},Var,$_Z_,,,c,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2969(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_8{Constructor (_,g:Array [Array [Boolean ,0X507],07];_9M__r,_2,S5i_0c_tt_94__230:Array [Float ,0b110110]){Break ;} }''',
                '''Class,_,:,_8,{,Constructor,(,_,,,g,:,Array,[,Array,[,Boolean,,,0X507,],,,07,],;,_9M__r,,,_2,,,S5i_0c_tt_94__230,:,Array,[,Float,,,0b110110,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2970(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$4(_,vC,a,_z7O22:M60K;_t10,r,_:Array [Array [Array [Array [Array [Float ,02_2],0x16],0b111100],7_3],0X2C]){} }''',
                '''Class,_,{,$4,(,_,,,vC,,,a,,,_z7O22,:,M60K,;,_t10,,,r,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,022,],,,0x16,],,,0b111100,],,,73,],,,0X2C,],),{,},},<EOF>''',
                101
            )
        )

    def test_2971(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:j_{Var $_0__,$94,_3:Array [Array [Array [Float ,0b111110],0x5],5];Var __,$____:Array [Array [Array [Int ,0b111110],07],9];Constructor (f3O,L8,Y,En,__:Boolean ;t3_K:String ;X_3Mb:Boolean ){}T2__RA(){} }''',
                '''Class,Y,:,j_,{,Var,$_0__,,,$94,,,_3,:,Array,[,Array,[,Array,[,Float,,,0b111110,],,,0x5,],,,5,],;,Var,__,,,$____,:,Array,[,Array,[,Array,[,Int,,,0b111110,],,,07,],,,9,],;,Constructor,(,f3O,,,L8,,,Y,,,En,,,__,:,Boolean,;,t3_K,:,String,;,X_3Mb,:,Boolean,),{,},T2__RA,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2972(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d{_7_(_:String ){}Var $__,$_t:Int ;Destructor (){}__(E:Int ;v,_:String ;cH,G00,x,B:Array [Array [Array [Array [Boolean ,0X30],49],49],0b11_11_0];_:Float ){} }Class d{}''',
                '''Class,d,{,_7_,(,_,:,String,),{,},Var,$__,,,$_t,:,Int,;,Destructor,(,),{,},__,(,E,:,Int,;,v,,,_,:,String,;,cH,,,G00,,,x,,,B,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X30,],,,49,],,,49,],,,0b11110,],;,_,:,Float,),{,},},Class,d,{,},<EOF>''',
                101
            )
        )

    def test_2973(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:a6B{Destructor (){Continue ;} }Class _:p{}Class _d:C03_{}Class _1{Var $_:_;Destructor (){ {} }}Class q{}Class i28K_:O{Val w,$_:_a_;}''',
                '''Class,_,:,a6B,{,Destructor,(,),{,Continue,;,},},Class,_,:,p,{,},Class,_d,:,C03_,{,},Class,_1,{,Var,$_,:,_,;,Destructor,(,),{,{,},},},Class,q,{,},Class,i28K_,:,O,{,Val,w,,,$_,:,_a_,;,},<EOF>''',
                101
            )
        )

    def test_2974(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class C4R:_{}Class _33:___{Var $V_:g;$7o(_,r7:T;_,_,Ww8_3,I3w,dy:Array [String ,0110]){Return ;} }Class CR{}''',
                '''Class,_,:,_,{,},Class,C4R,:,_,{,},Class,_33,:,___,{,Var,$V_,:,g,;,$7o,(,_,,,r7,:,T,;,_,,,_,,,Ww8_3,,,I3w,,,dy,:,Array,[,String,,,0110,],),{,Return,;,},},Class,CR,{,},<EOF>''',
                101
            )
        )

    def test_2975(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _r:IG8m5{Constructor (){}Constructor (q38_:Array [Array [Array [Array [Array [Int ,4_2],0b1000101],8_494],014],0x59]){Return ;} }''',
                '''Class,_r,:,IG8m5,{,Constructor,(,),{,},Constructor,(,q38_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,42,],,,0b1000101,],,,8494,],,,014,],,,0x59,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_2976(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (L,P_,w_5_:_;q:String ;s,w,Y:Array [Float ,04_7_7]){}Destructor (){} }Class o{Constructor (___,L,_:_;___,_h4_8:Array [Array [String ,0115],0b100000];A:Float ){} }''',
                '''Class,__,{,Constructor,(,L,,,P_,,,w_5_,:,_,;,q,:,String,;,s,,,w,,,Y,:,Array,[,Float,,,0477,],),{,},Destructor,(,),{,},},Class,o,{,Constructor,(,___,,,L,,,_,:,_,;,___,,,_h4_8,:,Array,[,Array,[,String,,,0115,],,,0b100000,],;,A,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_2977(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _34:_T{}Class _:_{}Class _8:_{_(){}Destructor (){}Destructor (){Break ;}$_4(){}Destructor (){}Constructor (){} }''',
                '''Class,_34,:,_T,{,},Class,_,:,_,{,},Class,_8,:,_,{,_,(,),{,},Destructor,(,),{,},Destructor,(,),{,Break,;,},$_4,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2978(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (_:Array [Array [Int ,04],3_2];_Z,WMQ7IN,__:_n5;Q_,Z_,h,F,Z6,__,_2a,a:d;U:i){}Val w_:Array [String ,12_3];}''',
                '''Class,__,{,Constructor,(,_,:,Array,[,Array,[,Int,,,04,],,,32,],;,_Z,,,WMQ7IN,,,__,:,_n5,;,Q_,,,Z_,,,h,,,F,,,Z6,,,__,,,_2a,,,a,:,d,;,U,:,i,),{,},Val,w_,:,Array,[,String,,,123,],;,},<EOF>''',
                101
            )
        )

    def test_2979(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{occ(_,_:_;_13,k___,_7,j02_:Boolean ){}Constructor (M:H_1_L){}L(){}Var T:Int ;Var q:Array [Array [String ,4_0_9],0x31];}Class __{}Class q_0{Destructor (){Continue ;Return ;}_(){}Var zO_:Array [Int ,0b1_1];}''',
                '''Class,_,{,occ,(,_,,,_,:,_,;,_13,,,k___,,,_7,,,j02_,:,Boolean,),{,},Constructor,(,M,:,H_1_L,),{,},L,(,),{,},Var,T,:,Int,;,Var,q,:,Array,[,Array,[,String,,,409,],,,0x31,],;,},Class,__,{,},Class,q_0,{,Destructor,(,),{,Continue,;,Return,;,},_,(,),{,},Var,zO_,:,Array,[,Int,,,0b11,],;,},<EOF>''',
                101
            )
        )

    def test_2980(self):
        self.assertTrue(
            TestLexer.test(
                '''Class PQ:_{_(__,_0_:String ){Var C,_:l;} }Class j7{Constructor (_,a:Array [Float ,0127];_:Array [String ,0XF_6];n,y,_:Array [Float ,0127];G:Boolean ){Return ;}Val $42:String ;Var l8:Array [Float ,0X2E]=--_4_u4::$G;}''',
                '''Class,PQ,:,_,{,_,(,__,,,_0_,:,String,),{,Var,C,,,_,:,l,;,},},Class,j7,{,Constructor,(,_,,,a,:,Array,[,Float,,,0127,],;,_,:,Array,[,String,,,0XF6,],;,n,,,y,,,_,:,Array,[,Float,,,0127,],;,G,:,Boolean,),{,Return,;,},Val,$42,:,String,;,Var,l8,:,Array,[,Float,,,0X2E,],=,-,-,_4_u4,::,$G,;,},<EOF>''',
                101
            )
        )

    def test_2981(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Zz30w_:iug{}Class _:_____{f__(P:Array [Array [Array [Array [Int ,072],0B1],05],0x9_0_9_F];___,_:Array [String ,73]){} }''',
                '''Class,Zz30w_,:,iug,{,},Class,_,:,_____,{,f__,(,P,:,Array,[,Array,[,Array,[,Array,[,Int,,,072,],,,0B1,],,,05,],,,0x909F,],;,___,,,_,:,Array,[,String,,,73,],),{,},},<EOF>''',
                101
            )
        )

    def test_2982(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __t1_8:__K{Constructor (E_:Array [Array [Array [Array [Array [Array [Int ,0B10011],6],0B1],1],0b110001],0B10011]){} }Class _{}''',
                '''Class,__t1_8,:,__K,{,Constructor,(,E_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B10011,],,,6,],,,0B1,],,,1,],,,0b110001,],,,0B10011,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_2983(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A{Val __,_O,M_:_01;yA(S76,k,_:Boolean ;G0x:__){}Destructor (){} }Class C{Var $ZB:r;Var $5,$0:Array [Boolean ,0B1_0];Var _:String ;}Class K{}Class _{U2(){} }''',
                '''Class,A,{,Val,__,,,_O,,,M_,:,_01,;,yA,(,S76,,,k,,,_,:,Boolean,;,G0x,:,__,),{,},Destructor,(,),{,},},Class,C,{,Var,$ZB,:,r,;,Var,$5,,,$0,:,Array,[,Boolean,,,0B10,],;,Var,_,:,String,;,},Class,K,{,},Class,_,{,U2,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2984(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Hp_{}Class K____{Var _:String ;}Class _:t{Destructor (){New W()._._4();}Val nx_:Array [Array [Float ,0XA],74];Constructor (){} }Class k1_4{Constructor (){} }''',
                '''Class,Hp_,{,},Class,K____,{,Var,_,:,String,;,},Class,_,:,t,{,Destructor,(,),{,New,W,(,),.,_,.,_4,(,),;,},Val,nx_,:,Array,[,Array,[,Float,,,0XA,],,,74,],;,Constructor,(,),{,},},Class,k1_4,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2985(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P_{}Class F{$615_(m56K:Array [Boolean ,04_6_2_3]){ {Y6::$0();}Continue ;} }Class G{}Class __:b{}Class _2:__5{}''',
                '''Class,P_,{,},Class,F,{,$615_,(,m56K,:,Array,[,Boolean,,,04623,],),{,{,Y6,::,$0,(,),;,},Continue,;,},},Class,G,{,},Class,__,:,b,{,},Class,_2,:,__5,{,},<EOF>''',
                101
            )
        )

    def test_2986(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{_(Y,R_:Array [Array [Int ,0B100010],034];m___4_D_,_W,u:Array [Int ,043_3]){Break ;} }Class A_{Var $_G53:Array [Array [Array [String ,41_2],8_9],0B1];}''',
                '''Class,g,{,_,(,Y,,,R_,:,Array,[,Array,[,Int,,,0B100010,],,,034,],;,m___4_D_,,,_W,,,u,:,Array,[,Int,,,0433,],),{,Break,;,},},Class,A_,{,Var,$_G53,:,Array,[,Array,[,Array,[,String,,,412,],,,89,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_2987(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{}Class _:or{Val h60:Array [Int ,16];t(r_D:_;_2:Array [Int ,0132];c9k:Float ;_mm,_:tAJ__c){}Constructor (){} }''',
                '''Class,Q,{,},Class,_,:,or,{,Val,h60,:,Array,[,Int,,,16,],;,t,(,r_D,:,_,;,_2,:,Array,[,Int,,,0132,],;,c9k,:,Float,;,_mm,,,_,:,tAJ__c,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_2988(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D8s_t:_4{Var m7,$_,$2:Array [Array [String ,92],0XBD2];Destructor (){Val _0:Array [Float ,024];Continue ;}Var $43,d:Array [Array [Int ,0B1010000],4];Val c,o,$0o5BI:String ;}''',
                '''Class,D8s_t,:,_4,{,Var,m7,,,$_,,,$2,:,Array,[,Array,[,String,,,92,],,,0XBD2,],;,Destructor,(,),{,Val,_0,:,Array,[,Float,,,024,],;,Continue,;,},Var,$43,,,d,:,Array,[,Array,[,Int,,,0B1010000,],,,4,],;,Val,c,,,o,,,$0o5BI,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2989(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class dQ5s4{Destructor (){} }Class _:_{Var _:Array [Array [Array [Array [Float ,39],0b1_1_0_0],6_7],19];}Class _1_{}''',
                '''Class,_,{,},Class,dQ5s4,{,Destructor,(,),{,},},Class,_,:,_,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,39,],,,0b1100,],,,67,],,,19,],;,},Class,_1_,{,},<EOF>''',
                101
            )
        )

    def test_2990(self):
        self.assertTrue(
            TestLexer.test(
                '''Class rnX_{Val $_:Array [Array [Array [Array [Array [Boolean ,0102],0x63],0X38],0B1000110],07];}Class _Q{}Class D0__:Ow_{}''',
                '''Class,rnX_,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0102,],,,0x63,],,,0X38,],,,0B1000110,],,,07,],;,},Class,_Q,{,},Class,D0__,:,Ow_,{,},<EOF>''',
                101
            )
        )

    def test_2991(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __o:g{$T_(){Continue ;} }Class f_:U{}Class _:w{Val $F,G_c7q7__Hw0T:Float ;}Class _:_{Var A:Array [Array [Float ,1_6_1],4];}Class s{}''',
                '''Class,__o,:,g,{,$T_,(,),{,Continue,;,},},Class,f_,:,U,{,},Class,_,:,w,{,Val,$F,,,G_c7q7__Hw0T,:,Float,;,},Class,_,:,_,{,Var,A,:,Array,[,Array,[,Float,,,161,],,,4,],;,},Class,s,{,},<EOF>''',
                101
            )
        )

    def test_2992(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D1:_{}Class H{Constructor (_:Float ){Return ;} }Class _E3{Val h5,up0b9:T_;Val $Ju3,i,$V9,zE,$J:String ;}Class g{}''',
                '''Class,D1,:,_,{,},Class,H,{,Constructor,(,_,:,Float,),{,Return,;,},},Class,_E3,{,Val,h5,,,up0b9,:,T_,;,Val,$Ju3,,,i,,,$V9,,,zE,,,$J,:,String,;,},Class,g,{,},<EOF>''',
                101
            )
        )

    def test_2993(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f9{}Class _{}Class _{}Class _:l6P{Val __g_:Int ;Val $_ez,_B9,c:_;D(WiN:Boolean ;I_,k:Boolean ;_7nD:Array [Boolean ,0B1011011];__0,_3,_,C:sB_;M,_:S2_ds){} }''',
                '''Class,f9,{,},Class,_,{,},Class,_,{,},Class,_,:,l6P,{,Val,__g_,:,Int,;,Val,$_ez,,,_B9,,,c,:,_,;,D,(,WiN,:,Boolean,;,I_,,,k,:,Boolean,;,_7nD,:,Array,[,Boolean,,,0B1011011,],;,__0,,,_3,,,_,,,C,:,sB_,;,M,,,_,:,S2_ds,),{,},},<EOF>''',
                101
            )
        )

    def test_2994(self):
        self.assertTrue(
            TestLexer.test(
                '''Class FT_{}Class N5W{Var $5:__;_Q(_,s,ob,_:_1;_n,_r,h,_:String ;Q_92,f:Int ;N:Array [Boolean ,75];STa,_1,_4_v_,e:__;_,Il__,_:Array [Array [String ,1_44],06];_D:Array [String ,0x25];_,_:Array [Int ,0X27];R,_:Array [Float ,022]){}Var $_E_:V;}''',
                '''Class,FT_,{,},Class,N5W,{,Var,$5,:,__,;,_Q,(,_,,,s,,,ob,,,_,:,_1,;,_n,,,_r,,,h,,,_,:,String,;,Q_92,,,f,:,Int,;,N,:,Array,[,Boolean,,,75,],;,STa,,,_1,,,_4_v_,,,e,:,__,;,_,,,Il__,,,_,:,Array,[,Array,[,String,,,144,],,,06,],;,_D,:,Array,[,String,,,0x25,],;,_,,,_,:,Array,[,Int,,,0X27,],;,R,,,_,:,Array,[,Float,,,022,],),{,},Var,$_E_,:,V,;,},<EOF>''',
                101
            )
        )

    def test_2995(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_h__{Constructor (f:L){}Val _6:Array [Array [Array [Array [Array [Array [Int ,19],0X51],19],0b1000001],0xB_4_9],03_7];}''',
                '''Class,c,:,_h__,{,Constructor,(,f,:,L,),{,},Val,_6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,19,],,,0X51,],,,19,],,,0b1000001,],,,0xB49,],,,037,],;,},<EOF>''',
                101
            )
        )

    def test_2996(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:oX{Var $_914__,rh,$_:Array [String ,0X5];_(){} }Class _:_n_{Var __,$_:Array [Int ,8];$w(){}Var $_U_:String ;}''',
                '''Class,U,:,oX,{,Var,$_914__,,,rh,,,$_,:,Array,[,String,,,0X5,],;,_,(,),{,},},Class,_,:,_n_,{,Var,__,,,$_,:,Array,[,Int,,,8,],;,$w,(,),{,},Var,$_U_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_2997(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{}Class _:_{Val d:fW;k_6_(V1:Boolean ){} }Class g{Val _X:Array [Array [Boolean ,0b111100],0b111100];Constructor (DL_1_B,_I7_K:Float ){Break ;} }''',
                '''Class,B,{,},Class,_,:,_,{,Val,d,:,fW,;,k_6_,(,V1,:,Boolean,),{,},},Class,g,{,Val,_X,:,Array,[,Array,[,Boolean,,,0b111100,],,,0b111100,],;,Constructor,(,DL_1_B,,,_I7_K,:,Float,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_2998(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_{_36_(_v:Array [Array [Int ,9],06_455_61_2_71];_,_2A1,U__,_,B,J,_,i82ZM,s62k3:Int ;u_0,_3_9,Y3y,_:XQ){} }''',
                '''Class,h_,{,_36_,(,_v,:,Array,[,Array,[,Int,,,9,],,,0645561271,],;,_,,,_2A1,,,U__,,,_,,,B,,,J,,,_,,,i82ZM,,,s62k3,:,Int,;,u_0,,,_3_9,,,Y3y,,,_,:,XQ,),{,},},<EOF>''',
                101
            )
        )

    def test_2999(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U22_A{Var _____F3,___5:Array [Array [Array [Array [Array [String ,027_7],0b1_1],0B101110],073],0b11];Var SI6:gEX4h__;}''',
                '''Class,U22_A,{,Var,_____F3,,,___5,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0277,],,,0b11,],,,0B101110,],,,073,],,,0b11,],;,Var,SI6,:,gEX4h__,;,},<EOF>''',
                101
            )
        )

    def test_3000(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:__78{}Class _1:C{Constructor (i_:Array [Array [String ,5_9],1_415]){}$_6(_,r_:_;_d,z,_,T7:y04t){}Var _:Array [Float ,97];_(_:Array [Boolean ,0B10_10];O1,H:_){}$____h_aqB(vj_:J4){} }''',
                '''Class,U,:,__78,{,},Class,_1,:,C,{,Constructor,(,i_,:,Array,[,Array,[,String,,,59,],,,1415,],),{,},$_6,(,_,,,r_,:,_,;,_d,,,z,,,_,,,T7,:,y04t,),{,},Var,_,:,Array,[,Float,,,97,],;,_,(,_,:,Array,[,Boolean,,,0B1010,],;,O1,,,H,:,_,),{,},$____h_aqB,(,vj_,:,J4,),{,},},<EOF>''',
                101
            )
        )

    def test_3001(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:b{}Class a8_:_{Constructor (){}Constructor (){Break ;}Var $y1:Array [Array [Array [Array [Array [Float ,0XB],0B1_0],0140],0140],0B11];}''',
                '''Class,g,:,b,{,},Class,a8_,:,_,{,Constructor,(,),{,},Constructor,(,),{,Break,;,},Var,$y1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XB,],,,0B10,],,,0140,],,,0140,],,,0B11,],;,},<EOF>''',
                101
            )
        )

    def test_3002(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:e__99_{Constructor (_5_:Array [Array [Array [Array [Boolean ,4_7],0x1B],0X1C],03]){Break ;}Destructor (){Continue ;} }Class o:_G{Val s_BQ_1A:A4;Val $BCal5t:Int ;}''',
                '''Class,_,:,e__99_,{,Constructor,(,_5_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,47,],,,0x1B,],,,0X1C,],,,03,],),{,Break,;,},Destructor,(,),{,Continue,;,},},Class,o,:,_G,{,Val,s_BQ_1A,:,A4,;,Val,$BCal5t,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3003(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3__1:p{Constructor (){Val V5,_71,_,G:Boolean ;J::$n();}Val k,$_g:Array [Array [Int ,0x92],024];Val $_6,$8_,$H,h,l:a;}''',
                '''Class,_3__1,:,p,{,Constructor,(,),{,Val,V5,,,_71,,,_,,,G,:,Boolean,;,J,::,$n,(,),;,},Val,k,,,$_g,:,Array,[,Array,[,Int,,,0x92,],,,024,],;,Val,$_6,,,$8_,,,$H,,,h,,,l,:,a,;,},<EOF>''',
                101
            )
        )

    def test_3004(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _j:oL_6s{}Class A_1{Constructor (_:Array [Array [Array [Array [Array [Boolean ,0xF],0B1],071],3],071];_:Array [Float ,0X6_D_4_1]){} }''',
                '''Class,_j,:,oL_6s,{,},Class,A_1,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xF,],,,0B1,],,,071,],,,3,],,,071,],;,_,:,Array,[,Float,,,0X6D41,],),{,},},<EOF>''',
                101
            )
        )

    def test_3005(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Destructor (){Continue ;} }Class _8:K{Val _:Array [Boolean ,2];}Class _:__M{Val _,w6__s,K_aP,$_,_6,_k:Float ;Val $5,$__8f:UI;}Class F{}Class __0_0{}Class z3{}''',
                '''Class,_,{,Constructor,(,),{,},Destructor,(,),{,Continue,;,},},Class,_8,:,K,{,Val,_,:,Array,[,Boolean,,,2,],;,},Class,_,:,__M,{,Val,_,,,w6__s,,,K_aP,,,$_,,,_6,,,_k,:,Float,;,Val,$5,,,$__8f,:,UI,;,},Class,F,{,},Class,__0_0,{,},Class,z3,{,},<EOF>''',
                101
            )
        )

    def test_3006(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U3:V9_{Constructor (_:Float ;_C,_,U_W:Array [Array [Array [Array [String ,0X3B],0x23],066],0XA6];C79:String ;X,F:Array [Boolean ,05];n__:Array [Float ,066];_c:Array [Array [Boolean ,9],2_4]){ {} }Destructor (){}Var $_DfJP9:Array [Float ,0x23];}''',
                '''Class,U3,:,V9_,{,Constructor,(,_,:,Float,;,_C,,,_,,,U_W,:,Array,[,Array,[,Array,[,Array,[,String,,,0X3B,],,,0x23,],,,066,],,,0XA6,],;,C79,:,String,;,X,,,F,:,Array,[,Boolean,,,05,],;,n__,:,Array,[,Float,,,066,],;,_c,:,Array,[,Array,[,Boolean,,,9,],,,24,],),{,{,},},Destructor,(,),{,},Var,$_DfJP9,:,Array,[,Float,,,0x23,],;,},<EOF>''',
                101
            )
        )

    def test_3007(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class o:sE_{$_6(_:_;X:Tn;F6:Array [Array [Array [Array [Array [Array [Boolean ,66],0B1_0],04],03_530],0xE],6];zi,L_5:C_;_,L:String ;_W:_3){}Var y_:Float ;Val h,rF:Int ;}Class _:B{Var _,gI:String ;}''',
                '''Class,__,{,},Class,o,:,sE_,{,$_6,(,_,:,_,;,X,:,Tn,;,F6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,66,],,,0B10,],,,04,],,,03530,],,,0xE,],,,6,],;,zi,,,L_5,:,C_,;,_,,,L,:,String,;,_W,:,_3,),{,},Var,y_,:,Float,;,Val,h,,,rF,:,Int,;,},Class,_,:,B,{,Var,_,,,gI,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3008(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A{Destructor (){}Val $V,_,$12A:Array [Boolean ,0b1];Constructor (S,_,GB,G_:Float ){} }Class _{Destructor (){} }''',
                '''Class,A,{,Destructor,(,),{,},Val,$V,,,_,,,$12A,:,Array,[,Boolean,,,0b1,],;,Constructor,(,S,,,_,,,GB,,,G_,:,Float,),{,},},Class,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3009(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y1:B{}Class _{}Class _:_{}Class _:w5{Constructor (kL:_;_,_1:Q4_4){}Constructor (){} }Class A7:Wa{}Class Jw:Ae{}Class _{}''',
                '''Class,Y1,:,B,{,},Class,_,{,},Class,_,:,_,{,},Class,_,:,w5,{,Constructor,(,kL,:,_,;,_,,,_1,:,Q4_4,),{,},Constructor,(,),{,},},Class,A7,:,Wa,{,},Class,Jw,:,Ae,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3010(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:_9{Var $41,_:_d;}Class _7_:x{Destructor (){}Constructor (){Val _:Array [Int ,49];Break ;Break ;}Val $Z_Q,$2:__;Val _0:Boolean ;Destructor (){ {{} }Break ;} }''',
                '''Class,B,:,_9,{,Var,$41,,,_,:,_d,;,},Class,_7_,:,x,{,Destructor,(,),{,},Constructor,(,),{,Val,_,:,Array,[,Int,,,49,],;,Break,;,Break,;,},Val,$Z_Q,,,$2,:,__,;,Val,_0,:,Boolean,;,Destructor,(,),{,{,{,},},Break,;,},},<EOF>''',
                101
            )
        )

    def test_3011(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class NL:U{Constructor (__,__,_h9_:Int ){} }Class _:_{Constructor (){Continue ;}_6K9(F3:_){Break ;Break ;} }''',
                '''Class,_,{,},Class,NL,:,U,{,Constructor,(,__,,,__,,,_h9_,:,Int,),{,},},Class,_,:,_,{,Constructor,(,),{,Continue,;,},_6K9,(,F3,:,_,),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3012(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $s_:Float ;R(){} }Class _o0:d{Constructor (_,_O:X;ar:Array [Int ,8];_3_:Array [Boolean ,0B1];_1_a:Array [Array [Boolean ,0x45],0106]){}Destructor (){Return ;} }''',
                '''Class,_,{,Var,$s_,:,Float,;,R,(,),{,},},Class,_o0,:,d,{,Constructor,(,_,,,_O,:,X,;,ar,:,Array,[,Int,,,8,],;,_3_,:,Array,[,Boolean,,,0B1,],;,_1_a,:,Array,[,Array,[,Boolean,,,0x45,],,,0106,],),{,},Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3013(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_m{}Class m:_5{Val Fj:String ;$_(_1:a87T_){}Var $_,$4:Array [Boolean ,41];Var $2_,_,$_____,_,$T:__8edo;}''',
                '''Class,_,:,_m,{,},Class,m,:,_5,{,Val,Fj,:,String,;,$_,(,_1,:,a87T_,),{,},Var,$_,,,$4,:,Array,[,Boolean,,,41,],;,Var,$2_,,,_,,,$_____,,,_,,,$T,:,__8edo,;,},<EOF>''',
                101
            )
        )

    def test_3014(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _15:P{Val $_D,$_S:Float ;}Class ae_:J{_(_35_,_f_:String ;a:Array [Array [Array [Boolean ,0B1],0b11110],0b11110];_b:Int ){} }''',
                '''Class,_15,:,P,{,Val,$_D,,,$_S,:,Float,;,},Class,ae_,:,J,{,_,(,_35_,,,_f_,:,String,;,a,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0b11110,],,,0b11110,],;,_b,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3015(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __L925:_{}Class __{}Class i{Constructor (_7_:o;_:Array [Array [Array [Array [String ,0x63],82],5],07]){} }Class n:u{}''',
                '''Class,__L925,:,_,{,},Class,__,{,},Class,i,{,Constructor,(,_7_,:,o,;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x63,],,,82,],,,5,],,,07,],),{,},},Class,n,:,u,{,},<EOF>''',
                101
            )
        )

    def test_3016(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w919O6{Destructor (){} }Class kV{Destructor (){}Constructor (__,b1_:G_;b,_,_:Array [Boolean ,0X7];_,__:Array [String ,14];_:Array [Boolean ,0b1]){} }''',
                '''Class,w919O6,{,Destructor,(,),{,},},Class,kV,{,Destructor,(,),{,},Constructor,(,__,,,b1_,:,G_,;,b,,,_,,,_,:,Array,[,Boolean,,,0X7,],;,_,,,__,:,Array,[,String,,,14,],;,_,:,Array,[,Boolean,,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3017(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _fh{Var $_:Array [Array [Array [Array [String ,06],01],0XC],022_2];$oV(__:_;E4:Array [Boolean ,0X83DCE93];_,B,_p:Int ){} }''',
                '''Class,_fh,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,06,],,,01,],,,0XC,],,,0222,],;,$oV,(,__,:,_,;,E4,:,Array,[,Boolean,,,0X83DCE93,],;,_,,,B,,,_p,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3018(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_e{Var $_G:Float ;Val _F:Array [Array [Array [Int ,4],0126],0126];}Class V8_w_x{}Class T7_w{Constructor (a:Boolean ){} }''',
                '''Class,_,:,_e,{,Var,$_G,:,Float,;,Val,_F,:,Array,[,Array,[,Array,[,Int,,,4,],,,0126,],,,0126,],;,},Class,V8_w_x,{,},Class,T7_w,{,Constructor,(,a,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3019(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Dy:o{}Class _{}Class _{$_bA(_:Array [Array [Int ,0b1],0B111011];b,U,_a,_3:Array [Array [Array [Float ,01],0B111011],01]){}Constructor (_,j,_,__mf,_:Array [Float ,0xC];_,_:Array [Array [Float ,8_9],0xC]){ {} }}''',
                '''Class,Dy,:,o,{,},Class,_,{,},Class,_,{,$_bA,(,_,:,Array,[,Array,[,Int,,,0b1,],,,0B111011,],;,b,,,U,,,_a,,,_3,:,Array,[,Array,[,Array,[,Float,,,01,],,,0B111011,],,,01,],),{,},Constructor,(,_,,,j,,,_,,,__mf,,,_,:,Array,[,Float,,,0xC,],;,_,,,_,:,Array,[,Array,[,Float,,,89,],,,0xC,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_3020(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d_:_{Constructor (_:R;s:Array [Int ,0110]){}$5N1(k9,_g,pw:String ;m5,_68S,_,_,_,n_:Float ;lW:Array [Float ,0110]){} }''',
                '''Class,d_,:,_,{,Constructor,(,_,:,R,;,s,:,Array,[,Int,,,0110,],),{,},$5N1,(,k9,,,_g,,,pw,:,String,;,m5,,,_68S,,,_,,,_,,,_,,,n_,:,Float,;,lW,:,Array,[,Float,,,0110,],),{,},},<EOF>''',
                101
            )
        )

    def test_3021(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{Constructor (_5:Array [Array [Array [Array [Array [String ,0123],0b1010],0xEBD_6_1D_7_3_02],0B1001011],0123]){}$_W_(){} }''',
                '''Class,Y,{,Constructor,(,_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0123,],,,0b1010,],,,0xEBD61D7302,],,,0B1001011,],,,0123,],),{,},$_W_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3022(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T_:A2691{Val jS__,_4v:Array [Float ,042];Constructor (g_2Q_8_s3,hu:_;aP,J_,V:Array [Array [Float ,0B1011010],0b1];_:z_;_:Array [Int ,0X10];j:Float ;X_:_;E:Array [Int ,05]){g::$_();} }''',
                '''Class,T_,:,A2691,{,Val,jS__,,,_4v,:,Array,[,Float,,,042,],;,Constructor,(,g_2Q_8_s3,,,hu,:,_,;,aP,,,J_,,,V,:,Array,[,Array,[,Float,,,0B1011010,],,,0b1,],;,_,:,z_,;,_,:,Array,[,Int,,,0X10,],;,j,:,Float,;,X_,:,_,;,E,:,Array,[,Int,,,05,],),{,g,::,$_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3023(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3:S{Destructor (){}_8(){Break ;}$__(){}Constructor (){}Destructor (){}Destructor (){}Var _5C1:Array [Array [String ,0B1011011],01_61_5];}Class V5:__{}''',
                '''Class,_3,:,S,{,Destructor,(,),{,},_8,(,),{,Break,;,},$__,(,),{,},Constructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Var,_5C1,:,Array,[,Array,[,String,,,0B1011011,],,,01615,],;,},Class,V5,:,__,{,},<EOF>''',
                101
            )
        )

    def test_3024(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g{Val q:Array [Array [Array [Array [Boolean ,0X3A],0X7],0b1010110],0XE_0_D];}Class _d{Val $_2,_:Q;Var b,_2l:Array [Array [String ,0134],78];}Class _7t{Var _:Array [Array [Array [Array [Array [Int ,78],78],5],0134],0b1010110];}Class _:u{}Class T_:_{}''',
                '''Class,g,{,Val,q,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X3A,],,,0X7,],,,0b1010110,],,,0XE0D,],;,},Class,_d,{,Val,$_2,,,_,:,Q,;,Var,b,,,_2l,:,Array,[,Array,[,String,,,0134,],,,78,],;,},Class,_7t,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,78,],,,78,],,,5,],,,0134,],,,0b1010110,],;,},Class,_,:,u,{,},Class,T_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3025(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __7_{}Class X:_{$j(Dm:Int ){}Var _:p_;Destructor (){Return ;{} }_7S(){}_67(_5:Array [Array [Array [Array [Float ,0X6_F_8],0x37],3],0B11];_Y,d,M:String ;I_:Array [Array [Array [Array [Float ,0b1001111],0b1001111],77],0b1_0_0]){} }''',
                '''Class,__7_,{,},Class,X,:,_,{,$j,(,Dm,:,Int,),{,},Var,_,:,p_,;,Destructor,(,),{,Return,;,{,},},_7S,(,),{,},_67,(,_5,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X6F8,],,,0x37,],,,3,],,,0B11,],;,_Y,,,d,,,M,:,String,;,I_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1001111,],,,0b1001111,],,,77,],,,0b100,],),{,},},<EOF>''',
                101
            )
        )

    def test_3026(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _44_a_4{}Class j3{}Class U_{Constructor (_,_wt:String ;j,_8,s0:Array [Array [Array [Array [Array [Int ,4],46],0b1001101],064],3];___8__3:Boolean ;a,U,_O,_,g,d:___Y9a7P;Y_,_N,c:Array [String ,46]){}Constructor (o6_2:Array [Boolean ,46]){ {} }}Class _:o{}Class I{Constructor (_f,_,__55m3985,e:_6;_15f,_:Array [Array [String ,46],0B1]){} }Class _{}Class _S:_T__8{}Class E{Val $U6__:_x;}''',
                '''Class,_44_a_4,{,},Class,j3,{,},Class,U_,{,Constructor,(,_,,,_wt,:,String,;,j,,,_8,,,s0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,4,],,,46,],,,0b1001101,],,,064,],,,3,],;,___8__3,:,Boolean,;,a,,,U,,,_O,,,_,,,g,,,d,:,___Y9a7P,;,Y_,,,_N,,,c,:,Array,[,String,,,46,],),{,},Constructor,(,o6_2,:,Array,[,Boolean,,,46,],),{,{,},},},Class,_,:,o,{,},Class,I,{,Constructor,(,_f,,,_,,,__55m3985,,,e,:,_6,;,_15f,,,_,:,Array,[,Array,[,String,,,46,],,,0B1,],),{,},},Class,_,{,},Class,_S,:,_T__8,{,},Class,E,{,Val,$U6__,:,_x,;,},<EOF>''',
                101
            )
        )

    def test_3027(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q0:B6_{_(q,_,_x8:v;_:Array [Boolean ,0B1010000];_6_:I_h5_;_g:Boolean ){Break ;} }Class q8{}Class _{Var $X_h:Array [Array [Array [Array [Array [Array [Array [Boolean ,8_5],0B1010000],0X23],2],0X23],2_2],0114];}''',
                '''Class,Q0,:,B6_,{,_,(,q,,,_,,,_x8,:,v,;,_,:,Array,[,Boolean,,,0B1010000,],;,_6_,:,I_h5_,;,_g,:,Boolean,),{,Break,;,},},Class,q8,{,},Class,_,{,Var,$X_h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,85,],,,0B1010000,],,,0X23,],,,2,],,,0X23,],,,22,],,,0114,],;,},<EOF>''',
                101
            )
        )

    def test_3028(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _03u:M{Constructor (_0:Array [Int ,070];_,_,__:Array [Float ,070];H,Q:Array [Array [Float ,07_0],0B100001];U_o:_){} }''',
                '''Class,_03u,:,M,{,Constructor,(,_0,:,Array,[,Int,,,070,],;,_,,,_,,,__,:,Array,[,Float,,,070,],;,H,,,Q,:,Array,[,Array,[,Float,,,070,],,,0B100001,],;,U_o,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3029(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Q3{Constructor (_H,b6,_:Array [Array [Array [Array [String ,66],0XB],0X8],0B111111];_,g,_,_:_;_g:Int ;__0:_1V3){Val __A7:Array [Boolean ,06];} }''',
                '''Class,_,:,Q3,{,Constructor,(,_H,,,b6,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,66,],,,0XB,],,,0X8,],,,0B111111,],;,_,,,g,,,_,,,_,:,_,;,_g,:,Int,;,__0,:,_1V3,),{,Val,__A7,:,Array,[,Boolean,,,06,],;,},},<EOF>''',
                101
            )
        )

    def test_3030(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{M(_,_R____:Boolean ;G__9x5,Y_z893:Array [String ,0b10]){}Destructor (){}Val i_KACEa_,$I,$_4_k,s_:Array [Int ,0X18];}''',
                '''Class,t,{,M,(,_,,,_R____,:,Boolean,;,G__9x5,,,Y_z893,:,Array,[,String,,,0b10,],),{,},Destructor,(,),{,},Val,i_KACEa_,,,$I,,,$_4_k,,,s_,:,Array,[,Int,,,0X18,],;,},<EOF>''',
                101
            )
        )

    def test_3031(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _97{$5__8(b,C:Int ){}Constructor (V,Q:Array [Boolean ,0X19]){}Constructor (FvMn:Array [Array [Array [String ,38],0x45],1]){} }''',
                '''Class,_97,{,$5__8,(,b,,,C,:,Int,),{,},Constructor,(,V,,,Q,:,Array,[,Boolean,,,0X19,],),{,},Constructor,(,FvMn,:,Array,[,Array,[,Array,[,String,,,38,],,,0x45,],,,1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3032(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U{}Class _9O{Var $5A:Boolean ;}Class _N:Q{}Class T:_{Constructor (){} }Class K:__{$Of(_,__C3ID9:Array [Float ,75];L:Int ){} }Class _:z{}''',
                '''Class,U,{,},Class,_9O,{,Var,$5A,:,Boolean,;,},Class,_N,:,Q,{,},Class,T,:,_,{,Constructor,(,),{,},},Class,K,:,__,{,$Of,(,_,,,__C3ID9,:,Array,[,Float,,,75,],;,L,:,Int,),{,},},Class,_,:,z,{,},<EOF>''',
                101
            )
        )

    def test_3033(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:l{}Class K1y{Destructor (){}Val _3Z:Array [Array [Array [Array [Array [Int ,69],0112],0x42_9_84B],0B101101],69];}Class __{}Class _A:_{}''',
                '''Class,_,:,l,{,},Class,K1y,{,Destructor,(,),{,},Val,_3Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,69,],,,0112,],,,0x42984B,],,,0B101101,],,,69,],;,},Class,__,{,},Class,_A,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3034(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ZcJ_R7:_{$7_(_,_78_,__43,C,Y1A,___y,__T,L:Float ;A__14__7,__,h,_,_:Int ;D,i_:Array [Boolean ,0B1]){} }Class v1{}Class F:_{}''',
                '''Class,ZcJ_R7,:,_,{,$7_,(,_,,,_78_,,,__43,,,C,,,Y1A,,,___y,,,__T,,,L,:,Float,;,A__14__7,,,__,,,h,,,_,,,_,:,Int,;,D,,,i_,:,Array,[,Boolean,,,0B1,],),{,},},Class,v1,{,},Class,F,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3035(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _n_{Constructor (){}Val N,_,_je,$0:String ;Destructor (){} }Class X:_e{$__3(){} }Class _2{Destructor (){} }''',
                '''Class,_n_,{,Constructor,(,),{,},Val,N,,,_,,,_je,,,$0,:,String,;,Destructor,(,),{,},},Class,X,:,_e,{,$__3,(,),{,},},Class,_2,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3036(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x:t_h09g__R{Destructor (){Val _,_,_:Array [Array [Array [Array [Float ,101_9],0X3D],0b110001],66];}Destructor (){}Val u:Boolean ;}''',
                '''Class,x,:,t_h09g__R,{,Destructor,(,),{,Val,_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,1019,],,,0X3D,],,,0b110001,],,,66,],;,},Destructor,(,),{,},Val,u,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3037(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __U{Constructor (_:String ;l1:S){}$2y(m5a,s,lZh:Boolean ;X,o:String ;_:Array [Boolean ,59]){}Constructor (){}Val _W,_p0,_:JQK97b;}Class _i_:BQ_j{Constructor (){}$7(){} }''',
                '''Class,__U,{,Constructor,(,_,:,String,;,l1,:,S,),{,},$2y,(,m5a,,,s,,,lZh,:,Boolean,;,X,,,o,:,String,;,_,:,Array,[,Boolean,,,59,],),{,},Constructor,(,),{,},Val,_W,,,_p0,,,_,:,JQK97b,;,},Class,_i_,:,BQ_j,{,Constructor,(,),{,},$7,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3038(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $__:Array [Int ,0b1000110];}Class __:X_{}Class _:R{Destructor (){} }Class D:__2{}Class _Q_3X96_{$_7(){} }Class f:HB{Val _,$g,$j_,_9,O,_q,_,_:__;Constructor (L,h_:_){} }''',
                '''Class,_,{,Val,$__,:,Array,[,Int,,,0b1000110,],;,},Class,__,:,X_,{,},Class,_,:,R,{,Destructor,(,),{,},},Class,D,:,__2,{,},Class,_Q_3X96_,{,$_7,(,),{,},},Class,f,:,HB,{,Val,_,,,$g,,,$j_,,,_9,,,O,,,_q,,,_,,,_,:,__,;,Constructor,(,L,,,h_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3039(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:Z{Constructor (_,_1_1_,_,_R_:Int ;O:Array [Boolean ,5];O__,v__,H,x,_5,_:Y2;H7:Array [Float ,9_3]){} }''',
                '''Class,__,:,Z,{,Constructor,(,_,,,_1_1_,,,_,,,_R_,:,Int,;,O,:,Array,[,Boolean,,,5,],;,O__,,,v__,,,H,,,x,,,_5,,,_,:,Y2,;,H7,:,Array,[,Float,,,93,],),{,},},<EOF>''',
                101
            )
        )

    def test_3040(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:x{}Class _9:s_69{Var $_:Boolean ;Destructor (){}Destructor (){}Constructor (){}_h2(dk:F;a2,nc:String ;_:n){} }''',
                '''Class,_,:,x,{,},Class,_9,:,s_69,{,Var,$_,:,Boolean,;,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},_h2,(,dk,:,F,;,a2,,,nc,:,String,;,_,:,n,),{,},},<EOF>''',
                101
            )
        )

    def test_3041(self):
        self.assertTrue(
            TestLexer.test(
                '''Class sY_:U{_vS21Q(o_J,__:Float ;F,C:Boolean ;v___:Array [Array [Array [Array [Array [Array [Boolean ,0B1000101],100],100],0x39],03],7];__G,b,S5:Int ){} }''',
                '''Class,sY_,:,U,{,_vS21Q,(,o_J,,,__,:,Float,;,F,,,C,:,Boolean,;,v___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1000101,],,,100,],,,100,],,,0x39,],,,03,],,,7,],;,__G,,,b,,,S5,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3042(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j{Var qe2__:Array [Array [Array [Float ,33],0x46],0X5];}Class _:V8l_T_{Val _72_8,__,$m_:Array [Array [Array [Float ,33],33],07];Destructor (){} }Class _{}Class v:_R{}''',
                '''Class,j,{,Var,qe2__,:,Array,[,Array,[,Array,[,Float,,,33,],,,0x46,],,,0X5,],;,},Class,_,:,V8l_T_,{,Val,_72_8,,,__,,,$m_,:,Array,[,Array,[,Array,[,Float,,,33,],,,33,],,,07,],;,Destructor,(,),{,},},Class,_,{,},Class,v,:,_R,{,},<EOF>''',
                101
            )
        )

    def test_3043(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:V{Destructor (){Jadz::$9_()._().S._();__::$__v.__();Break ;}Val $01:Array [String ,52];}Class N:__{}''',
                '''Class,__,:,V,{,Destructor,(,),{,Jadz,::,$9_,(,),.,_,(,),.,S,.,_,(,),;,__,::,$__v,.,__,(,),;,Break,;,},Val,$01,:,Array,[,String,,,52,],;,},Class,N,:,__,{,},<EOF>''',
                101
            )
        )

    def test_3044(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z7_{Constructor (){Continue ;}Var _:Array [Array [Array [Array [Boolean ,9_16_7_2],0XD_5_3_1_D],0X63],11];}''',
                '''Class,Z7_,{,Constructor,(,),{,Continue,;,},Var,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,91672,],,,0XD531D,],,,0X63,],,,11,],;,},<EOF>''',
                101
            )
        )

    def test_3045(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Val JR:Int ;}Class _{Destructor (){} }Class _{Constructor (RV9:Array [Array [Array [Array [Array [Boolean ,76],0b11],0x57],0XE8],76]){Break ;} }''',
                '''Class,S,{,Val,JR,:,Int,;,},Class,_,{,Destructor,(,),{,},},Class,_,{,Constructor,(,RV9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,76,],,,0b11,],,,0x57,],,,0XE8,],,,76,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3046(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a3:e{Var _:_;Constructor (U,S:Array [Array [Array [Array [Array [Float ,0x16],072],05_5],05],0B10_1];_,N2:Array [String ,01];qo7,X:Array [Array [String ,0b11],0B11101]){} }Class _:_{}''',
                '''Class,a3,:,e,{,Var,_,:,_,;,Constructor,(,U,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x16,],,,072,],,,055,],,,05,],,,0B101,],;,_,,,N2,:,Array,[,String,,,01,],;,qo7,,,X,:,Array,[,Array,[,String,,,0b11,],,,0B11101,],),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3047(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:U{Destructor (){} }Class g__2{}Class _{}Class rW_{}Class T{Val $9_y,t:__;}Class o9{Destructor (){} }Class _{}''',
                '''Class,t,:,U,{,Destructor,(,),{,},},Class,g__2,{,},Class,_,{,},Class,rW_,{,},Class,T,{,Val,$9_y,,,t,:,__,;,},Class,o9,{,Destructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3048(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _1_:__6{Constructor (X___,jG:Int ){}Var $21w3m__,$_1F,$_X:Array [Float ,024];Constructor (_1:r6TjI_qf){} }Class _8:_P{}''',
                '''Class,_,{,},Class,_1_,:,__6,{,Constructor,(,X___,,,jG,:,Int,),{,},Var,$21w3m__,,,$_1F,,,$_X,:,Array,[,Float,,,024,],;,Constructor,(,_1,:,r6TjI_qf,),{,},},Class,_8,:,_P,{,},<EOF>''',
                101
            )
        )

    def test_3049(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7_Xf{Val $c:Array [Array [Array [Float ,30],0X1F],30];Val $i_,$_,$C,_,_5D:Array [Array [Int ,4],0B1111];Var $_,$_:Array [Float ,0111];}Class C:D{}''',
                '''Class,_7_Xf,{,Val,$c,:,Array,[,Array,[,Array,[,Float,,,30,],,,0X1F,],,,30,],;,Val,$i_,,,$_,,,$C,,,_,,,_5D,:,Array,[,Array,[,Int,,,4,],,,0B1111,],;,Var,$_,,,$_,:,Array,[,Float,,,0111,],;,},Class,C,:,D,{,},<EOF>''',
                101
            )
        )

    def test_3050(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5_{}Class __:_{Val _:String ;}Class _Ib{Destructor (){}Constructor (_:_;_2,E:Boolean ){} }Class _:a0{Val $y__z:_;}''',
                '''Class,_5_,{,},Class,__,:,_,{,Val,_,:,String,;,},Class,_Ib,{,Destructor,(,),{,},Constructor,(,_,:,_,;,_2,,,E,:,Boolean,),{,},},Class,_,:,a0,{,Val,$y__z,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3051(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B044MJ_:_{}Class _:f{}Class o:VhTct{Var $r,$_8_5,$_:Array [Array [Array [Array [Boolean ,0XB],07],0125],8];Destructor (){} }''',
                '''Class,B044MJ_,:,_,{,},Class,_,:,f,{,},Class,o,:,VhTct,{,Var,$r,,,$_8_5,,,$_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XB,],,,07,],,,0125,],,,8,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3052(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Uc:_{Destructor (){}Var $e89,$_,_:e;Y(F1,_,__p:____;_,_6,G,A:Array [String ,1_059]){} }Class _{G(__:Int ){} }''',
                '''Class,Uc,:,_,{,Destructor,(,),{,},Var,$e89,,,$_,,,_,:,e,;,Y,(,F1,,,_,,,__p,:,____,;,_,,,_6,,,G,,,A,:,Array,[,String,,,1059,],),{,},},Class,_,{,G,(,__,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3053(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W_20:_{Val _:Array [String ,0B1];Val g9_,_:Float ;Destructor (){}Val $3Z7:Float ;Val _g5,l_z__A:Boolean ;Val z_,_:Array [Float ,0B10001];}''',
                '''Class,W_20,:,_,{,Val,_,:,Array,[,String,,,0B1,],;,Val,g9_,,,_,:,Float,;,Destructor,(,),{,},Val,$3Z7,:,Float,;,Val,_g5,,,l_z__A,:,Boolean,;,Val,z_,,,_,:,Array,[,Float,,,0B10001,],;,},<EOF>''',
                101
            )
        )

    def test_3054(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:R8{Var $_,$5m,p:Float ;Constructor (_,b1:String ;_:Array [Array [Array [Array [Array [Array [Boolean ,0xB39C],046],2],0XF],0b1],0x36];W___,_:Array [Boolean ,0b1];_9:Array [Array [Float ,5],0B1]){} }''',
                '''Class,B,:,R8,{,Var,$_,,,$5m,,,p,:,Float,;,Constructor,(,_,,,b1,:,String,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xB39C,],,,046,],,,2,],,,0XF,],,,0b1,],,,0x36,],;,W___,,,_,:,Array,[,Boolean,,,0b1,],;,_9,:,Array,[,Array,[,Float,,,5,],,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3055(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_P70{}Class e{}Class _:T_{}Class o{n(_uf:Array [Float ,06]){}Destructor (){Return ;Var z_,_37,_p9d,Hh0,T_:P;Return ;} }''',
                '''Class,_,:,_P70,{,},Class,e,{,},Class,_,:,T_,{,},Class,o,{,n,(,_uf,:,Array,[,Float,,,06,],),{,},Destructor,(,),{,Return,;,Var,z_,,,_37,,,_p9d,,,Hh0,,,T_,:,P,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3056(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gc_:_{Constructor (O,__:Float ;_3:Array [String ,7_86];_:String ;e,_:Array [Array [Array [Boolean ,0121],0XC_B],0b11000];Z:_0_;_,_:String ){} }''',
                '''Class,gc_,:,_,{,Constructor,(,O,,,__,:,Float,;,_3,:,Array,[,String,,,786,],;,_,:,String,;,e,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0121,],,,0XCB,],,,0b11000,],;,Z,:,_0_,;,_,,,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3057(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8__:_6D{Destructor (){}Var _7,L,$s8k9,_,_:Boolean ;}Class _:O{Var $l,$d,K:Array [Array [Float ,0x24],03];}Class __6:b{}''',
                '''Class,_8__,:,_6D,{,Destructor,(,),{,},Var,_7,,,L,,,$s8k9,,,_,,,_,:,Boolean,;,},Class,_,:,O,{,Var,$l,,,$d,,,K,:,Array,[,Array,[,Float,,,0x24,],,,03,],;,},Class,__6,:,b,{,},<EOF>''',
                101
            )
        )

    def test_3058(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _we:V{$s_4(d9s,cY7:Int ;A,A,_:___;___,U:Boolean ;V5I352:Boolean ){Break ;}Constructor (_:Array [Array [Array [String ,0B10],0B11],01_31_6]){}Var L:Boolean ;}''',
                '''Class,_we,:,V,{,$s_4,(,d9s,,,cY7,:,Int,;,A,,,A,,,_,:,___,;,___,,,U,:,Boolean,;,V5I352,:,Boolean,),{,Break,;,},Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0B10,],,,0B11,],,,01316,],),{,},Var,L,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3059(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_7{Destructor (){} }Class _7{Destructor (){Val z1,_2P_,_h_,_k7B_,y:Int ;Return ;Return ;}Destructor (){} }Class e{}Class T{Var $K_:Array [Int ,6];}Class t{Val $7:String ;}Class O:C_{}''',
                '''Class,_,:,_7,{,Destructor,(,),{,},},Class,_7,{,Destructor,(,),{,Val,z1,,,_2P_,,,_h_,,,_k7B_,,,y,:,Int,;,Return,;,Return,;,},Destructor,(,),{,},},Class,e,{,},Class,T,{,Var,$K_,:,Array,[,Int,,,6,],;,},Class,t,{,Val,$7,:,String,;,},Class,O,:,C_,{,},<EOF>''',
                101
            )
        )

    def test_3060(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:x{Var $0,_:Int ;Constructor (_:Array [Array [Array [Array [String ,0x46],0x8_EB],05_64],0X69];_S0_,__2:Int ){Continue ;} }''',
                '''Class,_,:,x,{,Var,$0,,,_,:,Int,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x46,],,,0x8EB,],,,0564,],,,0X69,],;,_S0_,,,__2,:,Int,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3061(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_35p{}Class f26:_37{Destructor (){Return ;} }Class _{F2___2o9(_j_:q;Z_7_03_:_47kQ){}_(_l,D_,_p_p,YN:Array [Float ,0x4C]){} }''',
                '''Class,_,:,_35p,{,},Class,f26,:,_37,{,Destructor,(,),{,Return,;,},},Class,_,{,F2___2o9,(,_j_,:,q,;,Z_7_03_,:,_47kQ,),{,},_,(,_l,,,D_,,,_p_p,,,YN,:,Array,[,Float,,,0x4C,],),{,},},<EOF>''',
                101
            )
        )

    def test_3062(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:j42{Destructor (){Return ;}Constructor (){Continue ;{ {}Val _,_:__;_::$5_Lw(!!!New __());} }}Class Z:_{Var f9,Q:Array [Array [Int ,0b1],0B1_1];}''',
                '''Class,_,:,j42,{,Destructor,(,),{,Return,;,},Constructor,(,),{,Continue,;,{,{,},Val,_,,,_,:,__,;,_,::,$5_Lw,(,!,!,!,New,__,(,),),;,},},},Class,Z,:,_,{,Var,f9,,,Q,:,Array,[,Array,[,Int,,,0b1,],,,0B11,],;,},<EOF>''',
                101
            )
        )

    def test_3063(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:cb{}Class E5_:_A{Val U,a_,_D:Int ;Constructor (_Z,f,__,_J,KW,z,cho:_0;_R_,H:_v6_z_z1;J:H_;d_:Int ){} }''',
                '''Class,_,:,cb,{,},Class,E5_,:,_A,{,Val,U,,,a_,,,_D,:,Int,;,Constructor,(,_Z,,,f,,,__,,,_J,,,KW,,,z,,,cho,:,_0,;,_R_,,,H,:,_v6_z_z1,;,J,:,H_,;,d_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3064(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N4{}Class _{Val $s,_9,_8:Array [Int ,0x3];}Class _d:Z{}Class V:R_{Var Jn:Array [Float ,0B1];Val $7_,$6_:Array [Int ,76];}''',
                '''Class,_,:,N4,{,},Class,_,{,Val,$s,,,_9,,,_8,:,Array,[,Int,,,0x3,],;,},Class,_d,:,Z,{,},Class,V,:,R_,{,Var,Jn,:,Array,[,Float,,,0B1,],;,Val,$7_,,,$6_,:,Array,[,Int,,,76,],;,},<EOF>''',
                101
            )
        )

    def test_3065(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Destructor (){} }Class L{Constructor (__:G;_5,_S_f,_:Array [Array [Array [Array [Array [Float ,0XD_5],100],100],0B10],0X40];q:String ){}Val __,__:Array [Boolean ,0x7];}Class I:r2{}Class X:_1{}''',
                '''Class,_,:,_,{,Destructor,(,),{,},},Class,L,{,Constructor,(,__,:,G,;,_5,,,_S_f,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XD5,],,,100,],,,100,],,,0B10,],,,0X40,],;,q,:,String,),{,},Val,__,,,__,:,Array,[,Boolean,,,0x7,],;,},Class,I,:,r2,{,},Class,X,:,_1,{,},<EOF>''',
                101
            )
        )

    def test_3066(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{}Class Y10:x_{Constructor (_:Int ;_,g:Boolean ;dx:Array [Float ,0B1];n,_:Array [Array [Boolean ,0X8B],021];_,_:Boolean ){Break ;} }''',
                '''Class,__,{,},Class,Y10,:,x_,{,Constructor,(,_,:,Int,;,_,,,g,:,Boolean,;,dx,:,Array,[,Float,,,0B1,],;,n,,,_,:,Array,[,Array,[,Boolean,,,0X8B,],,,021,],;,_,,,_,:,Boolean,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3067(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a4:_{}Class fe{Constructor (z:m;_0,A__:X;_S,__P:Array [Int ,0B100011];_VyY_:Array [String ,04];w,B6,g:v){} }Class z{Destructor (){_::$0R();}Val $01,$1e:String ;}''',
                '''Class,a4,:,_,{,},Class,fe,{,Constructor,(,z,:,m,;,_0,,,A__,:,X,;,_S,,,__P,:,Array,[,Int,,,0B100011,],;,_VyY_,:,Array,[,String,,,04,],;,w,,,B6,,,g,:,v,),{,},},Class,z,{,Destructor,(,),{,_,::,$0R,(,),;,},Val,$01,,,$1e,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3068(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w{S(_:T;_3:Array [Array [Boolean ,037],47];T,_:Array [Array [Boolean ,014],037];__:Float ){Var _,_Q,___,_,_:_;} }''',
                '''Class,w,{,S,(,_,:,T,;,_3,:,Array,[,Array,[,Boolean,,,037,],,,47,],;,T,,,_,:,Array,[,Array,[,Boolean,,,014,],,,037,],;,__,:,Float,),{,Var,_,,,_Q,,,___,,,_,,,_,:,_,;,},},<EOF>''',
                101
            )
        )

    def test_3069(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T11:s{}Class FF:K6{Val _,Q:Array [String ,0104];}Class t21{}Class _:W8_{Constructor (G6c:Array [Boolean ,0X22]){}Val $VS2,$6:C_2;}Class _G{}''',
                '''Class,T11,:,s,{,},Class,FF,:,K6,{,Val,_,,,Q,:,Array,[,String,,,0104,],;,},Class,t21,{,},Class,_,:,W8_,{,Constructor,(,G6c,:,Array,[,Boolean,,,0X22,],),{,},Val,$VS2,,,$6,:,C_2,;,},Class,_G,{,},<EOF>''',
                101
            )
        )

    def test_3070(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{Val $_:Float ;}Class _:HS_{Val ___84_,__4,h_p:x;$3(k:Array [Array [Float ,0x40],0b1];G:Array [Array [Array [Array [Array [Array [String ,0x40],0B111110],072],34],072],0X17];I:_85;S1,_C,_,M,_q,_:Array [String ,0XD5];_:L_){}Val $69,$_:Array [Array [String ,34],2_8];}''',
                '''Class,_8,{,Val,$_,:,Float,;,},Class,_,:,HS_,{,Val,___84_,,,__4,,,h_p,:,x,;,$3,(,k,:,Array,[,Array,[,Float,,,0x40,],,,0b1,],;,G,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x40,],,,0B111110,],,,072,],,,34,],,,072,],,,0X17,],;,I,:,_85,;,S1,,,_C,,,_,,,M,,,_q,,,_,:,Array,[,String,,,0XD5,],;,_,:,L_,),{,},Val,$69,,,$_,:,Array,[,Array,[,String,,,34,],,,28,],;,},<EOF>''',
                101
            )
        )

    def test_3071(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{Var _,$6:Array [Array [Array [Boolean ,0x2C],0B1],0X24];Val M0,$ZD_,$p:_;}Class __x30M6_J{}Class TX{Destructor (){}Var $0,A0,c,D:Int ;Var $6,$_3:c;}''',
                '''Class,s,{,Var,_,,,$6,:,Array,[,Array,[,Array,[,Boolean,,,0x2C,],,,0B1,],,,0X24,],;,Val,M0,,,$ZD_,,,$p,:,_,;,},Class,__x30M6_J,{,},Class,TX,{,Destructor,(,),{,},Var,$0,,,A0,,,c,,,D,:,Int,;,Var,$6,,,$_3,:,c,;,},<EOF>''',
                101
            )
        )

    def test_3072(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _h_:_9{Var $A3:Array [String ,0X9];Destructor (){}Var h,r746:Boolean ;Val b,d,_r:String ;Constructor (){ {}Break ;} }Class __31__:g{}''',
                '''Class,_h_,:,_9,{,Var,$A3,:,Array,[,String,,,0X9,],;,Destructor,(,),{,},Var,h,,,r746,:,Boolean,;,Val,b,,,d,,,_r,:,String,;,Constructor,(,),{,{,},Break,;,},},Class,__31__,:,g,{,},<EOF>''',
                101
            )
        )

    def test_3073(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_5(_:Array [Array [Array [Array [Int ,45],0b10],0x2],0B110];_:x7;___:Array [Boolean ,0X20];wW,X,Q6,W:Array [Boolean ,3]){} }''',
                '''Class,_,{,_5,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,45,],,,0b10,],,,0x2,],,,0B110,],;,_,:,x7,;,___,:,Array,[,Boolean,,,0X20,],;,wW,,,X,,,Q6,,,W,:,Array,[,Boolean,,,3,],),{,},},<EOF>''',
                101
            )
        )

    def test_3074(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V1{Val i:Int ;}Class C{$__13(_:String ;O,_,_,_:_;U,_1:Q8__;_:String ;_6_A:_){} }Class _4{Val R:Array [Boolean ,05];}Class _Nj{Var BN:_;Val $_YqG:Array [Array [Array [Boolean ,96],0B1010000],3_8];Val $Z_l:Int ;}''',
                '''Class,V1,{,Val,i,:,Int,;,},Class,C,{,$__13,(,_,:,String,;,O,,,_,,,_,,,_,:,_,;,U,,,_1,:,Q8__,;,_,:,String,;,_6_A,:,_,),{,},},Class,_4,{,Val,R,:,Array,[,Boolean,,,05,],;,},Class,_Nj,{,Var,BN,:,_,;,Val,$_YqG,:,Array,[,Array,[,Array,[,Boolean,,,96,],,,0B1010000,],,,38,],;,Val,$Z_l,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3075(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_{Destructor (){Continue ;Continue ;O::$_5();Break ;}Var $_,F,$0:Float ;Val _:M;Constructor (){Break ;Val _,G:z;Break ;Continue ;Return ;}Var g,$2:Array [Array [Array [Array [Float ,025],03_24_331],22],2];_(){} }''',
                '''Class,b_,{,Destructor,(,),{,Continue,;,Continue,;,O,::,$_5,(,),;,Break,;,},Var,$_,,,F,,,$0,:,Float,;,Val,_,:,M,;,Constructor,(,),{,Break,;,Val,_,,,G,:,z,;,Break,;,Continue,;,Return,;,},Var,g,,,$2,:,Array,[,Array,[,Array,[,Array,[,Float,,,025,],,,0324331,],,,22,],,,2,],;,_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3076(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D9n:U{}Class _D__5_21__6_{Var $q,$_q_:A_;Var $8:C_;}Class j{Constructor (_:Int ){}W(t1__X3:Array [Array [Array [Int ,9],1],0b1];H2:__;s:Boolean ;__:Boolean ){} }Class _:z{}Class s__j:__{}Class _{}''',
                '''Class,D9n,:,U,{,},Class,_D__5_21__6_,{,Var,$q,,,$_q_,:,A_,;,Var,$8,:,C_,;,},Class,j,{,Constructor,(,_,:,Int,),{,},W,(,t1__X3,:,Array,[,Array,[,Array,[,Int,,,9,],,,1,],,,0b1,],;,H2,:,__,;,s,:,Boolean,;,__,:,Boolean,),{,},},Class,_,:,z,{,},Class,s__j,:,__,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3077(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Fo:e6{Var $R_,N,_2:Array [Array [Array [Boolean ,07_3],051],85];Var Fg_9H,$3:Boolean ;}Class Sa:__{}Class B:NT{}''',
                '''Class,_Fo,:,e6,{,Var,$R_,,,N,,,_2,:,Array,[,Array,[,Array,[,Boolean,,,073,],,,051,],,,85,],;,Var,Fg_9H,,,$3,:,Boolean,;,},Class,Sa,:,__,{,},Class,B,:,NT,{,},<EOF>''',
                101
            )
        )

    def test_3078(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I_{}Class s_N5{Constructor (){}Destructor (){}Destructor (){Break ;}Var __6J:u;}Class c9:__9{Destructor (){}Destructor (){} }''',
                '''Class,I_,{,},Class,s_N5,{,Constructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,Break,;,},Var,__6J,:,u,;,},Class,c9,:,__9,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3079(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _U9_{_(_b3,_:Array [Array [Array [Array [Array [Array [Boolean ,0134],26],0XF],2_3],49],0b100110];y_,vd_,rj:_x;_:String ;___:Float ;_8:O2){_::$2();Self =__::$_.p().M.E_()._;} }''',
                '''Class,_U9_,{,_,(,_b3,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0134,],,,26,],,,0XF,],,,23,],,,49,],,,0b100110,],;,y_,,,vd_,,,rj,:,_x,;,_,:,String,;,___,:,Float,;,_8,:,O2,),{,_,::,$2,(,),;,Self,=,__,::,$_,.,p,(,),.,M,.,E_,(,),.,_,;,},},<EOF>''',
                101
            )
        )

    def test_3080(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{_(_,T:_2_64;__:_2_Q;C,n3g,d,_,_:Array [Int ,0B100000];_f4_s:Array [Array [Array [Array [Float ,0B11],9_5],0B1],0x6]){Continue ;} }Class _iY__:l{}''',
                '''Class,E,{,_,(,_,,,T,:,_2_64,;,__,:,_2_Q,;,C,,,n3g,,,d,,,_,,,_,:,Array,[,Int,,,0B100000,],;,_f4_s,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B11,],,,95,],,,0B1,],,,0x6,],),{,Continue,;,},},Class,_iY__,:,l,{,},<EOF>''',
                101
            )
        )

    def test_3081(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j:_{}Class __1:p_{}Class _{_K(_PY,_34,P_m,__:A;tj35_72,E38Z,A3,k:Array [Int ,0X35]){}Var $_8s_1,_9_5,dI7,W7:Array [Int ,0b1_0];}''',
                '''Class,j,:,_,{,},Class,__1,:,p_,{,},Class,_,{,_K,(,_PY,,,_34,,,P_m,,,__,:,A,;,tj35_72,,,E38Z,,,A3,,,k,:,Array,[,Int,,,0X35,],),{,},Var,$_8s_1,,,_9_5,,,dI7,,,W7,:,Array,[,Int,,,0b10,],;,},<EOF>''',
                101
            )
        )

    def test_3082(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h5{$___t(bb:_Q8H){}Var _G:vB;Destructor (){} }Class _k:M{}Class _{Destructor (){}Val d_f_9:Array [Float ,2_0];}''',
                '''Class,h5,{,$___t,(,bb,:,_Q8H,),{,},Var,_G,:,vB,;,Destructor,(,),{,},},Class,_k,:,M,{,},Class,_,{,Destructor,(,),{,},Val,d_f_9,:,Array,[,Float,,,20,],;,},<EOF>''',
                101
            )
        )

    def test_3083(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$8(W:p;k,W__,y:Array [Array [Array [Array [Array [Int ,0xF],0B1110],0x2E],0B1],0X19];_,_:Array [Int ,0XB2];_,_,j,_w__,ed5:Array [Boolean ,043]){} }''',
                '''Class,_,{,$8,(,W,:,p,;,k,,,W__,,,y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xF,],,,0B1110,],,,0x2E,],,,0B1,],,,0X19,],;,_,,,_,:,Array,[,Int,,,0XB2,],;,_,,,_,,,j,,,_w__,,,ed5,:,Array,[,Boolean,,,043,],),{,},},<EOF>''',
                101
            )
        )

    def test_3084(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:s_{$_3(E,_2,N8,G:Array [Array [Array [Array [Boolean ,0xF],024],1],06_2_3_0_06];_:Array [Float ,05]){} }Class A:OI6tu{}''',
                '''Class,T,:,s_,{,$_3,(,E,,,_2,,,N8,,,G,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xF,],,,024,],,,1,],,,0623006,],;,_,:,Array,[,Float,,,05,],),{,},},Class,A,:,OI6tu,{,},<EOF>''',
                101
            )
        )

    def test_3085(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:WY7_{Constructor (g_,s888:Array [Array [Float ,02_5],1_2_7]){} }Class w:h{}Class ___{y_(__,P,_,A,W:Array [Array [Float ,0X95],2]){}Destructor (){}Destructor (){} }''',
                '''Class,_,:,WY7_,{,Constructor,(,g_,,,s888,:,Array,[,Array,[,Float,,,025,],,,127,],),{,},},Class,w,:,h,{,},Class,___,{,y_,(,__,,,P,,,_,,,A,,,W,:,Array,[,Array,[,Float,,,0X95,],,,2,],),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3086(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _T{xA(S,_1c7,w,_,__,NV,_J_,N,_,_6a:Array [Array [Int ,0b1],0B1];e,__,_66:Array [Array [Int ,0X9_B_A8_49],05]){}Constructor (){Continue ;Continue ;}Constructor (_:_7){Break ;} }''',
                '''Class,_T,{,xA,(,S,,,_1c7,,,w,,,_,,,__,,,NV,,,_J_,,,N,,,_,,,_6a,:,Array,[,Array,[,Int,,,0b1,],,,0B1,],;,e,,,__,,,_66,:,Array,[,Array,[,Int,,,0X9BA849,],,,05,],),{,},Constructor,(,),{,Continue,;,Continue,;,},Constructor,(,_,:,_7,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3087(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _A3:T_9{Var _:Array [Float ,047];Constructor (X_:Boolean ){Val _:Array [Array [Array [String ,0b101011],0B1010001],0xDF];} }''',
                '''Class,_A3,:,T_9,{,Var,_,:,Array,[,Float,,,047,],;,Constructor,(,X_,:,Boolean,),{,Val,_,:,Array,[,Array,[,Array,[,String,,,0b101011,],,,0B1010001,],,,0xDF,],;,},},<EOF>''',
                101
            )
        )

    def test_3088(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3{Val f7,$_:_4;}Class D:o{}Class _098I_{Var $_:Array [String ,05];}Class X:_60{Destructor (){Return ;Continue ;Continue ;}Var $l,$a,$_Z_:Boolean ;Destructor (){Continue ;} }Class S_h_{}''',
                '''Class,_3,{,Val,f7,,,$_,:,_4,;,},Class,D,:,o,{,},Class,_098I_,{,Var,$_,:,Array,[,String,,,05,],;,},Class,X,:,_60,{,Destructor,(,),{,Return,;,Continue,;,Continue,;,},Var,$l,,,$a,,,$_Z_,:,Boolean,;,Destructor,(,),{,Continue,;,},},Class,S_h_,{,},<EOF>''',
                101
            )
        )

    def test_3089(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __P7rx{Constructor (_,I,_,m,_:String ;b,Q:Array [Boolean ,0X5D]){}Val $_,$1_:_;_6(V:_){} }Class L:F3{Constructor (O_2__,_:Array [Array [Array [Array [Array [Array [Int ,0B1_1],03],050],05],0xE],050]){} }''',
                '''Class,__P7rx,{,Constructor,(,_,,,I,,,_,,,m,,,_,:,String,;,b,,,Q,:,Array,[,Boolean,,,0X5D,],),{,},Val,$_,,,$1_,:,_,;,_6,(,V,:,_,),{,},},Class,L,:,F3,{,Constructor,(,O_2__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B11,],,,03,],,,050,],,,05,],,,0xE,],,,050,],),{,},},<EOF>''',
                101
            )
        )

    def test_3090(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:o{Destructor (){} }Class n{Constructor (_8:Array [Array [Array [Array [Float ,0b1110],63],0X6_4_E9],68];r:String ){}$s(_K:c;x:Boolean ;__6,_:Int ;_:gJ){}_(){} }Class V:SWh_7_{}''',
                '''Class,__,:,o,{,Destructor,(,),{,},},Class,n,{,Constructor,(,_8,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1110,],,,63,],,,0X64E9,],,,68,],;,r,:,String,),{,},$s,(,_K,:,c,;,x,:,Boolean,;,__6,,,_,:,Int,;,_,:,gJ,),{,},_,(,),{,},},Class,V,:,SWh_7_,{,},<EOF>''',
                101
            )
        )

    def test_3091(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _V2,t_8__:Array [Array [Array [Array [Array [Boolean ,0x3],0b1],0B1011010],05],0b1];Var _9:Int ;Var $q6X_:Float ;Var _:Array [Int ,0B1011010];}''',
                '''Class,_,{,Val,_V2,,,t_8__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3,],,,0b1,],,,0B1011010,],,,05,],,,0b1,],;,Var,_9,:,Int,;,Var,$q6X_,:,Float,;,Var,_,:,Array,[,Int,,,0B1011010,],;,},<EOF>''',
                101
            )
        )

    def test_3092(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i_3{}Class mR{Constructor (){}Constructor (){}Constructor (m_,D_:Int ;B,_:Array [Array [Float ,0X2A],0X4]){}Destructor (){Return ;} }Class P:rq{}Class _:p97{}Class _:u{$4(){Var b:Float ;} }Class wK{}Class R:Y_G__{}''',
                '''Class,i_3,{,},Class,mR,{,Constructor,(,),{,},Constructor,(,),{,},Constructor,(,m_,,,D_,:,Int,;,B,,,_,:,Array,[,Array,[,Float,,,0X2A,],,,0X4,],),{,},Destructor,(,),{,Return,;,},},Class,P,:,rq,{,},Class,_,:,p97,{,},Class,_,:,u,{,$4,(,),{,Var,b,:,Float,;,},},Class,wK,{,},Class,R,:,Y_G__,{,},<EOF>''',
                101
            )
        )

    def test_3093(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:_1Z_0{Val $Qj,$1B,$N4o,$_,__hQl7:Array [Array [Array [Float ,0x7],0B10_1],0x49];}Class _:o_{}Class _85{}''',
                '''Class,t,:,_1Z_0,{,Val,$Qj,,,$1B,,,$N4o,,,$_,,,__hQl7,:,Array,[,Array,[,Array,[,Float,,,0x7,],,,0B101,],,,0x49,],;,},Class,_,:,o_,{,},Class,_85,{,},<EOF>''',
                101
            )
        )

    def test_3094(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{Var $_t,V,t5_4_:Float ;Constructor (_SA,_:Float ;qg,__,c,_,y,iM,__1,an7,K85_,_,_,P,i:String ){ {} }Var $X:__57;}''',
                '''Class,q,{,Var,$_t,,,V,,,t5_4_,:,Float,;,Constructor,(,_SA,,,_,:,Float,;,qg,,,__,,,c,,,_,,,y,,,iM,,,__1,,,an7,,,K85_,,,_,,,_,,,P,,,i,:,String,),{,{,},},Var,$X,:,__57,;,},<EOF>''',
                101
            )
        )

    def test_3095(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_4_5{}Class Dd{}Class g{_v(Qx_,i_Ah:String ){}Constructor (O,h:c__;_:J573O;i,_:_){} }Class I:Y{}Class _{}''',
                '''Class,_,:,_4_5,{,},Class,Dd,{,},Class,g,{,_v,(,Qx_,,,i_Ah,:,String,),{,},Constructor,(,O,,,h,:,c__,;,_,:,J573O,;,i,,,_,:,_,),{,},},Class,I,:,Y,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3096(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e{_99L(_,U_,_Y:Int ;Y:Array [Boolean ,0100];XA7:_7;Mgl:_G){Continue ;} }Class _{}Class H:_K{}Class a:_{}Class _{Val $0,$d:Int ;Var $5,P,$nS:String ;Var $90V7,$9,S9,$__e_,Q:Array [Array [Boolean ,74],2_1_8];}''',
                '''Class,_e,{,_99L,(,_,,,U_,,,_Y,:,Int,;,Y,:,Array,[,Boolean,,,0100,],;,XA7,:,_7,;,Mgl,:,_G,),{,Continue,;,},},Class,_,{,},Class,H,:,_K,{,},Class,a,:,_,{,},Class,_,{,Val,$0,,,$d,:,Int,;,Var,$5,,,P,,,$nS,:,String,;,Var,$90V7,,,$9,,,S9,,,$__e_,,,Q,:,Array,[,Array,[,Boolean,,,74,],,,218,],;,},<EOF>''',
                101
            )
        )

    def test_3097(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{$x7(){Continue ;Break ;} }Class Q:f{Val _z6A1,_weF_z,$_Jb,$__0,$z,$6_,k,C:_;Constructor (){Break ;Val o:Array [Float ,0b111111];} }Class E{}Class _1{Var $e,$w,v:Array [Array [Boolean ,07],0X38];Destructor (){} }''',
                '''Class,s,{,$x7,(,),{,Continue,;,Break,;,},},Class,Q,:,f,{,Val,_z6A1,,,_weF_z,,,$_Jb,,,$__0,,,$z,,,$6_,,,k,,,C,:,_,;,Constructor,(,),{,Break,;,Val,o,:,Array,[,Float,,,0b111111,],;,},},Class,E,{,},Class,_1,{,Var,$e,,,$w,,,v,:,Array,[,Array,[,Boolean,,,07,],,,0X38,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3098(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class r:_3{Var $q,z_,_I:Float ;Var $Z,_,$G7_:Float ;}Class _t{w__(F,___:_5;_5:_;e,y,__94:Array [String ,17];BZm6:Float ){} }''',
                '''Class,_,{,},Class,r,:,_3,{,Var,$q,,,z_,,,_I,:,Float,;,Var,$Z,,,_,,,$G7_,:,Float,;,},Class,_t,{,w__,(,F,,,___,:,_5,;,_5,:,_,;,e,,,y,,,__94,:,Array,[,String,,,17,],;,BZm6,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3099(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_4_t:Array [Array [Array [Float ,0b10000],63],0B1];_cL2c,_,_,A84,S:Array [String ,0B100111];__,__,___H2O,Ai:Array [Int ,0b1];_1:Float ){}Constructor (V:Float ;_,T:_;__1,Q,_2,_Bn_6s__:Boolean ;n:Boolean ;F:_;__12,r_:String ;_:Boolean ){}Destructor (){} }''',
                '''Class,_,{,Constructor,(,_4_t,:,Array,[,Array,[,Array,[,Float,,,0b10000,],,,63,],,,0B1,],;,_cL2c,,,_,,,_,,,A84,,,S,:,Array,[,String,,,0B100111,],;,__,,,__,,,___H2O,,,Ai,:,Array,[,Int,,,0b1,],;,_1,:,Float,),{,},Constructor,(,V,:,Float,;,_,,,T,:,_,;,__1,,,Q,,,_2,,,_Bn_6s__,:,Boolean,;,n,:,Boolean,;,F,:,_,;,__12,,,r_,:,String,;,_,:,Boolean,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3100(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{c(x,_,g:Array [Array [Boolean ,0B1010000],7]){} }Class _:__{}Class n68{Destructor (){Val AbF2,S:Array [Array [Array [Array [Array [Float ,0x42],5_0],034],9_5],0b1];} }Class __:_{}''',
                '''Class,_,{,c,(,x,,,_,,,g,:,Array,[,Array,[,Boolean,,,0B1010000,],,,7,],),{,},},Class,_,:,__,{,},Class,n68,{,Destructor,(,),{,Val,AbF2,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x42,],,,50,],,,034,],,,95,],,,0b1,],;,},},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3101(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s:A{Var $2:__S_;Var $7,_:Array [Array [Array [String ,0b1_01],027],75];Var $_:Array [Array [String ,077],75];}''',
                '''Class,_s,:,A,{,Var,$2,:,__S_,;,Var,$7,,,_,:,Array,[,Array,[,Array,[,String,,,0b101,],,,027,],,,75,],;,Var,$_,:,Array,[,Array,[,String,,,077,],,,75,],;,},<EOF>''',
                101
            )
        )

    def test_3102(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x_:__{}Class _vW:_{Val __P__,_7,Yk,$1:S;Var b,$p7,$___K,$W_:Array [String ,9_9];Destructor (){Continue ;}Var $_:Array [Array [Array [Float ,0143],0x9],0x9];}''',
                '''Class,x_,:,__,{,},Class,_vW,:,_,{,Val,__P__,,,_7,,,Yk,,,$1,:,S,;,Var,b,,,$p7,,,$___K,,,$W_,:,Array,[,String,,,99,],;,Destructor,(,),{,Continue,;,},Var,$_,:,Array,[,Array,[,Array,[,Float,,,0143,],,,0x9,],,,0x9,],;,},<EOF>''',
                101
            )
        )

    def test_3103(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:y_{Var _d0,k:Boolean ;Constructor (_,d:_;__E0_,_c,_,_:Array [Array [Boolean ,6],0X3E]){Break ;Break ;} }''',
                '''Class,__,:,y_,{,Var,_d0,,,k,:,Boolean,;,Constructor,(,_,,,d,:,_,;,__E0_,,,_c,,,_,,,_,:,Array,[,Array,[,Boolean,,,6,],,,0X3E,],),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3104(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:m{}Class wn2:_{_(){} }Class __{$__(){} }Class _:s1{Val z_,_,E_,__ph51,do4:Array [Array [Float ,0b111011],64];}Class _y{}''',
                '''Class,_,:,m,{,},Class,wn2,:,_,{,_,(,),{,},},Class,__,{,$__,(,),{,},},Class,_,:,s1,{,Val,z_,,,_,,,E_,,,__ph51,,,do4,:,Array,[,Array,[,Float,,,0b111011,],,,64,],;,},Class,_y,{,},<EOF>''',
                101
            )
        )

    def test_3105(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P4:E___{}Class _{Var A_o,s3,p,$251:Array [Array [Array [Array [Array [Array [String ,0x4],0b100100],0X6_A9],0144],0B1],0144];}Class d{}''',
                '''Class,P4,:,E___,{,},Class,_,{,Var,A_o,,,s3,,,p,,,$251,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x4,],,,0b100100,],,,0X6A9,],,,0144,],,,0B1,],,,0144,],;,},Class,d,{,},<EOF>''',
                101
            )
        )

    def test_3106(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class v:Cd{}Class _z{}Class O_:s_{}Class __9:m{_(r_,R:_6;l:Array [String ,0B1]){}Constructor (){}Val _,vdp:Int ;}Class z3_L:E74g{}Class G{Constructor (){} }Class _{}''',
                '''Class,_,{,},Class,v,:,Cd,{,},Class,_z,{,},Class,O_,:,s_,{,},Class,__9,:,m,{,_,(,r_,,,R,:,_6,;,l,:,Array,[,String,,,0B1,],),{,},Constructor,(,),{,},Val,_,,,vdp,:,Int,;,},Class,z3_L,:,E74g,{,},Class,G,{,Constructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3107(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var e6n_i,R_:Array [Array [Array [Array [Array [Array [Array [Boolean ,0x3C],31],0B101100],9_2],0xA],0x3C],31];$4(g:Array [Boolean ,06]){}Val $9,$__cn:Array [Array [Array [Float ,063],0X20],0B101100];}Class P9{Val _:s_;Val _c8ir8H_,$1,_,$_A,$_,F_:_kg_;Destructor (){} }''',
                '''Class,_,{,Var,e6n_i,,,R_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3C,],,,31,],,,0B101100,],,,92,],,,0xA,],,,0x3C,],,,31,],;,$4,(,g,:,Array,[,Boolean,,,06,],),{,},Val,$9,,,$__cn,:,Array,[,Array,[,Array,[,Float,,,063,],,,0X20,],,,0B101100,],;,},Class,P9,{,Val,_,:,s_,;,Val,_c8ir8H_,,,$1,,,_,,,$_A,,,$_,,,F_,:,_kg_,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3108(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ui:_{_648_(){_::$_();}Destructor (){Return ;}Destructor (){Return ;}Var $_,pw,JR__,$76_Dr,_:__;Val i:Boolean ;}Class _5:__P5{}''',
                '''Class,Ui,:,_,{,_648_,(,),{,_,::,$_,(,),;,},Destructor,(,),{,Return,;,},Destructor,(,),{,Return,;,},Var,$_,,,pw,,,JR__,,,$76_Dr,,,_,:,__,;,Val,i,:,Boolean,;,},Class,_5,:,__P5,{,},<EOF>''',
                101
            )
        )

    def test_3109(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:L{}Class n9{}Class Gi:t{Destructor (){}Val _u,x,$_:Array [Array [Array [String ,8_1],063],0B1];Val $_U:Boolean ;}''',
                '''Class,s,:,L,{,},Class,n9,{,},Class,Gi,:,t,{,Destructor,(,),{,},Val,_u,,,x,,,$_,:,Array,[,Array,[,Array,[,String,,,81,],,,063,],,,0B1,],;,Val,$_U,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3110(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:__{Constructor (B,k_,t:String ;_,B_:__C;o:String ;_,_:Boolean ){}Constructor (_,G,__,_:Int ){}Val $d91Y,$5,$f_:Boolean ;}''',
                '''Class,v,:,__,{,Constructor,(,B,,,k_,,,t,:,String,;,_,,,B_,:,__C,;,o,:,String,;,_,,,_,:,Boolean,),{,},Constructor,(,_,,,G,,,__,,,_,:,Int,),{,},Val,$d91Y,,,$5,,,$f_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3111(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:_Z7{Var R,_0,$3,$88_5:Int ;_(___:Array [Boolean ,0X11];p:_10U;__,l:Array [Int ,0B1_0];_4:Boolean ){Break ;} }Class T{Destructor (){}Destructor (){Val u_8,_,_:F;Continue ;} }''',
                '''Class,B,:,_Z7,{,Var,R,,,_0,,,$3,,,$88_5,:,Int,;,_,(,___,:,Array,[,Boolean,,,0X11,],;,p,:,_10U,;,__,,,l,:,Array,[,Int,,,0B10,],;,_4,:,Boolean,),{,Break,;,},},Class,T,{,Destructor,(,),{,},Destructor,(,),{,Val,u_8,,,_,,,_,:,F,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3112(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q:t_{}Class _{$__(g:S){} }Class N{Constructor (r_69Y,p2,Q,Z_,_:Float ){}Destructor (){_::$2.__.s.__();Return ;} }''',
                '''Class,Q,:,t_,{,},Class,_,{,$__,(,g,:,S,),{,},},Class,N,{,Constructor,(,r_69Y,,,p2,,,Q,,,Z_,,,_,:,Float,),{,},Destructor,(,),{,_,::,$2,.,__,.,s,.,__,(,),;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3113(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j2_:_7{Destructor (){Var h:L__;Continue ;{Continue ;} }}Class F7N:y1__{}Class UB:__{Var $_:H;Destructor (){} }''',
                '''Class,j2_,:,_7,{,Destructor,(,),{,Var,h,:,L__,;,Continue,;,{,Continue,;,},},},Class,F7N,:,y1__,{,},Class,UB,:,__,{,Var,$_,:,H,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3114(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __2{}Class e:x{Var c5_,_w,$_,$__:Array [Array [Array [String ,5],0b10110],0b1];Val $__,s:Array [Array [Float ,0B1],0b1];}''',
                '''Class,__2,{,},Class,e,:,x,{,Var,c5_,,,_w,,,$_,,,$__,:,Array,[,Array,[,Array,[,String,,,5,],,,0b10110,],,,0b1,],;,Val,$__,,,s,:,Array,[,Array,[,Float,,,0B1,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_3115(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M:t{_nU_O(lOs:Array [Array [Float ,0X57_2],052];_:Array [Float ,0b110110];_:String ;__,W,___,_:x_){}Var $TK_,l:Array [Float ,0xD_1];}''',
                '''Class,M,:,t,{,_nU_O,(,lOs,:,Array,[,Array,[,Float,,,0X572,],,,052,],;,_,:,Array,[,Float,,,0b110110,],;,_,:,String,;,__,,,W,,,___,,,_,:,x_,),{,},Var,$TK_,,,l,:,Array,[,Float,,,0xD1,],;,},<EOF>''',
                101
            )
        )

    def test_3116(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _i:X__{Var $_1y,$13,$7__x:Array [String ,01];Val __aT:_;}Class e_6:P_{Val $1,Q_,jWU,$2:Array [Array [Float ,1],0X25];}Class _:_1G5{}''',
                '''Class,_i,:,X__,{,Var,$_1y,,,$13,,,$7__x,:,Array,[,String,,,01,],;,Val,__aT,:,_,;,},Class,e_6,:,P_,{,Val,$1,,,Q_,,,jWU,,,$2,:,Array,[,Array,[,Float,,,1,],,,0X25,],;,},Class,_,:,_1G5,{,},<EOF>''',
                101
            )
        )

    def test_3117(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_5{Var $4,_:_2;Constructor (_8:Array [Array [Array [String ,02],0B1],0X3A];_:_;_:_z;_,Z,_6,pD:Int ;A9:Array [Array [Int ,0b11_0_01],0b1]){} }''',
                '''Class,_,:,_5,{,Var,$4,,,_,:,_2,;,Constructor,(,_8,:,Array,[,Array,[,Array,[,String,,,02,],,,0B1,],,,0X3A,],;,_,:,_,;,_,:,_z,;,_,,,Z,,,_6,,,pD,:,Int,;,A9,:,Array,[,Array,[,Int,,,0b11001,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3118(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4:m{}Class _:_{}Class F{v1_2(){}Var _:Array [Array [Int ,0b1001101],0X4B];}Class n{}Class _3U{Var $_2:Array [String ,85];}Class _{Var a3D_V,____7,$Y6_m__iuY,$t,N,z_:Boolean ;}Class _:_{}''',
                '''Class,_4,:,m,{,},Class,_,:,_,{,},Class,F,{,v1_2,(,),{,},Var,_,:,Array,[,Array,[,Int,,,0b1001101,],,,0X4B,],;,},Class,n,{,},Class,_3U,{,Var,$_2,:,Array,[,String,,,85,],;,},Class,_,{,Var,a3D_V,,,____7,,,$Y6_m__iuY,,,$t,,,N,,,z_,:,Boolean,;,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3119(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:Z{Var __:Array [Array [Array [Int ,0X42],0x55],05];}Class _3:_{Constructor (fm,zf:_;u_:Float ;Ti:Boolean ){Continue ;} }Class _X_wX{}Class _{Var $2,$OR_:String ;}Class r_:_n_T{Constructor (x_,_25___u291,O_:Array [Boolean ,01]){} }''',
                '''Class,S,:,Z,{,Var,__,:,Array,[,Array,[,Array,[,Int,,,0X42,],,,0x55,],,,05,],;,},Class,_3,:,_,{,Constructor,(,fm,,,zf,:,_,;,u_,:,Float,;,Ti,:,Boolean,),{,Continue,;,},},Class,_X_wX,{,},Class,_,{,Var,$2,,,$OR_,:,String,;,},Class,r_,:,_n_T,{,Constructor,(,x_,,,_25___u291,,,O_,:,Array,[,Boolean,,,01,],),{,},},<EOF>''',
                101
            )
        )

    def test_3120(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:Z{Constructor (){}$3Fu8(y6,_:a_0;_,_8_,_,_:U_){}Var _w_72:Array [Int ,0X16];Val $YO,_9:_;Val _NC8__:__;Constructor (){} }''',
                '''Class,B,:,Z,{,Constructor,(,),{,},$3Fu8,(,y6,,,_,:,a_0,;,_,,,_8_,,,_,,,_,:,U_,),{,},Var,_w_72,:,Array,[,Int,,,0X16,],;,Val,$YO,,,_9,:,_,;,Val,_NC8__,:,__,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3121(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L{Constructor (){Continue ;}Constructor (c,t,__:_;_:Array [Array [Array [Array [Int ,0766],034],0x7B_F],0b100100];b,__T:ZG){} }''',
                '''Class,L,{,Constructor,(,),{,Continue,;,},Constructor,(,c,,,t,,,__,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0766,],,,034,],,,0x7BF,],,,0b100100,],;,b,,,__T,:,ZG,),{,},},<EOF>''',
                101
            )
        )

    def test_3122(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:_8X3{Val _,_,b,_i,_g,O,d_:_e_01oF2I;}Class __P{}Class m_l{}Class _{}Class _{Destructor (){Return ;} }Class _2_{Destructor (){} }''',
                '''Class,B,:,_8X3,{,Val,_,,,_,,,b,,,_i,,,_g,,,O,,,d_,:,_e_01oF2I,;,},Class,__P,{,},Class,m_l,{,},Class,_,{,},Class,_,{,Destructor,(,),{,Return,;,},},Class,_2_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3123(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b3_:l{Constructor (){}Val $_:Array [Array [Int ,07],0XD4_0A_7];}Class y:__{}Class t:ru67{Destructor (){}Val D9e,$_x23_I__,$5:Int ;Destructor (){} }''',
                '''Class,b3_,:,l,{,Constructor,(,),{,},Val,$_,:,Array,[,Array,[,Int,,,07,],,,0XD40A7,],;,},Class,y,:,__,{,},Class,t,:,ru67,{,Destructor,(,),{,},Val,D9e,,,$_x23_I__,,,$5,:,Int,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3124(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q__:___{}Class O{}Class __o_{Sz(_:Array [Array [Boolean ,0b110],0X6];R,_,T_0_:Array [Array [Boolean ,0x9_7],03];w:k;X:Float ){} }''',
                '''Class,Q__,:,___,{,},Class,O,{,},Class,__o_,{,Sz,(,_,:,Array,[,Array,[,Boolean,,,0b110,],,,0X6,],;,R,,,_,,,T_0_,:,Array,[,Array,[,Boolean,,,0x97,],,,03,],;,w,:,k,;,X,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3125(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $06,T:p;z(S__,A:_;av:Array [Array [Int ,88],0X17]){} }Class Z{}Class M:_{Destructor (){} }Class __:_{}''',
                '''Class,_,{,Var,$06,,,T,:,p,;,z,(,S__,,,A,:,_,;,av,:,Array,[,Array,[,Int,,,88,],,,0X17,],),{,},},Class,Z,{,},Class,M,:,_,{,Destructor,(,),{,},},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3126(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M_3{$_(_,_9,z_,_,uLJy,bz2,_,_d96:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0X3A],3],36],0140],7],03],0xA],01],0140],0b1],04],36],0B10101]){} }Class H:B{}''',
                '''Class,_M_3,{,$_,(,_,,,_9,,,z_,,,_,,,uLJy,,,bz2,,,_,,,_d96,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X3A,],,,3,],,,36,],,,0140,],,,7,],,,03,],,,0xA,],,,01,],,,0140,],,,0b1,],,,04,],,,36,],,,0B10101,],),{,},},Class,H,:,B,{,},<EOF>''',
                101
            )
        )

    def test_3127(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_1{Constructor (_0:Array [String ,0X3]){}Constructor (){}Constructor (){Break ;}Val $9a,$_r:Array [Array [Int ,054_5],0137];_r(_3:Array [Float ,70]){}Var $3_,F_1p5,$1:Array [Array [Boolean ,0137],0X3D];Var $_,$__,_,$Z:Array [Float ,0B11];}''',
                '''Class,_,:,_1,{,Constructor,(,_0,:,Array,[,String,,,0X3,],),{,},Constructor,(,),{,},Constructor,(,),{,Break,;,},Val,$9a,,,$_r,:,Array,[,Array,[,Int,,,0545,],,,0137,],;,_r,(,_3,:,Array,[,Float,,,70,],),{,},Var,$3_,,,F_1p5,,,$1,:,Array,[,Array,[,Boolean,,,0137,],,,0X3D,],;,Var,$_,,,$__,,,_,,,$Z,:,Array,[,Float,,,0B11,],;,},<EOF>''',
                101
            )
        )

    def test_3128(self):
        self.assertTrue(
            TestLexer.test(
                '''Class tE{Val $V,$b,$R,$5_:Array [Array [Array [Array [String ,024],0x2B],0b1_1],024];}Class lY{}Class __:N{}Class F0{}Class P5{}''',
                '''Class,tE,{,Val,$V,,,$b,,,$R,,,$5_,:,Array,[,Array,[,Array,[,Array,[,String,,,024,],,,0x2B,],,,0b11,],,,024,],;,},Class,lY,{,},Class,__,:,N,{,},Class,F0,{,},Class,P5,{,},<EOF>''',
                101
            )
        )

    def test_3129(self):
        self.assertTrue(
            TestLexer.test(
                '''Class uh{Destructor (){}Val _,$K_H_5:Array [Array [Array [Array [Array [Array [String ,017],0x44],0B10_1],0x9],5_1],90];}Class _:s{}Class M__9SLW{}Class V{Val Ww:_a;Destructor (){} }''',
                '''Class,uh,{,Destructor,(,),{,},Val,_,,,$K_H_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,017,],,,0x44,],,,0B101,],,,0x9,],,,51,],,,90,],;,},Class,_,:,s,{,},Class,M__9SLW,{,},Class,V,{,Val,Ww,:,_a,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3130(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a_:E1{Var $6,__,_:Array [Array [String ,0b101000],6];}Class lB_4{Destructor (){}Destructor (){}Var $_,$_,_P,$_,tF7__:Int ;}''',
                '''Class,a_,:,E1,{,Var,$6,,,__,,,_,:,Array,[,Array,[,String,,,0b101000,],,,6,],;,},Class,lB_4,{,Destructor,(,),{,},Destructor,(,),{,},Var,$_,,,$_,,,_P,,,$_,,,tF7__,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3131(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i:w{Val O:Array [Array [Int ,0b11_0],0x5F];}Class D_F7_{}Class q:K{t5(G8:Float ){} }Class A_{Destructor (){}Destructor (){} }''',
                '''Class,i,:,w,{,Val,O,:,Array,[,Array,[,Int,,,0b110,],,,0x5F,],;,},Class,D_F7_,{,},Class,q,:,K,{,t5,(,G8,:,Float,),{,},},Class,A_,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3132(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:_{Val $0u_:Array [Array [Int ,22],07_3];}Class _Y3{}Class _{Var $_0:Array [Boolean ,22];Val $_1ru,$0d:Array [Array [Boolean ,1_9],0b1];}Class _Zy_:I{}''',
                '''Class,h,:,_,{,Val,$0u_,:,Array,[,Array,[,Int,,,22,],,,073,],;,},Class,_Y3,{,},Class,_,{,Var,$_0,:,Array,[,Boolean,,,22,],;,Val,$_1ru,,,$0d,:,Array,[,Array,[,Boolean,,,19,],,,0b1,],;,},Class,_Zy_,:,I,{,},<EOF>''',
                101
            )
        )

    def test_3133(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3e_{}Class D_{y0B503_(){Break ;}Var D:Boolean ;Var $7,O,_:String ;}Class _71{}Class _2U{Var _B7,_:_33_9C;Val $5:B_;}Class R:V8_{K(){} }''',
                '''Class,_3e_,{,},Class,D_,{,y0B503_,(,),{,Break,;,},Var,D,:,Boolean,;,Var,$7,,,O,,,_,:,String,;,},Class,_71,{,},Class,_2U,{,Var,_B7,,,_,:,_33_9C,;,Val,$5,:,B_,;,},Class,R,:,V8_,{,K,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3134(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _b:__{Constructor (_:String ){}Var $__:_;Constructor (){}Val _1:_=i;$6P(){Break ;}Val _62eL:Array [Array [Array [Boolean ,78],07],34];}''',
                '''Class,_,{,},Class,_b,:,__,{,Constructor,(,_,:,String,),{,},Var,$__,:,_,;,Constructor,(,),{,},Val,_1,:,_,=,i,;,$6P,(,),{,Break,;,},Val,_62eL,:,Array,[,Array,[,Array,[,Boolean,,,78,],,,07,],,,34,],;,},<EOF>''',
                101
            )
        )

    def test_3135(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class __7:u{Destructor (){Break ;Continue ;}Var _:Array [Array [Float ,6],30];Constructor (_4E:Float ;c_17,Es:_;_,_:Float ;___,_:Boolean ){} }''',
                '''Class,_,:,_,{,},Class,__7,:,u,{,Destructor,(,),{,Break,;,Continue,;,},Var,_,:,Array,[,Array,[,Float,,,6,],,,30,],;,Constructor,(,_4E,:,Float,;,c_17,,,Es,:,_,;,_,,,_,:,Float,;,___,,,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3136(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Zz{Zy(__sh:Float ;H__0l5:Array [Array [Array [Boolean ,04],0X2E],0x38];i:Array [Array [Float ,01_335],0X2E]){__x::$Ef.__();} }''',
                '''Class,Zz,{,Zy,(,__sh,:,Float,;,H__0l5,:,Array,[,Array,[,Array,[,Boolean,,,04,],,,0X2E,],,,0x38,],;,i,:,Array,[,Array,[,Float,,,01335,],,,0X2E,],),{,__x,::,$Ef,.,__,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3137(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L_:yP{Var _ZKL9:Array [Array [Array [Boolean ,0b11],0B10011],0123];}Class fxC_0{Constructor (J:___;_:Array [Int ,8]){ {} }Constructor (){Continue ;} }''',
                '''Class,L_,:,yP,{,Var,_ZKL9,:,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0B10011,],,,0123,],;,},Class,fxC_0,{,Constructor,(,J,:,___,;,_,:,Array,[,Int,,,8,],),{,{,},},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3138(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___L83__{Val D:Array [Array [Array [Array [Int ,0x2],31],0X51],044];$__(_l:Array [Int ,0X51]){Continue ;} }Class __c_{}''',
                '''Class,___L83__,{,Val,D,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x2,],,,31,],,,0X51,],,,044,],;,$__,(,_l,:,Array,[,Int,,,0X51,],),{,Continue,;,},},Class,__c_,{,},<EOF>''',
                101
            )
        )

    def test_3139(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3P:d{}Class _5_{_ub(){}$26_(){mld_::$U();Var v_,Oks1,_,x_666_w_,p3__7:v;Continue ;}Val $6_:Boolean ;}''',
                '''Class,_3P,:,d,{,},Class,_5_,{,_ub,(,),{,},$26_,(,),{,mld_,::,$U,(,),;,Var,v_,,,Oks1,,,_,,,x_666_w_,,,p3__7,:,v,;,Continue,;,},Val,$6_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3140(self):
        self.assertTrue(
            TestLexer.test(
                '''Class hp{Constructor (gbRi,RX:__3__2_;_,__9,_,gB_:T){Return ;} }Class _a:_C{Val _:Array [String ,0b101001];}Class p6:K_1i0{Var $Kv5:_;Var $CD,_0__,_:_F;}''',
                '''Class,hp,{,Constructor,(,gbRi,,,RX,:,__3__2_,;,_,,,__9,,,_,,,gB_,:,T,),{,Return,;,},},Class,_a,:,_C,{,Val,_,:,Array,[,String,,,0b101001,],;,},Class,p6,:,K_1i0,{,Var,$Kv5,:,_,;,Var,$CD,,,_0__,,,_,:,_F,;,},<EOF>''',
                101
            )
        )

    def test_3141(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L_:_{Destructor (){}$6(Dq_:Int ;__99,_:Array [Int ,051];__3_:I__A;Fx:String ){}Var __:Array [Float ,11];Val $_9,$47B5,$_sv:u;__2(){Return ;} }Class S_D2:l{sR(b:B){Val F9:Array [Array [Int ,0b1],0X7];} }Class P_{}''',
                '''Class,L_,:,_,{,Destructor,(,),{,},$6,(,Dq_,:,Int,;,__99,,,_,:,Array,[,Int,,,051,],;,__3_,:,I__A,;,Fx,:,String,),{,},Var,__,:,Array,[,Float,,,11,],;,Val,$_9,,,$47B5,,,$_sv,:,u,;,__2,(,),{,Return,;,},},Class,S_D2,:,l,{,sR,(,b,:,B,),{,Val,F9,:,Array,[,Array,[,Int,,,0b1,],,,0X7,],;,},},Class,P_,{,},<EOF>''',
                101
            )
        )

    def test_3142(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{}Class _6:_{Val $9:Array [Array [Array [Array [Float ,0X18],03_0],6],0B1];Val _,a4,_,$6,Z2,$o_,_:_;Var $_,iL,$70,I,U,_W_:Boolean ;Var $_,j,$Wq,D:Array [Array [Array [Array [Boolean ,2_769_4],0XCC_8],0X18],0XC];}''',
                '''Class,Y,{,},Class,_6,:,_,{,Val,$9,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X18,],,,030,],,,6,],,,0B1,],;,Val,_,,,a4,,,_,,,$6,,,Z2,,,$o_,,,_,:,_,;,Var,$_,,,iL,,,$70,,,I,,,U,,,_W_,:,Boolean,;,Var,$_,,,j,,,$Wq,,,D,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,27694,],,,0XCC8,],,,0X18,],,,0XC,],;,},<EOF>''',
                101
            )
        )

    def test_3143(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:ob_U{Val _3:_;}Class yb_{}Class _:E{_(_:Array [Array [Float ,5],0X33];u4:String ){}Constructor (s,d,sh2_,y_:Array [Array [Float ,0b1011110],03]){} }''',
                '''Class,o,:,ob_U,{,Val,_3,:,_,;,},Class,yb_,{,},Class,_,:,E,{,_,(,_,:,Array,[,Array,[,Float,,,5,],,,0X33,],;,u4,:,String,),{,},Constructor,(,s,,,d,,,sh2_,,,y_,:,Array,[,Array,[,Float,,,0b1011110,],,,03,],),{,},},<EOF>''',
                101
            )
        )

    def test_3144(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __I:f{}Class _f{Destructor (){} }Class b{_2(_,_:H_;P_P,_,_:x;_K:Array [Array [Array [Boolean ,05_4],071],0X6];_279x,_,n,js,i:__9c;_Y_x:String ){} }''',
                '''Class,__I,:,f,{,},Class,_f,{,Destructor,(,),{,},},Class,b,{,_2,(,_,,,_,:,H_,;,P_P,,,_,,,_,:,x,;,_K,:,Array,[,Array,[,Array,[,Boolean,,,054,],,,071,],,,0X6,],;,_279x,,,_,,,n,,,js,,,i,:,__9c,;,_Y_x,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3145(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:zT{_4_wV(___,_:Array [Int ,0B110101];y:Array [Int ,0x32];l,cy1:Array [Array [Array [Int ,0X1C],0x32],6];E1,_:G){}Var S,b,$7,l:String ;}''',
                '''Class,C,:,zT,{,_4_wV,(,___,,,_,:,Array,[,Int,,,0B110101,],;,y,:,Array,[,Int,,,0x32,],;,l,,,cy1,:,Array,[,Array,[,Array,[,Int,,,0X1C,],,,0x32,],,,6,],;,E1,,,_,:,G,),{,},Var,S,,,b,,,$7,,,l,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3146(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Jl8u:_{Destructor (){} }Class D{_(_,_,__:Array [Array [Array [Boolean ,06],0b1],0x4_0_C_B]){} }Class h_6:_{}''',
                '''Class,Jl8u,:,_,{,Destructor,(,),{,},},Class,D,{,_,(,_,,,_,,,__,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,0b1,],,,0x40CB,],),{,},},Class,h_6,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3147(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q_{}Class _p_F_9_H{Var $uD_2M_,h,$4,$1_,C,_,$_:Array [String ,0B1_1];Constructor (_:Float ){} }Class O{$k(D_r8:String ;y,_:Boolean ){} }Class _{}Class gF{Var $_,$20_8,$9_:Array [Float ,24];}Class B{}''',
                '''Class,Q_,{,},Class,_p_F_9_H,{,Var,$uD_2M_,,,h,,,$4,,,$1_,,,C,,,_,,,$_,:,Array,[,String,,,0B11,],;,Constructor,(,_,:,Float,),{,},},Class,O,{,$k,(,D_r8,:,String,;,y,,,_,:,Boolean,),{,},},Class,_,{,},Class,gF,{,Var,$_,,,$20_8,,,$9_,:,Array,[,Float,,,24,],;,},Class,B,{,},<EOF>''',
                101
            )
        )

    def test_3148(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:S{Var $_:U;Val f:Boolean ;Val $__,S,$m6,$_,_0,Y,_:Int ;Var _C,$2_,X,P:Array [Array [Array [Boolean ,05_62],0X48],0XD];}''',
                '''Class,__,:,S,{,Var,$_,:,U,;,Val,f,:,Boolean,;,Val,$__,,,S,,,$m6,,,$_,,,_0,,,Y,,,_,:,Int,;,Var,_C,,,$2_,,,X,,,P,:,Array,[,Array,[,Array,[,Boolean,,,0562,],,,0X48,],,,0XD,],;,},<EOF>''',
                101
            )
        )

    def test_3149(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _D{}Class _:h5{}Class _:_{Val f2t172w,p:Array [Array [Array [Array [Boolean ,0x3],1],77],0xFD_F_10];Destructor (){}Constructor (){} }''',
                '''Class,_D,{,},Class,_,:,h5,{,},Class,_,:,_,{,Val,f2t172w,,,p,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3,],,,1,],,,77,],,,0xFDF10,],;,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3150(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _J1:h4K_{}Class t_:m_O0671{Val $_6_,vJT,l:Array [Array [Boolean ,83],0b1001];$__(_,_Y,_:Array [Array [Float ,83],013_1];B,_:Array [String ,02]){} }Class _G:_{Val $_:d;}''',
                '''Class,_J1,:,h4K_,{,},Class,t_,:,m_O0671,{,Val,$_6_,,,vJT,,,l,:,Array,[,Array,[,Boolean,,,83,],,,0b1001,],;,$__,(,_,,,_Y,,,_,:,Array,[,Array,[,Float,,,83,],,,0131,],;,B,,,_,:,Array,[,String,,,02,],),{,},},Class,_G,:,_,{,Val,$_,:,d,;,},<EOF>''',
                101
            )
        )

    def test_3151(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cI2{}Class k{Var _:Array [Array [Float ,0X6],07_6];}Class _817:_7{}Class F:__{Destructor (){}Val _,Q,QO:Float ;}''',
                '''Class,cI2,{,},Class,k,{,Var,_,:,Array,[,Array,[,Float,,,0X6,],,,076,],;,},Class,_817,:,_7,{,},Class,F,:,__,{,Destructor,(,),{,},Val,_,,,Q,,,QO,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3152(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:P{Constructor (){} }Class __56{$9(){}Constructor (F8h,Q,_,x,_0_3:Array [Array [Array [Array [Array [Boolean ,0b1_1_1],02],0x1F],0b1000000],0x1F]){Return ;} }''',
                '''Class,_,:,P,{,Constructor,(,),{,},},Class,__56,{,$9,(,),{,},Constructor,(,F8h,,,Q,,,_,,,x,,,_0_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111,],,,02,],,,0x1F,],,,0b1000000,],,,0x1F,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3153(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:rq64_{}Class t{}Class _8{}Class N2{Val $_9,$Z:Array [Array [String ,0XC],0X78];}Class _:L_{}Class f:S{Val __:Array [Float ,024];}''',
                '''Class,f,:,rq64_,{,},Class,t,{,},Class,_8,{,},Class,N2,{,Val,$_9,,,$Z,:,Array,[,Array,[,String,,,0XC,],,,0X78,],;,},Class,_,:,L_,{,},Class,f,:,S,{,Val,__,:,Array,[,Float,,,024,],;,},<EOF>''',
                101
            )
        )

    def test_3154(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:_x{Constructor (_0,l03,l_,_Pv___5:Array [String ,0b1_1];__,___83598,_:String ){} }Class __:__{}Class t:J_{}''',
                '''Class,I,:,_x,{,Constructor,(,_0,,,l03,,,l_,,,_Pv___5,:,Array,[,String,,,0b11,],;,__,,,___83598,,,_,:,String,),{,},},Class,__,:,__,{,},Class,t,:,J_,{,},<EOF>''',
                101
            )
        )

    def test_3155(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _r{}Class ____I_{_U_V87(_,N:Array [Array [String ,0B1010100],85_302_3603]){} }Class _{}Class _{}Class _{__(_Vz:Array [Array [Array [Float ,026],0B1],8]){}Constructor (){}Constructor (){} }''',
                '''Class,_r,{,},Class,____I_,{,_U_V87,(,_,,,N,:,Array,[,Array,[,String,,,0B1010100,],,,853023603,],),{,},},Class,_,{,},Class,_,{,},Class,_,{,__,(,_Vz,:,Array,[,Array,[,Array,[,Float,,,026,],,,0B1,],,,8,],),{,},Constructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3156(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _z82:m1{Val _,__G_589:Array [Boolean ,75];Val d:Array [Int ,0b11110]=-__::$M2_8;Gz(){Break ;}Var _,_,N,$__:Array [Array [Array [Array [Boolean ,0307],4],04_5],0B1_0];}Class _:C{Val O,BU,_:_89__;Val $_1,_:__;}Class _:_{$0(){}Var _:Array [Array [Array [Float ,0b11110],0x4C],0X45];}''',
                '''Class,_z82,:,m1,{,Val,_,,,__G_589,:,Array,[,Boolean,,,75,],;,Val,d,:,Array,[,Int,,,0b11110,],=,-,__,::,$M2_8,;,Gz,(,),{,Break,;,},Var,_,,,_,,,N,,,$__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0307,],,,4,],,,045,],,,0B10,],;,},Class,_,:,C,{,Val,O,,,BU,,,_,:,_89__,;,Val,$_1,,,_,:,__,;,},Class,_,:,_,{,$0,(,),{,},Var,_,:,Array,[,Array,[,Array,[,Float,,,0b11110,],,,0x4C,],,,0X45,],;,},<EOF>''',
                101
            )
        )

    def test_3157(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5_{Destructor (){}Var h__H,__,_F,_,hT5j:Int ;F(El_:Int ){} }Class _5{$_s80(Z,____:Array [String ,0110]){} }Class _:E{}''',
                '''Class,_5_,{,Destructor,(,),{,},Var,h__H,,,__,,,_F,,,_,,,hT5j,:,Int,;,F,(,El_,:,Int,),{,},},Class,_5,{,$_s80,(,Z,,,____,:,Array,[,String,,,0110,],),{,},},Class,_,:,E,{,},<EOF>''',
                101
            )
        )

    def test_3158(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:C{}Class u:_V{g(_6___:String ;W:_;_5_:Array [String ,59];_:Int ;_,H_:_r;_p_,_e:Q_){} }Class _:_4{Destructor (){} }Class __9_t{Constructor (M,_Oq_,_NC,k,J0,q:Float ){} }Class r6q{}''',
                '''Class,_,:,C,{,},Class,u,:,_V,{,g,(,_6___,:,String,;,W,:,_,;,_5_,:,Array,[,String,,,59,],;,_,:,Int,;,_,,,H_,:,_r,;,_p_,,,_e,:,Q_,),{,},},Class,_,:,_4,{,Destructor,(,),{,},},Class,__9_t,{,Constructor,(,M,,,_Oq_,,,_NC,,,k,,,J0,,,q,:,Float,),{,},},Class,r6q,{,},<EOF>''',
                101
            )
        )

    def test_3159(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:T{}Class _7{}Class _{Constructor (){} }Class _X_z81{}Class _8_Gr0c:__{K(LJ:_;vHOT_4n:_;_:_7;_:n){}Constructor (tk__3_,u:Array [Array [String ,0XF_E],55];h9,_4XD:Array [Array [Int ,0b110011],0B1];A,_1_,_:_){Continue ;} }Class hk:h__q{}''',
                '''Class,I,:,T,{,},Class,_7,{,},Class,_,{,Constructor,(,),{,},},Class,_X_z81,{,},Class,_8_Gr0c,:,__,{,K,(,LJ,:,_,;,vHOT_4n,:,_,;,_,:,_7,;,_,:,n,),{,},Constructor,(,tk__3_,,,u,:,Array,[,Array,[,String,,,0XFE,],,,55,],;,h9,,,_4XD,:,Array,[,Array,[,Int,,,0b110011,],,,0B1,],;,A,,,_1_,,,_,:,_,),{,Continue,;,},},Class,hk,:,h__q,{,},<EOF>''',
                101
            )
        )

    def test_3160(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:Z0W{Var w,$ZAk,_V8:A_3;Val $4,q6_5u_,xN,$3,$8,_:Array [Array [Array [Array [Array [Int ,05],0X4B],0X4B],070_5],12];Destructor (){Continue ;} }Class M_4:K6l_6{}Class W{}''',
                '''Class,e,:,Z0W,{,Var,w,,,$ZAk,,,_V8,:,A_3,;,Val,$4,,,q6_5u_,,,xN,,,$3,,,$8,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,05,],,,0X4B,],,,0X4B,],,,0705,],,,12,],;,Destructor,(,),{,Continue,;,},},Class,M_4,:,K6l_6,{,},Class,W,{,},<EOF>''',
                101
            )
        )

    def test_3161(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{Var __,ui,X:Array [Array [Array [Boolean ,0b1_0],0b10],0x25];}Class _{$E2i_(G:Array [Float ,0B100101];E,_:Array [Array [String ,057],95];D,RM:bm){} }Class _{}''',
                '''Class,J,{,Var,__,,,ui,,,X,:,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0b10,],,,0x25,],;,},Class,_,{,$E2i_,(,G,:,Array,[,Float,,,0B100101,],;,E,,,_,:,Array,[,Array,[,String,,,057,],,,95,],;,D,,,RM,:,bm,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3162(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:YS2{$4(C3,b:Array [Array [Array [Boolean ,0x40],021],91];Z:_3){}Val $6:Array [Array [Boolean ,91],8];}Class _4_{}Class t{Var _V:String ;Val $_:E_4;}''',
                '''Class,_,:,YS2,{,$4,(,C3,,,b,:,Array,[,Array,[,Array,[,Boolean,,,0x40,],,,021,],,,91,],;,Z,:,_3,),{,},Val,$6,:,Array,[,Array,[,Boolean,,,91,],,,8,],;,},Class,_4_,{,},Class,t,{,Var,_V,:,String,;,Val,$_,:,E_4,;,},<EOF>''',
                101
            )
        )

    def test_3163(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z0{Constructor (_,ch94:Array [Int ,07]){}Val k2,$z:Array [Array [Int ,0B1],0X4C];Constructor (J__,_26__5_:String ;EY6v,_1:Array [Boolean ,0121];__:a;_6:J0;_,_:String ){} }''',
                '''Class,Z0,{,Constructor,(,_,,,ch94,:,Array,[,Int,,,07,],),{,},Val,k2,,,$z,:,Array,[,Array,[,Int,,,0B1,],,,0X4C,],;,Constructor,(,J__,,,_26__5_,:,String,;,EY6v,,,_1,:,Array,[,Boolean,,,0121,],;,__,:,a,;,_6,:,J0,;,_,,,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3164(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{Val _,_m:Int ;Constructor (_,_,C:Array [Array [Int ,0X2E],58]){}Constructor (Di4:_;__:Array [Float ,0x4A]){Break ;Val r:Array [Array [Boolean ,07],07_74];} }Class _y2_:z3{}''',
                '''Class,y,{,Val,_,,,_m,:,Int,;,Constructor,(,_,,,_,,,C,:,Array,[,Array,[,Int,,,0X2E,],,,58,],),{,},Constructor,(,Di4,:,_,;,__,:,Array,[,Float,,,0x4A,],),{,Break,;,Val,r,:,Array,[,Array,[,Boolean,,,07,],,,0774,],;,},},Class,_y2_,:,z3,{,},<EOF>''',
                101
            )
        )

    def test_3165(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _1A,$Z:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0X1_2],02],0B10_0],0x4E],0b1001011],41],0B1_1_1],41];Destructor (){} }Class _5:TJ{Var _:Array [Boolean ,41];}''',
                '''Class,_,{,Var,_1A,,,$Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X12,],,,02,],,,0B100,],,,0x4E,],,,0b1001011,],,,41,],,,0B111,],,,41,],;,Destructor,(,),{,},},Class,_5,:,TJ,{,Var,_,:,Array,[,Boolean,,,41,],;,},<EOF>''',
                101
            )
        )

    def test_3166(self):
        self.assertTrue(
            TestLexer.test(
                '''Class rC:_b10nxKb{Var $601,$2g7:Array [Int ,0b111110];Var $_:Array [Array [Array [Array [Float ,30],30],0b1],0B1011];}Class Q:M{}Class ue1:_2{$_(_U,_:_;_:_){}Destructor (){}Val $_:Array [Boolean ,02];}''',
                '''Class,rC,:,_b10nxKb,{,Var,$601,,,$2g7,:,Array,[,Int,,,0b111110,],;,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,30,],,,30,],,,0b1,],,,0B1011,],;,},Class,Q,:,M,{,},Class,ue1,:,_2,{,$_,(,_U,,,_,:,_,;,_,:,_,),{,},Destructor,(,),{,},Val,$_,:,Array,[,Boolean,,,02,],;,},<EOF>''',
                101
            )
        )

    def test_3167(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7:T{Constructor (_L,A:Array [Boolean ,0B10_0]){Var g:Array [Float ,067];Return ;Continue ;Break ;}Constructor (){} }''',
                '''Class,_7,:,T,{,Constructor,(,_L,,,A,:,Array,[,Boolean,,,0B100,],),{,Var,g,:,Array,[,Float,,,067,],;,Return,;,Continue,;,Break,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3168(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class N{$_(_,_68_:Array [Array [Float ,0X3],2];P:_3;__:Array [Float ,2];B:_M){Continue ;Continue ;Break ;} }Class V8_Ax:u{Val _:Boolean ;}''',
                '''Class,_,:,_,{,},Class,N,{,$_,(,_,,,_68_,:,Array,[,Array,[,Float,,,0X3,],,,2,],;,P,:,_3,;,__,:,Array,[,Float,,,2,],;,B,:,_M,),{,Continue,;,Continue,;,Break,;,},},Class,V8_Ax,:,u,{,Val,_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3169(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _M{Var $_:Array [String ,0x20];}Class Y:_{}Class W{U_K(D2,__66,X:Array [Array [Int ,0b1000001],0B1]){Break ;}Var fG_:Int ;}''',
                '''Class,_,{,},Class,_M,{,Var,$_,:,Array,[,String,,,0x20,],;,},Class,Y,:,_,{,},Class,W,{,U_K,(,D2,,,__66,,,X,:,Array,[,Array,[,Int,,,0b1000001,],,,0B1,],),{,Break,;,},Var,fG_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3170(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){ {} }Constructor (){Var _,_,_:Array [String ,0xB];} }Class __4{}Class w{}Class _{Var $M,$p:Array [Float ,8];}Class _{}Class x{Var $28:_5;}''',
                '''Class,_,{,Destructor,(,),{,{,},},Constructor,(,),{,Var,_,,,_,,,_,:,Array,[,String,,,0xB,],;,},},Class,__4,{,},Class,w,{,},Class,_,{,Var,$M,,,$p,:,Array,[,Float,,,8,],;,},Class,_,{,},Class,x,{,Var,$28,:,_5,;,},<EOF>''',
                101
            )
        )

    def test_3171(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e6_{lzi(j2:_p;fM_:Float ;ha,w,Y6:_;__,_:Array [Array [Array [Boolean ,06],0B1101],0XA_A4_B];y:_;__:Array [Array [String ,0x4],20]){}Val $_3N,P,$5,_:Boolean ;Destructor (){} }''',
                '''Class,e6_,{,lzi,(,j2,:,_p,;,fM_,:,Float,;,ha,,,w,,,Y6,:,_,;,__,,,_,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,0B1101,],,,0XAA4B,],;,y,:,_,;,__,:,Array,[,Array,[,String,,,0x4,],,,20,],),{,},Val,$_3N,,,P,,,$5,,,_,:,Boolean,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3172(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{Var _Zy,_:Boolean ;Constructor (){ {} }Var s9,t_4:Array [Array [Array [Int ,0X4D],0B1010111],02_1];Val $_Y17G3__,$1:Z;}Class H1:_{Val _:i;}Class UM:_5{}''',
                '''Class,T,{,Var,_Zy,,,_,:,Boolean,;,Constructor,(,),{,{,},},Var,s9,,,t_4,:,Array,[,Array,[,Array,[,Int,,,0X4D,],,,0B1010111,],,,021,],;,Val,$_Y17G3__,,,$1,:,Z,;,},Class,H1,:,_,{,Val,_,:,i,;,},Class,UM,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_3173(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:__X8{Destructor (){}Constructor (eOF3xD8CV,_,PA,_:Array [Int ,0144];_:Boolean ;uV99,__:C4_){Return ;}Constructor (x:String ){} }''',
                '''Class,J,:,__X8,{,Destructor,(,),{,},Constructor,(,eOF3xD8CV,,,_,,,PA,,,_,:,Array,[,Int,,,0144,],;,_,:,Boolean,;,uV99,,,__,:,C4_,),{,Return,;,},Constructor,(,x,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3174(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2__:___w{Constructor (_:Y_;_,_,_:c_;_,Ls_3,e_,do:w3y;_,a_,_7:Array [Float ,0X5];w3:String ){Continue ;Return ;} }''',
                '''Class,_2__,:,___w,{,Constructor,(,_,:,Y_,;,_,,,_,,,_,:,c_,;,_,,,Ls_3,,,e_,,,do,:,w3y,;,_,,,a_,,,_7,:,Array,[,Float,,,0X5,],;,w3,:,String,),{,Continue,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3175(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___a_f{Destructor (){} }Class w:D{Constructor (m,z:Array [Float ,0XB24];_,e_:KT_){uYN::$aPk353();} }Class Y{Var _:Float ;Var $Gl:nu22;}''',
                '''Class,___a_f,{,Destructor,(,),{,},},Class,w,:,D,{,Constructor,(,m,,,z,:,Array,[,Float,,,0XB24,],;,_,,,e_,:,KT_,),{,uYN,::,$aPk353,(,),;,},},Class,Y,{,Var,_,:,Float,;,Var,$Gl,:,nu22,;,},<EOF>''',
                101
            )
        )

    def test_3176(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g_{Constructor (T,_,O1f:Float ;__:String ;X,__:Array [Array [Array [Float ,58],0xC_D0_7_8],0B1011110]){}$_m9_(){Break ;} }''',
                '''Class,g_,{,Constructor,(,T,,,_,,,O1f,:,Float,;,__,:,String,;,X,,,__,:,Array,[,Array,[,Array,[,Float,,,58,],,,0xCD078,],,,0B1011110,],),{,},$_m9_,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3177(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4tO{Val _4_p,$__8,kzI:String ;}Class R_43{Constructor (){Continue ;}$_(_:P;k,v:Array [Array [Array [Int ,03],05_340],0B1];P3z:Array [Boolean ,5]){} }Class _9_:_{p(b,_,_,_183:Array [String ,0x1C]){Val z38u3,_3:E_;} }''',
                '''Class,_4tO,{,Val,_4_p,,,$__8,,,kzI,:,String,;,},Class,R_43,{,Constructor,(,),{,Continue,;,},$_,(,_,:,P,;,k,,,v,:,Array,[,Array,[,Array,[,Int,,,03,],,,05340,],,,0B1,],;,P3z,:,Array,[,Boolean,,,5,],),{,},},Class,_9_,:,_,{,p,(,b,,,_,,,_,,,_183,:,Array,[,String,,,0x1C,],),{,Val,z38u3,,,_3,:,E_,;,},},<EOF>''',
                101
            )
        )

    def test_3178(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_V_zM_h_89_K{Var $_6,_:zlV_;$r(X37H_,_1_0,N,u,P,_:Array [String ,0B1];V,vl___,f,_,f8581:String ){Val ___j,_:_;} }''',
                '''Class,_0_V_zM_h_89_K,{,Var,$_6,,,_,:,zlV_,;,$r,(,X37H_,,,_1_0,,,N,,,u,,,P,,,_,:,Array,[,String,,,0B1,],;,V,,,vl___,,,f,,,_,,,f8581,:,String,),{,Val,___j,,,_,:,_,;,},},<EOF>''',
                101
            )
        )

    def test_3179(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5bo8:b4_3{Val b,_,$Ucr:Boolean ;Val _8:Array [Float ,0B1];}Class W_Si:T8wG{}Class X_4_:_{Var $xf,_,$8__:_P_;}''',
                '''Class,_5bo8,:,b4_3,{,Val,b,,,_,,,$Ucr,:,Boolean,;,Val,_8,:,Array,[,Float,,,0B1,],;,},Class,W_Si,:,T8wG,{,},Class,X_4_,:,_,{,Var,$xf,,,_,,,$8__,:,_P_,;,},<EOF>''',
                101
            )
        )

    def test_3180(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_:w_{$5(_7_s6:Array [Array [Array [Array [Array [Boolean ,0X48],4_9_2],0X9],0777_71],04];q,O5,__xq:Float ){ {} }Val R:Array [String ,05];}''',
                '''Class,_1_,:,w_,{,$5,(,_7_s6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X48,],,,492,],,,0X9,],,,077771,],,,04,],;,q,,,O5,,,__xq,:,Float,),{,{,},},Val,R,:,Array,[,String,,,05,],;,},<EOF>''',
                101
            )
        )

    def test_3181(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{_(_,S:Array [Float ,59];___:G;_0:_8){Return ;Break ;Return ;}Var $9,$6b2,s:Array [Int ,0B1001100];}Class f{Var $2,$9C,_,_,$5A,$_3,_:String ;$5(){} }''',
                '''Class,E,{,_,(,_,,,S,:,Array,[,Float,,,59,],;,___,:,G,;,_0,:,_8,),{,Return,;,Break,;,Return,;,},Var,$9,,,$6b2,,,s,:,Array,[,Int,,,0B1001100,],;,},Class,f,{,Var,$2,,,$9C,,,_,,,_,,,$5A,,,$_3,,,_,:,String,;,$5,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3182(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u{Constructor (H_,_:o7;__X,v,_y2:Z;_n:Int ;__3,eGAw1g,q:_;f0_:Array [Array [Int ,0XC],0X1]){Continue ;i::$__();} }''',
                '''Class,u,{,Constructor,(,H_,,,_,:,o7,;,__X,,,v,,,_y2,:,Z,;,_n,:,Int,;,__3,,,eGAw1g,,,q,:,_,;,f0_,:,Array,[,Array,[,Int,,,0XC,],,,0X1,],),{,Continue,;,i,::,$__,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3183(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __07_{Destructor (){Continue ;Val _,L5_1,H,K_p_,_,_,UYp_:P;} }Class _{Constructor (p:hrhP){} }Class _:_1{Var Q,V00kc,_,$08:Boolean ;}''',
                '''Class,__07_,{,Destructor,(,),{,Continue,;,Val,_,,,L5_1,,,H,,,K_p_,,,_,,,_,,,UYp_,:,P,;,},},Class,_,{,Constructor,(,p,:,hrhP,),{,},},Class,_,:,_1,{,Var,Q,,,V00kc,,,_,,,$08,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3184(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U0_{$U8(BC_,t:String ;_:String ;P,E:Array [Array [Array [Array [Array [Boolean ,0140],0x2A],0B1_0],0X4],4]){} }Class y87:S___42{}Class _:_{}Class _35_9y_{}Class _:_{Constructor (z:Y){} }''',
                '''Class,U0_,{,$U8,(,BC_,,,t,:,String,;,_,:,String,;,P,,,E,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0140,],,,0x2A,],,,0B10,],,,0X4,],,,4,],),{,},},Class,y87,:,S___42,{,},Class,_,:,_,{,},Class,_35_9y_,{,},Class,_,:,_,{,Constructor,(,z,:,Y,),{,},},<EOF>''',
                101
            )
        )

    def test_3185(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var __4_,__:Array [Array [Array [Boolean ,0x47],0125],5_5];Var $t,$O_8:Int ;$jX(__:SF;L:String ;_,W_P,K_1,F2:Array [Boolean ,0x47];R,_:Float ){Var __:Float ;} }Class j2{$0(){}Val _,$3N8_0:Array [Array [Boolean ,3],0x47];Var _,$_,$5,__Wc:Array [Float ,0X5A];}''',
                '''Class,_,:,_,{,Var,__4_,,,__,:,Array,[,Array,[,Array,[,Boolean,,,0x47,],,,0125,],,,55,],;,Var,$t,,,$O_8,:,Int,;,$jX,(,__,:,SF,;,L,:,String,;,_,,,W_P,,,K_1,,,F2,:,Array,[,Boolean,,,0x47,],;,R,,,_,:,Float,),{,Var,__,:,Float,;,},},Class,j2,{,$0,(,),{,},Val,_,,,$3N8_0,:,Array,[,Array,[,Boolean,,,3,],,,0x47,],;,Var,_,,,$_,,,$5,,,__Wc,:,Array,[,Float,,,0X5A,],;,},<EOF>''',
                101
            )
        )

    def test_3186(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{Var $__,$6:Array [Array [Boolean ,0b11100],0b1_1];Destructor (){} }Class a7_{Destructor (){}Constructor (){} }''',
                '''Class,l,{,Var,$__,,,$6,:,Array,[,Array,[,Boolean,,,0b11100,],,,0b11,],;,Destructor,(,),{,},},Class,a7_,{,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3187(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{}Class _:_{Var $_,$UA_w6_:Array [Array [Float ,0XC],98];}Class S:L{}Class _{}Class U_1_:_{Var __:String ;}Class _:__{}Class s{}''',
                '''Class,v,{,},Class,_,:,_,{,Var,$_,,,$UA_w6_,:,Array,[,Array,[,Float,,,0XC,],,,98,],;,},Class,S,:,L,{,},Class,_,{,},Class,U_1_,:,_,{,Var,__,:,String,;,},Class,_,:,__,{,},Class,s,{,},<EOF>''',
                101
            )
        )

    def test_3188(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _I:Lq{Val $__,o:_7_o2;}Class E:w_{Constructor (V:Array [Array [Array [Array [Int ,0b1101],26],023],0b1101]){Continue ;} }''',
                '''Class,_I,:,Lq,{,Val,$__,,,o,:,_7_o2,;,},Class,E,:,w_,{,Constructor,(,V,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1101,],,,26,],,,023,],,,0b1101,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3189(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e_:_I4{Constructor (){} }Class _{Var _:String ;_(W:x5;_:Array [Array [Array [Float ,0XFF],036],036]){}Val $_jc:A;}Class _5{}Class _{}''',
                '''Class,e_,:,_I4,{,Constructor,(,),{,},},Class,_,{,Var,_,:,String,;,_,(,W,:,x5,;,_,:,Array,[,Array,[,Array,[,Float,,,0XFF,],,,036,],,,036,],),{,},Val,$_jc,:,A,;,},Class,_5,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3190(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1L{}Class A:O{}Class _{Var $_:Array [Array [Array [Array [Array [Array [Array [Boolean ,01],0b1_0],7],4],02_6_7_1_1_4],0111],0111];}Class __2:_{}''',
                '''Class,_1L,{,},Class,A,:,O,{,},Class,_,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,0b10,],,,7,],,,4,],,,0267114,],,,0111,],,,0111,],;,},Class,__2,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3191(self):
        self.assertTrue(
            TestLexer.test(
                '''Class nb5{_(Q4,X,_,t_,__hA___l__,_1l2__:Boolean ;C:_;_n:Array [Array [String ,16],0b11_10_1];r,_:x;_,_,_p1,_:Array [Array [Float ,0X6],16]){} }''',
                '''Class,nb5,{,_,(,Q4,,,X,,,_,,,t_,,,__hA___l__,,,_1l2__,:,Boolean,;,C,:,_,;,_n,:,Array,[,Array,[,String,,,16,],,,0b11101,],;,r,,,_,:,x,;,_,,,_,,,_p1,,,_,:,Array,[,Array,[,Float,,,0X6,],,,16,],),{,},},<EOF>''',
                101
            )
        )

    def test_3192(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $68,_,s_:String ;_g6(_R:_Y_;___f0,_:Int ){Val _:Array [Array [Array [Array [String ,0b10],0X2C],0x2],0X2C];}Constructor (_O,ty:Boolean ;_18,_:c){} }''',
                '''Class,_,{,Var,$68,,,_,,,s_,:,String,;,_g6,(,_R,:,_Y_,;,___f0,,,_,:,Int,),{,Val,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b10,],,,0X2C,],,,0x2,],,,0X2C,],;,},Constructor,(,_O,,,ty,:,Boolean,;,_18,,,_,:,c,),{,},},<EOF>''',
                101
            )
        )

    def test_3193(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _r:__0{Destructor (){Return ;{_03_::$4_();} }Var v1b_Sr:String ;Var _z,pl1:Boolean ;}Class Z{Destructor (){}Val $860U:Array [Int ,0x16];}Class ___{$Sy6(_53:Array [Array [Array [Int ,0b1_0],87],0b11101]){} }''',
                '''Class,_,{,},Class,_r,:,__0,{,Destructor,(,),{,Return,;,{,_03_,::,$4_,(,),;,},},Var,v1b_Sr,:,String,;,Var,_z,,,pl1,:,Boolean,;,},Class,Z,{,Destructor,(,),{,},Val,$860U,:,Array,[,Int,,,0x16,],;,},Class,___,{,$Sy6,(,_53,:,Array,[,Array,[,Array,[,Int,,,0b10,],,,87,],,,0b11101,],),{,},},<EOF>''',
                101
            )
        )

    def test_3194(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{Constructor (cO:Array [Array [Boolean ,0114],0b1]){}__5_7___(Kw,I:String ){}Constructor (){} }Class t:_{}Class R90:_{}''',
                '''Class,F,{,Constructor,(,cO,:,Array,[,Array,[,Boolean,,,0114,],,,0b1,],),{,},__5_7___,(,Kw,,,I,:,String,),{,},Constructor,(,),{,},},Class,t,:,_,{,},Class,R90,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3195(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Var $7r:Array [Array [Array [Array [Array [Array [Int ,0x2_9],0B10_1],9_5_0228_5],7_475_4],0B1011001],0XC_2];}''',
                '''Class,Q,{,Var,$7r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x29,],,,0B101,],,,9502285,],,,74754,],,,0B1011001,],,,0XC2,],;,},<EOF>''',
                101
            )
        )

    def test_3196(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r70{Val __c_:Int ;y(x:_y;__:Float ;U165Zh,_,I_,_:Array [Int ,01];_9:Array [String ,03_1];z:Array [Array [String ,0x34],0b1011010]){__4::$n6Ra64T();}Var $2_,_,X__YGq,_:Array [Boolean ,0x9C_18];}''',
                '''Class,r70,{,Val,__c_,:,Int,;,y,(,x,:,_y,;,__,:,Float,;,U165Zh,,,_,,,I_,,,_,:,Array,[,Int,,,01,],;,_9,:,Array,[,String,,,031,],;,z,:,Array,[,Array,[,String,,,0x34,],,,0b1011010,],),{,__4,::,$n6Ra64T,(,),;,},Var,$2_,,,_,,,X__YGq,,,_,:,Array,[,Boolean,,,0x9C18,],;,},<EOF>''',
                101
            )
        )

    def test_3197(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x5:__{o60I(h:E;_l:Array [Int ,0x42];_:String ;k,F1,_e,f_:Array [Array [String ,0b1_1],60];_:Boolean ){}Val __3:Float ;Val $_29,$G:Array [Array [String ,8_0],0B1_0];}''',
                '''Class,x5,:,__,{,o60I,(,h,:,E,;,_l,:,Array,[,Int,,,0x42,],;,_,:,String,;,k,,,F1,,,_e,,,f_,:,Array,[,Array,[,String,,,0b11,],,,60,],;,_,:,Boolean,),{,},Val,__3,:,Float,;,Val,$_29,,,$G,:,Array,[,Array,[,String,,,80,],,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_3198(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D_54O_:_{Var $cTK_,W:Int ;Val _:Array [Array [Array [Array [Array [Array [Array [Int ,0B110101],06],0B1],0B1],067],50_1],067];}''',
                '''Class,D_54O_,:,_,{,Var,$cTK_,,,W,:,Int,;,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B110101,],,,06,],,,0B1,],,,0B1,],,,067,],,,501,],,,067,],;,},<EOF>''',
                101
            )
        )

    def test_3199(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Zw_:t{}Class _:O{}Class _g674:_{}Class D_56{}Class G:Y{}Class s_R{}Class _6:_J{Val p___:Boolean ;}Class I:x{}''',
                '''Class,Zw_,:,t,{,},Class,_,:,O,{,},Class,_g674,:,_,{,},Class,D_56,{,},Class,G,:,Y,{,},Class,s_R,{,},Class,_6,:,_J,{,Val,p___,:,Boolean,;,},Class,I,:,x,{,},<EOF>''',
                101
            )
        )

    def test_3200(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3_{Val _:Array [Array [Array [Array [Array [Array [Int ,063_6],0b11100],0X23],0X4_C2],0141],0B1110];Destructor (){} }Class B3{H_N(T,_:Float ){} }Class __:y4{$_(_,x,A:Array [Array [Int ,0B1110],0B1110]){} }''',
                '''Class,_3_,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0636,],,,0b11100,],,,0X23,],,,0X4C2,],,,0141,],,,0B1110,],;,Destructor,(,),{,},},Class,B3,{,H_N,(,T,,,_,:,Float,),{,},},Class,__,:,y4,{,$_,(,_,,,x,,,A,:,Array,[,Array,[,Int,,,0B1110,],,,0B1110,],),{,},},<EOF>''',
                101
            )
        )

    def test_3201(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__w_,_:_;_152,O:Int ){}Val d,$6,$_76:Array [Array [Int ,9_9_5_8_6435_75_0_5],0101];Val __,Tw:z5o_;Val $N,y:Array [Float ,0xB];Var _84_:__Jt;Destructor (){Return ;} }''',
                '''Class,_,{,Constructor,(,__w_,,,_,:,_,;,_152,,,O,:,Int,),{,},Val,d,,,$6,,,$_76,:,Array,[,Array,[,Int,,,995864357505,],,,0101,],;,Val,__,,,Tw,:,z5o_,;,Val,$N,,,y,:,Array,[,Float,,,0xB,],;,Var,_84_,:,__Jt,;,Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3202(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _50_16:W_2Z{Constructor (Q_:vH7_;_W_4:Array [Array [Array [Boolean ,36],01],0b1001011]){Break ;}Destructor (){} }''',
                '''Class,_50_16,:,W_2Z,{,Constructor,(,Q_,:,vH7_,;,_W_4,:,Array,[,Array,[,Array,[,Boolean,,,36,],,,01,],,,0b1001011,],),{,Break,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3203(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:___Y_{}Class _:_p{Val $2,$Dkc:Array [Array [Array [Array [Array [Array [Float ,0xA],0x22],0B1_01],0x22],0X5],9];}''',
                '''Class,__,:,___Y_,{,},Class,_,:,_p,{,Val,$2,,,$Dkc,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xA,],,,0x22,],,,0B101,],,,0x22,],,,0X5,],,,9,],;,},<EOF>''',
                101
            )
        )

    def test_3204(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{$D(_,_,h_,_r,_,r5_1:String ;_:Array [Array [Array [Array [Float ,73],73],06],73];z_,_,H,O7_7x:_){Break ;Continue ;Return ;} }Class _7_{}Class _z_{}''',
                '''Class,y,{,$D,(,_,,,_,,,h_,,,_r,,,_,,,r5_1,:,String,;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,73,],,,73,],,,06,],,,73,],;,z_,,,_,,,H,,,O7_7x,:,_,),{,Break,;,Continue,;,Return,;,},},Class,_7_,{,},Class,_z_,{,},<EOF>''',
                101
            )
        )

    def test_3205(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g6I{Val $K:Array [Array [Float ,0X64],02_1];}Class _:W{}Class _:_{}Class _{Y9(w,_9_,n,_1h,_T_,_,_7_,_,__,I0f,w_fj:_;S_:Int ){} }''',
                '''Class,g6I,{,Val,$K,:,Array,[,Array,[,Float,,,0X64,],,,021,],;,},Class,_,:,W,{,},Class,_,:,_,{,},Class,_,{,Y9,(,w,,,_9_,,,n,,,_1h,,,_T_,,,_,,,_7_,,,_,,,__,,,I0f,,,w_fj,:,_,;,S_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3206(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W_z:e{Constructor (d:D;e4v:Array [Float ,054];_,_,___:Array [Boolean ,5]){Continue ;}Var $k0,$r:Float ;}''',
                '''Class,_W_z,:,e,{,Constructor,(,d,:,D,;,e4v,:,Array,[,Float,,,054,],;,_,,,_,,,___,:,Array,[,Boolean,,,5,],),{,Continue,;,},Var,$k0,,,$r,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3207(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class v:c_1{Constructor (__:A1K_){}Constructor (){}_fT(_:Float ;R:Float ;I94:Q;U:Array [Float ,0x62]){} }''',
                '''Class,_,{,},Class,v,:,c_1,{,Constructor,(,__,:,A1K_,),{,},Constructor,(,),{,},_fT,(,_,:,Float,;,R,:,Float,;,I94,:,Q,;,U,:,Array,[,Float,,,0x62,],),{,},},<EOF>''',
                101
            )
        )

    def test_3208(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{$u(m,_2y7,_,d,L,J,_I:C){Continue ;} }Class DxA{}Class x:c{Val $LU:Array [Boolean ,3_2_865];Val $_,$h9,o,$S_V:Array [Int ,0725];}''',
                '''Class,r,{,$u,(,m,,,_2y7,,,_,,,d,,,L,,,J,,,_I,:,C,),{,Continue,;,},},Class,DxA,{,},Class,x,:,c,{,Val,$LU,:,Array,[,Boolean,,,32865,],;,Val,$_,,,$h9,,,o,,,$S_V,:,Array,[,Int,,,0725,],;,},<EOF>''',
                101
            )
        )

    def test_3209(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v_83m_{Val $y__:String ;Var O_I:Boolean ;Constructor (__9,h,H,b87W:Float ;o,lrQ1f:String ){Continue ;}Val $v:Float ;}''',
                '''Class,v_83m_,{,Val,$y__,:,String,;,Var,O_I,:,Boolean,;,Constructor,(,__9,,,h,,,H,,,b87W,:,Float,;,o,,,lrQ1f,:,String,),{,Continue,;,},Val,$v,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3210(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i7g{Constructor (_,__RJ_:_;z_:Boolean ){} }Class m:RO{}Class _:o{Var $c_,$_0,$_,$7:Array [Array [Boolean ,48],0b1001001];}''',
                '''Class,i7g,{,Constructor,(,_,,,__RJ_,:,_,;,z_,:,Boolean,),{,},},Class,m,:,RO,{,},Class,_,:,o,{,Var,$c_,,,$_0,,,$_,,,$7,:,Array,[,Array,[,Boolean,,,48,],,,0b1001001,],;,},<EOF>''',
                101
            )
        )

    def test_3211(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c_:c{}Class v{Constructor (I,_,c:Array [String ,0b111001];__3,_5,w,gV_91:Array [Int ,8];B,V_:Array [Float ,5_1_5_3];f_9,_:Array [Int ,0b111001];J_:Array [Float ,0127]){} }Class _:p916_{}Class _:jkI{}Class Wr:T_{}''',
                '''Class,c_,:,c,{,},Class,v,{,Constructor,(,I,,,_,,,c,:,Array,[,String,,,0b111001,],;,__3,,,_5,,,w,,,gV_91,:,Array,[,Int,,,8,],;,B,,,V_,:,Array,[,Float,,,5153,],;,f_9,,,_,:,Array,[,Int,,,0b111001,],;,J_,:,Array,[,Float,,,0127,],),{,},},Class,_,:,p916_,{,},Class,_,:,jkI,{,},Class,Wr,:,T_,{,},<EOF>''',
                101
            )
        )

    def test_3212(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Y{}Class O2:sT{_(S,_:b){}Val $7o,_l:Int ;Destructor (){}Var $c,_:Array [Array [Array [Array [Boolean ,64],8_13_1],0X7],0B1_1];Val $505__8n1,k,K__,_A:Array [Float ,037];}Class __:_H{}''',
                '''Class,_,:,Y,{,},Class,O2,:,sT,{,_,(,S,,,_,:,b,),{,},Val,$7o,,,_l,:,Int,;,Destructor,(,),{,},Var,$c,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,64,],,,8131,],,,0X7,],,,0B11,],;,Val,$505__8n1,,,k,,,K__,,,_A,:,Array,[,Float,,,037,],;,},Class,__,:,_H,{,},<EOF>''',
                101
            )
        )

    def test_3213(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z_29i:_g{}Class r{Constructor (F,___:___5){}Val $8:I;Destructor (){}Val $x,_,$XE,$Gs_L_:P0;Var t1,i_:z6;}''',
                '''Class,Z_29i,:,_g,{,},Class,r,{,Constructor,(,F,,,___,:,___5,),{,},Val,$8,:,I,;,Destructor,(,),{,},Val,$x,,,_,,,$XE,,,$Gs_L_,:,P0,;,Var,t1,,,i_,:,z6,;,},<EOF>''',
                101
            )
        )

    def test_3214(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _85:N{}Class j_:_5{}Class _{Val $2_sk,$r,$G,G,_,_,$I,_,w,_E__i:Array [Array [Array [Boolean ,071],0X56],0x1];}Class _2:_{}Class _:_7xx{}''',
                '''Class,_85,:,N,{,},Class,j_,:,_5,{,},Class,_,{,Val,$2_sk,,,$r,,,$G,,,G,,,_,,,_,,,$I,,,_,,,w,,,_E__i,:,Array,[,Array,[,Array,[,Boolean,,,071,],,,0X56,],,,0x1,],;,},Class,_2,:,_,{,},Class,_,:,_7xx,{,},<EOF>''',
                101
            )
        )

    def test_3215(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_90{Lk(){}Var _8:o;Val _:lI;_(){Continue ;Break ;}z(E,q,_:Array [Array [Array [Boolean ,0x4D],1_6],022]){}Destructor (){} }''',
                '''Class,__,:,_90,{,Lk,(,),{,},Var,_8,:,o,;,Val,_,:,lI,;,_,(,),{,Continue,;,Break,;,},z,(,E,,,q,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0x4D,],,,16,],,,022,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3216(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Val s_6:Boolean ;Destructor (){}Constructor (Q_,Z2,_:Int ;o:Int ){}Constructor (){}Constructor (){} }''',
                '''Class,_,{,Destructor,(,),{,},Val,s_6,:,Boolean,;,Destructor,(,),{,},Constructor,(,Q_,,,Z2,,,_,:,Int,;,o,:,Int,),{,},Constructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3217(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t_5_U:___r{Var $u:Array [String ,0B1];Val $_72_O:Boolean ;Constructor (__:_a;k:Boolean ;___3,x,t:Int ){}Constructor (){} }Class _{}Class i_fG__NN:MS{}''',
                '''Class,t_5_U,:,___r,{,Var,$u,:,Array,[,String,,,0B1,],;,Val,$_72_O,:,Boolean,;,Constructor,(,__,:,_a,;,k,:,Boolean,;,___3,,,x,,,t,:,Int,),{,},Constructor,(,),{,},},Class,_,{,},Class,i_fG__NN,:,MS,{,},<EOF>''',
                101
            )
        )

    def test_3218(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __J{}Class R:_1{Tf(l86,__p,K7O:Array [Int ,100]){}Var $8_,X,$_E_F5C____:Array [Array [String ,0b110111],0X55];}Class _:_5_9X{}''',
                '''Class,__J,{,},Class,R,:,_1,{,Tf,(,l86,,,__p,,,K7O,:,Array,[,Int,,,100,],),{,},Var,$8_,,,X,,,$_E_F5C____,:,Array,[,Array,[,String,,,0b110111,],,,0X55,],;,},Class,_,:,_5_9X,{,},<EOF>''',
                101
            )
        )

    def test_3219(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q39_{Constructor (U:Array [Array [Array [Boolean ,0B1000],0xE5EA],01_4]){Continue ;Val q,_,_O35:Array [Array [Array [Array [String ,4],4],01],0b1];} }Class _3tNM{Constructor (b,r,M:Array [Float ,0b100111]){} }''',
                '''Class,q39_,{,Constructor,(,U,:,Array,[,Array,[,Array,[,Boolean,,,0B1000,],,,0xE5EA,],,,014,],),{,Continue,;,Val,q,,,_,,,_O35,:,Array,[,Array,[,Array,[,Array,[,String,,,4,],,,4,],,,01,],,,0b1,],;,},},Class,_3tNM,{,Constructor,(,b,,,r,,,M,:,Array,[,Float,,,0b100111,],),{,},},<EOF>''',
                101
            )
        )

    def test_3220(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _h5__f:k9{Constructor (DzV,ZC,_b:Boolean ){Return ;}Val $g:M1__;Var $1l____0,_I__:Array [Array [Array [Array [Array [Array [Int ,03],2],0B1_1_1],0b1],06],06];}''',
                '''Class,_h5__f,:,k9,{,Constructor,(,DzV,,,ZC,,,_b,:,Boolean,),{,Return,;,},Val,$g,:,M1__,;,Var,$1l____0,,,_I__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,03,],,,2,],,,0B111,],,,0b1,],,,06,],,,06,],;,},<EOF>''',
                101
            )
        )

    def test_3221(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:Plg{}Class X:b{_(_,R,S:String ;_:Array [Array [Array [Float ,0b101011],077],5]){}Var L5:W_;}Class _c_8{Var _,n,i_V,$_7_,$_:Int ;}''',
                '''Class,z,:,Plg,{,},Class,X,:,b,{,_,(,_,,,R,,,S,:,String,;,_,:,Array,[,Array,[,Array,[,Float,,,0b101011,],,,077,],,,5,],),{,},Var,L5,:,W_,;,},Class,_c_8,{,Var,_,,,n,,,i_V,,,$_7_,,,$_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3222(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:_o9_{}Class _9W:_{$2(_,njWH,hU:Array [Array [Float ,067],0B101_0];I61,N10K_n9m6,d_5H:_9){}Constructor (_6__P,_:Int ;u,l28,O_:U9q;_:Array [Array [Boolean ,0B1_0],0x40]){} }''',
                '''Class,h,:,_o9_,{,},Class,_9W,:,_,{,$2,(,_,,,njWH,,,hU,:,Array,[,Array,[,Float,,,067,],,,0B1010,],;,I61,,,N10K_n9m6,,,d_5H,:,_9,),{,},Constructor,(,_6__P,,,_,:,Int,;,u,,,l28,,,O_,:,U9q,;,_,:,Array,[,Array,[,Boolean,,,0B10,],,,0x40,],),{,},},<EOF>''',
                101
            )
        )

    def test_3223(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_,K6,et:x9;_6:c;Y,z:Array [Array [Array [Array [String ,0B11111],051],0B11111],0x4B_E_A_6D]){} }Class H2__u{}''',
                '''Class,_,{,Constructor,(,_,,,K6,,,et,:,x9,;,_6,:,c,;,Y,,,z,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11111,],,,051,],,,0B11111,],,,0x4BEA6D,],),{,},},Class,H2__u,{,},<EOF>''',
                101
            )
        )

    def test_3224(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{}Class _{Var _0,$P,$n3Lf:Array [Array [Array [Array [String ,065],0b11010],0x44],0B100];Val $9b:Float ;}Class wJ{}''',
                '''Class,v,{,},Class,_,{,Var,_0,,,$P,,,$n3Lf,:,Array,[,Array,[,Array,[,Array,[,String,,,065,],,,0b11010,],,,0x44,],,,0B100,],;,Val,$9b,:,Float,;,},Class,wJ,{,},<EOF>''',
                101
            )
        )

    def test_3225(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M:_{$4(){}Val _,_z_:o;Val $5:Array [Int ,0b1];$251(r:s;_,_Hr5f:_92;_k,P5:Array [Array [Array [Array [Int ,0b1],0b1100001],0XD],97];__u,S6:_){} }Class U:o{_9V3(){} }''',
                '''Class,_M,:,_,{,$4,(,),{,},Val,_,,,_z_,:,o,;,Val,$5,:,Array,[,Int,,,0b1,],;,$251,(,r,:,s,;,_,,,_Hr5f,:,_92,;,_k,,,P5,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0b1100001,],,,0XD,],,,97,],;,__u,,,S6,:,_,),{,},},Class,U,:,o,{,_9V3,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3226(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class J_5_p0{}Class U6_1:_{Val M:Array [Array [Array [Array [Array [Array [Array [Float ,0X4D],0B1],0b100111],032],0X4D],95_9],032];Destructor (){} }Class __HsT:D{}''',
                '''Class,_,:,_,{,},Class,J_5_p0,{,},Class,U6_1,:,_,{,Val,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X4D,],,,0B1,],,,0b100111,],,,032,],,,0X4D,],,,959,],,,032,],;,Destructor,(,),{,},},Class,__HsT,:,D,{,},<EOF>''',
                101
            )
        )

    def test_3227(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_3L{Constructor (y,_,_,_:_;G:__8){}Val $hS:Int ;Destructor (){} }Class c_T9:_6{Var _,$t_O5f:Float ;Constructor (){} }''',
                '''Class,c,:,_3L,{,Constructor,(,y,,,_,,,_,,,_,:,_,;,G,:,__8,),{,},Val,$hS,:,Int,;,Destructor,(,),{,},},Class,c_T9,:,_6,{,Var,_,,,$t_O5f,:,Float,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3228(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E{$9(_,K_9_,wy:Array [Array [Int ,044],0B1];R,a_jR:Array [Array [Boolean ,0b1100],0xC_A_6_B];w__,_,R8:_){} }''',
                '''Class,E,{,$9,(,_,,,K_9_,,,wy,:,Array,[,Array,[,Int,,,044,],,,0B1,],;,R,,,a_jR,:,Array,[,Array,[,Boolean,,,0b1100,],,,0xCA6B,],;,w__,,,_,,,R8,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3229(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{Constructor (_20,_:_){}Constructor (O32,N,_,_,_,n:_l;A,__:Array [Float ,0X9A];_t9:Array [Int ,06];Z6Pl9:R;_:_){}Destructor (){} }''',
                '''Class,t,{,Constructor,(,_20,,,_,:,_,),{,},Constructor,(,O32,,,N,,,_,,,_,,,_,,,n,:,_l,;,A,,,__,:,Array,[,Float,,,0X9A,],;,_t9,:,Array,[,Int,,,06,],;,Z6Pl9,:,R,;,_,:,_,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3230(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$8(_F:Boolean ){}Val $9_:Array [Array [Array [Array [Int ,0X14],05],0B1100100],05];$2(){}Destructor (){Continue ;} }''',
                '''Class,_,{,$8,(,_F,:,Boolean,),{,},Val,$9_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X14,],,,05,],,,0B1100100,],,,05,],;,$2,(,),{,},Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3231(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:_{Destructor (){Var __:Array [Array [Boolean ,066],0xA0_E_5E];} }Class _{}Class Z{Var $Q,_,$1:Array [Array [Int ,0B1],8];}''',
                '''Class,g,:,_,{,Destructor,(,),{,Var,__,:,Array,[,Array,[,Boolean,,,066,],,,0xA0E5E,],;,},},Class,_,{,},Class,Z,{,Var,$Q,,,_,,,$1,:,Array,[,Array,[,Int,,,0B1,],,,8,],;,},<EOF>''',
                101
            )
        )

    def test_3232(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Destructor (){} }Class Z6{Var $d20z:_08;Constructor (__1g3:Boolean ;_b:Array [String ,0X5_A]){} }Class Y3H{}Class _{}''',
                '''Class,_,:,_,{,Destructor,(,),{,},},Class,Z6,{,Var,$d20z,:,_08,;,Constructor,(,__1g3,:,Boolean,;,_b,:,Array,[,String,,,0X5A,],),{,},},Class,Y3H,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3233(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:pZ{}Class Nq:_9N{Val _,$_,_:Array [Array [Array [Array [Array [Array [Boolean ,3],0B111101],70],2],05],6_9];}''',
                '''Class,_,:,pZ,{,},Class,Nq,:,_9N,{,Val,_,,,$_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,3,],,,0B111101,],,,70,],,,2,],,,05,],,,69,],;,},<EOF>''',
                101
            )
        )

    def test_3234(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vKL{Constructor (U:W;_C,NG,R_5h,P:Int ;_,Z_,__1,WyU:Array [Array [Array [Array [Float ,49],0X53],0X53],0xF];mn7,__:Array [Array [String ,0XFF_34_6EA],0b1100000];R5:Int ;_:a8xn;_7,p:String ;__4s,w_:Int ;n:_;_,_W,_:w9;Dh_,_2:Array [Array [Array [String ,043],2_43],0b111]){} }Class S_{}''',
                '''Class,vKL,{,Constructor,(,U,:,W,;,_C,,,NG,,,R_5h,,,P,:,Int,;,_,,,Z_,,,__1,,,WyU,:,Array,[,Array,[,Array,[,Array,[,Float,,,49,],,,0X53,],,,0X53,],,,0xF,],;,mn7,,,__,:,Array,[,Array,[,String,,,0XFF346EA,],,,0b1100000,],;,R5,:,Int,;,_,:,a8xn,;,_7,,,p,:,String,;,__4s,,,w_,:,Int,;,n,:,_,;,_,,,_W,,,_,:,w9,;,Dh_,,,_2,:,Array,[,Array,[,Array,[,String,,,043,],,,243,],,,0b111,],),{,},},Class,S_,{,},<EOF>''',
                101
            )
        )

    def test_3235(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4:i8{Constructor (e:Array [Float ,0B111111]){} }Class y:V65{}Class __d9__{Val R:Array [Array [Array [String ,0x37],0xAB],0B1_0];}''',
                '''Class,_4,:,i8,{,Constructor,(,e,:,Array,[,Float,,,0B111111,],),{,},},Class,y,:,V65,{,},Class,__d9__,{,Val,R,:,Array,[,Array,[,Array,[,String,,,0x37,],,,0xAB,],,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_3236(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:f_{Val _0,$s20w,$_Y_T,$r:Array [Int ,0b1_1];Var a8_:String ;Val _,$9:Array [String ,072];Val $_,t9,$4_5:_1;}''',
                '''Class,l,:,f_,{,Val,_0,,,$s20w,,,$_Y_T,,,$r,:,Array,[,Int,,,0b11,],;,Var,a8_,:,String,;,Val,_,,,$9,:,Array,[,String,,,072,],;,Val,$_,,,t9,,,$4_5,:,_1,;,},<EOF>''',
                101
            )
        )

    def test_3237(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a_:_0D9S__{Constructor (iM__:_;G,_,ek,_,_,__,_:Array [Boolean ,05_31]){}_(){Return ;}Var _:M;Constructor (){} }Class _:_{}''',
                '''Class,a_,:,_0D9S__,{,Constructor,(,iM__,:,_,;,G,,,_,,,ek,,,_,,,_,,,__,,,_,:,Array,[,Boolean,,,0531,],),{,},_,(,),{,Return,;,},Var,_,:,M,;,Constructor,(,),{,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3238(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_K:Y7{Val $6:Array [Array [String ,6],0b1_1];Var $3:String ;Var $O,n:Array [Array [Float ,0x63],0x8_85];Constructor (){ {}Break ;Continue ;Return ;} }Class _0{}''',
                '''Class,b_K,:,Y7,{,Val,$6,:,Array,[,Array,[,String,,,6,],,,0b11,],;,Var,$3,:,String,;,Var,$O,,,n,:,Array,[,Array,[,Float,,,0x63,],,,0x885,],;,Constructor,(,),{,{,},Break,;,Continue,;,Return,;,},},Class,_0,{,},<EOF>''',
                101
            )
        )

    def test_3239(self):
        self.assertTrue(
            TestLexer.test(
                '''Class SZLg4{Val $_K:Boolean ;$jq3(y_:Array [Int ,25_77_8];__iw:Array [Array [Array [Array [Array [Array [Array [Array [Float ,074],02],0B1101],07],0x4C],01_5],3],0b1]){} }''',
                '''Class,SZLg4,{,Val,$_K,:,Boolean,;,$jq3,(,y_,:,Array,[,Int,,,25778,],;,__iw,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,074,],,,02,],,,0B1101,],,,07,],,,0x4C,],,,015,],,,3,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3240(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_z_{T(){}Val _:Boolean ;Var _,$P_6_:Array [String ,0b1001];}Class __{y(_,_:Int ;_:Array [Int ,0xB_A]){}Constructor (){}Destructor (){} }''',
                '''Class,_,:,_z_,{,T,(,),{,},Val,_,:,Boolean,;,Var,_,,,$P_6_,:,Array,[,String,,,0b1001,],;,},Class,__,{,y,(,_,,,_,:,Int,;,_,:,Array,[,Int,,,0xBA,],),{,},Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3241(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class sxN:C_2{Val X,$3_1:Int ;Val $_91_:Int ;Destructor (){} }Class N__Z_O_T4Z{Constructor (){}Var uQ:String ;}''',
                '''Class,_,{,},Class,sxN,:,C_2,{,Val,X,,,$3_1,:,Int,;,Val,$_91_,:,Int,;,Destructor,(,),{,},},Class,N__Z_O_T4Z,{,Constructor,(,),{,},Var,uQ,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3242(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Destructor (){} }Class ZY:g_b809{$47__(){}Val $q,$_:Array [Array [String ,075_1],0xA_A];}''',
                '''Class,_,{,Destructor,(,),{,},Destructor,(,),{,},},Class,ZY,:,g_b809,{,$47__,(,),{,},Val,$q,,,$_,:,Array,[,Array,[,String,,,0751,],,,0xAA,],;,},<EOF>''',
                101
            )
        )

    def test_3243(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___f8{}Class l:Q{}Class Nt{Var M,$_,$d:Int ;}Class _:__j{}Class d:G{Val $xN,$C_9K:Array [Boolean ,0103];}Class C:L8{Destructor (){}Var $e,$_,$_:Array [Array [String ,07_70],0X21];}Class Q_:_{Destructor (){}Var f:Boolean ;}''',
                '''Class,_,:,___f8,{,},Class,l,:,Q,{,},Class,Nt,{,Var,M,,,$_,,,$d,:,Int,;,},Class,_,:,__j,{,},Class,d,:,G,{,Val,$xN,,,$C_9K,:,Array,[,Boolean,,,0103,],;,},Class,C,:,L8,{,Destructor,(,),{,},Var,$e,,,$_,,,$_,:,Array,[,Array,[,String,,,0770,],,,0X21,],;,},Class,Q_,:,_,{,Destructor,(,),{,},Var,f,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3244(self):
        self.assertTrue(
            TestLexer.test(
                '''Class NC:_{Constructor (P2,o2:Array [Array [Array [Int ,7],0B111111],0B10];__,_:Array [Array [Array [Array [Array [Boolean ,0B111111],0x33],0b1010000],0X23],8];wlB:Int ;b2_6,_:Int ){} }''',
                '''Class,NC,:,_,{,Constructor,(,P2,,,o2,:,Array,[,Array,[,Array,[,Int,,,7,],,,0B111111,],,,0B10,],;,__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B111111,],,,0x33,],,,0b1010000,],,,0X23,],,,8,],;,wlB,:,Int,;,b2_6,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3245(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ca:_W4{Val _,_:Int ;}Class P{Constructor (j:_4;_W:Array [Array [Array [Float ,95],0140],0b1];z3:Int ;_:Array [Array [Array [Array [Float ,0x4_CB1],0xE2],07],0b1]){} }''',
                '''Class,Ca,:,_W4,{,Val,_,,,_,:,Int,;,},Class,P,{,Constructor,(,j,:,_4,;,_W,:,Array,[,Array,[,Array,[,Float,,,95,],,,0140,],,,0b1,],;,z3,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x4CB1,],,,0xE2,],,,07,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3246(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o:__K{_(){}$_I(){} }Class _8A__9Q:E2{Constructor (R_,F2__:Int ){}_(Bn:Array [Array [Array [Array [Int ,3],0B100],0135],7];_2:Array [Float ,7]){Break ;}Constructor (){}Constructor (){}Val _:Float ;}''',
                '''Class,o,:,__K,{,_,(,),{,},$_I,(,),{,},},Class,_8A__9Q,:,E2,{,Constructor,(,R_,,,F2__,:,Int,),{,},_,(,Bn,:,Array,[,Array,[,Array,[,Array,[,Int,,,3,],,,0B100,],,,0135,],,,7,],;,_2,:,Array,[,Float,,,7,],),{,Break,;,},Constructor,(,),{,},Constructor,(,),{,},Val,_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3247(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $3L:Array [Array [Int ,031],0X63];Var $__id:_I_;}Class WT___:_{Constructor (Uk,__,_d_,SvG,_1,iq,H,_,M:Array [Array [Array [Array [Array [Array [Boolean ,073_0],6415_6],0XF_E_9_E7],72],7],11_28]){} }Class TuD_{}''',
                '''Class,_,{,Val,$3L,:,Array,[,Array,[,Int,,,031,],,,0X63,],;,Var,$__id,:,_I_,;,},Class,WT___,:,_,{,Constructor,(,Uk,,,__,,,_d_,,,SvG,,,_1,,,iq,,,H,,,_,,,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0730,],,,64156,],,,0XFE9E7,],,,72,],,,7,],,,1128,],),{,},},Class,TuD_,{,},<EOF>''',
                101
            )
        )

    def test_3248(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J8:_{Var $0_,$_VQ3:_6a_;}Class D_Z97__5:_14{D_(k,X8:C;_3,g08:s7;_:Float ){Continue ;} }Class _N:S23{}Class h{}Class vq{Destructor (){} }''',
                '''Class,J8,:,_,{,Var,$0_,,,$_VQ3,:,_6a_,;,},Class,D_Z97__5,:,_14,{,D_,(,k,,,X8,:,C,;,_3,,,g08,:,s7,;,_,:,Float,),{,Continue,;,},},Class,_N,:,S23,{,},Class,h,{,},Class,vq,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3249(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:K{}Class t__8{}Class k49__{$_8(_:_;O,vW80_:String ){Return ;}Var $W:Array [Array [Boolean ,0X54],0b1];}''',
                '''Class,r,:,K,{,},Class,t__8,{,},Class,k49__,{,$_8,(,_,:,_,;,O,,,vW80_,:,String,),{,Return,;,},Var,$W,:,Array,[,Array,[,Boolean,,,0X54,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_3250(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e:rv7H{}Class u:_m3{}Class _t_{Constructor (n,Z_8_J_:Boolean ;S4,F,_:Array [Array [Array [Float ,026],39],39]){} }''',
                '''Class,e,:,rv7H,{,},Class,u,:,_m3,{,},Class,_t_,{,Constructor,(,n,,,Z_8_J_,:,Boolean,;,S4,,,F,,,_,:,Array,[,Array,[,Array,[,Float,,,026,],,,39,],,,39,],),{,},},<EOF>''',
                101
            )
        )

    def test_3251(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class c5{}Class zE1e9{}Class _{$31(){}$_(ib,F3e,t,_T,S5,h:Array [Array [Boolean ,05],0x19]){}$_(){} }''',
                '''Class,__,:,_,{,},Class,c5,{,},Class,zE1e9,{,},Class,_,{,$31,(,),{,},$_,(,ib,,,F3e,,,t,,,_T,,,S5,,,h,:,Array,[,Array,[,Boolean,,,05,],,,0x19,],),{,},$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3252(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class n:_{}Class p:a{Constructor (Wq_M,_,dl,_:String ){Val __,_,yI:Float ;{Continue ;}{}Val k9,__0,_:Array [Float ,28];Return ;}Constructor (){} }''',
                '''Class,_,{,},Class,n,:,_,{,},Class,p,:,a,{,Constructor,(,Wq_M,,,_,,,dl,,,_,:,String,),{,Val,__,,,_,,,yI,:,Float,;,{,Continue,;,},{,},Val,k9,,,__0,,,_,:,Array,[,Float,,,28,],;,Return,;,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3253(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g_21{_(_,DS_,j93:String ;__:Array [Array [Array [Array [Boolean ,0x4_5],0B11],0x1],0541];_:Array [String ,46];CI5,n:Int ;F:Array [Array [Array [Array [Array [Float ,0b10110],011],04],0X4],0X4];__:Boolean ){ {}Break ;} }''',
                '''Class,g_21,{,_,(,_,,,DS_,,,j93,:,String,;,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x45,],,,0B11,],,,0x1,],,,0541,],;,_,:,Array,[,String,,,46,],;,CI5,,,n,:,Int,;,F,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b10110,],,,011,],,,04,],,,0X4,],,,0X4,],;,__,:,Boolean,),{,{,},Break,;,},},<EOF>''',
                101
            )
        )

    def test_3254(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D{Var $o_0gZ:Mx_;}Class Q__{}Class fr___JA:_{Var $_6:Boolean ;Val $8,_,$31:Array [Boolean ,063];Var w6_:Array [Array [String ,05],0x1B];$r(_,K:Int ;_:_0;_9Y:_;_,H1,__T:_2){}Val _,$_:_;Destructor (){}$m9_(_I,_e,t__K_,__:Boolean ){Continue ;}Constructor (){Var _,h:Array [String ,2_68_5];} }''',
                '''Class,D,{,Var,$o_0gZ,:,Mx_,;,},Class,Q__,{,},Class,fr___JA,:,_,{,Var,$_6,:,Boolean,;,Val,$8,,,_,,,$31,:,Array,[,Boolean,,,063,],;,Var,w6_,:,Array,[,Array,[,String,,,05,],,,0x1B,],;,$r,(,_,,,K,:,Int,;,_,:,_0,;,_9Y,:,_,;,_,,,H1,,,__T,:,_2,),{,},Val,_,,,$_,:,_,;,Destructor,(,),{,},$m9_,(,_I,,,_e,,,t__K_,,,__,:,Boolean,),{,Continue,;,},Constructor,(,),{,Var,_,,,h,:,Array,[,String,,,2685,],;,},},<EOF>''',
                101
            )
        )

    def test_3255(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_7(V,R6_,_:Array [Array [Array [Array [Array [String ,0b101],0b101],0b100_0_0],070],4455]){}Val _ms6:Float ;}Class _WL:_2_h_{}''',
                '''Class,_,{,_7,(,V,,,R6_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b101,],,,0b101,],,,0b10000,],,,070,],,,4455,],),{,},Val,_ms6,:,Float,;,},Class,_WL,:,_2_h_,{,},<EOF>''',
                101
            )
        )

    def test_3256(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:_h4_2g{Val $_U_t:Array [Array [Array [Array [Array [Array [Array [Boolean ,0XB],99],03],0x10],03],99],3_4_86_4];}Class h2:_{}''',
                '''Class,_0,:,_h4_2g,{,Val,$_U_t,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XB,],,,99,],,,03,],,,0x10,],,,03,],,,99,],,,34864,],;,},Class,h2,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3257(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p9:w_{Constructor (_,_:_;_,m,_,__:Boolean ;m_:Array [Array [Array [Array [String ,96],0b1_0],066],0b1];O_6:Int ;_L,___,_:Boolean ;i:Float ;R:____aj3m_59_673_;_,_Y:Array [Float ,96];_:_JO_){}Destructor (){Continue ;{} }}Class R:x{}''',
                '''Class,p9,:,w_,{,Constructor,(,_,,,_,:,_,;,_,,,m,,,_,,,__,:,Boolean,;,m_,:,Array,[,Array,[,Array,[,Array,[,String,,,96,],,,0b10,],,,066,],,,0b1,],;,O_6,:,Int,;,_L,,,___,,,_,:,Boolean,;,i,:,Float,;,R,:,____aj3m_59_673_,;,_,,,_Y,:,Array,[,Float,,,96,],;,_,:,_JO_,),{,},Destructor,(,),{,Continue,;,{,},},},Class,R,:,x,{,},<EOF>''',
                101
            )
        )

    def test_3258(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $y,$50,$09,I_4X:W;Val P,$3,$f1,_,O1_ph,$_,o,$_:Int ;Var $_,_:_;Constructor (){} }Class _:_{$_EBi(){}Constructor (){} }''',
                '''Class,_,{,Var,$y,,,$50,,,$09,,,I_4X,:,W,;,Val,P,,,$3,,,$f1,,,_,,,O1_ph,,,$_,,,o,,,$_,:,Int,;,Var,$_,,,_,:,_,;,Constructor,(,),{,},},Class,_,:,_,{,$_EBi,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3259(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{_7a(z,s:Array [Array [Array [Array [String ,0B100],6],0xA],0x41];_z9__:Float ){Continue ;} }Class __2:c{}Class Z:Hc74{Destructor (){} }''',
                '''Class,S,{,_7a,(,z,,,s,:,Array,[,Array,[,Array,[,Array,[,String,,,0B100,],,,6,],,,0xA,],,,0x41,],;,_z9__,:,Float,),{,Continue,;,},},Class,__2,:,c,{,},Class,Z,:,Hc74,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3260(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6_{L(){} }Class __:W{__u2(l83,g_n__1,_n_,_:Boolean ;O,n_,Q_9__,x:String ){} }Class h{Destructor (){} }Class v7:__{}''',
                '''Class,_6_,{,L,(,),{,},},Class,__,:,W,{,__u2,(,l83,,,g_n__1,,,_n_,,,_,:,Boolean,;,O,,,n_,,,Q_9__,,,x,:,String,),{,},},Class,h,{,Destructor,(,),{,},},Class,v7,:,__,{,},<EOF>''',
                101
            )
        )

    def test_3261(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class K{$_9A__FX(){}$77(YX6,_C_,_3Gw:Array [Array [Array [Array [Array [Array [Boolean ,14],14],0B110110],057],0X71_342],0B110110];_G:t;u38:v_0;ZMX,R___:q){} }''',
                '''Class,_,{,},Class,K,{,$_9A__FX,(,),{,},$77,(,YX6,,,_C_,,,_3Gw,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,14,],,,14,],,,0B110110,],,,057,],,,0X71342,],,,0B110110,],;,_G,:,t,;,u38,:,v_0,;,ZMX,,,R___,:,q,),{,},},<EOF>''',
                101
            )
        )

    def test_3262(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:q{Val _8,$_DT:Array [Array [Array [Int ,033_2],0B1010],0B1010];Destructor (){}Destructor (){}Var __,$g25_,$x_2_z:_U4B;}''',
                '''Class,_,:,q,{,Val,_8,,,$_DT,:,Array,[,Array,[,Array,[,Int,,,0332,],,,0B1010,],,,0B1010,],;,Destructor,(,),{,},Destructor,(,),{,},Var,__,,,$g25_,,,$x_2_z,:,_U4B,;,},<EOF>''',
                101
            )
        )

    def test_3263(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _ro2_{Val LO:ka7;Destructor (){}Var H:Array [Array [Array [Int ,0b1],0b1],0B1];}Class H_:_{Constructor (){} }''',
                '''Class,_ro2_,{,Val,LO,:,ka7,;,Destructor,(,),{,},Var,H,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,0b1,],,,0B1,],;,},Class,H_,:,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3264(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:CL{Constructor (s_:Array [Array [Array [Array [Array [Array [Boolean ,32],0XA_6_B],0B100111],5_5],0xD_8A],0b1];__0_,t,_0tG:Wr4_){} }''',
                '''Class,d,:,CL,{,Constructor,(,s_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,32,],,,0XA6B,],,,0B100111,],,,55,],,,0xD8A,],,,0b1,],;,__0_,,,t,,,_0tG,:,Wr4_,),{,},},<EOF>''',
                101
            )
        )

    def test_3265(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V:_{Constructor (){Return ;}Var $6M,__den__O__:Array [Array [Array [Array [Boolean ,0b1_0],0b1],0b1],0X6B_A];}Class mm{}''',
                '''Class,_V,:,_,{,Constructor,(,),{,Return,;,},Var,$6M,,,__den__O__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0b1,],,,0b1,],,,0X6BA,],;,},Class,mm,{,},<EOF>''',
                101
            )
        )

    def test_3266(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:_{}Class _{B_(__Z:Array [Boolean ,5_6]){} }Class _:_a{Constructor (t:Array [Array [Float ,052],0b11100];_:Array [String ,0x63]){Var b_5:__F;} }Class _{}''',
                '''Class,_,{,},Class,_,:,_,{,},Class,_,{,B_,(,__Z,:,Array,[,Boolean,,,56,],),{,},},Class,_,:,_a,{,Constructor,(,t,:,Array,[,Array,[,Float,,,052,],,,0b11100,],;,_,:,Array,[,String,,,0x63,],),{,Var,b_5,:,__F,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3267(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__83C{Val $t3:F_;Constructor (f212,_:Array [Array [Array [Array [Array [Array [Int ,0B101011],0B101011],0x38],0B101011],5],031];__,_:Array [Array [Float ,4],0b101101];_:Int ;n,_:Array [Array [Boolean ,5_9],0x38]){Return ;} }''',
                '''Class,_,:,__83C,{,Val,$t3,:,F_,;,Constructor,(,f212,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B101011,],,,0B101011,],,,0x38,],,,0B101011,],,,5,],,,031,],;,__,,,_,:,Array,[,Array,[,Float,,,4,],,,0b101101,],;,_,:,Int,;,n,,,_,:,Array,[,Array,[,Boolean,,,59,],,,0x38,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3268(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7{Constructor (w5b_n,o:Array [Array [Array [Array [Array [Int ,0B11110],0b1110_11],0B11110],25],0b1];_6:Boolean ){}Var _nO:Boolean ;_(W6:_;Dv:Boolean ;_,JN,_78t,l:c_){Continue ;} }Class Q8{$_(_5:Boolean ;DP:String ){} }''',
                '''Class,_7,{,Constructor,(,w5b_n,,,o,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B11110,],,,0b111011,],,,0B11110,],,,25,],,,0b1,],;,_6,:,Boolean,),{,},Var,_nO,:,Boolean,;,_,(,W6,:,_,;,Dv,:,Boolean,;,_,,,JN,,,_78t,,,l,:,c_,),{,Continue,;,},},Class,Q8,{,$_,(,_5,:,Boolean,;,DP,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3269(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_F{Val A____x:o;}Class _8:Q9_x4{Destructor (){} }Class w6{}Class _{}Class _0{Var _3w8:Array [String ,0X63];}Class _xR:_F{$__(){}Destructor (){} }''',
                '''Class,_,:,_F,{,Val,A____x,:,o,;,},Class,_8,:,Q9_x4,{,Destructor,(,),{,},},Class,w6,{,},Class,_,{,},Class,_0,{,Var,_3w8,:,Array,[,String,,,0X63,],;,},Class,_xR,:,_F,{,$__,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3270(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _H:_3{Destructor (){Continue ;} }Class _:W5{_(L:Array [Boolean ,1_1];t:Int ;V,__:Array [Array [String ,0b1],066_5]){} }Class f:Q{Destructor (){}Var _,$_:_;Constructor (_:p;lQ:_;_96_B:q){}Var $ExK8kP9,$_8,Y:Array [String ,0X24];}''',
                '''Class,_H,:,_3,{,Destructor,(,),{,Continue,;,},},Class,_,:,W5,{,_,(,L,:,Array,[,Boolean,,,11,],;,t,:,Int,;,V,,,__,:,Array,[,Array,[,String,,,0b1,],,,0665,],),{,},},Class,f,:,Q,{,Destructor,(,),{,},Var,_,,,$_,:,_,;,Constructor,(,_,:,p,;,lQ,:,_,;,_96_B,:,q,),{,},Var,$ExK8kP9,,,$_8,,,Y,:,Array,[,String,,,0X24,],;,},<EOF>''',
                101
            )
        )

    def test_3271(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S{Constructor (__5,P:l;O:Array [String ,0X4F];_,e:Float ;_5_7,__k:Array [String ,6];iC:Array [Boolean ,0144];VxT:__){} }''',
                '''Class,S,{,Constructor,(,__5,,,P,:,l,;,O,:,Array,[,String,,,0X4F,],;,_,,,e,:,Float,;,_5_7,,,__k,:,Array,[,String,,,6,],;,iC,:,Array,[,Boolean,,,0144,],;,VxT,:,__,),{,},},<EOF>''',
                101
            )
        )

    def test_3272(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ____{Constructor (_g,_b8,G:D_3_9;_,b3:_3;H:Float ;_7_:Array [Array [Float ,4],0x5E]){}Constructor (){} }''',
                '''Class,____,{,Constructor,(,_g,,,_b8,,,G,:,D_3_9,;,_,,,b3,:,_3,;,H,:,Float,;,_7_,:,Array,[,Array,[,Float,,,4,],,,0x5E,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3273(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l:_{}Class _:_M_{Var $_x,Dc7h:Array [Array [Array [Array [Array [Array [String ,0x24],9],0x24],0b111000],30],01];}''',
                '''Class,l,:,_,{,},Class,_,:,_M_,{,Var,$_x,,,Dc7h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x24,],,,9,],,,0x24,],,,0b111000,],,,30,],,,01,],;,},<EOF>''',
                101
            )
        )

    def test_3274(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l1{Destructor (){} }Class _:T_{Constructor (){}B(___eM__,uo:H;c:T;_,__,i6:Array [Boolean ,0X62];_,a_:o){}Val j3_7cL498_,$F,$l,$4wr2:_Aum;}''',
                '''Class,l1,{,Destructor,(,),{,},},Class,_,:,T_,{,Constructor,(,),{,},B,(,___eM__,,,uo,:,H,;,c,:,T,;,_,,,__,,,i6,:,Array,[,Boolean,,,0X62,],;,_,,,a_,:,o,),{,},Val,j3_7cL498_,,,$F,,,$l,,,$4wr2,:,_Aum,;,},<EOF>''',
                101
            )
        )

    def test_3275(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M18_{Var F,hG_:_P_;}Class _1d:_{Constructor (){}lR(_:Array [Array [Array [Float ,45],1],6];_,_,_:r;T_,_S4Y:H){}Destructor (){}Val _:Boolean ;Val i,$x_,_3,$3,nhn7,_4:Array [Boolean ,0x43C_24_9];}''',
                '''Class,M18_,{,Var,F,,,hG_,:,_P_,;,},Class,_1d,:,_,{,Constructor,(,),{,},lR,(,_,:,Array,[,Array,[,Array,[,Float,,,45,],,,1,],,,6,],;,_,,,_,,,_,:,r,;,T_,,,_S4Y,:,H,),{,},Destructor,(,),{,},Val,_,:,Boolean,;,Val,i,,,$x_,,,_3,,,$3,,,nhn7,,,_4,:,Array,[,Boolean,,,0x43C249,],;,},<EOF>''',
                101
            )
        )

    def test_3276(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _JV_{}Class __:_{$_(K1,_:Array [String ,0B1_0];_,M1v_,w:String ;Isa:Array [Array [Array [Array [Int ,07],0113],05_6],0X2C]){} }Class M:_{Val $__,$l,$12,$L__,$i_,$8,$C:Array [Int ,83];}''',
                '''Class,_JV_,{,},Class,__,:,_,{,$_,(,K1,,,_,:,Array,[,String,,,0B10,],;,_,,,M1v_,,,w,:,String,;,Isa,:,Array,[,Array,[,Array,[,Array,[,Int,,,07,],,,0113,],,,056,],,,0X2C,],),{,},},Class,M,:,_,{,Val,$__,,,$l,,,$12,,,$L__,,,$i_,,,$8,,,$C,:,Array,[,Int,,,83,],;,},<EOF>''',
                101
            )
        )

    def test_3277(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{D624(){}Constructor (_,h,z:Array [Array [Array [Array [Float ,5],0X62],1_7],5];bV,p,___m___:Boolean ){} }Class k:n_1v{}Class C3:u{}''',
                '''Class,m,{,D624,(,),{,},Constructor,(,_,,,h,,,z,:,Array,[,Array,[,Array,[,Array,[,Float,,,5,],,,0X62,],,,17,],,,5,],;,bV,,,p,,,___m___,:,Boolean,),{,},},Class,k,:,n_1v,{,},Class,C3,:,u,{,},<EOF>''',
                101
            )
        )

    def test_3278(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{}Class _:V{Val a:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,7_4_9],0b1_0],04],59_8],2299_4_29_7],3],0x51],0b1000000],46],0b1000000],9],0X1];_(y_y:L6QHAz8;u,__:X_;___zWD_:Array [Array [Array [Array [Float ,0B1000100],07_5_6],0xC],04];__0_5:Array [Array [Array [Float ,46],0x7_A],0x51];B,o,_,T0,f:String ){}$8(X,_,_d__:Int ;A:Array [Boolean ,0x5A_37]){} }''',
                '''Class,a,{,},Class,_,:,V,{,Val,a,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,749,],,,0b10,],,,04,],,,598,],,,22994297,],,,3,],,,0x51,],,,0b1000000,],,,46,],,,0b1000000,],,,9,],,,0X1,],;,_,(,y_y,:,L6QHAz8,;,u,,,__,:,X_,;,___zWD_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1000100,],,,0756,],,,0xC,],,,04,],;,__0_5,:,Array,[,Array,[,Array,[,Float,,,46,],,,0x7A,],,,0x51,],;,B,,,o,,,_,,,T0,,,f,:,String,),{,},$8,(,X,,,_,,,_d__,:,Int,;,A,:,Array,[,Boolean,,,0x5A37,],),{,},},<EOF>''',
                101
            )
        )

    def test_3279(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:w{Destructor (){}Constructor (w_S_52:_y;_,q_,MJ84_6pr_,_,QZ:Array [Array [String ,68],0x1C]){} }Class X9:__{}Class __4:H8{Val _4_r0_:Array [Int ,0b1011110];}Class _ju6:N{}''',
                '''Class,___,:,w,{,Destructor,(,),{,},Constructor,(,w_S_52,:,_y,;,_,,,q_,,,MJ84_6pr_,,,_,,,QZ,:,Array,[,Array,[,String,,,68,],,,0x1C,],),{,},},Class,X9,:,__,{,},Class,__4,:,H8,{,Val,_4_r0_,:,Array,[,Int,,,0b1011110,],;,},Class,_ju6,:,N,{,},<EOF>''',
                101
            )
        )

    def test_3280(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6{Var n_,_,$_E:Boolean ;Constructor (){} }Class _:_T{}Class JE_QI:__{}Class __Z:k0{Destructor (){}__O2RR_(w_,_,R08Pg,e,E:String ){}Var MZ1,_4_6_gP,$3k,G:Int ;}Class _10:__N_y__{}''',
                '''Class,_6,{,Var,n_,,,_,,,$_E,:,Boolean,;,Constructor,(,),{,},},Class,_,:,_T,{,},Class,JE_QI,:,__,{,},Class,__Z,:,k0,{,Destructor,(,),{,},__O2RR_,(,w_,,,_,,,R08Pg,,,e,,,E,:,String,),{,},Var,MZ1,,,_4_6_gP,,,$3k,,,G,:,Int,;,},Class,_10,:,__N_y__,{,},<EOF>''',
                101
            )
        )

    def test_3281(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Var _P:Array [Array [Array [Array [String ,7],0124],0124],0124];Constructor (_,qt,_:Array [Array [Array [Float ,05_76],0b1],0x4]){} }''',
                '''Class,M,{,Var,_P,:,Array,[,Array,[,Array,[,Array,[,String,,,7,],,,0124,],,,0124,],,,0124,],;,Constructor,(,_,,,qt,,,_,:,Array,[,Array,[,Array,[,Float,,,0576,],,,0b1,],,,0x4,],),{,},},<EOF>''',
                101
            )
        )

    def test_3282(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K_6{}Class _{Val __,$_1:__0_;A1(){Break ;Return ;}Val C2,$S:Array [Array [Array [Float ,05],0X5E],0X5E];Val _n,_T_3P56,$3:Array [String ,0XA];}Class H_:_{Constructor (__V,c,X_,x:Array [Array [String ,91],0b1_0_00_01_1_0];___,_,Wm4:Array [Boolean ,1];_R,U:_30){Continue ;} }Class _:J{}''',
                '''Class,K_6,{,},Class,_,{,Val,__,,,$_1,:,__0_,;,A1,(,),{,Break,;,Return,;,},Val,C2,,,$S,:,Array,[,Array,[,Array,[,Float,,,05,],,,0X5E,],,,0X5E,],;,Val,_n,,,_T_3P56,,,$3,:,Array,[,String,,,0XA,],;,},Class,H_,:,_,{,Constructor,(,__V,,,c,,,X_,,,x,:,Array,[,Array,[,String,,,91,],,,0b10000110,],;,___,,,_,,,Wm4,:,Array,[,Boolean,,,1,],;,_R,,,U,:,_30,),{,Continue,;,},},Class,_,:,J,{,},<EOF>''',
                101
            )
        )

    def test_3283(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6P{Constructor (Q_9_j,__6:Array [Int ,02];_:Array [Array [Array [Array [Array [Int ,100],0X52],055],100],0xBE97]){} }''',
                '''Class,_6P,{,Constructor,(,Q_9_j,,,__6,:,Array,[,Int,,,02,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,100,],,,0X52,],,,055,],,,100,],,,0xBE97,],),{,},},<EOF>''',
                101
            )
        )

    def test_3284(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L{Var $_:Array [Array [Int ,48],0x13];Var $_:C;}Class _Q:_{$_(B,_:Array [Array [Boolean ,04],0B1_0]){}_V(S_,T:t){Continue ;}Var ey_:Array [Array [Array [Array [Array [Int ,0112],0b11110],0x13],70],33_7_20_5];Var _j:M;}''',
                '''Class,L,{,Var,$_,:,Array,[,Array,[,Int,,,48,],,,0x13,],;,Var,$_,:,C,;,},Class,_Q,:,_,{,$_,(,B,,,_,:,Array,[,Array,[,Boolean,,,04,],,,0B10,],),{,},_V,(,S_,,,T,:,t,),{,Continue,;,},Var,ey_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0112,],,,0b11110,],,,0x13,],,,70,],,,337205,],;,Var,_j,:,M,;,},<EOF>''',
                101
            )
        )

    def test_3285(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_0_{Val $1:Array [Int ,0x15_3_D];}Class ___x7:h{}Class _{}Class nCS:_{$6(_:Array [Int ,0x2_F]){} }Class s:v{}Class _r:_{}''',
                '''Class,_,:,_0_,{,Val,$1,:,Array,[,Int,,,0x153D,],;,},Class,___x7,:,h,{,},Class,_,{,},Class,nCS,:,_,{,$6,(,_,:,Array,[,Int,,,0x2F,],),{,},},Class,s,:,v,{,},Class,_r,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3286(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:z3{Val _,$9_7xsZ_,y,_:IU;Constructor (_:Array [Array [String ,0X4],0b1011000];_,T,_L,_,_,K5:Array [Array [Array [Array [Array [Float ,0B111001],0XE],0B111001],065],0xF]){}$6K_q_o2o(){} }Class d_T:K{}''',
                '''Class,_,:,z3,{,Val,_,,,$9_7xsZ_,,,y,,,_,:,IU,;,Constructor,(,_,:,Array,[,Array,[,String,,,0X4,],,,0b1011000,],;,_,,,T,,,_L,,,_,,,_,,,K5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B111001,],,,0XE,],,,0B111001,],,,065,],,,0xF,],),{,},$6K_q_o2o,(,),{,},},Class,d_T,:,K,{,},<EOF>''',
                101
            )
        )

    def test_3287(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $Lr,i,$yP,_VP:Array [Array [Array [Array [Array [Array [Float ,0x1B],0xD_C_C],31],0X24],036],01_0_0];Destructor (){} }''',
                '''Class,_,{,Var,$Lr,,,i,,,$yP,,,_VP,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x1B,],,,0xDCC,],,,31,],,,0X24,],,,036,],,,0100,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3288(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:i{}Class F{}Class vIFr74_G:___{n(){_::$8();{} }Destructor (){}Var H:Array [Array [Array [Array [Float ,0X6],10],10],0B10_0];Val vN_9_j:Array [Array [Float ,802_3_8],0b1100011];}''',
                '''Class,__,:,i,{,},Class,F,{,},Class,vIFr74_G,:,___,{,n,(,),{,_,::,$8,(,),;,{,},},Destructor,(,),{,},Var,H,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X6,],,,10,],,,10,],,,0B100,],;,Val,vN_9_j,:,Array,[,Array,[,Float,,,80238,],,,0b1100011,],;,},<EOF>''',
                101
            )
        )

    def test_3289(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s{}Class _S{Var W9,J:Array [Array [Int ,0B101000],0X4F];Constructor (){} }Class _9{Destructor (){} }Class _:_7p{Constructor (){}Var $02,$_:D;}Class _55_{Constructor (_:Array [Array [String ,1],07];BlX7:_;B4Y,z,D,_y_99_6,L8,_,_o:Int ){}Val $r:Array [Float ,0b10_1_0_11];}''',
                '''Class,s,{,},Class,_S,{,Var,W9,,,J,:,Array,[,Array,[,Int,,,0B101000,],,,0X4F,],;,Constructor,(,),{,},},Class,_9,{,Destructor,(,),{,},},Class,_,:,_7p,{,Constructor,(,),{,},Var,$02,,,$_,:,D,;,},Class,_55_,{,Constructor,(,_,:,Array,[,Array,[,String,,,1,],,,07,],;,BlX7,:,_,;,B4Y,,,z,,,D,,,_y_99_6,,,L8,,,_,,,_o,:,Int,),{,},Val,$r,:,Array,[,Float,,,0b101011,],;,},<EOF>''',
                101
            )
        )

    def test_3290(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_2{Constructor (n,__,_,ju,b2,_:Array [Array [Boolean ,0b1],0X6_6];_,_,__H,M_:Array [Array [String ,06_2_53],0X1D]){}Val $7,$_g:_;$5(){} }Class _:_{Constructor (_ZUI,___:_;__s_G600:Int ){}Val $cmz:n;Destructor (){} }Class g:___{}''',
                '''Class,c,:,_2,{,Constructor,(,n,,,__,,,_,,,ju,,,b2,,,_,:,Array,[,Array,[,Boolean,,,0b1,],,,0X66,],;,_,,,_,,,__H,,,M_,:,Array,[,Array,[,String,,,06253,],,,0X1D,],),{,},Val,$7,,,$_g,:,_,;,$5,(,),{,},},Class,_,:,_,{,Constructor,(,_ZUI,,,___,:,_,;,__s_G600,:,Int,),{,},Val,$cmz,:,n,;,Destructor,(,),{,},},Class,g,:,___,{,},<EOF>''',
                101
            )
        )

    def test_3291(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ag{Destructor (){Return ;Break ;}Destructor (){ {}Var _y84U,_,s_Y:Array [Array [Array [Boolean ,0B111101],23],0X22];} }''',
                '''Class,Ag,{,Destructor,(,),{,Return,;,Break,;,},Destructor,(,),{,{,},Var,_y84U,,,_,,,s_Y,:,Array,[,Array,[,Array,[,Boolean,,,0B111101,],,,23,],,,0X22,],;,},},<EOF>''',
                101
            )
        )

    def test_3292(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C:m__{Constructor (_,U:C;R__,_,_91,hI_5_7j:Boolean ){Break ;}Var $af,$_iX:Float ;}Class w{Destructor (){} }''',
                '''Class,C,:,m__,{,Constructor,(,_,,,U,:,C,;,R__,,,_,,,_91,,,hI_5_7j,:,Boolean,),{,Break,;,},Var,$af,,,$_iX,:,Float,;,},Class,w,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3293(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d8:_q{}Class X{Constructor (w_,y,_y_:_;_,_,z,Y:Float ;_:Vs;e,B,_121L__,w_,z1667:Array [Boolean ,0B1]){} }''',
                '''Class,d8,:,_q,{,},Class,X,{,Constructor,(,w_,,,y,,,_y_,:,_,;,_,,,_,,,z,,,Y,:,Float,;,_,:,Vs,;,e,,,B,,,_121L__,,,w_,,,z1667,:,Array,[,Boolean,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3294(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Destructor (){Return ;}$I_j(_:g;_8,_Z_,_:Array [Float ,052];W,e:Boolean ){} }Class ____:p{}''',
                '''Class,_,{,Constructor,(,),{,},Destructor,(,),{,Return,;,},$I_j,(,_,:,g,;,_8,,,_Z_,,,_,:,Array,[,Float,,,052,],;,W,,,e,:,Boolean,),{,},},Class,____,:,p,{,},<EOF>''',
                101
            )
        )

    def test_3295(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jHA{Var _:Array [Array [Array [Array [Boolean ,0X11],0b1],0b1],3];Val ___,$8,c,$SC5:Array [Array [Array [Array [String ,0137],40_29],0137],0b111100];}''',
                '''Class,jHA,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X11,],,,0b1,],,,0b1,],,,3,],;,Val,___,,,$8,,,c,,,$SC5,:,Array,[,Array,[,Array,[,Array,[,String,,,0137,],,,4029,],,,0137,],,,0b111100,],;,},<EOF>''',
                101
            )
        )

    def test_3296(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W0:oo_{_y_b58v_(__,b,OU,A_,a_I,_3_8,_,ZF8,__k:String ;c53Y,_,_,__,D_,P_,_,__:Array [String ,0x55];_f:T4){} }Class _:k{Val B,$2E61_4,$_4_6:BY;Var $R:Boolean ;Val m:Boolean ;}Class C_61:__D{}''',
                '''Class,W0,:,oo_,{,_y_b58v_,(,__,,,b,,,OU,,,A_,,,a_I,,,_3_8,,,_,,,ZF8,,,__k,:,String,;,c53Y,,,_,,,_,,,__,,,D_,,,P_,,,_,,,__,:,Array,[,String,,,0x55,],;,_f,:,T4,),{,},},Class,_,:,k,{,Val,B,,,$2E61_4,,,$_4_6,:,BY,;,Var,$R,:,Boolean,;,Val,m,:,Boolean,;,},Class,C_61,:,__D,{,},<EOF>''',
                101
            )
        )

    def test_3297(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Qa8PB{_Zx_(PH5:Array [String ,0xA3_5];_6:R3){}Constructor (_:Array [Array [Int ,0x49],0b1]){} }Class z:a__{}''',
                '''Class,_,:,Qa8PB,{,_Zx_,(,PH5,:,Array,[,String,,,0xA35,],;,_6,:,R3,),{,},Constructor,(,_,:,Array,[,Array,[,Int,,,0x49,],,,0b1,],),{,},},Class,z,:,a__,{,},<EOF>''',
                101
            )
        )

    def test_3298(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6:_r{Destructor (){}Val _7:A;}Class s{Val A,$7_:D;Constructor (E:Array [Array [Array [Array [Array [Array [String ,55],0b1],55],0B101110],55],07]){} }''',
                '''Class,_6,:,_r,{,Destructor,(,),{,},Val,_7,:,A,;,},Class,s,{,Val,A,,,$7_,:,D,;,Constructor,(,E,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,55,],,,0b1,],,,55,],,,0B101110,],,,55,],,,07,],),{,},},<EOF>''',
                101
            )
        )

    def test_3299(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __8{}Class y7_:U{Constructor (E:Array [Array [Int ,0x33],0x3];i:D;x:V5j_dg;_s_D:Float ;_:_;L,l,R3,J85,_,m:String ){} }Class qWe310{}''',
                '''Class,__8,{,},Class,y7_,:,U,{,Constructor,(,E,:,Array,[,Array,[,Int,,,0x33,],,,0x3,],;,i,:,D,;,x,:,V5j_dg,;,_s_D,:,Float,;,_,:,_,;,L,,,l,,,R3,,,J85,,,_,,,m,:,String,),{,},},Class,qWe310,{,},<EOF>''',
                101
            )
        )

    def test_3300(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:_{}Class J{}Class bY4u__{Destructor (){Var _92:nd;_D_::$2();Continue ;}Var $8,$N,$5_3:_;}Class x{}Class ia2V:mN0{}Class _D_{}''',
                '''Class,_,{,},Class,_,:,_,{,},Class,J,{,},Class,bY4u__,{,Destructor,(,),{,Var,_92,:,nd,;,_D_,::,$2,(,),;,Continue,;,},Var,$8,,,$N,,,$5_3,:,_,;,},Class,x,{,},Class,ia2V,:,mN0,{,},Class,_D_,{,},<EOF>''',
                101
            )
        )

    def test_3301(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W7n{Var r13:__o;Val $_:Array [Array [Array [Int ,69],0B11],0X24];}Class nT_8_0{F(_:z23;C3,__8:r__){}Var $0:Float ;}''',
                '''Class,_W7n,{,Var,r13,:,__o,;,Val,$_,:,Array,[,Array,[,Array,[,Int,,,69,],,,0B11,],,,0X24,],;,},Class,nT_8_0,{,F,(,_,:,z23,;,C3,,,__8,:,r__,),{,},Var,$0,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3302(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_7_:_{$t(W:Float ;n_:_;vO:Array [Array [String ,05],054];_,cp_02U44_:Boolean ;H:Array [String ,0b1111]){}Constructor (_7:Boolean ){} }''',
                '''Class,b_7_,:,_,{,$t,(,W,:,Float,;,n_,:,_,;,vO,:,Array,[,Array,[,String,,,05,],,,054,],;,_,,,cp_02U44_,:,Boolean,;,H,:,Array,[,String,,,0b1111,],),{,},Constructor,(,_7,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3303(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_{Destructor (){}Constructor (_W,I:Array [Array [Array [Array [Array [Array [Boolean ,0b101010],0B1011100],49],0703],0x40],0x2];o_1:Int ;_8_b,F_,_75,_,_6,z:_;U71c_:F){}Constructor (W8:Float ){} }''',
                '''Class,k_,{,Destructor,(,),{,},Constructor,(,_W,,,I,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101010,],,,0B1011100,],,,49,],,,0703,],,,0x40,],,,0x2,],;,o_1,:,Int,;,_8_b,,,F_,,,_75,,,_,,,_6,,,z,:,_,;,U71c_,:,F,),{,},Constructor,(,W8,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3304(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__,r__T4_:Array [Float ,0134];_:Array [Array [Int ,0xF_E],73]){Continue ;}Val _G2d1,_,$ea:Array [Float ,0b11];Val $6kW,_,O,$W:_;}Class Q{}''',
                '''Class,_,{,Constructor,(,__,,,r__T4_,:,Array,[,Float,,,0134,],;,_,:,Array,[,Array,[,Int,,,0xFE,],,,73,],),{,Continue,;,},Val,_G2d1,,,_,,,$ea,:,Array,[,Float,,,0b11,],;,Val,$6kW,,,_,,,O,,,$W,:,_,;,},Class,Q,{,},<EOF>''',
                101
            )
        )

    def test_3305(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (W_,_,____Iw,_:Array [Boolean ,01]){} }Class Z_{_s(){}$_Z_518(__:Float ;_:Array [Float ,0b10001]){Break ;} }''',
                '''Class,_,{,Constructor,(,W_,,,_,,,____Iw,,,_,:,Array,[,Boolean,,,01,],),{,},},Class,Z_,{,_s,(,),{,},$_Z_518,(,__,:,Float,;,_,:,Array,[,Float,,,0b10001,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3306(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:b{}Class _:_{Destructor (){} }Class _{$_I(XK:T;HUD_:String ;_:Array [Float ,0x19_4]){}Val $__,t_,R,$E:Int ;}''',
                '''Class,_,:,b,{,},Class,_,:,_,{,Destructor,(,),{,},},Class,_,{,$_I,(,XK,:,T,;,HUD_,:,String,;,_,:,Array,[,Float,,,0x194,],),{,},Val,$__,,,t_,,,R,,,$E,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3307(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:m8{_(i,_i3:Q_){}Constructor (_:Float ;P4A,_5,_O_:Array [String ,015];v,sW,_6,Z_16,a69,_7:_9_){}Val $h:p;Val $2h:B7;Constructor (){}Var $f:_;}Class U:C{}''',
                '''Class,_,:,m8,{,_,(,i,,,_i3,:,Q_,),{,},Constructor,(,_,:,Float,;,P4A,,,_5,,,_O_,:,Array,[,String,,,015,],;,v,,,sW,,,_6,,,Z_16,,,a69,,,_7,:,_9_,),{,},Val,$h,:,p,;,Val,$2h,:,B7,;,Constructor,(,),{,},Var,$f,:,_,;,},Class,U,:,C,{,},<EOF>''',
                101
            )
        )

    def test_3308(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _k:_{Destructor (){}$_z(_,c:Array [Array [Array [Array [Array [Array [String ,012_7],06],0b1],0B1_0_0_0],0X64],0b1010001]){} }''',
                '''Class,_k,:,_,{,Destructor,(,),{,},$_z,(,_,,,c,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0127,],,,06,],,,0b1,],,,0B1000,],,,0X64,],,,0b1010001,],),{,},},<EOF>''',
                101
            )
        )

    def test_3309(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:e{$__(){Break ;}Var D:Array [Array [Array [Array [Boolean ,065],021],0XF9_A5],06];Var A5Bs_l8L3:_;}Class _{}''',
                '''Class,r,:,e,{,$__,(,),{,Break,;,},Var,D,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,065,],,,021,],,,0XF9A5,],,,06,],;,Var,A5Bs_l8L3,:,_,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3310(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_:Array [Int ,2];_B:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,51],51],010],0X2],0B1_10_0],0x44_4C],0b11],0b1_0_0]){} }Class V:O{Val _,$8t53,_:__;Val $m_7:Array [Array [Float ,5_5],0b11];}''',
                '''Class,_,:,_,{,Constructor,(,_,:,Array,[,Int,,,2,],;,_B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,51,],,,51,],,,010,],,,0X2,],,,0B1100,],,,0x444C,],,,0b11,],,,0b100,],),{,},},Class,V,:,O,{,Val,_,,,$8t53,,,_,:,__,;,Val,$m_7,:,Array,[,Array,[,Float,,,55,],,,0b11,],;,},<EOF>''',
                101
            )
        )

    def test_3311(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z6n{Var _,$_,i_A:Int ;Constructor (){} }Class _3_{k(){} }Class lgo:_{P(G:_vJ;h:String ){Continue ;} }Class J{Var _4:Array [Boolean ,39];}Class k{}''',
                '''Class,Z6n,{,Var,_,,,$_,,,i_A,:,Int,;,Constructor,(,),{,},},Class,_3_,{,k,(,),{,},},Class,lgo,:,_,{,P,(,G,:,_vJ,;,h,:,String,),{,Continue,;,},},Class,J,{,Var,_4,:,Array,[,Boolean,,,39,],;,},Class,k,{,},<EOF>''',
                101
            )
        )

    def test_3312(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5Va:T{Var $___X1h_:Int ;}Class __3:A_{}Class __6u3_6{}Class F24_3{}Class Z_:Q4{j(bM:Float ;PNv:Array [String ,0X6C]){}Destructor (){} }''',
                '''Class,_5Va,:,T,{,Var,$___X1h_,:,Int,;,},Class,__3,:,A_,{,},Class,__6u3_6,{,},Class,F24_3,{,},Class,Z_,:,Q4,{,j,(,bM,:,Float,;,PNv,:,Array,[,String,,,0X6C,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3313(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7Q5Z_7{Var _,$8,M,s,$8F_5:G_W;}Class mJ:_2{Var $1a,$_:Array [Array [Array [Array [Boolean ,0xD_F],0x49],9_4_3],07];}Class I{}''',
                '''Class,_7Q5Z_7,{,Var,_,,,$8,,,M,,,s,,,$8F_5,:,G_W,;,},Class,mJ,:,_2,{,Var,$1a,,,$_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xDF,],,,0x49,],,,943,],,,07,],;,},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_3314(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z{Var $_bHN_09p:Array [Array [Array [Float ,0133_5_6],35],0X5D];L64(_4,r,_,C,_q,_K1,_,_:Boolean ;X9,_:Array [Array [Array [Array [String ,0b100100],0xD],0b100100],35];_,_:Int ){}r_(){} }Class _R:_{}''',
                '''Class,Z,{,Var,$_bHN_09p,:,Array,[,Array,[,Array,[,Float,,,013356,],,,35,],,,0X5D,],;,L64,(,_4,,,r,,,_,,,C,,,_q,,,_K1,,,_,,,_,:,Boolean,;,X9,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b100100,],,,0xD,],,,0b100100,],,,35,],;,_,,,_,:,Int,),{,},r_,(,),{,},},Class,_R,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3315(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L_:_{Destructor (){} }Class _3{}Class DO:t9{Val $9:Array [Array [Float ,89],8_8];$__(P,UZ,S,Y,_77:Array [Array [Array [Array [Array [Array [Int ,0x3F],057],9],057],0XA],057];E,X_f:e____o;_32,T,_3L_E:Array [String ,0x5];m__9,w0,n:_;O:Array [String ,0x3F]){} }''',
                '''Class,L_,:,_,{,Destructor,(,),{,},},Class,_3,{,},Class,DO,:,t9,{,Val,$9,:,Array,[,Array,[,Float,,,89,],,,88,],;,$__,(,P,,,UZ,,,S,,,Y,,,_77,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x3F,],,,057,],,,9,],,,057,],,,0XA,],,,057,],;,E,,,X_f,:,e____o,;,_32,,,T,,,_3L_E,:,Array,[,String,,,0x5,],;,m__9,,,w0,,,n,:,_,;,O,:,Array,[,String,,,0x3F,],),{,},},<EOF>''',
                101
            )
        )

    def test_3316(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{Var _U_N,_VD:Array [Array [Array [Array [Int ,8],100],0X3D],100];}Class N:if1{Var $_,_,J3_O__:Array [Boolean ,036];}''',
                '''Class,_1,{,Var,_U_N,,,_VD,:,Array,[,Array,[,Array,[,Array,[,Int,,,8,],,,100,],,,0X3D,],,,100,],;,},Class,N,:,if1,{,Var,$_,,,_,,,J3_O__,:,Array,[,Boolean,,,036,],;,},<EOF>''',
                101
            )
        )

    def test_3317(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ljYH:w{Destructor (){}Destructor (){}Destructor (){} }Class _20_z4:l{}Class r:_8y5__{}Class K:__9_76{}Class E:_T_52{}''',
                '''Class,ljYH,:,w,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},Class,_20_z4,:,l,{,},Class,r,:,_8y5__,{,},Class,K,:,__9_76,{,},Class,E,:,_T_52,{,},<EOF>''',
                101
            )
        )

    def test_3318(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __1w:_2{_3(_7_,_7r,X:Array [Array [Array [Float ,0252],39],0X4C];_,p,Y,e_:String ){ {Break ;} }Constructor (){} }''',
                '''Class,__1w,:,_2,{,_3,(,_7_,,,_7r,,,X,:,Array,[,Array,[,Array,[,Float,,,0252,],,,39,],,,0X4C,],;,_,,,p,,,Y,,,e_,:,String,),{,{,Break,;,},},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3319(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z1:w{}Class e:R_X8G0Y{Destructor (){} }Class s_Z:xI{Var R:Array [Array [Array [Float ,0b1],0b11000],53];Destructor (){} }''',
                '''Class,z1,:,w,{,},Class,e,:,R_X8G0Y,{,Destructor,(,),{,},},Class,s_Z,:,xI,{,Var,R,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,0b11000,],,,53,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3320(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _FFS:__j70NA6V__i{Val $_,__:Array [Array [String ,0b10110],0x17];}Class _t8T{Var V2_L8mo:Array [Array [String ,0x17],0x1];Val V2,_u,M:Float ;}Class U3H7{}''',
                '''Class,_FFS,:,__j70NA6V__i,{,Val,$_,,,__,:,Array,[,Array,[,String,,,0b10110,],,,0x17,],;,},Class,_t8T,{,Var,V2_L8mo,:,Array,[,Array,[,String,,,0x17,],,,0x1,],;,Val,V2,,,_u,,,M,:,Float,;,},Class,U3H7,{,},<EOF>''',
                101
            )
        )

    def test_3321(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h31V:_1{Destructor (){Return ;} }Class _ME_74{}Class D:_{Destructor (){ {Break ;_6_::$8.L1();Continue ;} }Val $_,I:Boolean ;}''',
                '''Class,h31V,:,_1,{,Destructor,(,),{,Return,;,},},Class,_ME_74,{,},Class,D,:,_,{,Destructor,(,),{,{,Break,;,_6_,::,$8,.,L1,(,),;,Continue,;,},},Val,$_,,,I,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3322(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E5:_b13{Constructor (To7_:__F;v,_,_,_,__6i,g_:Float ;Q:Array [Array [Int ,0b1],60];_9q__C:Array [Boolean ,076]){} }Class s_{}''',
                '''Class,E5,:,_b13,{,Constructor,(,To7_,:,__F,;,v,,,_,,,_,,,_,,,__6i,,,g_,:,Float,;,Q,:,Array,[,Array,[,Int,,,0b1,],,,60,],;,_9q__C,:,Array,[,Boolean,,,076,],),{,},},Class,s_,{,},<EOF>''',
                101
            )
        )

    def test_3323(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vd_{}Class _:e{Constructor (_,_,__p:Array [Array [Int ,5589],0x45];_4F3,j:Array [Array [Float ,024],0b1001111];f_o:_){} }''',
                '''Class,vd_,{,},Class,_,:,e,{,Constructor,(,_,,,_,,,__p,:,Array,[,Array,[,Int,,,5589,],,,0x45,],;,_4F3,,,j,:,Array,[,Array,[,Float,,,024,],,,0b1001111,],;,f_o,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3324(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (){}$R(_:Boolean ;CZAv:i_B;_6,___R,_8:o_){}$6(sn,m:Array [Array [Array [Array [Array [String ,0x3],02],0X5D],0B1000001],0b1];J,_:Int ;dE:__){Return ;} }''',
                '''Class,_,:,_,{,Constructor,(,),{,},$R,(,_,:,Boolean,;,CZAv,:,i_B,;,_6,,,___R,,,_8,:,o_,),{,},$6,(,sn,,,m,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x3,],,,02,],,,0X5D,],,,0B1000001,],,,0b1,],;,J,,,_,:,Int,;,dE,:,__,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3325(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c5{}Class d_v{Destructor (){}Constructor (M:F){}Var _:Array [Boolean ,0B1_01];Destructor (){}j_kT__(h__,w:String ;_h_:s){} }''',
                '''Class,_c5,{,},Class,d_v,{,Destructor,(,),{,},Constructor,(,M,:,F,),{,},Var,_,:,Array,[,Boolean,,,0B101,],;,Destructor,(,),{,},j_kT__,(,h__,,,w,:,String,;,_h_,:,s,),{,},},<EOF>''',
                101
            )
        )

    def test_3326(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_:Boolean ){}Val $0,$RS:em;Constructor (lH:Array [Array [Int ,0124],0b1];__:Array [Array [Int ,0B101011],0x23]){} }Class Z9TEko{}''',
                '''Class,_,{,Constructor,(,_,:,Boolean,),{,},Val,$0,,,$RS,:,em,;,Constructor,(,lH,:,Array,[,Array,[,Int,,,0124,],,,0b1,],;,__,:,Array,[,Array,[,Int,,,0B101011,],,,0x23,],),{,},},Class,Z9TEko,{,},<EOF>''',
                101
            )
        )

    def test_3327(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:k{_M1(_,_,q_Xd_2f5D,l_L,_:Array [Array [Array [Array [Array [Int ,0x33],7_0_8],0B1_0],0X23],0X527_8];F,_5t8:String ;cE_:Int ;_,Rd_SD:__){Var _:Array [Array [Array [Array [Array [Int ,0x2],96],0x8],49_5],0b1];Return ;} }Class _3:f{}''',
                '''Class,_,:,k,{,_M1,(,_,,,_,,,q_Xd_2f5D,,,l_L,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x33,],,,708,],,,0B10,],,,0X23,],,,0X5278,],;,F,,,_5t8,:,String,;,cE_,:,Int,;,_,,,Rd_SD,:,__,),{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x2,],,,96,],,,0x8,],,,495,],,,0b1,],;,Return,;,},},Class,_3,:,f,{,},<EOF>''',
                101
            )
        )

    def test_3328(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{t(mf:Array [Array [Array [Boolean ,0b101],0x1],0B1];VZL,__,_:Array [Array [Array [Float ,04],5],04];_,_:Float ;N:_;_g:Boolean ){} }''',
                '''Class,__,{,t,(,mf,:,Array,[,Array,[,Array,[,Boolean,,,0b101,],,,0x1,],,,0B1,],;,VZL,,,__,,,_,:,Array,[,Array,[,Array,[,Float,,,04,],,,5,],,,04,],;,_,,,_,:,Float,;,N,:,_,;,_g,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3329(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class P:RV{Var _:String ;}Class _:ch4_n0B{Var $__C6:Array [Array [Array [String ,072],0B1000010],0x66];}Class _0e{}''',
                '''Class,_,{,},Class,P,:,RV,{,Var,_,:,String,;,},Class,_,:,ch4_n0B,{,Var,$__C6,:,Array,[,Array,[,Array,[,String,,,072,],,,0B1000010,],,,0x66,],;,},Class,_0e,{,},<EOF>''',
                101
            )
        )

    def test_3330(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{}Class _3{Constructor (_:Array [Int ,39];_:String ;X_:String ;pI:Array [Array [Boolean ,0X5],0B100000];W,s7:Array [Array [Int ,0b1000111],5_3_5]){} }''',
                '''Class,l,{,},Class,_3,{,Constructor,(,_,:,Array,[,Int,,,39,],;,_,:,String,;,X_,:,String,;,pI,:,Array,[,Array,[,Boolean,,,0X5,],,,0B100000,],;,W,,,s7,:,Array,[,Array,[,Int,,,0b1000111,],,,535,],),{,},},<EOF>''',
                101
            )
        )

    def test_3331(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b{}Class _{p_(_4:String ;_N:w){} }Class j8:Q{Var _,I:Array [Array [Int ,027],0XC1];Var $i:Array [Float ,027];_7M(){}Constructor (_:O0;N,a,__435__9dD,r_:Int ){} }''',
                '''Class,b,{,},Class,_,{,p_,(,_4,:,String,;,_N,:,w,),{,},},Class,j8,:,Q,{,Var,_,,,I,:,Array,[,Array,[,Int,,,027,],,,0XC1,],;,Var,$i,:,Array,[,Float,,,027,],;,_7M,(,),{,},Constructor,(,_,:,O0,;,N,,,a,,,__435__9dD,,,r_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3332(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{a9tc_(x54_:Array [Array [String ,0x18],0b1010001];C:c0){}$j_(_24,Ct:F0q_R;E_LbI,x6,N,_n_w:_;P:Int ;bK:l){} }Class _:o{}Class N_6W:J{Val $uu:Array [Int ,0B1_1_10_1];}''',
                '''Class,_,{,a9tc_,(,x54_,:,Array,[,Array,[,String,,,0x18,],,,0b1010001,],;,C,:,c0,),{,},$j_,(,_24,,,Ct,:,F0q_R,;,E_LbI,,,x6,,,N,,,_n_w,:,_,;,P,:,Int,;,bK,:,l,),{,},},Class,_,:,o,{,},Class,N_6W,:,J,{,Val,$uu,:,Array,[,Int,,,0B11101,],;,},<EOF>''',
                101
            )
        )

    def test_3333(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w4{Destructor (){Return ;Return ;}Destructor (){}Destructor (){Var _c5,_3,ut2,N_:SC;} }Class _{}Class O___{}Class _:X0_{}''',
                '''Class,w4,{,Destructor,(,),{,Return,;,Return,;,},Destructor,(,),{,},Destructor,(,),{,Var,_c5,,,_3,,,ut2,,,N_,:,SC,;,},},Class,_,{,},Class,O___,{,},Class,_,:,X0_,{,},<EOF>''',
                101
            )
        )

    def test_3334(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:d{Constructor (jR,S:String ;T:Array [Array [Array [Array [Int ,5],0x4B],0140],04_03_2_4];_3r8,_t8:Int ){} }''',
                '''Class,___,:,d,{,Constructor,(,jR,,,S,:,String,;,T,:,Array,[,Array,[,Array,[,Array,[,Int,,,5,],,,0x4B,],,,0140,],,,040324,],;,_3r8,,,_t8,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3335(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y6f2:h9{Var Y:Array [Array [String ,0142],0X26];Destructor (){}Var X__,$V:Array [Array [Array [Array [Array [Int ,0x3_E_3],0142],0X26],20],0x23];}''',
                '''Class,y6f2,:,h9,{,Var,Y,:,Array,[,Array,[,String,,,0142,],,,0X26,],;,Destructor,(,),{,},Var,X__,,,$V,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x3E3,],,,0142,],,,0X26,],,,20,],,,0x23,],;,},<EOF>''',
                101
            )
        )

    def test_3336(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l9:u{$0(){}_j__(d:Array [Array [String ,0b11],0137];_:J_;j,Q,_:String ){}Destructor (){} }Class X{Var __0,_:String ;}Class ___:_3sDR__{Constructor (){}Val l_:Boolean ;}''',
                '''Class,l9,:,u,{,$0,(,),{,},_j__,(,d,:,Array,[,Array,[,String,,,0b11,],,,0137,],;,_,:,J_,;,j,,,Q,,,_,:,String,),{,},Destructor,(,),{,},},Class,X,{,Var,__0,,,_,:,String,;,},Class,___,:,_3sDR__,{,Constructor,(,),{,},Val,l_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3337(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:__{Val g__:Array [Boolean ,0B1_0];Destructor (){_::$1_();Continue ;n4::$0I();}Var $_E,_:Boolean ;Val _,$1_,x:String ;Val $7:String ;}''',
                '''Class,_,{,},Class,_,:,__,{,Val,g__,:,Array,[,Boolean,,,0B10,],;,Destructor,(,),{,_,::,$1_,(,),;,Continue,;,n4,::,$0I,(,),;,},Var,$_E,,,_,:,Boolean,;,Val,_,,,$1_,,,x,:,String,;,Val,$7,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3338(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:_{}Class _Mf4:_{Val $C__tt8P9_8,$x:Array [Array [Array [Float ,0B1_0_0],33],0x6];}Class a_{Val _,$kW8B,T_G2_k:Int ;}''',
                '''Class,a,:,_,{,},Class,_Mf4,:,_,{,Val,$C__tt8P9_8,,,$x,:,Array,[,Array,[,Array,[,Float,,,0B100,],,,33,],,,0x6,],;,},Class,a_,{,Val,_,,,$kW8B,,,T_G2_k,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3339(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _v{Val $389_,F,$7,$n,zW3M,$8:Float ;}Class o{Val $_YQ,$9:Array [Array [Int ,040],84];Val r:Array [String ,0B10_1];}''',
                '''Class,_v,{,Val,$389_,,,F,,,$7,,,$n,,,zW3M,,,$8,:,Float,;,},Class,o,{,Val,$_YQ,,,$9,:,Array,[,Array,[,Int,,,040,],,,84,],;,Val,r,:,Array,[,String,,,0B101,],;,},<EOF>''',
                101
            )
        )

    def test_3340(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q:_{}Class a:V{Constructor (_G,_2:String ;_,O,_XL,_:_;C_M:Bg;_:Float ;_,x,_:Float ;_4,t_,_4,Ms,_U,y_:Array [Array [Array [Array [Float ,022],0b1001000],022],9];P:Boolean ;_,_,_,VQ,h,C,YL_:Array [Array [Array [Boolean ,0b1],0xE],8]){} }''',
                '''Class,q,:,_,{,},Class,a,:,V,{,Constructor,(,_G,,,_2,:,String,;,_,,,O,,,_XL,,,_,:,_,;,C_M,:,Bg,;,_,:,Float,;,_,,,x,,,_,:,Float,;,_4,,,t_,,,_4,,,Ms,,,_U,,,y_,:,Array,[,Array,[,Array,[,Array,[,Float,,,022,],,,0b1001000,],,,022,],,,9,],;,P,:,Boolean,;,_,,,_,,,_,,,VQ,,,h,,,C,,,YL_,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0xE,],,,8,],),{,},},<EOF>''',
                101
            )
        )

    def test_3341(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}$I(){} }Class R:__{Destructor (){Break ;}$_(Z:Array [Array [Array [String ,0132],0b1],76];_:j;__:__;_:Int ){} }''',
                '''Class,_,{,Destructor,(,),{,},$I,(,),{,},},Class,R,:,__,{,Destructor,(,),{,Break,;,},$_,(,Z,:,Array,[,Array,[,Array,[,String,,,0132,],,,0b1,],,,76,],;,_,:,j,;,__,:,__,;,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3342(self):
        self.assertTrue(
            TestLexer.test(
                '''Class FiJ{}Class _:_{Var $_Vw,H,_:String ;$ih(_4_:Int ;x:_9;_,X__:Array [Float ,78];b_,J,_,_7,____,_:Array [Float ,0X5];_43,e6w61_:Array [Boolean ,0XB]){} }Class __:q{}''',
                '''Class,FiJ,{,},Class,_,:,_,{,Var,$_Vw,,,H,,,_,:,String,;,$ih,(,_4_,:,Int,;,x,:,_9,;,_,,,X__,:,Array,[,Float,,,78,],;,b_,,,J,,,_,,,_7,,,____,,,_,:,Array,[,Float,,,0X5,],;,_43,,,e6w61_,:,Array,[,Boolean,,,0XB,],),{,},},Class,__,:,q,{,},<EOF>''',
                101
            )
        )

    def test_3343(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___54{Constructor (_3b__,j:Array [Array [Array [Array [Array [String ,01],0B1_1_1_1_1_1],0B100000],7],27];_s,H,Q,A,k_,r_6GA,D,_:Array [Boolean ,51_3_3]){} }''',
                '''Class,_,:,___54,{,Constructor,(,_3b__,,,j,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,0B111111,],,,0B100000,],,,7,],,,27,],;,_s,,,H,,,Q,,,A,,,k_,,,r_6GA,,,D,,,_,:,Array,[,Boolean,,,5133,],),{,},},<EOF>''',
                101
            )
        )

    def test_3344(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Destructor (){} }Class tH0:h{Var E:Int ;$8(_5:Int ;h,_,k7:FD_;a__S,MM26fs,_:Int ;U,_z,_2,C,_s,_1,_,_3_6:Array [Array [Int ,0135],03]){} }''',
                '''Class,_,{,Destructor,(,),{,},Destructor,(,),{,},},Class,tH0,:,h,{,Var,E,:,Int,;,$8,(,_5,:,Int,;,h,,,_,,,k7,:,FD_,;,a__S,,,MM26fs,,,_,:,Int,;,U,,,_z,,,_2,,,C,,,_s,,,_1,,,_,,,_3_6,:,Array,[,Array,[,Int,,,0135,],,,03,],),{,},},<EOF>''',
                101
            )
        )

    def test_3345(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{}Class __:h{Val $0,$T:H;Val $__,$5,qH7:Int ;Constructor (){Break ;} }Class S{}Class _D3{Destructor (){Break ;x_::$E();}Val _:String ;}''',
                '''Class,m,{,},Class,__,:,h,{,Val,$0,,,$T,:,H,;,Val,$__,,,$5,,,qH7,:,Int,;,Constructor,(,),{,Break,;,},},Class,S,{,},Class,_D3,{,Destructor,(,),{,Break,;,x_,::,$E,(,),;,},Val,_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3346(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_1F3zY{Var $2w,$1,_,__:_;}Class _e_{Var $F7,p,$4_0_A:Array [Array [Boolean ,0b100111],13];Var __U:Array [Array [Float ,0B1_1_11],84_7];Destructor (){} }''',
                '''Class,_,:,_1F3zY,{,Var,$2w,,,$1,,,_,,,__,:,_,;,},Class,_e_,{,Var,$F7,,,p,,,$4_0_A,:,Array,[,Array,[,Boolean,,,0b100111,],,,13,],;,Var,__U,:,Array,[,Array,[,Float,,,0B1111,],,,847,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3347(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{__(z:Array [Array [Array [Array [Array [Array [String ,44],0x3A],3],0b110],6],0xC_82];r,R,W,uT7_:Array [Float ,0XF]){}Constructor (){}Var $9H,$S,$N,frXm:Array [String ,0X13];}''',
                '''Class,_,{,__,(,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,44,],,,0x3A,],,,3,],,,0b110,],,,6,],,,0xC82,],;,r,,,R,,,W,,,uT7_,:,Array,[,Float,,,0XF,],),{,},Constructor,(,),{,},Var,$9H,,,$S,,,$N,,,frXm,:,Array,[,String,,,0X13,],;,},<EOF>''',
                101
            )
        )

    def test_3348(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d8{Destructor (){}Constructor (){}Constructor (K_,s3,E:Array [Array [String ,3],0x5];_7:Boolean ){} }Class _1m_a{}''',
                '''Class,d8,{,Destructor,(,),{,},Constructor,(,),{,},Constructor,(,K_,,,s3,,,E,:,Array,[,Array,[,String,,,3,],,,0x5,],;,_7,:,Boolean,),{,},},Class,_1m_a,{,},<EOF>''',
                101
            )
        )

    def test_3349(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:s{km(_,_:Array [Array [Float ,03],14];_443:_;D5,L__,_1,_:Array [Int ,0B1]){}Constructor (_,___5:_){} }Class s6{Val $y,__,Y:Array [Boolean ,0x6];}Class e_X:Dg_{}Class _x3{}Class _l:w0Sx3{}Class Q38:nPB{}Class _H_T:_J{}Class F{}''',
                '''Class,_,:,s,{,km,(,_,,,_,:,Array,[,Array,[,Float,,,03,],,,14,],;,_443,:,_,;,D5,,,L__,,,_1,,,_,:,Array,[,Int,,,0B1,],),{,},Constructor,(,_,,,___5,:,_,),{,},},Class,s6,{,Val,$y,,,__,,,Y,:,Array,[,Boolean,,,0x6,],;,},Class,e_X,:,Dg_,{,},Class,_x3,{,},Class,_l,:,w0Sx3,{,},Class,Q38,:,nPB,{,},Class,_H_T,:,_J,{,},Class,F,{,},<EOF>''',
                101
            )
        )

    def test_3350(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z:vlm45{$F(c_W__,lo5:Boolean ){}Val __9,oO_U,_s:Array [Array [Array [Float ,3_615_3],033],0b1];Destructor (){Break ;} }''',
                '''Class,Z,:,vlm45,{,$F,(,c_W__,,,lo5,:,Boolean,),{,},Val,__9,,,oO_U,,,_s,:,Array,[,Array,[,Array,[,Float,,,36153,],,,033,],,,0b1,],;,Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3351(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_4_:__{Var $9:_;Var v:Array [Array [Int ,9],67];}Class __{Val $43,$2,$__:Array [Array [String ,0b1],0b1_0];}Class _:_{}''',
                '''Class,_1_4_,:,__,{,Var,$9,:,_,;,Var,v,:,Array,[,Array,[,Int,,,9,],,,67,],;,},Class,__,{,Val,$43,,,$2,,,$__,:,Array,[,Array,[,String,,,0b1,],,,0b10,],;,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3352(self):
        self.assertTrue(
            TestLexer.test(
                '''Class sT{Constructor (__j:Array [Int ,0xB_F_B5];_,Z,_2:Boolean ;Z:Int ;K:Int ;l_z__5AS_4:Boolean ;_:String ;U,P,_j:Boolean ){} }''',
                '''Class,sT,{,Constructor,(,__j,:,Array,[,Int,,,0xBFB5,],;,_,,,Z,,,_2,:,Boolean,;,Z,:,Int,;,K,:,Int,;,l_z__5AS_4,:,Boolean,;,_,:,String,;,U,,,P,,,_j,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3353(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $G2__:Array [Array [Array [Float ,0x62],01],0B1_1_1];}Class v:rBwf{Var _,_,$_3,$6,$g,$8:_;Val $q7:Boolean ;}''',
                '''Class,_,{,Val,$G2__,:,Array,[,Array,[,Array,[,Float,,,0x62,],,,01,],,,0B111,],;,},Class,v,:,rBwf,{,Var,_,,,_,,,$_3,,,$6,,,$g,,,$8,:,_,;,Val,$q7,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3354(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G{Destructor (){ {} }}Class i5U_Lr:V{}Class s{Constructor (_,_9M__H6,_my5l,_7:Array [Array [String ,0XE],0b111000]){} }Class t458{}''',
                '''Class,G,{,Destructor,(,),{,{,},},},Class,i5U_Lr,:,V,{,},Class,s,{,Constructor,(,_,,,_9M__H6,,,_my5l,,,_7,:,Array,[,Array,[,String,,,0XE,],,,0b111000,],),{,},},Class,t458,{,},<EOF>''',
                101
            )
        )

    def test_3355(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:F{}Class _A:_W{Var _:Boolean ;Val ____m:R;}Class z9d3:_{$6_9ms9(_5_,Y:Array [Float ,0b1010101]){}Destructor (){}Var $7___3,_785:D;}''',
                '''Class,_,:,F,{,},Class,_A,:,_W,{,Var,_,:,Boolean,;,Val,____m,:,R,;,},Class,z9d3,:,_,{,$6_9ms9,(,_5_,,,Y,:,Array,[,Float,,,0b1010101,],),{,},Destructor,(,),{,},Var,$7___3,,,_785,:,D,;,},<EOF>''',
                101
            )
        )

    def test_3356(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class __{}Class Z:Xr{}Class s:__s{Destructor (){}Constructor (_,o58xV:Array [String ,73]){}Constructor (){Continue ;} }''',
                '''Class,_,:,_,{,},Class,__,{,},Class,Z,:,Xr,{,},Class,s,:,__s,{,Destructor,(,),{,},Constructor,(,_,,,o58xV,:,Array,[,String,,,73,],),{,},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3357(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:K{$m14(){}Var _:__W;Var $0:_;Var $90,$N_K,$_4t,$0,__:Array [Array [Array [Boolean ,10],0x13],014];Destructor (){} }''',
                '''Class,_,:,K,{,$m14,(,),{,},Var,_,:,__W,;,Var,$0,:,_,;,Var,$90,,,$N_K,,,$_4t,,,$0,,,__,:,Array,[,Array,[,Array,[,Boolean,,,10,],,,0x13,],,,014,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3358(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_49_L{$5(f__:Array [Array [Array [String ,0B1_0],053_676352_3],0X5B];L:Array [Array [Array [String ,0B1],0b1011001],0X5B];_p,O2q3:Array [Array [Int ,0102],02]){M::$n();} }''',
                '''Class,_,:,_49_L,{,$5,(,f__,:,Array,[,Array,[,Array,[,String,,,0B10,],,,0536763523,],,,0X5B,],;,L,:,Array,[,Array,[,Array,[,String,,,0B1,],,,0b1011001,],,,0X5B,],;,_p,,,O2q3,:,Array,[,Array,[,Int,,,0102,],,,02,],),{,M,::,$n,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3359(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:R{Val _,$B:String ;Destructor (){} }Class _{Var _,t,__6d_R:Array [Array [Array [Array [Int ,06],8],0B1001101],0B1];}''',
                '''Class,_,:,R,{,Val,_,,,$B,:,String,;,Destructor,(,),{,},},Class,_,{,Var,_,,,t,,,__6d_R,:,Array,[,Array,[,Array,[,Array,[,Int,,,06,],,,8,],,,0B1001101,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_3360(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p6X{Constructor (_B:Array [Array [Array [Array [Int ,3937],0B1011010],054],0XD_3_D];Ur13_,W:Array [Float ,0B1]){} }''',
                '''Class,p6X,{,Constructor,(,_B,:,Array,[,Array,[,Array,[,Array,[,Int,,,3937,],,,0B1011010,],,,054,],,,0XD3D,],;,Ur13_,,,W,:,Array,[,Float,,,0B1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3361(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _Z{Constructor (_3,___6y:Array [Array [Array [Array [Float ,0b1000011],0B100001],0140],0B1_1];_,yv:_){ {Continue ;Break ;} }}''',
                '''Class,_,:,_,{,},Class,_Z,{,Constructor,(,_3,,,___6y,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1000011,],,,0B100001,],,,0140,],,,0B11,],;,_,,,yv,:,_,),{,{,Continue,;,Break,;,},},},<EOF>''',
                101
            )
        )

    def test_3362(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7bZ:v___{_(){} }Class _{Var _2cR,R:_5_9_C;$54_(){Val k_9W:Array [Array [Boolean ,90],0B1];}Val $_2:Float ;}''',
                '''Class,_7bZ,:,v___,{,_,(,),{,},},Class,_,{,Var,_2cR,,,R,:,_5_9_C,;,$54_,(,),{,Val,k_9W,:,Array,[,Array,[,Boolean,,,90,],,,0B1,],;,},Val,$_2,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3363(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val E33_E,k0,W5_:Array [Array [String ,0B1],0X51];y_q(M9:WC){Var NP_3:a;}Destructor (){Val _U,p,Y:Array [String ,0B1];Break ;Continue ;}Val Q6:Boolean ;Var $d,_4:String ;}''',
                '''Class,_,:,_,{,Val,E33_E,,,k0,,,W5_,:,Array,[,Array,[,String,,,0B1,],,,0X51,],;,y_q,(,M9,:,WC,),{,Var,NP_3,:,a,;,},Destructor,(,),{,Val,_U,,,p,,,Y,:,Array,[,String,,,0B1,],;,Break,;,Continue,;,},Val,Q6,:,Boolean,;,Var,$d,,,_4,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3364(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){Continue ;Self ._()._.b();}Constructor (_546V,Jt1_,IT_2_1,_z5:Boolean ;Q:Float ){}Val J,$4:Float ;}''',
                '''Class,_,{,Destructor,(,),{,Continue,;,Self,.,_,(,),.,_,.,b,(,),;,},Constructor,(,_546V,,,Jt1_,,,IT_2_1,,,_z5,:,Boolean,;,Q,:,Float,),{,},Val,J,,,$4,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3365(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _F:_2{$_(_,gr:Array [Array [Array [Array [String ,022],03_34_22],01],01];s,x8q3,_M,_:Array [Boolean ,0B1100];_:Array [Float ,0B1];y,__1,Lj,_:zL_M;_B:HI;_:_L_b;____Z__,f,m08,_9,L6,F,Zh5,G,_4,_X:String ;L,_:Array [String ,94]){} }''',
                '''Class,_F,:,_2,{,$_,(,_,,,gr,:,Array,[,Array,[,Array,[,Array,[,String,,,022,],,,033422,],,,01,],,,01,],;,s,,,x8q3,,,_M,,,_,:,Array,[,Boolean,,,0B1100,],;,_,:,Array,[,Float,,,0B1,],;,y,,,__1,,,Lj,,,_,:,zL_M,;,_B,:,HI,;,_,:,_L_b,;,____Z__,,,f,,,m08,,,_9,,,L6,,,F,,,Zh5,,,G,,,_4,,,_X,:,String,;,L,,,_,:,Array,[,String,,,94,],),{,},},<EOF>''',
                101
            )
        )

    def test_3366(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{}Class E{Val $p,_,$d:Float ;}Class qq:M{}Class q:s{Destructor (){Break ;}Var K__:Array [Array [Boolean ,03],0b1];Var _,Wt:_;}Class n{Val _1,$8_,_:Int ;Destructor (){Break ;}Val R:Array [Array [Float ,02],0X4B];}''',
                '''Class,_9,{,},Class,E,{,Val,$p,,,_,,,$d,:,Float,;,},Class,qq,:,M,{,},Class,q,:,s,{,Destructor,(,),{,Break,;,},Var,K__,:,Array,[,Array,[,Boolean,,,03,],,,0b1,],;,Var,_,,,Wt,:,_,;,},Class,n,{,Val,_1,,,$8_,,,_,:,Int,;,Destructor,(,),{,Break,;,},Val,R,:,Array,[,Array,[,Float,,,02,],,,0X4B,],;,},<EOF>''',
                101
            )
        )

    def test_3367(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{}Class _{Destructor (){} }Class _:_oa{Constructor (H:Array [Array [Array [Array [Int ,2],0b11111],84],0B1];X_,r,_,M:_L){} }Class Q:_{}''',
                '''Class,T,{,},Class,_,{,Destructor,(,),{,},},Class,_,:,_oa,{,Constructor,(,H,:,Array,[,Array,[,Array,[,Array,[,Int,,,2,],,,0b11111,],,,84,],,,0B1,],;,X_,,,r,,,_,,,M,:,_L,),{,},},Class,Q,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3368(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:G{Constructor (dPP:j;_2w3,_,P,_1,o:Array [Array [String ,020],0X9];E6,W__9_,_sKs_,y3:Array [Array [Array [String ,045],07],06_406275_1_0];_:T6YN){}Var h:Array [Array [Array [Boolean ,92],0122],0B11];}''',
                '''Class,_,:,G,{,Constructor,(,dPP,:,j,;,_2w3,,,_,,,P,,,_1,,,o,:,Array,[,Array,[,String,,,020,],,,0X9,],;,E6,,,W__9_,,,_sKs_,,,y3,:,Array,[,Array,[,Array,[,String,,,045,],,,07,],,,0640627510,],;,_,:,T6YN,),{,},Var,h,:,Array,[,Array,[,Array,[,Boolean,,,92,],,,0122,],,,0B11,],;,},<EOF>''',
                101
            )
        )

    def test_3369(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _C__:_8e7{Var $CF:D1;$8(o_,_:String ){}Val _w_:l8;}Class E:o{Val $2,_H0_:Array [Int ,050];Destructor (){} }Class _Pn5TI:x{}''',
                '''Class,_C__,:,_8e7,{,Var,$CF,:,D1,;,$8,(,o_,,,_,:,String,),{,},Val,_w_,:,l8,;,},Class,E,:,o,{,Val,$2,,,_H0_,:,Array,[,Int,,,050,],;,Destructor,(,),{,},},Class,_Pn5TI,:,x,{,},<EOF>''',
                101
            )
        )

    def test_3370(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y4:_{Val _5,r__1:_;Var __,_3sX,X5,$_,$5_7,$88_:Array [Array [Float ,0xCE],0431];Var $nh:H;}Class O_:_{}''',
                '''Class,y4,:,_,{,Val,_5,,,r__1,:,_,;,Var,__,,,_3sX,,,X5,,,$_,,,$5_7,,,$88_,:,Array,[,Array,[,Float,,,0xCE,],,,0431,],;,Var,$nh,:,H,;,},Class,O_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3371(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:j{$X(){}Constructor (u,_,_:_;_0,Ta__:Array [Int ,0x13];J:String ;x:N){}Destructor (){Continue ;}Var c,_:Int ;}Class y:_U8_a{}''',
                '''Class,r,:,j,{,$X,(,),{,},Constructor,(,u,,,_,,,_,:,_,;,_0,,,Ta__,:,Array,[,Int,,,0x13,],;,J,:,String,;,x,:,N,),{,},Destructor,(,),{,Continue,;,},Var,c,,,_,:,Int,;,},Class,y,:,_U8_a,{,},<EOF>''',
                101
            )
        )

    def test_3372(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _h:E{Var $9,$_w0u,_,$_:Array [Array [Array [String ,0X4_FB],0X7],01];}Class _:_{}Class _:_{N3(){} }Class w_48:_{N(){}Constructor (){} }''',
                '''Class,_h,:,E,{,Var,$9,,,$_w0u,,,_,,,$_,:,Array,[,Array,[,Array,[,String,,,0X4FB,],,,0X7,],,,01,],;,},Class,_,:,_,{,},Class,_,:,_,{,N3,(,),{,},},Class,w_48,:,_,{,N,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3373(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{Var $m:Array [Array [Int ,0B1],67];Constructor (_:Int ){}Val _,_Pa1_:Array [Array [Array [Boolean ,0XE],0XF],0x3F];}''',
                '''Class,e,{,Var,$m,:,Array,[,Array,[,Int,,,0B1,],,,67,],;,Constructor,(,_,:,Int,),{,},Val,_,,,_Pa1_,:,Array,[,Array,[,Array,[,Boolean,,,0XE,],,,0XF,],,,0x3F,],;,},<EOF>''',
                101
            )
        )

    def test_3374(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (k,aA7_Q:Int ;B,_V:Float ;GWF8:Float ;bwi_:Float ;_,_,_:ml;__,_,_:Array [Array [Boolean ,072],0X21];Y,Z,_:Array [Array [Array [Array [String ,0b1100100],0747],0B1_0_0_11],072];U4:String ){}Destructor (){}$z_(_:P__;_g:H;__:Array [Float ,9]){}Val $s2:z;}''',
                '''Class,_,{,Constructor,(,k,,,aA7_Q,:,Int,;,B,,,_V,:,Float,;,GWF8,:,Float,;,bwi_,:,Float,;,_,,,_,,,_,:,ml,;,__,,,_,,,_,:,Array,[,Array,[,Boolean,,,072,],,,0X21,],;,Y,,,Z,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1100100,],,,0747,],,,0B10011,],,,072,],;,U4,:,String,),{,},Destructor,(,),{,},$z_,(,_,:,P__,;,_g,:,H,;,__,:,Array,[,Float,,,9,],),{,},Val,$s2,:,z,;,},<EOF>''',
                101
            )
        )

    def test_3375(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:__d{Var o_4:_;}Class A_4x:_{Constructor (_:Array [Array [Float ,2],0b111];_:s;h0_j:Int ;_,_,_,t,p_8:Array [Int ,0131];_:_Z){} }Class u:_3{}''',
                '''Class,W,:,__d,{,Var,o_4,:,_,;,},Class,A_4x,:,_,{,Constructor,(,_,:,Array,[,Array,[,Float,,,2,],,,0b111,],;,_,:,s,;,h0_j,:,Int,;,_,,,_,,,_,,,t,,,p_8,:,Array,[,Int,,,0131,],;,_,:,_Z,),{,},},Class,u,:,_3,{,},<EOF>''',
                101
            )
        )

    def test_3376(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N{}Class jU:NKU{}Class _:_{Var _aOog:Array [Array [Float ,2_3],58];Var $7g,$_8:String ;}Class __{Var _92Q,$4:Boolean ;Var _:Array [Float ,0X61];}''',
                '''Class,N,{,},Class,jU,:,NKU,{,},Class,_,:,_,{,Var,_aOog,:,Array,[,Array,[,Float,,,23,],,,58,],;,Var,$7g,,,$_8,:,String,;,},Class,__,{,Var,_92Q,,,$4,:,Boolean,;,Var,_,:,Array,[,Float,,,0X61,],;,},<EOF>''',
                101
            )
        )

    def test_3377(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _9:h275{Var $UN,$_2__:Array [Boolean ,0X1D];Destructor (){ {} }Val _2,$WW,_r_:Array [Array [Float ,69],0141];}''',
                '''Class,_,:,_,{,},Class,_9,:,h275,{,Var,$UN,,,$_2__,:,Array,[,Boolean,,,0X1D,],;,Destructor,(,),{,{,},},Val,_2,,,$WW,,,_r_,:,Array,[,Array,[,Float,,,69,],,,0141,],;,},<EOF>''',
                101
            )
        )

    def test_3378(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y_:_{}Class C9:_3C{$r(T0:Float ;_5_,_9,d,_:y){}Constructor (_,P__3___,__,_8wr:Int ){Val _:Array [Array [String ,07],0XB3];} }''',
                '''Class,Y_,:,_,{,},Class,C9,:,_3C,{,$r,(,T0,:,Float,;,_5_,,,_9,,,d,,,_,:,y,),{,},Constructor,(,_,,,P__3___,,,__,,,_8wr,:,Int,),{,Val,_,:,Array,[,Array,[,String,,,07,],,,0XB3,],;,},},<EOF>''',
                101
            )
        )

    def test_3379(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kn:s{Constructor (_953_6__:String ;_:__;U5,__2,X35q,_,_:Array [Array [Array [Array [Array [Array [Boolean ,0143],4],0XE],0x9],0143],0B11];_,_,q,_,___:Float ){} }''',
                '''Class,kn,:,s,{,Constructor,(,_953_6__,:,String,;,_,:,__,;,U5,,,__2,,,X35q,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0143,],,,4,],,,0XE,],,,0x9,],,,0143,],,,0B11,],;,_,,,_,,,q,,,_,,,___,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3380(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_5_{}Class s_:f9o{Constructor (_:Boolean ;_,P_:Float ;_8_:Array [Array [Array [String ,01_1_7],0X8],0b100101]){}Val r8__,_I56:Array [Array [Array [String ,0X47],0b1_0],0b1];}''',
                '''Class,_,:,_5_,{,},Class,s_,:,f9o,{,Constructor,(,_,:,Boolean,;,_,,,P_,:,Float,;,_8_,:,Array,[,Array,[,Array,[,String,,,0117,],,,0X8,],,,0b100101,],),{,},Val,r8__,,,_I56,:,Array,[,Array,[,Array,[,String,,,0X47,],,,0b10,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_3381(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:V{}Class _{}Class d:l1{}Class _{}Class L:a_{$k7N(L:Array [String ,05]){Continue ;Break ;}Constructor (){} }Class _:eO__{_(){} }Class _r26_{Destructor (){} }Class _{Var _,N18fO:Array [Array [Array [Float ,72],72],056];Destructor (){} }Class I{}''',
                '''Class,__,:,V,{,},Class,_,{,},Class,d,:,l1,{,},Class,_,{,},Class,L,:,a_,{,$k7N,(,L,:,Array,[,String,,,05,],),{,Continue,;,Break,;,},Constructor,(,),{,},},Class,_,:,eO__,{,_,(,),{,},},Class,_r26_,{,Destructor,(,),{,},},Class,_,{,Var,_,,,N18fO,:,Array,[,Array,[,Array,[,Float,,,72,],,,72,],,,056,],;,Destructor,(,),{,},},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_3382(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W{Constructor (_:Array [Array [Array [Int ,0b10],29],0x41]){} }Class _{Var $_:Array [Array [Array [String ,0b1010000],02],0104];$S6s(qF:Array [Array [Float ,0X5],0x6C_1];_1:String ){Break ;} }''',
                '''Class,W,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,0b10,],,,29,],,,0x41,],),{,},},Class,_,{,Var,$_,:,Array,[,Array,[,Array,[,String,,,0b1010000,],,,02,],,,0104,],;,$S6s,(,qF,:,Array,[,Array,[,Float,,,0X5,],,,0x6C1,],;,_1,:,String,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3383(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{Constructor (){}Var _8:_9;Constructor (J:Array [Boolean ,06]){} }Class u{Constructor (){} }Class d__4:_{}Class P{Constructor (fk,s_,_:Array [String ,0XC];Y:Y;Q:Array [Array [Array [Float ,2],0x31],0b1];U_8:Int ;Q:z_l7){} }''',
                '''Class,K,{,Constructor,(,),{,},Var,_8,:,_9,;,Constructor,(,J,:,Array,[,Boolean,,,06,],),{,},},Class,u,{,Constructor,(,),{,},},Class,d__4,:,_,{,},Class,P,{,Constructor,(,fk,,,s_,,,_,:,Array,[,String,,,0XC,],;,Y,:,Y,;,Q,:,Array,[,Array,[,Array,[,Float,,,2,],,,0x31,],,,0b1,],;,U_8,:,Int,;,Q,:,z_l7,),{,},},<EOF>''',
                101
            )
        )

    def test_3384(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __m__{Val $0:Boolean ;Destructor (){D0::$5();}Var _Jq,x:Array [Float ,0XC];}Class _8:_w{Destructor (){} }''',
                '''Class,__m__,{,Val,$0,:,Boolean,;,Destructor,(,),{,D0,::,$5,(,),;,},Var,_Jq,,,x,:,Array,[,Float,,,0XC,],;,},Class,_8,:,_w,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3385(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{Val _1,_,K,_28M,$_v_:Int ;Val _,___11Z,_,$R,$74,$8v_,$_,_b:Array [Array [Float ,1],0x8];}Class _13t{}Class e__W4:_{}''',
                '''Class,l,{,Val,_1,,,_,,,K,,,_28M,,,$_v_,:,Int,;,Val,_,,,___11Z,,,_,,,$R,,,$74,,,$8v_,,,$_,,,_b,:,Array,[,Array,[,Float,,,1,],,,0x8,],;,},Class,_13t,{,},Class,e__W4,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3386(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:v{Destructor (){e_H::$_i_6();} }Class _:Z_{}Class __Vr{Val _ol,q_8,O:Int ;}Class Q:e{Var $h,$C6:Array [Array [Array [Float ,0B10010],75],0X3B];}''',
                '''Class,_,:,v,{,Destructor,(,),{,e_H,::,$_i_6,(,),;,},},Class,_,:,Z_,{,},Class,__Vr,{,Val,_ol,,,q_8,,,O,:,Int,;,},Class,Q,:,e,{,Var,$h,,,$C6,:,Array,[,Array,[,Array,[,Float,,,0B10010,],,,75,],,,0X3B,],;,},<EOF>''',
                101
            )
        )

    def test_3387(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class b{Constructor (){} }Class _:_{Constructor (){}CB_(_:Float ;_301,y_x,_,O__5,d_:Array [Float ,01_4];_,p,y:Float ){} }Class _{}''',
                '''Class,_,{,},Class,b,{,Constructor,(,),{,},},Class,_,:,_,{,Constructor,(,),{,},CB_,(,_,:,Float,;,_301,,,y_x,,,_,,,O__5,,,d_,:,Array,[,Float,,,014,],;,_,,,p,,,y,:,Float,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3388(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7__:f{}Class _r8:p{Var Zd:Array [Array [Int ,032],057];o(_,_Z___:Q;C4:Dntx){Continue ;{} }}Class Ay____{}''',
                '''Class,_7__,:,f,{,},Class,_r8,:,p,{,Var,Zd,:,Array,[,Array,[,Int,,,032,],,,057,],;,o,(,_,,,_Z___,:,Q,;,C4,:,Dntx,),{,Continue,;,{,},},},Class,Ay____,{,},<EOF>''',
                101
            )
        )

    def test_3389(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:F{}Class _:_{Constructor (X,_Pt:Array [Array [Array [Boolean ,0B110101],6_9],0B1_00];Y,_,K__,f23:_9Y_;_6:Float ){}Var $_:Int ;}''',
                '''Class,n,:,F,{,},Class,_,:,_,{,Constructor,(,X,,,_Pt,:,Array,[,Array,[,Array,[,Boolean,,,0B110101,],,,69,],,,0B100,],;,Y,,,_,,,K__,,,f23,:,_9Y_,;,_6,:,Float,),{,},Var,$_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3390(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{Constructor (_,EY,_83_5,_9o65,_:Boolean ;T_7O,s__,_1_,KS:Float ;P:Qc2_;J:Array [Array [Boolean ,58],58]){Var Hg:Array [Boolean ,0B100010];}Destructor (){Return ;} }''',
                '''Class,r,{,Constructor,(,_,,,EY,,,_83_5,,,_9o65,,,_,:,Boolean,;,T_7O,,,s__,,,_1_,,,KS,:,Float,;,P,:,Qc2_,;,J,:,Array,[,Array,[,Boolean,,,58,],,,58,],),{,Var,Hg,:,Array,[,Boolean,,,0B100010,],;,},Destructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3391(self):
        self.assertTrue(
            TestLexer.test(
                '''Class g:_{}Class _2_3{Constructor (_:_6;_s:_9;g_2,CR__WS:Boolean ;_d,__,_5J,_,M,gz:Array [Int ,0b1];k:Array [Array [Boolean ,9_2],0x18];_:Array [Array [Float ,04],03_2];R,__,_:String ){} }Class P:_{}''',
                '''Class,g,:,_,{,},Class,_2_3,{,Constructor,(,_,:,_6,;,_s,:,_9,;,g_2,,,CR__WS,:,Boolean,;,_d,,,__,,,_5J,,,_,,,M,,,gz,:,Array,[,Int,,,0b1,],;,k,:,Array,[,Array,[,Boolean,,,92,],,,0x18,],;,_,:,Array,[,Array,[,Float,,,04,],,,032,],;,R,,,__,,,_,:,String,),{,},},Class,P,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3392(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z{Constructor (z_:x){} }Class _vP{}Class y:O6{}Class Sk{}Class O{}Class __:_xDB8{Val $gF,_,$1,$__:am;}Class J8_{}''',
                '''Class,Z,{,Constructor,(,z_,:,x,),{,},},Class,_vP,{,},Class,y,:,O6,{,},Class,Sk,{,},Class,O,{,},Class,__,:,_xDB8,{,Val,$gF,,,_,,,$1,,,$__,:,am,;,},Class,J8_,{,},<EOF>''',
                101
            )
        )

    def test_3393(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _du:_1{$____(_:Int ;N6_19,_0,_:String ){}Constructor (_:t;v,_c:Array [Array [Array [Array [Array [Array [Array [Boolean ,01_1_3_5_4],0XF_7_D],57],0b1],0143],0b1100010],0x2_C_9_2B];_,S8:String ){IH__1::$_9();} }''',
                '''Class,_du,:,_1,{,$____,(,_,:,Int,;,N6_19,,,_0,,,_,:,String,),{,},Constructor,(,_,:,t,;,v,,,_c,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,011354,],,,0XF7D,],,,57,],,,0b1,],,,0143,],,,0b1100010,],,,0x2C92B,],;,_,,,S8,:,String,),{,IH__1,::,$_9,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3394(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:tX{}Class _{}Class P_:y_{}Class mi_:_{Destructor (){}Constructor (_:Array [Float ,0b1_1];__,AgAi:Array [Array [Array [Boolean ,0b1],0x1B],3];_H,___:_){Return ;} }''',
                '''Class,_1,:,tX,{,},Class,_,{,},Class,P_,:,y_,{,},Class,mi_,:,_,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Float,,,0b11,],;,__,,,AgAi,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0x1B,],,,3,],;,_H,,,___,:,_,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3395(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ol__1:v{Var _8,$_q_:Array [Array [Array [Array [Boolean ,0b100011],0x3A],06],0b100011];Constructor (_,__4s_2f_,_33c:Boolean ;S_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,06],040_1],033],8],0x3A],4],0B100001],0b1_0_1]){} }''',
                '''Class,Ol__1,:,v,{,Var,_8,,,$_q_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b100011,],,,0x3A,],,,06,],,,0b100011,],;,Constructor,(,_,,,__4s_2f_,,,_33c,:,Boolean,;,S_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,06,],,,0401,],,,033,],,,8,],,,0x3A,],,,4,],,,0B100001,],,,0b101,],),{,},},<EOF>''',
                101
            )
        )

    def test_3396(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $p:Array [Array [Array [Array [Array [Array [Int ,032],0xB],2],55],0x1],0x4_6];}Class _{}Class _{}Class _2FH:_4{}Class _B:__1{}''',
                '''Class,_,{,Var,$p,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,032,],,,0xB,],,,2,],,,55,],,,0x1,],,,0x46,],;,},Class,_,{,},Class,_,{,},Class,_2FH,:,_4,{,},Class,_B,:,__1,{,},<EOF>''',
                101
            )
        )

    def test_3397(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:_{Constructor (__:a5;___96210:Array [Array [Array [String ,0B1_0],0x2],05];_,__,G,Q,_H2_:_8){}Destructor (){} }''',
                '''Class,K,:,_,{,Constructor,(,__,:,a5,;,___96210,:,Array,[,Array,[,Array,[,String,,,0B10,],,,0x2,],,,05,],;,_,,,__,,,G,,,Q,,,_H2_,:,_8,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3398(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var i1_:String ;}Class __2{Var $8:_;_e(b_:_;Z,p7__7,Y,D,_,W_:Boolean ;J:Float ){t::$x18();}Var K3,$_PMu,p:__zw_9_;}''',
                '''Class,_,{,Var,i1_,:,String,;,},Class,__2,{,Var,$8,:,_,;,_e,(,b_,:,_,;,Z,,,p7__7,,,Y,,,D,,,_,,,W_,:,Boolean,;,J,:,Float,),{,t,::,$x18,(,),;,},Var,K3,,,$_PMu,,,p,:,__zw_9_,;,},<EOF>''',
                101
            )
        )

    def test_3399(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k_{Destructor (){Val h7_,_,n:Float ;Var l_,_:Array [Array [Array [Array [Array [Array [Int ,0122],991],04],0122],0122],0122];} }''',
                '''Class,k_,{,Destructor,(,),{,Val,h7_,,,_,,,n,:,Float,;,Var,l_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0122,],,,991,],,,04,],,,0122,],,,0122,],,,0122,],;,},},<EOF>''',
                101
            )
        )

    def test_3400(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8:__{Var Z__,$_,_t7:Array [Array [Array [Array [Array [Array [Array [Boolean ,72],2],0131],72],0131],0X52],0X5];}''',
                '''Class,_8,:,__,{,Var,Z__,,,$_,,,_t7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,72,],,,2,],,,0131,],,,72,],,,0131,],,,0X52,],,,0X5,],;,},<EOF>''',
                101
            )
        )

    def test_3401(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_d{_X(z_8:m){}Constructor (_3,_:Boolean ;kX__:I7;b:Boolean ;__,_,_x,E:Boolean ;L3_h4:Int ;A:String ;s,_,P:Array [Array [Array [Array [Boolean ,0b11],0x62],01],91];U6,B7,_tW_,M_q___,_1:String ){}Destructor (){}$_(_:_){}Destructor (){} }''',
                '''Class,_,:,_d,{,_X,(,z_8,:,m,),{,},Constructor,(,_3,,,_,:,Boolean,;,kX__,:,I7,;,b,:,Boolean,;,__,,,_,,,_x,,,E,:,Boolean,;,L3_h4,:,Int,;,A,:,String,;,s,,,_,,,P,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0x62,],,,01,],,,91,],;,U6,,,B7,,,_tW_,,,M_q___,,,_1,:,String,),{,},Destructor,(,),{,},$_,(,_,:,_,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3402(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __Mc{}Class g{Val $__13:y;$__6e(_5_:_qg5_3){}Constructor (D_889:_b){}Var t:Array [Boolean ,0B11_101_0];}Class _{Val $__,$0:Array [Float ,053];}''',
                '''Class,__Mc,{,},Class,g,{,Val,$__13,:,y,;,$__6e,(,_5_,:,_qg5_3,),{,},Constructor,(,D_889,:,_b,),{,},Var,t,:,Array,[,Boolean,,,0B111010,],;,},Class,_,{,Val,$__,,,$0,:,Array,[,Float,,,053,],;,},<EOF>''',
                101
            )
        )

    def test_3403(self):
        self.assertTrue(
            TestLexer.test(
                '''Class kN:l3{Val $_,C,$2_:Array [Array [Float ,0b1],0X49];Constructor (I0Y_:Array [Int ,01_6];M:Array [String ,065]){} }''',
                '''Class,kN,:,l3,{,Val,$_,,,C,,,$2_,:,Array,[,Array,[,Float,,,0b1,],,,0X49,],;,Constructor,(,I0Y_,:,Array,[,Int,,,016,],;,M,:,Array,[,String,,,065,],),{,},},<EOF>''',
                101
            )
        )

    def test_3404(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _g:__{}Class _{Constructor (Z5_5,_,j,_,_,a_,Y:bn_r_;b_Fy:String ;A5,___:Array [Array [Array [Array [Float ,0X74_72],04],0B101],3_8];_2:Array [Array [Float ,0b1],0x2]){Return ;} }''',
                '''Class,_g,:,__,{,},Class,_,{,Constructor,(,Z5_5,,,_,,,j,,,_,,,_,,,a_,,,Y,:,bn_r_,;,b_Fy,:,String,;,A5,,,___,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X7472,],,,04,],,,0B101,],,,38,],;,_2,:,Array,[,Array,[,Float,,,0b1,],,,0x2,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3405(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Pr:Q{}Class IU:k{}Class __g{}Class l1L{}Class s:Ep700{_(__z_:___;T5,_1,YF:__;_,V_,_:Array [Array [Array [Int ,0x5A],0b11],0107]){} }Class T7:_{}''',
                '''Class,Pr,:,Q,{,},Class,IU,:,k,{,},Class,__g,{,},Class,l1L,{,},Class,s,:,Ep700,{,_,(,__z_,:,___,;,T5,,,_1,,,YF,:,__,;,_,,,V_,,,_,:,Array,[,Array,[,Array,[,Int,,,0x5A,],,,0b11,],,,0107,],),{,},},Class,T7,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3406(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Eg6Zn{Constructor (L85,SI3:Boolean ;_mw__:Array [Int ,07_6_6]){}Var _850M_,$__c,$0,$G:Array [Boolean ,0B101000];}Class _:_5{}''',
                '''Class,_Eg6Zn,{,Constructor,(,L85,,,SI3,:,Boolean,;,_mw__,:,Array,[,Int,,,0766,],),{,},Var,_850M_,,,$__c,,,$0,,,$G,:,Array,[,Boolean,,,0B101000,],;,},Class,_,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_3407(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W_{Am(u_4_:_8){}Destructor (){}Val $v_25:Array [Array [Float ,03],0x25];}Class W{Destructor (){}Destructor (){_::$41();} }''',
                '''Class,W_,{,Am,(,u_4_,:,_8,),{,},Destructor,(,),{,},Val,$v_25,:,Array,[,Array,[,Float,,,03,],,,0x25,],;,},Class,W,{,Destructor,(,),{,},Destructor,(,),{,_,::,$41,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3408(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:_{Destructor (){}Destructor (){Return ;Val _,gQ_,_:Float ;}Destructor (){Return ;}Var n_:_Q1;Var m,_,_,$3H6:_;}''',
                '''Class,k,:,_,{,Destructor,(,),{,},Destructor,(,),{,Return,;,Val,_,,,gQ_,,,_,:,Float,;,},Destructor,(,),{,Return,;,},Var,n_,:,_Q1,;,Var,m,,,_,,,_,,,$3H6,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3409(self):
        self.assertTrue(
            TestLexer.test(
                '''Class CU:_21{$y(_:_1;_:Array [String ,03_5];__,_:Array [Array [Int ,32],02];R7:Float ;_,_z,_:l_46;A_5,J0_:Array [Array [Array [Int ,0B100100],0B100100],0B1]){Return ;} }''',
                '''Class,CU,:,_21,{,$y,(,_,:,_1,;,_,:,Array,[,String,,,035,],;,__,,,_,:,Array,[,Array,[,Int,,,32,],,,02,],;,R7,:,Float,;,_,,,_z,,,_,:,l_46,;,A_5,,,J0_,:,Array,[,Array,[,Array,[,Int,,,0B100100,],,,0B100100,],,,0B1,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3410(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{}Class z4{Constructor (){Val __5W,_10417,J,k4:String ;}Destructor (){} }Class _9d__7D_P_:Q1{_b(x:_2;_u:Int ){} }''',
                '''Class,l,{,},Class,z4,{,Constructor,(,),{,Val,__5W,,,_10417,,,J,,,k4,:,String,;,},Destructor,(,),{,},},Class,_9d__7D_P_,:,Q1,{,_b,(,x,:,_2,;,_u,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3411(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val $I,V_1,Ks,$1:Array [Array [Array [Array [Array [Array [Boolean ,51],0x55],0x5],0x55],0X4_B],51];Destructor (){}Var $_,$n:__9;}''',
                '''Class,__,{,Val,$I,,,V_1,,,Ks,,,$1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,51,],,,0x55,],,,0x5,],,,0x55,],,,0X4B,],,,51,],;,Destructor,(,),{,},Var,$_,,,$n,:,__9,;,},<EOF>''',
                101
            )
        )

    def test_3412(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X40:_{}Class F_10{Constructor (_8tM8h,a_:Int ;P_:Float ;__J,_q,m:_;T5l,_00,H:_;O8,iD_,_,Z:Array [Array [Array [Array [Array [Float ,0231],0x2C],4],0142],0B101001]){Continue ;Val P7K,_:Array [String ,4];{} }}''',
                '''Class,X40,:,_,{,},Class,F_10,{,Constructor,(,_8tM8h,,,a_,:,Int,;,P_,:,Float,;,__J,,,_q,,,m,:,_,;,T5l,,,_00,,,H,:,_,;,O8,,,iD_,,,_,,,Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0231,],,,0x2C,],,,4,],,,0142,],,,0B101001,],),{,Continue,;,Val,P7K,,,_,:,Array,[,String,,,4,],;,{,},},},<EOF>''',
                101
            )
        )

    def test_3413(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:o9{Destructor (){}Var $9_:_;$A_(t6Fj87,U:__;_,w2_6V:B_P_;__,_:Array [Array [Array [String ,07_43],0b1],90];a3,_,__b:D){Continue ;} }Class _I{}''',
                '''Class,n,:,o9,{,Destructor,(,),{,},Var,$9_,:,_,;,$A_,(,t6Fj87,,,U,:,__,;,_,,,w2_6V,:,B_P_,;,__,,,_,:,Array,[,Array,[,Array,[,String,,,0743,],,,0b1,],,,90,],;,a3,,,_,,,__b,:,D,),{,Continue,;,},},Class,_I,{,},<EOF>''',
                101
            )
        )

    def test_3414(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x{Val jX4,hW,O12,_,$k,Q,_,_,n,O:Array [Boolean ,0b1];$_(Vv:j_;_,_9_:String ;_:Array [Boolean ,03];_63:dAL_d_1__){ {} }Val $_:Int ;}''',
                '''Class,x,{,Val,jX4,,,hW,,,O12,,,_,,,$k,,,Q,,,_,,,_,,,n,,,O,:,Array,[,Boolean,,,0b1,],;,$_,(,Vv,:,j_,;,_,,,_9_,:,String,;,_,:,Array,[,Boolean,,,03,],;,_63,:,dAL_d_1__,),{,{,},},Val,$_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3415(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{}Class _jp0{q__(I3S,_,w:i;c,J2:Int ;__:Array [Boolean ,0B1001010];d_,_:Boolean ;_,_:_;d,_0_8:Array [Int ,027]){} }''',
                '''Class,k,{,},Class,_jp0,{,q__,(,I3S,,,_,,,w,:,i,;,c,,,J2,:,Int,;,__,:,Array,[,Boolean,,,0B1001010,],;,d_,,,_,:,Boolean,;,_,,,_,:,_,;,d,,,_0_8,:,Array,[,Int,,,027,],),{,},},<EOF>''',
                101
            )
        )

    def test_3416(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I_{Val $__Y,$8_Z0,O_I_:Boolean ;}Class j{}Class _{Constructor (__:String ){}$d(_d__:Array [Int ,0112]){} }''',
                '''Class,_,:,I_,{,Val,$__Y,,,$8_Z0,,,O_I_,:,Boolean,;,},Class,j,{,},Class,_,{,Constructor,(,__,:,String,),{,},$d,(,_d__,:,Array,[,Int,,,0112,],),{,},},<EOF>''',
                101
            )
        )

    def test_3417(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H{Val $CG1,$_cP_,$bq,G7:Float ;Constructor (I,__8r,g:_4;_,_7,_Q_,g,D:__;_,__:Array [Float ,0x5D]){}Var __,$C:Array [Array [Array [Array [Boolean ,04_4_2],05],051],0b1_1];Constructor (){} }Class b5{}''',
                '''Class,H,{,Val,$CG1,,,$_cP_,,,$bq,,,G7,:,Float,;,Constructor,(,I,,,__8r,,,g,:,_4,;,_,,,_7,,,_Q_,,,g,,,D,:,__,;,_,,,__,:,Array,[,Float,,,0x5D,],),{,},Var,__,,,$C,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0442,],,,05,],,,051,],,,0b11,],;,Constructor,(,),{,},},Class,b5,{,},<EOF>''',
                101
            )
        )

    def test_3418(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class T{}Class Q{Val $7,_473,$WYt:String ;}Class _:__{Var $1:j__9d2_;}Class _{}Class C{Destructor (){}Constructor (_,qT1_:String ;R_,__0,_,q,_5n,_2K,u,f__4_o,H_L5o:String ;_:_;___7:Boolean ;P:Int ;T,m:B;_2:wN;_w6i,Vl_j:Boolean ;_4:_){} }Class _:Hu{}Class e:i{}''',
                '''Class,_,{,},Class,T,{,},Class,Q,{,Val,$7,,,_473,,,$WYt,:,String,;,},Class,_,:,__,{,Var,$1,:,j__9d2_,;,},Class,_,{,},Class,C,{,Destructor,(,),{,},Constructor,(,_,,,qT1_,:,String,;,R_,,,__0,,,_,,,q,,,_5n,,,_2K,,,u,,,f__4_o,,,H_L5o,:,String,;,_,:,_,;,___7,:,Boolean,;,P,:,Int,;,T,,,m,:,B,;,_2,:,wN,;,_w6i,,,Vl_j,:,Boolean,;,_4,:,_,),{,},},Class,_,:,Hu,{,},Class,e,:,i,{,},<EOF>''',
                101
            )
        )

    def test_3419(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:Ls_0C4{Destructor (){}Constructor (){Return ;Return ;} }Class _{Val $1_J,$7,$2G_,$_,s:Int ;}Class _0:Y{}Class _lM{}Class x87_O_:_J{}''',
                '''Class,W,:,Ls_0C4,{,Destructor,(,),{,},Constructor,(,),{,Return,;,Return,;,},},Class,_,{,Val,$1_J,,,$7,,,$2G_,,,$_,,,s,:,Int,;,},Class,_0,:,Y,{,},Class,_lM,{,},Class,x87_O_,:,_J,{,},<EOF>''',
                101
            )
        )

    def test_3420(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_t{}Class ow71{Var _,$_3:Array [Int ,0x23];Destructor (){Return ;} }Class vP{}Class _{Val $__,$n,_jQ:E0y_6;Destructor (){Val __,_v,J0D:t;} }''',
                '''Class,_,:,_t,{,},Class,ow71,{,Var,_,,,$_3,:,Array,[,Int,,,0x23,],;,Destructor,(,),{,Return,;,},},Class,vP,{,},Class,_,{,Val,$__,,,$n,,,_jQ,:,E0y_6,;,Destructor,(,),{,Val,__,,,_v,,,J0D,:,t,;,},},<EOF>''',
                101
            )
        )

    def test_3421(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M:_2{Var $_385_,$V1i7,$F,cyniP:D;}Class _0R:m{$3e(_,_au,Y_G_,__:Int ;_,B,_49,c:Float ;A:Array [Array [Array [Array [Boolean ,0125],14],14],0B1_0_0]){} }''',
                '''Class,M,:,_2,{,Var,$_385_,,,$V1i7,,,$F,,,cyniP,:,D,;,},Class,_0R,:,m,{,$3e,(,_,,,_au,,,Y_G_,,,__,:,Int,;,_,,,B,,,_49,,,c,:,Float,;,A,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0125,],,,14,],,,14,],,,0B100,],),{,},},<EOF>''',
                101
            )
        )

    def test_3422(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L{}Class x:_4{$41(){ {}Continue ;}Val $___:Int ;}Class P__:U{}Class _:__52{Val $o9:__;Destructor (){}Constructor (c,V0,_:d;P:Array [Array [Int ,072],0X19];m6,s:Boolean ;c,d0,N3:String ){Break ;{} }Var $9:String ;}''',
                '''Class,L,{,},Class,x,:,_4,{,$41,(,),{,{,},Continue,;,},Val,$___,:,Int,;,},Class,P__,:,U,{,},Class,_,:,__52,{,Val,$o9,:,__,;,Destructor,(,),{,},Constructor,(,c,,,V0,,,_,:,d,;,P,:,Array,[,Array,[,Int,,,072,],,,0X19,],;,m6,,,s,:,Boolean,;,c,,,d0,,,N3,:,String,),{,Break,;,{,},},Var,$9,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3423(self):
        self.assertTrue(
            TestLexer.test(
                '''Class TY:_1{Val __0:Array [Array [Array [Int ,0XED],016],0XD];Val $b:Array [Int ,0135];Destructor (){_b_::$Z3();}_Z(){}Destructor (){} }''',
                '''Class,TY,:,_1,{,Val,__0,:,Array,[,Array,[,Array,[,Int,,,0XED,],,,016,],,,0XD,],;,Val,$b,:,Array,[,Int,,,0135,],;,Destructor,(,),{,_b_,::,$Z3,(,),;,},_Z,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3424(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h:_{}Class w1{}Class Ph{Constructor (R_,F,Z97_:Boolean ){}Var $_:Array [Array [Float ,0b10],0X13];F7(){}_(){} }''',
                '''Class,h,:,_,{,},Class,w1,{,},Class,Ph,{,Constructor,(,R_,,,F,,,Z97_,:,Boolean,),{,},Var,$_,:,Array,[,Array,[,Float,,,0b10,],,,0X13,],;,F7,(,),{,},_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3425(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{qs8(_:Array [Array [Array [Int ,0X1F],5_91_5],054];J,m___:Array [Int ,0xED_D]){}Destructor (){Break ;}Constructor (_:Float ){} }''',
                '''Class,_,:,_,{,qs8,(,_,:,Array,[,Array,[,Array,[,Int,,,0X1F,],,,5915,],,,054,],;,J,,,m___,:,Array,[,Int,,,0xEDD,],),{,},Destructor,(,),{,Break,;,},Constructor,(,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3426(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N{Var $0__:Array [Array [Array [Array [Array [Boolean ,96],1_8_8_8_9],0b11010],0125],0125];Destructor (){Var _05__,_1,V:_R1;Break ;}Var _:g;}Class _:_{}Class x{}''',
                '''Class,N,{,Var,$0__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,96,],,,18889,],,,0b11010,],,,0125,],,,0125,],;,Destructor,(,),{,Var,_05__,,,_1,,,V,:,_R1,;,Break,;,},Var,_,:,g,;,},Class,_,:,_,{,},Class,x,{,},<EOF>''',
                101
            )
        )

    def test_3427(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $3:_;Constructor (y_a7,_,PE,_W:_8){Return ;}S(_j,__,G_j,_E07,___W0:A){Return ;} }Class _:_{}Class _El_:_0{}Class _20_:n{}Class _{}''',
                '''Class,_,{,Val,$3,:,_,;,Constructor,(,y_a7,,,_,,,PE,,,_W,:,_8,),{,Return,;,},S,(,_j,,,__,,,G_j,,,_E07,,,___W0,:,A,),{,Return,;,},},Class,_,:,_,{,},Class,_El_,:,_0,{,},Class,_20_,:,n,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3428(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{$36_2_j__w4(_:Boolean ;_:Array [Array [Array [Array [Array [String ,0x40],21],0x40],0x1_1],0B1_0];n:String ){}Destructor (){}_(_:String ;uB,__h5_,_,B:__;_8:Float ){} }Class v_{_u_V(){Break ;} }Class __:_S_{_B(_0l:Int ;O99,_:Array [Array [Array [String ,07],1_4],21]){} }''',
                '''Class,__,{,$36_2_j__w4,(,_,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x40,],,,21,],,,0x40,],,,0x11,],,,0B10,],;,n,:,String,),{,},Destructor,(,),{,},_,(,_,:,String,;,uB,,,__h5_,,,_,,,B,:,__,;,_8,:,Float,),{,},},Class,v_,{,_u_V,(,),{,Break,;,},},Class,__,:,_S_,{,_B,(,_0l,:,Int,;,O99,,,_,:,Array,[,Array,[,Array,[,String,,,07,],,,14,],,,21,],),{,},},<EOF>''',
                101
            )
        )

    def test_3429(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9__{Val $9:String ;$r(J5K,_,_a,_,__,_2F:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1],8_90_8],06_3_3],01_7_07_5],0x3F],032],0X8],0X3A],0B11],91],0X3A],4_2],0x547_1],0X3E_4],0X3A],0107],91];s,O_g__Q:Float ;_:Array [Float ,0b1010010]){}Constructor (_,J:Array [Array [Array [Array [Array [Int ,0B1],91],9_8],0xABB_1_1],0B1]){ {} }}''',
                '''Class,_9__,{,Val,$9,:,String,;,$r,(,J5K,,,_,,,_a,,,_,,,__,,,_2F,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,8908,],,,0633,],,,017075,],,,0x3F,],,,032,],,,0X8,],,,0X3A,],,,0B11,],,,91,],,,0X3A,],,,42,],,,0x5471,],,,0X3E4,],,,0X3A,],,,0107,],,,91,],;,s,,,O_g__Q,:,Float,;,_,:,Array,[,Float,,,0b1010010,],),{,},Constructor,(,_,,,J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,91,],,,98,],,,0xABB11,],,,0B1,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_3430(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E2{Constructor (_:Array [Array [String ,01_3],0x4F]){lU4::$04_P();Break ;} }Class _:__{Constructor (){} }Class ____W{Mnm(B__,_1_:__){}$_(){} }Class _t_{}''',
                '''Class,E2,{,Constructor,(,_,:,Array,[,Array,[,String,,,013,],,,0x4F,],),{,lU4,::,$04_P,(,),;,Break,;,},},Class,_,:,__,{,Constructor,(,),{,},},Class,____W,{,Mnm,(,B__,,,_1_,:,__,),{,},$_,(,),{,},},Class,_t_,{,},<EOF>''',
                101
            )
        )

    def test_3431(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7:bm{Constructor (C0:Boolean ;U_r,v,o,_6e__z8,Z:String ;y:Array [Array [Array [Array [Array [Array [Int ,0B10],07],59],0166],07],07]){ {} }}Class y8:_{Constructor (){} }''',
                '''Class,_7,:,bm,{,Constructor,(,C0,:,Boolean,;,U_r,,,v,,,o,,,_6e__z8,,,Z,:,String,;,y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B10,],,,07,],,,59,],,,0166,],,,07,],,,07,],),{,{,},},},Class,y8,:,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3432(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:__6{$0_76_(Y18H:Array [Boolean ,0XA_6];_KC_87____9,_,Bf:Array [Array [Array [Array [String ,03_7],77],0141],0b1001111]){} }Class _r{}Class _:_{}Class Cv8_p4{Val $n9:J_;}''',
                '''Class,__,:,__6,{,$0_76_,(,Y18H,:,Array,[,Boolean,,,0XA6,],;,_KC_87____9,,,_,,,Bf,:,Array,[,Array,[,Array,[,Array,[,String,,,037,],,,77,],,,0141,],,,0b1001111,],),{,},},Class,_r,{,},Class,_,:,_,{,},Class,Cv8_p4,{,Val,$n9,:,J_,;,},<EOF>''',
                101
            )
        )

    def test_3433(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3_{}Class I:_{Var $_,C,Z:Z;Val $___,$_2,_V:String ;Val $T,$XCR,_V:Array [Boolean ,0xC_4];}Class _0_:__{}Class _{}Class u:e{Var __:Int ;}Class pz3rd13l__:o__{}''',
                '''Class,_3_,{,},Class,I,:,_,{,Var,$_,,,C,,,Z,:,Z,;,Val,$___,,,$_2,,,_V,:,String,;,Val,$T,,,$XCR,,,_V,:,Array,[,Boolean,,,0xC4,],;,},Class,_0_,:,__,{,},Class,_,{,},Class,u,:,e,{,Var,__,:,Int,;,},Class,pz3rd13l__,:,o__,{,},<EOF>''',
                101
            )
        )

    def test_3434(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___:u{Var $9E2_24:_r;}Class a_{}Class P__EF__8N:Y{Destructor (){} }Class z:BS{}Class EE{Var $3:x;Constructor (r6d,P:Array [Array [Array [Array [Array [Boolean ,0140],037],7],07],05_4]){} }Class f7N_Cb_1{}Class h:l13H0__{Constructor (){} }''',
                '''Class,___,:,u,{,Var,$9E2_24,:,_r,;,},Class,a_,{,},Class,P__EF__8N,:,Y,{,Destructor,(,),{,},},Class,z,:,BS,{,},Class,EE,{,Var,$3,:,x,;,Constructor,(,r6d,,,P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0140,],,,037,],,,7,],,,07,],,,054,],),{,},},Class,f7N_Cb_1,{,},Class,h,:,l13H0__,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3435(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __h{Var _23n,$t2,_,$_:Array [Array [Array [Array [Array [Array [Boolean ,012],014_4_1],04],8],0X5_7_8],0B1];}''',
                '''Class,__h,{,Var,_23n,,,$t2,,,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,012,],,,01441,],,,04,],,,8,],,,0X578,],,,0B1,],;,},<EOF>''',
                101
            )
        )

    def test_3436(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class p{Constructor (_K,_M_,q_:Boolean ;_2h0,_9,EF_K___p:Array [Array [Array [Boolean ,0X5E],0123],0X5E];i,d:Int ){Var _:v;}Destructor (){}u(I3:String ){Return ;Y::$S();} }''',
                '''Class,_,{,},Class,p,{,Constructor,(,_K,,,_M_,,,q_,:,Boolean,;,_2h0,,,_9,,,EF_K___p,:,Array,[,Array,[,Array,[,Boolean,,,0X5E,],,,0123,],,,0X5E,],;,i,,,d,:,Int,),{,Var,_,:,v,;,},Destructor,(,),{,},u,(,I3,:,String,),{,Return,;,Y,::,$S,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3437(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:__{}Class vE__:z{}Class c_:__{Val L:E;$_(_:Array [Array [Array [Array [Boolean ,0b100],0X5],0X3],05_51];_m1:Int ;_a,_,__:wg8;_9,_,F_U,L_t1,w,___:F5_;_,__,n_G_:_F_2_;_:_;_:Boolean ){} }''',
                '''Class,_,{,},Class,_,:,__,{,},Class,vE__,:,z,{,},Class,c_,:,__,{,Val,L,:,E,;,$_,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b100,],,,0X5,],,,0X3,],,,0551,],;,_m1,:,Int,;,_a,,,_,,,__,:,wg8,;,_9,,,_,,,F_U,,,L_t1,,,w,,,___,:,F5_,;,_,,,__,,,n_G_,:,_F_2_,;,_,:,_,;,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3438(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:_{Var _:Array [Array [String ,04],0b11];Constructor (_0_,g_,z,T,_Ow,s,_,_b_0:O0;_:_vO){}Constructor (_,_:__M7){} }''',
                '''Class,_1,:,_,{,Var,_,:,Array,[,Array,[,String,,,04,],,,0b11,],;,Constructor,(,_0_,,,g_,,,z,,,T,,,_Ow,,,s,,,_,,,_b_0,:,O0,;,_,:,_vO,),{,},Constructor,(,_,,,_,:,__M7,),{,},},<EOF>''',
                101
            )
        )

    def test_3439(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __8{Val J_1:Array [Array [Boolean ,0X21],0xE];Constructor (){}Var U:Boolean ;Constructor (){}$_(){} }Class _0{}Class O15_{Val _g:Int ;}''',
                '''Class,__8,{,Val,J_1,:,Array,[,Array,[,Boolean,,,0X21,],,,0xE,],;,Constructor,(,),{,},Var,U,:,Boolean,;,Constructor,(,),{,},$_,(,),{,},},Class,_0,{,},Class,O15_,{,Val,_g,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3440(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C{Constructor (A,t,C:l_;b_,On2,i,h:Array [Array [Array [Array [Array [Array [Array [Int ,0x5B],82],4],02_1],0141],0X3],0X8_B_A]){Continue ;Break ;} }''',
                '''Class,C,{,Constructor,(,A,,,t,,,C,:,l_,;,b_,,,On2,,,i,,,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x5B,],,,82,],,,4,],,,021,],,,0141,],,,0X3,],,,0X8BA,],),{,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3441(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:PB_4{Var __,$uV:Array [Array [String ,0X59],0142];Var I_ql:Array [Array [Array [Array [Int ,0B1],0B1],0XC_2],01_232];}''',
                '''Class,_,:,PB_4,{,Var,__,,,$uV,:,Array,[,Array,[,String,,,0X59,],,,0142,],;,Var,I_ql,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B1,],,,0XC2,],,,01232,],;,},<EOF>''',
                101
            )
        )

    def test_3442(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gS_O_v:_r{Val $Q_____:_YK_4;}Class _4_{}Class B:aA{$354(){Break ;} }Class c__:_{$_QM(){} }Class ___65:_0j_yc{}''',
                '''Class,gS_O_v,:,_r,{,Val,$Q_____,:,_YK_4,;,},Class,_4_,{,},Class,B,:,aA,{,$354,(,),{,Break,;,},},Class,c__,:,_,{,$_QM,(,),{,},},Class,___65,:,_0j_yc,{,},<EOF>''',
                101
            )
        )

    def test_3443(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{$__(r:p){} }Class e_:P{Constructor (_,_J,_,__X,_,_94,Q:_9;_,_d:Float ;L9T,_:d3;_,p,Oj,ls,__:Boolean ;h,m:Array [Array [Array [Array [Boolean ,04_03],91],0X43],5_4717]){}$Pb_(H:o){Continue ;} }''',
                '''Class,__,{,$__,(,r,:,p,),{,},},Class,e_,:,P,{,Constructor,(,_,,,_J,,,_,,,__X,,,_,,,_94,,,Q,:,_9,;,_,,,_d,:,Float,;,L9T,,,_,:,d3,;,_,,,p,,,Oj,,,ls,,,__,:,Boolean,;,h,,,m,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0403,],,,91,],,,0X43,],,,54717,],),{,},$Pb_,(,H,:,o,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3444(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _t{Constructor (L:Array [Array [Array [Array [Array [Array [String ,0XC],0b1001011],070],04335_500_11],0B110110],070];_:z;_:k){} }Class lT_:a_{}''',
                '''Class,_,{,},Class,_t,{,Constructor,(,L,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XC,],,,0b1001011,],,,070,],,,0433550011,],,,0B110110,],,,070,],;,_,:,z,;,_,:,k,),{,},},Class,lT_,:,a_,{,},<EOF>''',
                101
            )
        )

    def test_3445(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L{}Class _{}Class o{Constructor (_9:Array [Array [Float ,5],8_2];E:String ;yU:Array [Array [Array [Int ,0X4A],030],1_8]){} }''',
                '''Class,L,{,},Class,_,{,},Class,o,{,Constructor,(,_9,:,Array,[,Array,[,Float,,,5,],,,82,],;,E,:,String,;,yU,:,Array,[,Array,[,Array,[,Int,,,0X4A,],,,030,],,,18,],),{,},},<EOF>''',
                101
            )
        )

    def test_3446(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:NZ{Val _:Array [Int ,3_1];Var __:__38k8j_;Constructor (_:Array [Array [Array [Array [Int ,0x6],072],82],0X5B];_,P,_3,g_:Array [Int ,95]){Break ;Break ;Break ;} }''',
                '''Class,T,:,NZ,{,Val,_,:,Array,[,Int,,,31,],;,Var,__,:,__38k8j_,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x6,],,,072,],,,82,],,,0X5B,],;,_,,,P,,,_3,,,g_,:,Array,[,Int,,,95,],),{,Break,;,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3447(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F_:_{Constructor (Z:Array [Array [Array [Boolean ,808_26_6_97],0133],0B1];C_,__,_,_8,I,_:Boolean ;_:Array [Array [Int ,03],7]){Continue ;} }Class _1_I{}''',
                '''Class,F_,:,_,{,Constructor,(,Z,:,Array,[,Array,[,Array,[,Boolean,,,80826697,],,,0133,],,,0B1,],;,C_,,,__,,,_,,,_8,,,I,,,_,:,Boolean,;,_,:,Array,[,Array,[,Int,,,03,],,,7,],),{,Continue,;,},},Class,_1_I,{,},<EOF>''',
                101
            )
        )

    def test_3448(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Ys{$_8v(D:Array [Boolean ,02_1];IS,_:Array [Array [Array [Array [Int ,0B1],05],07],0B1_0_1010_0];Z,A_3,J_,_0,U47734P:Array [Array [Array [Array [Array [Array [Boolean ,0X3],0X23],05],0x7],05],024_0]){} }''',
                '''Class,_,:,Ys,{,$_8v,(,D,:,Array,[,Boolean,,,021,],;,IS,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,05,],,,07,],,,0B1010100,],;,Z,,,A_3,,,J_,,,_0,,,U47734P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X3,],,,0X23,],,,05,],,,0x7,],,,05,],,,0240,],),{,},},<EOF>''',
                101
            )
        )

    def test_3449(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:w_{}Class nm:_A{_3_8K(__:_;_2_:_u;C_6,M:Boolean ;k,_o,R:Array [Array [Array [String ,76],0x1C],76];R,c_:Array [Boolean ,6]){Z::$19_ko().Q().__();} }''',
                '''Class,_,{,},Class,_,:,w_,{,},Class,nm,:,_A,{,_3_8K,(,__,:,_,;,_2_,:,_u,;,C_6,,,M,:,Boolean,;,k,,,_o,,,R,:,Array,[,Array,[,Array,[,String,,,76,],,,0x1C,],,,76,],;,R,,,c_,:,Array,[,Boolean,,,6,],),{,Z,::,$19_ko,(,),.,Q,(,),.,__,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3450(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vQ1:__60L{$53(v0,j_5:Array [Array [Boolean ,0b1010010],0X3];k,q:Array [Array [Array [Array [Int ,036],73],0X7],07_5]){} }Class N{Constructor (__:_){} }''',
                '''Class,vQ1,:,__60L,{,$53,(,v0,,,j_5,:,Array,[,Array,[,Boolean,,,0b1010010,],,,0X3,],;,k,,,q,:,Array,[,Array,[,Array,[,Array,[,Int,,,036,],,,73,],,,0X7,],,,075,],),{,},},Class,N,{,Constructor,(,__,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3451(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P{}Class K7i_o__8{Val $1W,$m_,$e_,g_xPt,$_,$4,_,D:Array [Array [Array [Array [Array [Boolean ,0B1],01],0x8_C],0XD_E_B],872];}''',
                '''Class,P,{,},Class,K7i_o__8,{,Val,$1W,,,$m_,,,$e_,,,g_xPt,,,$_,,,$4,,,_,,,D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,01,],,,0x8C,],,,0XDEB,],,,872,],;,},<EOF>''',
                101
            )
        )

    def test_3452(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{Constructor (__2N,_0,__:Int ;__,B,_8:Int ){} }Class d__4h:r{Val $_4:o;}Class _{}Class __38{Var $2:Array [Boolean ,0112];}Class _:Z4{}''',
                '''Class,R,{,Constructor,(,__2N,,,_0,,,__,:,Int,;,__,,,B,,,_8,:,Int,),{,},},Class,d__4h,:,r,{,Val,$_4,:,o,;,},Class,_,{,},Class,__38,{,Var,$2,:,Array,[,Boolean,,,0112,],;,},Class,_,:,Z4,{,},<EOF>''',
                101
            )
        )

    def test_3453(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Var $0:Array [Boolean ,0b1];}Class _3_6{$u(){}Destructor (){} }Class _{Val $_:Array [Float ,44];$5(b4d2,_:O){} }''',
                '''Class,_,:,_,{,Var,$0,:,Array,[,Boolean,,,0b1,],;,},Class,_3_6,{,$u,(,),{,},Destructor,(,),{,},},Class,_,{,Val,$_,:,Array,[,Float,,,44,],;,$5,(,b4d2,,,_,:,O,),{,},},<EOF>''',
                101
            )
        )

    def test_3454(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class H:_e3r_{}Class v{Constructor (){}Constructor (____X,E_,b1,E9qA,_,xq:Array [Array [Array [Int ,0X7],0B110],0b11];f:Array [Array [Int ,77],0X7]){} }Class _m_F_:_4_{Val N,_,$3_O_:Boolean ;}Class _{}''',
                '''Class,__,:,_,{,},Class,H,:,_e3r_,{,},Class,v,{,Constructor,(,),{,},Constructor,(,____X,,,E_,,,b1,,,E9qA,,,_,,,xq,:,Array,[,Array,[,Array,[,Int,,,0X7,],,,0B110,],,,0b11,],;,f,:,Array,[,Array,[,Int,,,77,],,,0X7,],),{,},},Class,_m_F_,:,_4_,{,Val,N,,,_,,,$3_O_,:,Boolean,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3455(self):
        self.assertTrue(
            TestLexer.test(
                '''Class XVXr{Val $188:K;$_(_l_0F,_,_:Array [Array [Array [String ,0b10011],0x32],0B10100]){ {}Break ;} }Class g:Ts{Var _02_n7sV2,P__:Boolean ;}''',
                '''Class,XVXr,{,Val,$188,:,K,;,$_,(,_l_0F,,,_,,,_,:,Array,[,Array,[,Array,[,String,,,0b10011,],,,0x32,],,,0B10100,],),{,{,},Break,;,},},Class,g,:,Ts,{,Var,_02_n7sV2,,,P__,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3456(self):
        self.assertTrue(
            TestLexer.test(
                '''Class aL_b1_{Val k_sJ:Array [Array [Boolean ,0B1],8];_(_Bf_s__0:String ;N__,__z,thD:_I_;_6d,_X1S,U__:Array [Boolean ,0xF];n:Array [Array [Int ,0X3E],0b1];__:Boolean ){}Destructor (){} }''',
                '''Class,aL_b1_,{,Val,k_sJ,:,Array,[,Array,[,Boolean,,,0B1,],,,8,],;,_,(,_Bf_s__0,:,String,;,N__,,,__z,,,thD,:,_I_,;,_6d,,,_X1S,,,U__,:,Array,[,Boolean,,,0xF,],;,n,:,Array,[,Array,[,Int,,,0X3E,],,,0b1,],;,__,:,Boolean,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3457(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:H0B{Constructor (e_,Zpt,q5i,_:Array [Boolean ,04];__,_B,_,X_,_,l,Z9:Float ){Val __:_;}Val _:_;Val _:_X_;}Class i{Constructor (__,q_,G13_,ii09:String ;e9_:Array [Array [Int ,1],0X4D]){} }''',
                '''Class,_,:,H0B,{,Constructor,(,e_,,,Zpt,,,q5i,,,_,:,Array,[,Boolean,,,04,],;,__,,,_B,,,_,,,X_,,,_,,,l,,,Z9,:,Float,),{,Val,__,:,_,;,},Val,_,:,_,;,Val,_,:,_X_,;,},Class,i,{,Constructor,(,__,,,q_,,,G13_,,,ii09,:,String,;,e9_,:,Array,[,Array,[,Int,,,1,],,,0X4D,],),{,},},<EOF>''',
                101
            )
        )

    def test_3458(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{$u__0G(_,_9GU_:Array [Array [Array [Array [Array [Array [Boolean ,0X4],0X8_F],0B1],061],0XE],0B110101]){}Var v_:Int ;}Class b:_{Val $d,_,$Y,$ji,$54_,$zpM0_,r_3Dz_5:Array [String ,0X2];}Class V:_{}Class ugv8y{Destructor (){} }''',
                '''Class,_1,{,$u__0G,(,_,,,_9GU_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X4,],,,0X8F,],,,0B1,],,,061,],,,0XE,],,,0B110101,],),{,},Var,v_,:,Int,;,},Class,b,:,_,{,Val,$d,,,_,,,$Y,,,$ji,,,$54_,,,$zpM0_,,,r_3Dz_5,:,Array,[,String,,,0X2,],;,},Class,V,:,_,{,},Class,ugv8y,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3459(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f{}Class _5V{p7(b,aUf_,_w:___;_,C:Array [Float ,9];wF,_:Boolean ;D,_V89:Float ;C__R,R:Array [Array [Array [Float ,05],10],0B1010000]){} }''',
                '''Class,f,{,},Class,_5V,{,p7,(,b,,,aUf_,,,_w,:,___,;,_,,,C,:,Array,[,Float,,,9,],;,wF,,,_,:,Boolean,;,D,,,_V89,:,Float,;,C__R,,,R,:,Array,[,Array,[,Array,[,Float,,,05,],,,10,],,,0B1010000,],),{,},},<EOF>''',
                101
            )
        )

    def test_3460(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T0:L_{Val e0Z_,Q,$1,_:String ;}Class _J{$__a(B27_4:Array [Array [Array [Array [Int ,0B1],0x1],04],0X32];N:L;Ym:Boolean ){} }Class _K{}''',
                '''Class,T0,:,L_,{,Val,e0Z_,,,Q,,,$1,,,_,:,String,;,},Class,_J,{,$__a,(,B27_4,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0x1,],,,04,],,,0X32,],;,N,:,L,;,Ym,:,Boolean,),{,},},Class,_K,{,},<EOF>''',
                101
            )
        )

    def test_3461(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _vK3{}Class I:A_{Val _,_:Array [Boolean ,4];d(){} }Class F{}Class _:__{F14(Y:Array [Boolean ,65]){}Constructor (y,_Lv,Li:Boolean ;_:Array [Array [Array [Int ,0B110000],65],65]){}Val $_y,$5P_:Array [Boolean ,0xB];}''',
                '''Class,_vK3,{,},Class,I,:,A_,{,Val,_,,,_,:,Array,[,Boolean,,,4,],;,d,(,),{,},},Class,F,{,},Class,_,:,__,{,F14,(,Y,:,Array,[,Boolean,,,65,],),{,},Constructor,(,y,,,_Lv,,,Li,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Int,,,0B110000,],,,65,],,,65,],),{,},Val,$_y,,,$5P_,:,Array,[,Boolean,,,0xB,],;,},<EOF>''',
                101
            )
        )

    def test_3462(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{$e(_:Int ;__:__;E,_g,T,_,J_,_:Array [Array [Int ,0xC],041];H9__m:t_;N79,AO3,__M4__,S__6,_6:Array [Array [Float ,0xD1_C5_B],04];k_9_:Int ){Break ;} }Class _{X(){New f().P();} }''',
                '''Class,k,{,$e,(,_,:,Int,;,__,:,__,;,E,,,_g,,,T,,,_,,,J_,,,_,:,Array,[,Array,[,Int,,,0xC,],,,041,],;,H9__m,:,t_,;,N79,,,AO3,,,__M4__,,,S__6,,,_6,:,Array,[,Array,[,Float,,,0xD1C5B,],,,04,],;,k_9_,:,Int,),{,Break,;,},},Class,_,{,X,(,),{,New,f,(,),.,P,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3463(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c:_8_{}Class DKV_:_{Val _:Array [Array [Array [String ,2],0X46],851_7_7];Val d__:_9Q_;}Class e_G_H{$_(){} }''',
                '''Class,c,:,_8_,{,},Class,DKV_,:,_,{,Val,_,:,Array,[,Array,[,Array,[,String,,,2,],,,0X46,],,,85177,],;,Val,d__,:,_9Q_,;,},Class,e_G_H,{,$_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3464(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C_:Oc_{Val VO:Array [Array [Array [Boolean ,051],0b110111],031];Constructor (h:Int ){} }Class _{Destructor (){Break ;} }''',
                '''Class,C_,:,Oc_,{,Val,VO,:,Array,[,Array,[,Array,[,Boolean,,,051,],,,0b110111,],,,031,],;,Constructor,(,h,:,Int,),{,},},Class,_,{,Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3465(self):
        self.assertTrue(
            TestLexer.test(
                '''Class pV:_{RA5(R,f:Array [Array [Array [Array [Array [Int ,0xF],0X22],99],063],01_2];i_:Array [Float ,0b1]){}Val _:j75_8;}''',
                '''Class,pV,:,_,{,RA5,(,R,,,f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xF,],,,0X22,],,,99,],,,063,],,,012,],;,i_,:,Array,[,Float,,,0b1,],),{,},Val,_,:,j75_8,;,},<EOF>''',
                101
            )
        )

    def test_3466(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:F37{}Class F43_:I59_1{Constructor (k,q_:Array [Float ,06];_:Array [Array [Int ,0B1010010],0xA_F_3];_:String ){}f9_(_:Boolean ){} }''',
                '''Class,B,:,F37,{,},Class,F43_,:,I59_1,{,Constructor,(,k,,,q_,:,Array,[,Float,,,06,],;,_,:,Array,[,Array,[,Int,,,0B1010010,],,,0xAF3,],;,_,:,String,),{,},f9_,(,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3467(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U{}Class n{$_(__3:Float ;_b,_9:Array [Array [Array [Int ,0x5B],0X8_E],987_9]){W::$R_();} }Class _{Constructor (){Continue ;} }''',
                '''Class,U,{,},Class,n,{,$_,(,__3,:,Float,;,_b,,,_9,:,Array,[,Array,[,Array,[,Int,,,0x5B,],,,0X8E,],,,9879,],),{,W,::,$R_,(,),;,},},Class,_,{,Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3468(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{$_(A:Array [Array [Boolean ,0B1],0B110110];i:Array [Array [Array [Array [Float ,0X5],65],063],0X50]){}VGJ(_3_q,LL,_,_:Array [String ,8]){} }Class _6z__:_c{}Class _:__{}''',
                '''Class,_,:,__,{,$_,(,A,:,Array,[,Array,[,Boolean,,,0B1,],,,0B110110,],;,i,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X5,],,,65,],,,063,],,,0X50,],),{,},VGJ,(,_3_q,,,LL,,,_,,,_,:,Array,[,String,,,8,],),{,},},Class,_6z__,:,_c,{,},Class,_,:,__,{,},<EOF>''',
                101
            )
        )

    def test_3469(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _b1:H_{}Class __:jn{Val $_5_:Array [Array [Array [Array [Array [Array [Int ,0B1001111],29],0B11_0_0],043],01],0B10];}''',
                '''Class,_b1,:,H_,{,},Class,__,:,jn,{,Val,$_5_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1001111,],,,29,],,,0B1100,],,,043,],,,01,],,,0B10,],;,},<EOF>''',
                101
            )
        )

    def test_3470(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H5M:M_{$_(Nr,___6,_,y1:Array [Float ,0b1];_:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0b1_0],0667_2],027],0x34],027],0B10010],027],01];f2,j,__:Float ){}Constructor (){} }''',
                '''Class,H5M,:,M_,{,$_,(,Nr,,,___6,,,_,,,y1,:,Array,[,Float,,,0b1,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10,],,,06672,],,,027,],,,0x34,],,,027,],,,0B10010,],,,027,],,,01,],;,f2,,,j,,,__,:,Float,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3471(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p{CC26(_:Array [String ,0x53_8_0];_:__XEu;__0,p_l:String ;__,_B:Array [Boolean ,0X7_D_4]){} }Class Z:S6{Var $_,$57F:_;Constructor (K:__){} }''',
                '''Class,p,{,CC26,(,_,:,Array,[,String,,,0x5380,],;,_,:,__XEu,;,__0,,,p_l,:,String,;,__,,,_B,:,Array,[,Boolean,,,0X7D4,],),{,},},Class,Z,:,S6,{,Var,$_,,,$57F,:,_,;,Constructor,(,K,:,__,),{,},},<EOF>''',
                101
            )
        )

    def test_3472(self):
        self.assertTrue(
            TestLexer.test(
                '''Class p:C{}Class G{Val O_,_,$_:Array [Array [Array [Array [String ,0b1],0XC],94],94];Val $__:F;Var $b,_:Array [Array [Array [Boolean ,0B1],0B10_1],3];Constructor (vB:M){} }''',
                '''Class,p,:,C,{,},Class,G,{,Val,O_,,,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0XC,],,,94,],,,94,],;,Val,$__,:,F,;,Var,$b,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0B101,],,,3,],;,Constructor,(,vB,:,M,),{,},},<EOF>''',
                101
            )
        )

    def test_3473(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_3_7{Constructor (_8,_7,_:_39_;L7_,q4V1,S:Int ;__X_,__,dH,L,_,U6:Float ;_3_4O:String ){} }Class _:z{}''',
                '''Class,_,:,_3_7,{,Constructor,(,_8,,,_7,,,_,:,_39_,;,L7_,,,q4V1,,,S,:,Int,;,__X_,,,__,,,dH,,,L,,,_,,,U6,:,Float,;,_3_4O,:,String,),{,},},Class,_,:,z,{,},<EOF>''',
                101
            )
        )

    def test_3474(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var _,F:Array [Array [Boolean ,4],0xC];}Class _:_8_{}Class d{}Class _hO_n{Val n956Cd:Float ;}Class W:_P{}''',
                '''Class,_,{,Var,_,,,F,:,Array,[,Array,[,Boolean,,,4,],,,0xC,],;,},Class,_,:,_8_,{,},Class,d,{,},Class,_hO_n,{,Val,n956Cd,:,Float,;,},Class,W,:,_P,{,},<EOF>''',
                101
            )
        )

    def test_3475(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Q{_K9(_,_,_,_:N;B,__:Array [Array [Boolean ,0X15],83];W2:Int ;_,_:Array [Array [Array [Array [String ,07],83],0b10],0x2_F3B]){}Val $Z,$_:Array [String ,0b111110];}Class _{$h9k_(_:String ;G:Array [Array [Int ,030],030]){} }''',
                '''Class,_,:,Q,{,_K9,(,_,,,_,,,_,,,_,:,N,;,B,,,__,:,Array,[,Array,[,Boolean,,,0X15,],,,83,],;,W2,:,Int,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,83,],,,0b10,],,,0x2F3B,],),{,},Val,$Z,,,$_,:,Array,[,String,,,0b111110,],;,},Class,_,{,$h9k_,(,_,:,String,;,G,:,Array,[,Array,[,Int,,,030,],,,030,],),{,},},<EOF>''',
                101
            )
        )

    def test_3476(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _h{Constructor (_,I_Gw,__1_EB0:Float ;i,t:Float ;_,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0X1B],0b1_1],07],29],0XF],29],064],07_4],0x8_A]){} }''',
                '''Class,_h,{,Constructor,(,_,,,I_Gw,,,__1_EB0,:,Float,;,i,,,t,:,Float,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X1B,],,,0b11,],,,07,],,,29,],,,0XF,],,,29,],,,064,],,,074,],,,0x8A,],),{,},},<EOF>''',
                101
            )
        )

    def test_3477(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Destructor (){}Val $__:String ;}Class _90:vu{Val $____Ps,$Pv__:Array [Float ,0b1010011];V__(){} }Class m{}Class N{Val __d_:String ;}''',
                '''Class,__,{,Destructor,(,),{,},Val,$__,:,String,;,},Class,_90,:,vu,{,Val,$____Ps,,,$Pv__,:,Array,[,Float,,,0b1010011,],;,V__,(,),{,},},Class,m,{,},Class,N,{,Val,__d_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3478(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w__{Constructor (_:Array [Float ,04];R,HY,O:Array [Int ,8_55_4];_7_:Int ;S7_8WI:Array [Int ,0X46];Z_:Array [Array [Int ,0X2_67],0X46];_h:Ou_){} }Class _:I{}Class w5:_{}''',
                '''Class,_w__,{,Constructor,(,_,:,Array,[,Float,,,04,],;,R,,,HY,,,O,:,Array,[,Int,,,8554,],;,_7_,:,Int,;,S7_8WI,:,Array,[,Int,,,0X46,],;,Z_,:,Array,[,Array,[,Int,,,0X267,],,,0X46,],;,_h,:,Ou_,),{,},},Class,_,:,I,{,},Class,w5,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3479(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N__q{}Class __{}Class WM6:W{Val $_:Float ;Destructor (){Continue ;}Destructor (){Continue ;} }Class Vk:_{Val I,$7K_:Boolean ;}Class R_7_:_2{}Class b{Constructor (){} }''',
                '''Class,_,:,N__q,{,},Class,__,{,},Class,WM6,:,W,{,Val,$_,:,Float,;,Destructor,(,),{,Continue,;,},Destructor,(,),{,Continue,;,},},Class,Vk,:,_,{,Val,I,,,$7K_,:,Boolean,;,},Class,R_7_,:,_2,{,},Class,b,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3480(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:W{_(){}Var l,$_,$t,$_,$5,$8,r_,t:Float ;Constructor (_v,_,_3,___9,n,_,Q8,_S2:Array [Array [Boolean ,0X6_1D],0x13];_,w___zF:__57;__:_){} }''',
                '''Class,_,:,W,{,_,(,),{,},Var,l,,,$_,,,$t,,,$_,,,$5,,,$8,,,r_,,,t,:,Float,;,Constructor,(,_v,,,_,,,_3,,,___9,,,n,,,_,,,Q8,,,_S2,:,Array,[,Array,[,Boolean,,,0X61D,],,,0x13,],;,_,,,w___zF,:,__57,;,__,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3481(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C__4{P_c5(_0:Array [Array [String ,0b10100],0b10100];m5,_,_,kd_:Array [Array [Array [Boolean ,0B1_0],0B1110],0X1_C];_:Array [Array [String ,0xCE],716];_:Int ;_:Float ){} }''',
                '''Class,C__4,{,P_c5,(,_0,:,Array,[,Array,[,String,,,0b10100,],,,0b10100,],;,m5,,,_,,,_,,,kd_,:,Array,[,Array,[,Array,[,Boolean,,,0B10,],,,0B1110,],,,0X1C,],;,_,:,Array,[,Array,[,String,,,0xCE,],,,716,],;,_,:,Int,;,_,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3482(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n{Var z,n,RKEIO:Float ;Constructor (_qw:Boolean ;y9_,_h:Boolean ;t:Array [Array [Array [Array [Array [Array [Float ,0X6],0B1],0b1010111],033],0X3],0X6];_,z_,_,_:Array [String ,04]){} }Class _:r{Val $9:Array [String ,1];}''',
                '''Class,n,{,Var,z,,,n,,,RKEIO,:,Float,;,Constructor,(,_qw,:,Boolean,;,y9_,,,_h,:,Boolean,;,t,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X6,],,,0B1,],,,0b1010111,],,,033,],,,0X3,],,,0X6,],;,_,,,z_,,,_,,,_,:,Array,[,String,,,04,],),{,},},Class,_,:,r,{,Val,$9,:,Array,[,String,,,1,],;,},<EOF>''',
                101
            )
        )

    def test_3483(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__{}Class _:t{}Class _F:_{qy(__2:Array [Array [Array [Array [Array [String ,0B1011],0X6C_9_0],0xE_CD3],0B1],0142]){} }''',
                '''Class,_,:,__,{,},Class,_,:,t,{,},Class,_F,:,_,{,qy,(,__2,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1011,],,,0X6C90,],,,0xECD3,],,,0B1,],,,0142,],),{,},},<EOF>''',
                101
            )
        )

    def test_3484(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T:_k_{}Class _34Xv1_tP:Id{$X(V62,_,N,C:Array [Array [Boolean ,0B1000101],0X26]){}Val _:Float ;}Class _{t_(){Continue ;} }Class _:n{}Class D:m{M(){} }''',
                '''Class,T,:,_k_,{,},Class,_34Xv1_tP,:,Id,{,$X,(,V62,,,_,,,N,,,C,:,Array,[,Array,[,Boolean,,,0B1000101,],,,0X26,],),{,},Val,_,:,Float,;,},Class,_,{,t_,(,),{,Continue,;,},},Class,_,:,n,{,},Class,D,:,m,{,M,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3485(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{Constructor (__,_:_9;l:_){Return ;}Constructor (y_:Array [String ,075]){}Constructor (_,_y_7:Boolean ;e9__:String ;a_8:Array [String ,0x60]){} }''',
                '''Class,K,{,Constructor,(,__,,,_,:,_9,;,l,:,_,),{,Return,;,},Constructor,(,y_,:,Array,[,String,,,075,],),{,},Constructor,(,_,,,_y_7,:,Boolean,;,e9__,:,String,;,a_8,:,Array,[,String,,,0x60,],),{,},},<EOF>''',
                101
            )
        )

    def test_3486(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Io:u{__h78v(_3KY,__:Int ;M_u,_:Array [Int ,5];F,_98,t,gu:Array [Int ,0b100110];_7:Boolean ;n,r_,R:Array [Array [Float ,0B10],064];Y6,_6:Array [Array [Boolean ,0B111101],02];_,Z,_S_:y){}Var I:Array [Array [Array [Boolean ,0X49],41],41];}''',
                '''Class,_Io,:,u,{,__h78v,(,_3KY,,,__,:,Int,;,M_u,,,_,:,Array,[,Int,,,5,],;,F,,,_98,,,t,,,gu,:,Array,[,Int,,,0b100110,],;,_7,:,Boolean,;,n,,,r_,,,R,:,Array,[,Array,[,Float,,,0B10,],,,064,],;,Y6,,,_6,:,Array,[,Array,[,Boolean,,,0B111101,],,,02,],;,_,,,Z,,,_S_,:,y,),{,},Var,I,:,Array,[,Array,[,Array,[,Boolean,,,0X49,],,,41,],,,41,],;,},<EOF>''',
                101
            )
        )

    def test_3487(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class TaT_:y___{Destructor (){Val I:Array [Array [Int ,4_8],1];Var _5_,c:Array [Array [Array [Boolean ,01],5_3],5_1_8];} }''',
                '''Class,_,{,},Class,TaT_,:,y___,{,Destructor,(,),{,Val,I,:,Array,[,Array,[,Int,,,48,],,,1,],;,Var,_5_,,,c,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,53,],,,518,],;,},},<EOF>''',
                101
            )
        )

    def test_3488(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_5_6_(_:y;_:Array [Array [Array [Float ,0XA_5_F_E_0_8],0X44],036];d,_,_,___d,_,_:Array [Array [Array [Array [String ,036],0XF],0X44],50]){}$_(l1F_,_mX31,r_Y,_6_,_:Boolean ){Continue ;} }Class _:P{}Class _{Var $66_j,_i:Array [Float ,0B1000];Destructor (){} }''',
                '''Class,_,{,_5_6_,(,_,:,y,;,_,:,Array,[,Array,[,Array,[,Float,,,0XA5FE08,],,,0X44,],,,036,],;,d,,,_,,,_,,,___d,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,036,],,,0XF,],,,0X44,],,,50,],),{,},$_,(,l1F_,,,_mX31,,,r_Y,,,_6_,,,_,:,Boolean,),{,Continue,;,},},Class,_,:,P,{,},Class,_,{,Var,$66_j,,,_i,:,Array,[,Float,,,0B1000,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3489(self):
        self.assertTrue(
            TestLexer.test(
                '''Class eb{V(G0:Int ;__W:Array [String ,01_1]){Break ;} }Class X:_{Val f:Float ;Destructor (){}$cL8(__3_8:Boolean ;o_b:Array [Array [Array [String ,16],16],16];T___,Q_5,_a_,_,S:Boolean ;GwIG:Boolean ){Return ;}Destructor (){Continue ;} }Class _{Destructor (){}Val __3,_6r2:_;}Class YR:N{_(){}Var $byR6_:Int ;}''',
                '''Class,eb,{,V,(,G0,:,Int,;,__W,:,Array,[,String,,,011,],),{,Break,;,},},Class,X,:,_,{,Val,f,:,Float,;,Destructor,(,),{,},$cL8,(,__3_8,:,Boolean,;,o_b,:,Array,[,Array,[,Array,[,String,,,16,],,,16,],,,16,],;,T___,,,Q_5,,,_a_,,,_,,,S,:,Boolean,;,GwIG,:,Boolean,),{,Return,;,},Destructor,(,),{,Continue,;,},},Class,_,{,Destructor,(,),{,},Val,__3,,,_6r2,:,_,;,},Class,YR,:,N,{,_,(,),{,},Var,$byR6_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3490(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J:_{Var _:_;$_(_:Boolean ;_,K,_:Boolean ;_2,_,_:Array [Array [Boolean ,62],0B1_1_1]){Continue ;}$__(){} }Class D_{}''',
                '''Class,J,:,_,{,Var,_,:,_,;,$_,(,_,:,Boolean,;,_,,,K,,,_,:,Boolean,;,_2,,,_,,,_,:,Array,[,Array,[,Boolean,,,62,],,,0B111,],),{,Continue,;,},$__,(,),{,},},Class,D_,{,},<EOF>''',
                101
            )
        )

    def test_3491(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:c0{Constructor (e6:Int ){} }Class __6{}Class _:n{Val $_,c__d,m:Array [Array [Float ,0XB],3_36];Constructor (){}Destructor (){Break ;} }''',
                '''Class,_,:,c0,{,Constructor,(,e6,:,Int,),{,},},Class,__6,{,},Class,_,:,n,{,Val,$_,,,c__d,,,m,:,Array,[,Array,[,Float,,,0XB,],,,336,],;,Constructor,(,),{,},Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3492(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2:D{_(_I,_t:String ;w,J:n;g3:Array [Array [Array [Float ,0X5],0x38],0B10100]){}Destructor (){_::$_WS88d();Null ._();}Var _d:_;Destructor (){Var A,N1S,_:Array [Array [Array [Array [Array [Array [Array [Float ,025],0X2D],79],07_7],0b10],0X2D],025];} }Class L{}''',
                '''Class,_2,:,D,{,_,(,_I,,,_t,:,String,;,w,,,J,:,n,;,g3,:,Array,[,Array,[,Array,[,Float,,,0X5,],,,0x38,],,,0B10100,],),{,},Destructor,(,),{,_,::,$_WS88d,(,),;,Null,.,_,(,),;,},Var,_d,:,_,;,Destructor,(,),{,Var,A,,,N1S,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,025,],,,0X2D,],,,79,],,,077,],,,0b10,],,,0X2D,],,,025,],;,},},Class,L,{,},<EOF>''',
                101
            )
        )

    def test_3493(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{Constructor (){Var e9S9,BJ1,_,_,s:Int ;} }Class __7{Val $r,_:Array [Array [Array [Array [Boolean ,0XE],8],06_7_6],0xE];}''',
                '''Class,t,{,Constructor,(,),{,Var,e9S9,,,BJ1,,,_,,,_,,,s,:,Int,;,},},Class,__7,{,Val,$r,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XE,],,,8,],,,0676,],,,0xE,],;,},<EOF>''',
                101
            )
        )

    def test_3494(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_m{}Class _1555:ME{$Xs(){} }Class aKY41:V{Constructor (A_,w0:Boolean ){}__7(){Continue ;}Destructor (){} }Class AIg{Destructor (){} }''',
                '''Class,J_m,{,},Class,_1555,:,ME,{,$Xs,(,),{,},},Class,aKY41,:,V,{,Constructor,(,A_,,,w0,:,Boolean,),{,},__7,(,),{,Continue,;,},Destructor,(,),{,},},Class,AIg,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3495(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:Y{}Class Z{Constructor (T9:i_;f:Float ;__y_:_;_20,s:Array [Array [Array [Array [Boolean ,0122],05],0122],57];_8,p:String ;S3z,_s,__t,_:Float ;Y,Z,_XM:Float ){} }''',
                '''Class,_1,:,Y,{,},Class,Z,{,Constructor,(,T9,:,i_,;,f,:,Float,;,__y_,:,_,;,_20,,,s,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0122,],,,05,],,,0122,],,,57,],;,_8,,,p,:,String,;,S3z,,,_s,,,__t,,,_,:,Float,;,Y,,,Z,,,_XM,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3496(self):
        self.assertTrue(
            TestLexer.test(
                '''Class WP_O:_{Var f,___,$O,$__0_67:Array [Array [Array [Array [Array [String ,80],80],03],26],075];Constructor (){} }Class _o{Destructor (){} }''',
                '''Class,WP_O,:,_,{,Var,f,,,___,,,$O,,,$__0_67,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,80,],,,80,],,,03,],,,26,],,,075,],;,Constructor,(,),{,},},Class,_o,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3497(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s9_Os:__{$D8(A,tt6l:Array [Int ,76];oH,A,_:w_;_9:Array [Int ,0X12];U7,c:Q){Var _5,x:Array [Array [Boolean ,0B1_0],0B1001];} }Class _:i{Val __B,Lf:_;}''',
                '''Class,_s9_Os,:,__,{,$D8,(,A,,,tt6l,:,Array,[,Int,,,76,],;,oH,,,A,,,_,:,w_,;,_9,:,Array,[,Int,,,0X12,],;,U7,,,c,:,Q,),{,Var,_5,,,x,:,Array,[,Array,[,Boolean,,,0B10,],,,0B1001,],;,},},Class,_,:,i,{,Val,__B,,,Lf,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3498(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__5_{Constructor (){} }Class _H:Z{}Class ___{_(__:Array [Boolean ,0xF]){Continue ;} }Class _:_{}Class v__:_{}Class _7{}''',
                '''Class,_,:,__5_,{,Constructor,(,),{,},},Class,_H,:,Z,{,},Class,___,{,_,(,__,:,Array,[,Boolean,,,0xF,],),{,Continue,;,},},Class,_,:,_,{,},Class,v__,:,_,{,},Class,_7,{,},<EOF>''',
                101
            )
        )

    def test_3499(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D:V_{Constructor (p,___,_:_;d_,g8:_1;T:h;__,_,_2_9,__60u3:Array [Boolean ,05];e,__:String ){}Var $jf4,e,_T0_:__;Destructor (){Continue ;} }''',
                '''Class,D,:,V_,{,Constructor,(,p,,,___,,,_,:,_,;,d_,,,g8,:,_1,;,T,:,h,;,__,,,_,,,_2_9,,,__60u3,:,Array,[,Boolean,,,05,],;,e,,,__,:,String,),{,},Var,$jf4,,,e,,,_T0_,:,__,;,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3500(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gb:_{$_xA_c1(_:_){} }Class _:Sq41DG{Var e__,_:Array [Array [Array [Array [String ,59],0B10],02],47_9_74_0];}Class _{}''',
                '''Class,gb,:,_,{,$_xA_c1,(,_,:,_,),{,},},Class,_,:,Sq41DG,{,Var,e__,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,59,],,,0B10,],,,02,],,,479740,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3501(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gK:_{Constructor (J56:Array [Array [Array [Boolean ,0B11000],0B11_1],02];TvO:Float ;_5__:n;_,M_:Float ;_,_:Int ;f_Kji:Int ;_:Array [Array [Array [Array [String ,017],0B1_0_0],0X33],0x9]){}$g_p6(_79,g:_0;OJW_,__9,i,G,__01:Float ;_,_,_:_;V:Array [Array [Int ,017],051_40_5]){}Val $__:_;}''',
                '''Class,gK,:,_,{,Constructor,(,J56,:,Array,[,Array,[,Array,[,Boolean,,,0B11000,],,,0B111,],,,02,],;,TvO,:,Float,;,_5__,:,n,;,_,,,M_,:,Float,;,_,,,_,:,Int,;,f_Kji,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,017,],,,0B100,],,,0X33,],,,0x9,],),{,},$g_p6,(,_79,,,g,:,_0,;,OJW_,,,__9,,,i,,,G,,,__01,:,Float,;,_,,,_,,,_,:,_,;,V,:,Array,[,Array,[,Int,,,017,],,,051405,],),{,},Val,$__,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3502(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:q725{Var _4,$2:Array [Array [String ,01_67],043];}Class GJcv_1_{}Class __8:d{}Class _:V6A3M3{}Class _{}Class X:K9{}Class _6__S__Z7:nYP_{}Class H_{}Class _{Destructor (){_::$_();} }''',
                '''Class,_,:,q725,{,Var,_4,,,$2,:,Array,[,Array,[,String,,,0167,],,,043,],;,},Class,GJcv_1_,{,},Class,__8,:,d,{,},Class,_,:,V6A3M3,{,},Class,_,{,},Class,X,:,K9,{,},Class,_6__S__Z7,:,nYP_,{,},Class,H_,{,},Class,_,{,Destructor,(,),{,_,::,$_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3503(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ox{i9_(KR3:Array [String ,0b101011];_:Array [Boolean ,76]){}$X(_Z,_E,p,a,_7G:m;H_,_0n:_){}Val $_:PN4;Val $K1____:Array [Boolean ,060];}''',
                '''Class,Ox,{,i9_,(,KR3,:,Array,[,String,,,0b101011,],;,_,:,Array,[,Boolean,,,76,],),{,},$X,(,_Z,,,_E,,,p,,,a,,,_7G,:,m,;,H_,,,_0n,:,_,),{,},Val,$_,:,PN4,;,Val,$K1____,:,Array,[,Boolean,,,060,],;,},<EOF>''',
                101
            )
        )

    def test_3504(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b__{Var $8_D2:Array [Array [Array [Int ,0B11],077],52];Var $_Oa_6,$S:String ;Var rX1_:_CY;Var $__,$_1,_:Array [String ,04_37_7];}''',
                '''Class,b__,{,Var,$8_D2,:,Array,[,Array,[,Array,[,Int,,,0B11,],,,077,],,,52,],;,Var,$_Oa_6,,,$S,:,String,;,Var,rX1_,:,_CY,;,Var,$__,,,$_1,,,_,:,Array,[,String,,,04377,],;,},<EOF>''',
                101
            )
        )

    def test_3505(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Q_{Constructor (__,o__,_,dj:Array [Array [Boolean ,38],076];H,_51:Array [Array [Float ,0X2_59_6AC],06_5];__,_zv_,_6,_,_:Array [Array [Boolean ,076],0b10]){ {Val _,C:Array [Float ,38];} }Val $2:String ;}''',
                '''Class,_,:,Q_,{,Constructor,(,__,,,o__,,,_,,,dj,:,Array,[,Array,[,Boolean,,,38,],,,076,],;,H,,,_51,:,Array,[,Array,[,Float,,,0X2596AC,],,,065,],;,__,,,_zv_,,,_6,,,_,,,_,:,Array,[,Array,[,Boolean,,,076,],,,0b10,],),{,{,Val,_,,,C,:,Array,[,Float,,,38,],;,},},Val,$2,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3506(self):
        self.assertTrue(
            TestLexer.test(
                '''Class cLW:p_y4I_{}Class _:_{}Class t1:_o3S9_24J{_u_Q(_G:Array [Array [Boolean ,07],0B1_1];__,A,_S:Float ;_:Boolean ){} }''',
                '''Class,cLW,:,p_y4I_,{,},Class,_,:,_,{,},Class,t1,:,_o3S9_24J,{,_u_Q,(,_G,:,Array,[,Array,[,Boolean,,,07,],,,0B11,],;,__,,,A,,,_S,:,Float,;,_,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3507(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0:r{}Class _3{}Class z6s:Q{Var EO,A0_,$3,C:Array [Array [Array [Array [Array [Array [Array [Int ,046],0x3D],0X7_9A_3_1_9],0xD_52],0X46],48],48];}Class k1:_y_{}Class p{}''',
                '''Class,_0,:,r,{,},Class,_3,{,},Class,z6s,:,Q,{,Var,EO,,,A0_,,,$3,,,C,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,046,],,,0x3D,],,,0X79A319,],,,0xD52,],,,0X46,],,,48,],,,48,],;,},Class,k1,:,_y_,{,},Class,p,{,},<EOF>''',
                101
            )
        )

    def test_3508(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:_{Constructor (){}Val $v,$19_:Array [Array [Array [Array [Array [Array [Array [Array [String ,066],0b10],06],0XD],0B100011],9],10_8],066];}Class _:_{Var $5,Oy,_o,$3:Int ;}''',
                '''Class,F,:,_,{,Constructor,(,),{,},Val,$v,,,$19_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,066,],,,0b10,],,,06,],,,0XD,],,,0B100011,],,,9,],,,108,],,,066,],;,},Class,_,:,_,{,Var,$5,,,Oy,,,_o,,,$3,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3509(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{Constructor (f:_H){}Constructor (G4:String ){Continue ;}vI_(){}Constructor (Y__6_7:Int ;F,_y_9_,_,_e,Q:_){} }''',
                '''Class,i,{,Constructor,(,f,:,_H,),{,},Constructor,(,G4,:,String,),{,Continue,;,},vI_,(,),{,},Constructor,(,Y__6_7,:,Int,;,F,,,_y_9_,,,_,,,_e,,,Q,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3510(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{$9F(U,_95p_,_,__:Int ;i453:Int ;U:Array [Array [Boolean ,0114],0b1]){}Destructor (){}Var Y_b:Array [Boolean ,0xC];}''',
                '''Class,e,{,$9F,(,U,,,_95p_,,,_,,,__,:,Int,;,i453,:,Int,;,U,:,Array,[,Array,[,Boolean,,,0114,],,,0b1,],),{,},Destructor,(,),{,},Var,Y_b,:,Array,[,Boolean,,,0xC,],;,},<EOF>''',
                101
            )
        )

    def test_3511(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{Constructor (){}Val nA,$c8_S2_:String ;Var L_2:Array [String ,61];}Class _5N{Var __,$__,__:Array [Array [Float ,0b1],05];}Class _O{}''',
                '''Class,V,{,Constructor,(,),{,},Val,nA,,,$c8_S2_,:,String,;,Var,L_2,:,Array,[,String,,,61,],;,},Class,_5N,{,Var,__,,,$__,,,__,:,Array,[,Array,[,Float,,,0b1,],,,05,],;,},Class,_O,{,},<EOF>''',
                101
            )
        )

    def test_3512(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N3Z_{}Class _S7h:___{}Class p:wB2{}Class _{Var V_:Array [Array [Array [Array [Array [String ,0X15],0x27],0132],6],0X15];}''',
                '''Class,N3Z_,{,},Class,_S7h,:,___,{,},Class,p,:,wB2,{,},Class,_,{,Var,V_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X15,],,,0x27,],,,0132,],,,6,],,,0X15,],;,},<EOF>''',
                101
            )
        )

    def test_3513(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val O_G47x_9,$_b:Array [Boolean ,0x3C];}Class _{}Class Rj{}Class f:zN{Var $F_:G;Constructor (){}Var _:Array [Boolean ,0x6];Constructor (_v2D,__76:Float ;_6v,__v,J,b2,K,e:Boolean ;Ui:Float ){} }Class __y9{}''',
                '''Class,_,{,Val,O_G47x_9,,,$_b,:,Array,[,Boolean,,,0x3C,],;,},Class,_,{,},Class,Rj,{,},Class,f,:,zN,{,Var,$F_,:,G,;,Constructor,(,),{,},Var,_,:,Array,[,Boolean,,,0x6,],;,Constructor,(,_v2D,,,__76,:,Float,;,_6v,,,__v,,,J,,,b2,,,K,,,e,:,Boolean,;,Ui,:,Float,),{,},},Class,__y9,{,},<EOF>''',
                101
            )
        )

    def test_3514(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i_:_Y{Val $5,BR,A2,$9,_73O,r,_:Array [Float ,0XC];F(){}$2(__a___E,f_,L35D,_,a:Array [Int ,0111]){} }Class W:v{}''',
                '''Class,i_,:,_Y,{,Val,$5,,,BR,,,A2,,,$9,,,_73O,,,r,,,_,:,Array,[,Float,,,0XC,],;,F,(,),{,},$2,(,__a___E,,,f_,,,L35D,,,_,,,a,:,Array,[,Int,,,0111,],),{,},},Class,W,:,v,{,},<EOF>''',
                101
            )
        )

    def test_3515(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _S:H{$X(C:Array [Array [Float ,0B1000011],0B1000011];_:Boolean ){} }Class _4:ps_{$YD(q:String ){} }Class _Q_{Val _7_:Boolean ;}''',
                '''Class,_S,:,H,{,$X,(,C,:,Array,[,Array,[,Float,,,0B1000011,],,,0B1000011,],;,_,:,Boolean,),{,},},Class,_4,:,ps_,{,$YD,(,q,:,String,),{,},},Class,_Q_,{,Val,_7_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3516(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{$_2(_,__,_piw_:i){Var _,w:_F64__;}Constructor (H,_,_,F:Float ;zs,h,f4dS_c,w,S:Array [Array [Float ,49],0B11_0_0]){} }Class _32{}''',
                '''Class,J,{,$_2,(,_,,,__,,,_piw_,:,i,),{,Var,_,,,w,:,_F64__,;,},Constructor,(,H,,,_,,,_,,,F,:,Float,;,zs,,,h,,,f4dS_c,,,w,,,S,:,Array,[,Array,[,Float,,,49,],,,0B1100,],),{,},},Class,_32,{,},<EOF>''',
                101
            )
        )

    def test_3517(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gW5:_76{Constructor (){}Var _:Array [Array [Float ,0b101],0X39];f(_M:Array [Array [Array [Array [Array [Float ,0b101],0b11],0B1001101],0x31],044];g:Array [Boolean ,0X39];_,_:Int ){} }Class _RL6{}Class _{}''',
                '''Class,gW5,:,_76,{,Constructor,(,),{,},Var,_,:,Array,[,Array,[,Float,,,0b101,],,,0X39,],;,f,(,_M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b101,],,,0b11,],,,0B1001101,],,,0x31,],,,044,],;,g,:,Array,[,Boolean,,,0X39,],;,_,,,_,:,Int,),{,},},Class,_RL6,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3518(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_I,s:_;_,_:Array [Int ,0X9_3];A,_,AI,q:Boolean ;K2,_P_,W:Float ){Continue ;} }Class _:_2_{}''',
                '''Class,_,{,Constructor,(,_I,,,s,:,_,;,_,,,_,:,Array,[,Int,,,0X93,],;,A,,,_,,,AI,,,q,:,Boolean,;,K2,,,_P_,,,W,:,Float,),{,Continue,;,},},Class,_,:,_2_,{,},<EOF>''',
                101
            )
        )

    def test_3519(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K1:z_{Destructor (){}Constructor (k_,z,J:D;M:Int ;_h,c:Array [Boolean ,05]){Continue ;Val _:String ;} }Class zK____:_2_{}Class Y5__d{}''',
                '''Class,K1,:,z_,{,Destructor,(,),{,},Constructor,(,k_,,,z,,,J,:,D,;,M,:,Int,;,_h,,,c,:,Array,[,Boolean,,,05,],),{,Continue,;,Val,_,:,String,;,},},Class,zK____,:,_2_,{,},Class,Y5__d,{,},<EOF>''',
                101
            )
        )

    def test_3520(self):
        self.assertTrue(
            TestLexer.test(
                '''Class rj{}Class _{Val $7:Array [Array [Int ,0B1010010],9]=---"'"'"'"".y.__().Z().i()._()._30b3_._();}Class _{Constructor (w3,_69_:Boolean ){} }Class UV:_{}''',
                '''Class,rj,{,},Class,_,{,Val,$7,:,Array,[,Array,[,Int,,,0B1010010,],,,9,],=,-,-,-,'"'"'",.,y,.,__,(,),.,Z,(,),.,i,(,),.,_,(,),.,_30b3_,.,_,(,),;,},Class,_,{,Constructor,(,w3,,,_69_,:,Boolean,),{,},},Class,UV,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3521(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y3_{}Class _x7{Y_4(_,_Z,u:_____3;_,l,z:Array [Array [Array [Array [Int ,0X1],72],0B1001101],0b110101];_O:String ){} }Class O6_:E{}''',
                '''Class,y3_,{,},Class,_x7,{,Y_4,(,_,,,_Z,,,u,:,_____3,;,_,,,l,,,z,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X1,],,,72,],,,0B1001101,],,,0b110101,],;,_O,:,String,),{,},},Class,O6_,:,E,{,},<EOF>''',
                101
            )
        )

    def test_3522(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{$08O_(k,__,_:Boolean ;j,_0gs:_;s_:I9L;Lo,nb:Array [Array [Array [Array [String ,93_8_1_7],0b1],0xC],0xC]){}Val V,$32:Array [Array [String ,0B101111],4_7];}Class __4Z:m0{}''',
                '''Class,q,{,$08O_,(,k,,,__,,,_,:,Boolean,;,j,,,_0gs,:,_,;,s_,:,I9L,;,Lo,,,nb,:,Array,[,Array,[,Array,[,Array,[,String,,,93817,],,,0b1,],,,0xC,],,,0xC,],),{,},Val,V,,,$32,:,Array,[,Array,[,String,,,0B101111,],,,47,],;,},Class,__4Z,:,m0,{,},<EOF>''',
                101
            )
        )

    def test_3523(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_____9_:H{Constructor (R__:o_;_:Float ;Q__A,_A,Z_:Array [Array [Array [Array [String ,0XA],042],0B1010111],3]){}Destructor (){}Constructor (G,j3,_,_1,_:String ){}$5_0(__:Array [Array [Float ,01],07];c8,_37F__,_:Int ){}__2(_,b,_2,C_0_,_:_;_:Int ;HEd__,z:String ;A:__34;R,_:Array [String ,0B11];_,_:Array [Array [Array [Array [Array [Array [Int ,0B1010111],0XA],0B1],0b11111],0b11111],0XC0_2]){} }Class _u6_:_{}''',
                '''Class,_1_____9_,:,H,{,Constructor,(,R__,:,o_,;,_,:,Float,;,Q__A,,,_A,,,Z_,:,Array,[,Array,[,Array,[,Array,[,String,,,0XA,],,,042,],,,0B1010111,],,,3,],),{,},Destructor,(,),{,},Constructor,(,G,,,j3,,,_,,,_1,,,_,:,String,),{,},$5_0,(,__,:,Array,[,Array,[,Float,,,01,],,,07,],;,c8,,,_37F__,,,_,:,Int,),{,},__2,(,_,,,b,,,_2,,,C_0_,,,_,:,_,;,_,:,Int,;,HEd__,,,z,:,String,;,A,:,__34,;,R,,,_,:,Array,[,String,,,0B11,],;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1010111,],,,0XA,],,,0B1,],,,0b11111,],,,0b11111,],,,0XC02,],),{,},},Class,_u6_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3524(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:E{Val $7wf:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0b1010111],0xF],25],0XD647B],0x61],0B1_11],25],0b1010111],0X15_2];P(){} }''',
                '''Class,_,:,E,{,Val,$7wf,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1010111,],,,0xF,],,,25,],,,0XD647B,],,,0x61,],,,0B111,],,,25,],,,0b1010111,],,,0X152,],;,P,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3525(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{M(_:Array [Int ,0B10];_,_4:Array [Array [Array [Array [Float ,54],0xB],0B1100000],0b1001101];L,W_2:Int ){Continue ;Continue ;} }Class __:DJe{}''',
                '''Class,_,{,M,(,_,:,Array,[,Int,,,0B10,],;,_,,,_4,:,Array,[,Array,[,Array,[,Array,[,Float,,,54,],,,0xB,],,,0B1100000,],,,0b1001101,],;,L,,,W_2,:,Int,),{,Continue,;,Continue,;,},},Class,__,:,DJe,{,},<EOF>''',
                101
            )
        )

    def test_3526(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _41:j0{}Class _H:___c_{}Class _F{Constructor (){}_(_1:String ){}$v(_1:Array [Array [Array [Int ,10],0x20],0x20];__G_,__T:Float ;_G:Int ){}Destructor (){} }''',
                '''Class,_41,:,j0,{,},Class,_H,:,___c_,{,},Class,_F,{,Constructor,(,),{,},_,(,_1,:,String,),{,},$v,(,_1,:,Array,[,Array,[,Array,[,Int,,,10,],,,0x20,],,,0x20,],;,__G_,,,__T,:,Float,;,_G,:,Int,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3527(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class k_l:D{Val $9_,vV49,$d,$_x4z,e,_N_:f8;}Class _0{Destructor (){ {} }Var $b5r_gd0,wK,$g32,N859__:Array [String ,39];}''',
                '''Class,_,{,},Class,k_l,:,D,{,Val,$9_,,,vV49,,,$d,,,$_x4z,,,e,,,_N_,:,f8,;,},Class,_0,{,Destructor,(,),{,{,},},Var,$b5r_gd0,,,wK,,,$g32,,,N859__,:,Array,[,String,,,39,],;,},<EOF>''',
                101
            )
        )

    def test_3528(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h0:_{$_X(O7E,u_,_,IP_8,q,V__:_;h,H5,_1,q6,_7,g:F_;_,x17,E:Array [Boolean ,0x39];__:String ){} }Class Z:x{}''',
                '''Class,h0,:,_,{,$_X,(,O7E,,,u_,,,_,,,IP_8,,,q,,,V__,:,_,;,h,,,H5,,,_1,,,q6,,,_7,,,g,:,F_,;,_,,,x17,,,E,:,Array,[,Boolean,,,0x39,],;,__,:,String,),{,},},Class,Z,:,x,{,},<EOF>''',
                101
            )
        )

    def test_3529(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{}Class __{}Class _ks__:VY___6{Constructor (){Continue ;}Val $_:Array [String ,0b1];}Class Uf_:_7{}Class qF:_{}Class ____03zI{}Class _:_U{}''',
                '''Class,t,{,},Class,__,{,},Class,_ks__,:,VY___6,{,Constructor,(,),{,Continue,;,},Val,$_,:,Array,[,String,,,0b1,],;,},Class,Uf_,:,_7,{,},Class,qF,:,_,{,},Class,____03zI,{,},Class,_,:,_U,{,},<EOF>''',
                101
            )
        )

    def test_3530(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o__:_{Var _:Float ;}Class __4{$7(){}Destructor (){New m().s()._();Continue ;}Constructor (){Break ;} }Class _51:E{}Class g_Z:ldKa{}''',
                '''Class,o__,:,_,{,Var,_,:,Float,;,},Class,__4,{,$7,(,),{,},Destructor,(,),{,New,m,(,),.,s,(,),.,_,(,),;,Continue,;,},Constructor,(,),{,Break,;,},},Class,_51,:,E,{,},Class,g_Z,:,ldKa,{,},<EOF>''',
                101
            )
        )

    def test_3531(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _SL{Constructor (){Var e_p_0,g_,T,GO_,_,S:L;}Val $G:Array [Array [Array [Boolean ,0b10_00],81],075];Destructor (){}Val $__,$f8:zj8;}Class l8_:_{}''',
                '''Class,_SL,{,Constructor,(,),{,Var,e_p_0,,,g_,,,T,,,GO_,,,_,,,S,:,L,;,},Val,$G,:,Array,[,Array,[,Array,[,Boolean,,,0b1000,],,,81,],,,075,],;,Destructor,(,),{,},Val,$__,,,$f8,:,zj8,;,},Class,l8_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3532(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __EO{}Class _{}Class c2_{Constructor (){ {} }}Class D81_e{c(){}$3_(){Var r,_V_:Array [Array [Array [String ,7_0_9_0],0b1000101],0b1000101];}Var U:_;}''',
                '''Class,__EO,{,},Class,_,{,},Class,c2_,{,Constructor,(,),{,{,},},},Class,D81_e,{,c,(,),{,},$3_,(,),{,Var,r,,,_V_,:,Array,[,Array,[,Array,[,String,,,7090,],,,0b1000101,],,,0b1000101,],;,},Var,U,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3533(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Sec{Var _9,$G,$B:r;Val __u,$s_6e_,$__:_;Constructor (_0f_:Array [Boolean ,2];__,_,_A:String ;_s:Array [Boolean ,0b111101]){Continue ;n::$_2.__._();} }''',
                '''Class,Sec,{,Var,_9,,,$G,,,$B,:,r,;,Val,__u,,,$s_6e_,,,$__,:,_,;,Constructor,(,_0f_,:,Array,[,Boolean,,,2,],;,__,,,_,,,_A,:,String,;,_s,:,Array,[,Boolean,,,0b111101,],),{,Continue,;,n,::,$_2,.,__,.,_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3534(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class ___G{Constructor (WV,_,_,_:String ;nU1,J:Array [String ,83];_9_:Array [Array [String ,83],0X93]){Break ;} }Class B:n2_i4_nS_{Constructor (__7,z5:Array [Float ,0X7];_2:String ;_7e5_,T:Array [Int ,0XB];_:Array [Array [Array [Array [Array [Array [Int ,0B1],44],055],031],0b1011],0xB]){Break ;} }''',
                '''Class,_,{,},Class,___G,{,Constructor,(,WV,,,_,,,_,,,_,:,String,;,nU1,,,J,:,Array,[,String,,,83,],;,_9_,:,Array,[,Array,[,String,,,83,],,,0X93,],),{,Break,;,},},Class,B,:,n2_i4_nS_,{,Constructor,(,__7,,,z5,:,Array,[,Float,,,0X7,],;,_2,:,String,;,_7e5_,,,T,:,Array,[,Int,,,0XB,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,44,],,,055,],,,031,],,,0b1011,],,,0xB,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3535(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Vi_qT:__{Var $_L:_2f;Constructor (_902:Array [Array [Array [Array [Int ,0x1],74],021],0b101011]){}Constructor (_:W7;F:W;M_:E5w;W,__:Array [Array [Int ,0B1001010],0xBB]){Return ;}Constructor (){} }Class y{}''',
                '''Class,Vi_qT,:,__,{,Var,$_L,:,_2f,;,Constructor,(,_902,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x1,],,,74,],,,021,],,,0b101011,],),{,},Constructor,(,_,:,W7,;,F,:,W,;,M_,:,E5w,;,W,,,__,:,Array,[,Array,[,Int,,,0B1001010,],,,0xBB,],),{,Return,;,},Constructor,(,),{,},},Class,y,{,},<EOF>''',
                101
            )
        )

    def test_3536(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class l{}Class _5{}Class v6:kf_{Destructor (){Break ;}Var $p,_,$W_,pEk22_:e13__;Constructor (t:_vYe){ {} }}Class __Q{}''',
                '''Class,_,:,_,{,},Class,l,{,},Class,_5,{,},Class,v6,:,kf_,{,Destructor,(,),{,Break,;,},Var,$p,,,_,,,$W_,,,pEk22_,:,e13__,;,Constructor,(,t,:,_vYe,),{,{,},},},Class,__Q,{,},<EOF>''',
                101
            )
        )

    def test_3537(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S22:w{_(n,_4:Array [Array [Array [Float ,0B1101],0x14],6];_1Q:Array [Float ,0X62_9B]){} }Class _{$_3_(_,_:String ){} }Class S:_{}''',
                '''Class,S22,:,w,{,_,(,n,,,_4,:,Array,[,Array,[,Array,[,Float,,,0B1101,],,,0x14,],,,6,],;,_1Q,:,Array,[,Float,,,0X629B,],),{,},},Class,_,{,$_3_,(,_,,,_,:,String,),{,},},Class,S,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3538(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (fv_:String ){} }Class n__{}Class NV:W{Destructor (){}Constructor (__JynUG:_3i_){Continue ;} }''',
                '''Class,_,{,Constructor,(,fv_,:,String,),{,},},Class,n__,{,},Class,NV,:,W,{,Destructor,(,),{,},Constructor,(,__JynUG,:,_3i_,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3539(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E_{$b_(_,eH,_,L3:Array [Array [Float ,02_6],0X1E];a,z:Array [Array [Array [Array [String ,0X1E],041],07],0xE];_,d,_5,_DF__L:Int ){} }Class _{}''',
                '''Class,E_,{,$b_,(,_,,,eH,,,_,,,L3,:,Array,[,Array,[,Float,,,026,],,,0X1E,],;,a,,,z,:,Array,[,Array,[,Array,[,Array,[,String,,,0X1E,],,,041,],,,07,],,,0xE,],;,_,,,d,,,_5,,,_DF__L,:,Int,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3540(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _{}Class R4{Destructor (){} }Class p{Constructor (ZLc_8,_C:D;_7:awv;E4__:_6g5D;_,t:Array [String ,0X4_8];_b,_:E){}Var T,hH:String ;}''',
                '''Class,_,{,},Class,_,{,},Class,R4,{,Destructor,(,),{,},},Class,p,{,Constructor,(,ZLc_8,,,_C,:,D,;,_7,:,awv,;,E4__,:,_6g5D,;,_,,,t,:,Array,[,String,,,0X48,],;,_b,,,_,:,E,),{,},Var,T,,,hH,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3541(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jF6___1_3:_2{Var $T1,_,S,$_:Array [Array [Array [Array [Float ,4],52],0X25],52];}Class I{Var $_:Float ;_(){} }''',
                '''Class,jF6___1_3,:,_2,{,Var,$T1,,,_,,,S,,,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,4,],,,52,],,,0X25,],,,52,],;,},Class,I,{,Var,$_,:,Float,;,_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3542(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_0{Constructor (_,_LB051,__:R;_,_:Float ){Break ;} }Class _{}Class k{Var $8,$_g_:Float ;}Class _{}Class _E_{}Class yt_:i_833d{Val _:Array [String ,026];d5(_v:p;_:Array [Boolean ,0B1010]){} }Class _:jd{Destructor (){} }Class _:b_{}''',
                '''Class,__,:,_0,{,Constructor,(,_,,,_LB051,,,__,:,R,;,_,,,_,:,Float,),{,Break,;,},},Class,_,{,},Class,k,{,Var,$8,,,$_g_,:,Float,;,},Class,_,{,},Class,_E_,{,},Class,yt_,:,i_833d,{,Val,_,:,Array,[,String,,,026,],;,d5,(,_v,:,p,;,_,:,Array,[,Boolean,,,0B1010,],),{,},},Class,_,:,jd,{,Destructor,(,),{,},},Class,_,:,b_,{,},<EOF>''',
                101
            )
        )

    def test_3543(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{Var $5_,_,s:_;Val $4:Boolean ;Val $9,C,$40_,$5:Array [Float ,0B11101];$M(H9_,aI,Y,_3,C_,__:Boolean ){Var R,X:Array [Boolean ,0X2_5_F_9];} }''',
                '''Class,y,{,Var,$5_,,,_,,,s,:,_,;,Val,$4,:,Boolean,;,Val,$9,,,C,,,$40_,,,$5,:,Array,[,Float,,,0B11101,],;,$M,(,H9_,,,aI,,,Y,,,_3,,,C_,,,__,:,Boolean,),{,Var,R,,,X,:,Array,[,Boolean,,,0X25F9,],;,},},<EOF>''',
                101
            )
        )

    def test_3544(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:Bx{_(em_,_2,__,_:Float ){Val _9:Array [Int ,03];}$7__(sbID_,_:d){}Var $_,_:Int ;Destructor (){Continue ;} }''',
                '''Class,k,:,Bx,{,_,(,em_,,,_2,,,__,,,_,:,Float,),{,Val,_9,:,Array,[,Int,,,03,],;,},$7__,(,sbID_,,,_,:,d,),{,},Var,$_,,,_,:,Int,;,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3545(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e{}Class _:Q{Var $_:Array [Int ,0b1010101];Destructor (){ {} }}Class _2sj:b_{Val $__,$q:q;}Class _0{}Class R_Th:aB_t{}''',
                '''Class,_e,{,},Class,_,:,Q,{,Var,$_,:,Array,[,Int,,,0b1010101,],;,Destructor,(,),{,{,},},},Class,_2sj,:,b_,{,Val,$__,,,$q,:,q,;,},Class,_0,{,},Class,R_Th,:,aB_t,{,},<EOF>''',
                101
            )
        )

    def test_3546(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y{}Class _{Var _:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,84],0b1011000],0x60],84],05],84],0b1011000],05];Destructor (){} }''',
                '''Class,Y,{,},Class,_,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,84,],,,0b1011000,],,,0x60,],,,84,],,,05,],,,84,],,,0b1011000,],,,05,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3547(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2_v4:__7_{Var $l,$6,_:__5Ql;Var n,r:Array [Array [Array [Array [String ,0B11110],0X63],04],2_1];Constructor (eVf_gY:__){} }''',
                '''Class,_2_v4,:,__7_,{,Var,$l,,,$6,,,_,:,__5Ql,;,Var,n,,,r,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11110,],,,0X63,],,,04,],,,21,],;,Constructor,(,eVf_gY,:,__,),{,},},<EOF>''',
                101
            )
        )

    def test_3548(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{}Class X{_(_4_x,w:Array [Array [Int ,0x5],0B1101]){}Val $f,_E4,$oW,$_0:Array [Array [Array [Float ,0x5B],076_6_43],60];}''',
                '''Class,_1,{,},Class,X,{,_,(,_4_x,,,w,:,Array,[,Array,[,Int,,,0x5,],,,0B1101,],),{,},Val,$f,,,_E4,,,$oW,,,$_0,:,Array,[,Array,[,Array,[,Float,,,0x5B,],,,076643,],,,60,],;,},<EOF>''',
                101
            )
        )

    def test_3549(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _y:S{Var S,O_,$_,$1:Int ;}Class Ss:x{Val ixtC_2,_F:P;}Class _:__r{W__(P,fG,y,_,_1a,Q:q;_:Array [Float ,77]){}Destructor (){}Val _:k;}''',
                '''Class,_y,:,S,{,Var,S,,,O_,,,$_,,,$1,:,Int,;,},Class,Ss,:,x,{,Val,ixtC_2,,,_F,:,P,;,},Class,_,:,__r,{,W__,(,P,,,fG,,,y,,,_,,,_1a,,,Q,:,q,;,_,:,Array,[,Float,,,77,],),{,},Destructor,(,),{,},Val,_,:,k,;,},<EOF>''',
                101
            )
        )

    def test_3550(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J{}Class _{}Class b_o5__0{_(_Ive_:Q;_:Array [Int ,033]){} }Class q2_:U{}Class _:oi_{}Class _{Var K,j,_39,h_:Boolean ;}''',
                '''Class,J,{,},Class,_,{,},Class,b_o5__0,{,_,(,_Ive_,:,Q,;,_,:,Array,[,Int,,,033,],),{,},},Class,q2_,:,U,{,},Class,_,:,oi_,{,},Class,_,{,Var,K,,,j,,,_39,,,h_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3551(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_7{}Class C6_6:_0{Var _:Array [Int ,10];}Class _c:G{Constructor (_,_:Array [Boolean ,10];U_63,_8Z,S,_7:td){Continue ;}t(){} }''',
                '''Class,J_7,{,},Class,C6_6,:,_0,{,Var,_,:,Array,[,Int,,,10,],;,},Class,_c,:,G,{,Constructor,(,_,,,_,:,Array,[,Boolean,,,10,],;,U_63,,,_8Z,,,S,,,_7,:,td,),{,Continue,;,},t,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3552(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{Var $_5W98_,_:Array [Boolean ,07_6];Var _,$P9__:_q4;Constructor (_n:Boolean ;r,E:x;o:M;_,Jz,C__L0_:F;_,f,_Ko:Array [Array [Int ,0114],0X1E];dg,K:Int ;L:Array [String ,0b10101]){}__(){m0._();}Var wl_,$2_,$9,$47,aN:I;Val J:Float ;}''',
                '''Class,_8,{,Var,$_5W98_,,,_,:,Array,[,Boolean,,,076,],;,Var,_,,,$P9__,:,_q4,;,Constructor,(,_n,:,Boolean,;,r,,,E,:,x,;,o,:,M,;,_,,,Jz,,,C__L0_,:,F,;,_,,,f,,,_Ko,:,Array,[,Array,[,Int,,,0114,],,,0X1E,],;,dg,,,K,:,Int,;,L,:,Array,[,String,,,0b10101,],),{,},__,(,),{,m0,.,_,(,),;,},Var,wl_,,,$2_,,,$9,,,$47,,,aN,:,I,;,Val,J,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3553(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:__9_5__{Constructor (_53_6:Int ;b:Z_;_:t;B8:Array [Array [Array [String ,24],5_3],0X42];__F2:String ;d:l){} }''',
                '''Class,a,:,__9_5__,{,Constructor,(,_53_6,:,Int,;,b,:,Z_,;,_,:,t,;,B8,:,Array,[,Array,[,Array,[,String,,,24,],,,53,],,,0X42,],;,__F2,:,String,;,d,:,l,),{,},},<EOF>''',
                101
            )
        )

    def test_3554(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (A:Float ){}Val G3,_7:Array [Float ,03];}Class _{$Y7_(){}Val _:t;Val P,$_,$H,$S0:Array [Float ,0B11];Val $_:__;}Class _{}Class p:__Z{}Class r:_{}''',
                '''Class,_,{,Constructor,(,A,:,Float,),{,},Val,G3,,,_7,:,Array,[,Float,,,03,],;,},Class,_,{,$Y7_,(,),{,},Val,_,:,t,;,Val,P,,,$_,,,$H,,,$S0,:,Array,[,Float,,,0B11,],;,Val,$_,:,__,;,},Class,_,{,},Class,p,:,__Z,{,},Class,r,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3555(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _t8z0:q21{Var __Ci,$_:Int ;Var $4P__:Boolean ;$z_(){}Var s:Int ;Var _:Array [Array [Array [Array [Array [Float ,0x5_6_C],246],0X39],2],040];Val V_:Boolean ;}Class j_1{Val $L__,$_,$0:Array [Boolean ,0X8_0F];}Class _9M_{b(_:Boolean ;H:_T02;P:_VnB;_,_b:__;i_R,_,T7,_,_,N:_3w){} }''',
                '''Class,_t8z0,:,q21,{,Var,__Ci,,,$_,:,Int,;,Var,$4P__,:,Boolean,;,$z_,(,),{,},Var,s,:,Int,;,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x56C,],,,246,],,,0X39,],,,2,],,,040,],;,Val,V_,:,Boolean,;,},Class,j_1,{,Val,$L__,,,$_,,,$0,:,Array,[,Boolean,,,0X80F,],;,},Class,_9M_,{,b,(,_,:,Boolean,;,H,:,_T02,;,P,:,_VnB,;,_,,,_b,:,__,;,i_R,,,_,,,T7,,,_,,,_,,,N,:,_3w,),{,},},<EOF>''',
                101
            )
        )

    def test_3556(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1_{Constructor (Q:Array [Int ,7];_:Array [Array [Array [Boolean ,98],053],5_8];l5,M:_;_7:Float ){}Val j,$_,$l_:q_;}''',
                '''Class,_1_,{,Constructor,(,Q,:,Array,[,Int,,,7,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,98,],,,053,],,,58,],;,l5,,,M,:,_,;,_7,:,Float,),{,},Val,j,,,$_,,,$l_,:,q_,;,},<EOF>''',
                101
            )
        )

    def test_3557(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:l{Constructor (e,_,__R:Float ){}$__(x,J,s5p_d_:Array [Array [Array [Boolean ,0xE],87],0b1101]){}Var K:_;Var __,R9,$t:_;Var $_:E_O_;i_8__(){Break ;Return ;} }''',
                '''Class,W,:,l,{,Constructor,(,e,,,_,,,__R,:,Float,),{,},$__,(,x,,,J,,,s5p_d_,:,Array,[,Array,[,Array,[,Boolean,,,0xE,],,,87,],,,0b1101,],),{,},Var,K,:,_,;,Var,__,,,R9,,,$t,:,_,;,Var,$_,:,E_O_,;,i_8__,(,),{,Break,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3558(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:M3_4_L{Constructor (c,_,__By 9O:F;D_:Array [Array [Array [Array [Array [String ,0b11_0],0X9_61_2_6],07],0B10],62]){} }''',
                '''Class,f,:,M3_4_L,{,Constructor,(,c,,,_,,,__By,9,O,:,F,;,D_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b110,],,,0X96126,],,,07,],,,0B10,],,,62,],),{,},},<EOF>''',
                101
            )
        )

    def test_3559(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j1{}Class _2{Var __,_,$_5,$8C2_,$Y:Array [Array [Array [Array [Array [Array [Boolean ,0B110011],3],0x49],0132],04_2_2],91];}''',
                '''Class,j1,{,},Class,_2,{,Var,__,,,_,,,$_5,,,$8C2_,,,$Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110011,],,,3,],,,0x49,],,,0132,],,,0422,],,,91,],;,},<EOF>''',
                101
            )
        )

    def test_3560(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _{Var $_:Array [Array [Array [Array [Array [Boolean ,0B11001],0B1],06_4_1_7],07],02];$l(p:String ;__,v_,q:Int ){d::$A();} }''',
                '''Class,_,:,_,{,},Class,_,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11001,],,,0B1,],,,06417,],,,07,],,,02,],;,$l,(,p,:,String,;,__,,,v_,,,q,:,Int,),{,d,::,$A,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3561(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D1:oCSY83{}Class __{Var $0,$u:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B11100],02],0b1011001],055],055],12_21],0X20],0XF_C],07_1_3_0_30],0b1],9_3],3_1],3];$__(_:_;_:Array [Int ,0b1011001];_D_J,X,__:Array [Array [Array [Array [String ,4],0x2A],0B11100],055]){} }Class V{}''',
                '''Class,D1,:,oCSY83,{,},Class,__,{,Var,$0,,,$u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B11100,],,,02,],,,0b1011001,],,,055,],,,055,],,,1221,],,,0X20,],,,0XFC,],,,0713030,],,,0b1,],,,93,],,,31,],,,3,],;,$__,(,_,:,_,;,_,:,Array,[,Int,,,0b1011001,],;,_D_J,,,X,,,__,:,Array,[,Array,[,Array,[,Array,[,String,,,4,],,,0x2A,],,,0B11100,],,,055,],),{,},},Class,V,{,},<EOF>''',
                101
            )
        )

    def test_3562(self):
        self.assertTrue(
            TestLexer.test(
                '''Class gl{Var $1:Array [Array [Int ,0B1],0xE];Destructor (){ {} }_(_:Array [Array [Array [Array [Array [Float ,03],0XB],07],21],21];_,_517p,v:Boolean ;h,__45:Array [Int ,0b11];n,Q_Z,n__,i,e3:Array [Array [Array [Array [Boolean ,16],0x88C00],0xB5],0B1];_7:Zun;i_:Array [Array [Array [Float ,0XE],03],05];__8,__,_D:__){}Var s1:Float ;}''',
                '''Class,gl,{,Var,$1,:,Array,[,Array,[,Int,,,0B1,],,,0xE,],;,Destructor,(,),{,{,},},_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,03,],,,0XB,],,,07,],,,21,],,,21,],;,_,,,_517p,,,v,:,Boolean,;,h,,,__45,:,Array,[,Int,,,0b11,],;,n,,,Q_Z,,,n__,,,i,,,e3,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,16,],,,0x88C00,],,,0xB5,],,,0B1,],;,_7,:,Zun,;,i_,:,Array,[,Array,[,Array,[,Float,,,0XE,],,,03,],,,05,],;,__8,,,__,,,_D,:,__,),{,},Var,s1,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3563(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W:C__{Constructor (){Continue ;}_ac0_(){} }Class ____42_c7y4_42{Destructor (){} }Class __{$_(__:String ){} }Class g:__{Destructor (){} }Class b8fg{}Class _N:__{}''',
                '''Class,W,:,C__,{,Constructor,(,),{,Continue,;,},_ac0_,(,),{,},},Class,____42_c7y4_42,{,Destructor,(,),{,},},Class,__,{,$_,(,__,:,String,),{,},},Class,g,:,__,{,Destructor,(,),{,},},Class,b8fg,{,},Class,_N,:,__,{,},<EOF>''',
                101
            )
        )

    def test_3564(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B{$4t8(QM_7_g,_A:Array [Int ,80]){}Val C:z;}Class Fn{Constructor (H_i1:Array [Array [Int ,0xB_8_2],01]){} }''',
                '''Class,B,{,$4t8,(,QM_7_g,,,_A,:,Array,[,Int,,,80,],),{,},Val,C,:,z,;,},Class,Fn,{,Constructor,(,H_i1,:,Array,[,Array,[,Int,,,0xB82,],,,01,],),{,},},<EOF>''',
                101
            )
        )

    def test_3565(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_45{Val $_Y:Array [Array [Array [Array [Array [Array [Array [Float ,0136],0B11_0],0b1001010],0x25],0X2],0x25],03];}Class PK:_{}''',
                '''Class,_,:,_45,{,Val,$_Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0136,],,,0B110,],,,0b1001010,],,,0x25,],,,0X2,],,,0x25,],,,03,],;,},Class,PK,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3566(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$Yz_(_,M:Array [Array [Array [Int ,0b111],05],040];iQu_5,UK:__Pk){Var _:Boolean ;}S4(_,OQ__,__4_:Int ;_,P79,__l:___;y:Array [Array [Float ,0x51],0B1];_:String ;_4:Array [Boolean ,85]){}Destructor (){Break ;}Var $_:Int ;}''',
                '''Class,_,{,$Yz_,(,_,,,M,:,Array,[,Array,[,Array,[,Int,,,0b111,],,,05,],,,040,],;,iQu_5,,,UK,:,__Pk,),{,Var,_,:,Boolean,;,},S4,(,_,,,OQ__,,,__4_,:,Int,;,_,,,P79,,,__l,:,___,;,y,:,Array,[,Array,[,Float,,,0x51,],,,0B1,],;,_,:,String,;,_4,:,Array,[,Boolean,,,85,],),{,},Destructor,(,),{,Break,;,},Var,$_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3567(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:r5{}Class ___{g(x8_9,___rg:Array [Array [Boolean ,041],0X28];I,_:Array [Array [Array [Array [Int ,79],0X52],07_30],041];__:m;_9_5j,w:Array [Float ,022]){} }Class _42_{}Class v{Var $_6j:Array [Int ,041];Destructor (){} }''',
                '''Class,_,:,r5,{,},Class,___,{,g,(,x8_9,,,___rg,:,Array,[,Array,[,Boolean,,,041,],,,0X28,],;,I,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,79,],,,0X52,],,,0730,],,,041,],;,__,:,m,;,_9_5j,,,w,:,Array,[,Float,,,022,],),{,},},Class,_42_,{,},Class,v,{,Var,$_6j,:,Array,[,Int,,,041,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3568(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:__7{xg(_x:W){}Var $3:W8;Constructor (){} }Class _:y6T6Il{}Class u{Val $_,_:Array [Array [Array [Array [Array [Array [Array [Boolean ,055],0B111100],0B111100],31],0b1],0B111100],0B111100];}''',
                '''Class,__,:,__7,{,xg,(,_x,:,W,),{,},Var,$3,:,W8,;,Constructor,(,),{,},},Class,_,:,y6T6Il,{,},Class,u,{,Val,$_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,055,],,,0B111100,],,,0B111100,],,,31,],,,0b1,],,,0B111100,],,,0B111100,],;,},<EOF>''',
                101
            )
        )

    def test_3569(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o70_:a{}Class j:U{Constructor (_,F,_u_:g;A___,_1_I,t:Float ;_5_:Array [Array [Array [Array [Boolean ,0b1],0b101],0x2D],91_0];C5:n;_R:String ){} }''',
                '''Class,o70_,:,a,{,},Class,j,:,U,{,Constructor,(,_,,,F,,,_u_,:,g,;,A___,,,_1_I,,,t,:,Float,;,_5_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0b101,],,,0x2D,],,,910,],;,C5,:,n,;,_R,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3570(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _z:w{}Class h{v(_:Array [Array [String ,04],0b1110];_7,I4,o28,_m2_5_,ld:Array [Float ,0B100111];_,Gei2,l8,_1:a;H,x:Array [String ,5]){}Var $9:_;}''',
                '''Class,_z,:,w,{,},Class,h,{,v,(,_,:,Array,[,Array,[,String,,,04,],,,0b1110,],;,_7,,,I4,,,o28,,,_m2_5_,,,ld,:,Array,[,Float,,,0B100111,],;,_,,,Gei2,,,l8,,,_1,:,a,;,H,,,x,:,Array,[,String,,,5,],),{,},Var,$9,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3571(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{$u(_:Array [String ,01_2];_:Array [Array [Float ,0115],5]){Val _Ki_:Int ;}Destructor (){Var _o,__1y,_6p,_4z4_oi2_F,_r:_;Return ;} }''',
                '''Class,__,{,$u,(,_,:,Array,[,String,,,012,],;,_,:,Array,[,Array,[,Float,,,0115,],,,5,],),{,Val,_Ki_,:,Int,;,},Destructor,(,),{,Var,_o,,,__1y,,,_6p,,,_4z4_oi2_F,,,_r,:,_,;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3572(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Ak5{}Class P___9{Val $W:_W;Constructor (A,_hs,_:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0X2D],074],77],0B11],0x5],3],0x5],7];C,N,Pq,N,_8:Float ;ABRc6,b,U,n9,_,p:_){}Var $__m,$__,T:I8;Var $9q_:Array [Array [Boolean ,2],0X2D];}''',
                '''Class,Ak5,{,},Class,P___9,{,Val,$W,:,_W,;,Constructor,(,A,,,_hs,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X2D,],,,074,],,,77,],,,0B11,],,,0x5,],,,3,],,,0x5,],,,7,],;,C,,,N,,,Pq,,,N,,,_8,:,Float,;,ABRc6,,,b,,,U,,,n9,,,_,,,p,:,_,),{,},Var,$__m,,,$__,,,T,:,I8,;,Var,$9q_,:,Array,[,Array,[,Boolean,,,2,],,,0X2D,],;,},<EOF>''',
                101
            )
        )

    def test_3573(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class U{$_5(){}Constructor (Od,_:_;I:Array [Array [Array [Array [String ,6_3],053],0XD],0114]){Continue ;}Var V,$r__0j_y6,_,G__W_9,_:Array [Float ,0B1];Val _0_:_;}''',
                '''Class,_,{,},Class,U,{,$_5,(,),{,},Constructor,(,Od,,,_,:,_,;,I,:,Array,[,Array,[,Array,[,Array,[,String,,,63,],,,053,],,,0XD,],,,0114,],),{,Continue,;,},Var,V,,,$r__0j_y6,,,_,,,G__W_9,,,_,:,Array,[,Float,,,0B1,],;,Val,_0_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3574(self):
        self.assertTrue(
            TestLexer.test(
                '''Class YK9:R9{Destructor (){Var J_o,H_4,J_,N,_,___,dG_,nB:_;}Val _H,__6,_6E___,$5,y_,_7:Array [Array [Array [Float ,3_9_2],0x2E],0B100];Val _4,e:_;}Class o:_Cs{Constructor (){} }Class L{Var $q9y7,z,_2,$4_:Float ;Val dY4Y,t_,$I2_297:Array [Array [Array [Float ,037],0B1],94];}''',
                '''Class,YK9,:,R9,{,Destructor,(,),{,Var,J_o,,,H_4,,,J_,,,N,,,_,,,___,,,dG_,,,nB,:,_,;,},Val,_H,,,__6,,,_6E___,,,$5,,,y_,,,_7,:,Array,[,Array,[,Array,[,Float,,,392,],,,0x2E,],,,0B100,],;,Val,_4,,,e,:,_,;,},Class,o,:,_Cs,{,Constructor,(,),{,},},Class,L,{,Var,$q9y7,,,z,,,_2,,,$4_,:,Float,;,Val,dY4Y,,,t_,,,$I2_297,:,Array,[,Array,[,Array,[,Float,,,037,],,,0B1,],,,94,],;,},<EOF>''',
                101
            )
        )

    def test_3575(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:J{Constructor (_,f7u:Array [String ,0B11];G_r6wo0:Array [Array [Array [Array [String ,0X64],0B11111],2],5_4]){} }''',
                '''Class,A,:,J,{,Constructor,(,_,,,f7u,:,Array,[,String,,,0B11,],;,G_r6wo0,:,Array,[,Array,[,Array,[,Array,[,String,,,0X64,],,,0B11111,],,,2,],,,54,],),{,},},<EOF>''',
                101
            )
        )

    def test_3576(self):
        self.assertTrue(
            TestLexer.test(
                '''Class SA_3{Destructor (){}$_(_:Array [Boolean ,0xD];_:String ;_:Array [Array [Array [Int ,0B1010001],0B1010001],2_4]){Continue ;}Constructor (){Continue ;} }''',
                '''Class,SA_3,{,Destructor,(,),{,},$_,(,_,:,Array,[,Boolean,,,0xD,],;,_,:,String,;,_,:,Array,[,Array,[,Array,[,Int,,,0B1010001,],,,0B1010001,],,,24,],),{,Continue,;,},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3577(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k7:f{}Class i{Val _,$273_,_70Ux:Array [String ,02];$__(_,t94,_:_;cA,_6,F,h_,F,_,q:k_R4;v:Boolean ){Break ;{} }}Class _P:_{}Class b6{Constructor (_:String ){}Val $0OA,_:_3;Val $581,$E:_;Var _:Array [Int ,0B1];Val _k:_;}''',
                '''Class,k7,:,f,{,},Class,i,{,Val,_,,,$273_,,,_70Ux,:,Array,[,String,,,02,],;,$__,(,_,,,t94,,,_,:,_,;,cA,,,_6,,,F,,,h_,,,F,,,_,,,q,:,k_R4,;,v,:,Boolean,),{,Break,;,{,},},},Class,_P,:,_,{,},Class,b6,{,Constructor,(,_,:,String,),{,},Val,$0OA,,,_,:,_3,;,Val,$581,,,$E,:,_,;,Var,_,:,Array,[,Int,,,0B1,],;,Val,_k,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3578(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U5:_{}Class __:_{}Class e:_{}Class a:Y_{}Class _{_(uLx9:K__4;_t:Float ;y7_,_8:Array [Float ,071];Q:String ){ {Return ;}{} }}Class _:v{}Class _{}''',
                '''Class,U5,:,_,{,},Class,__,:,_,{,},Class,e,:,_,{,},Class,a,:,Y_,{,},Class,_,{,_,(,uLx9,:,K__4,;,_t,:,Float,;,y7_,,,_8,:,Array,[,Float,,,071,],;,Q,:,String,),{,{,Return,;,},{,},},},Class,_,:,v,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3579(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class __{Constructor (J5x:Array [Array [Float ,016],0B1];nVQ,U_,_,c0:String ;l,w3_:Array [Array [Array [String ,01],04],016]){} }Class I{Constructor (){} }''',
                '''Class,_,:,_,{,},Class,__,{,Constructor,(,J5x,:,Array,[,Array,[,Float,,,016,],,,0B1,],;,nVQ,,,U_,,,_,,,c0,:,String,;,l,,,w3_,:,Array,[,Array,[,Array,[,String,,,01,],,,04,],,,016,],),{,},},Class,I,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3580(self):
        self.assertTrue(
            TestLexer.test(
                '''Class n:m{Val $t:_;}Class T{Val _K,$_,$m,i:Array [Array [Array [Boolean ,2_83],7_9_0],07];$_(){} }Class _1:_{Val _:Array [Float ,010];}Class h:_{}''',
                '''Class,n,:,m,{,Val,$t,:,_,;,},Class,T,{,Val,_K,,,$_,,,$m,,,i,:,Array,[,Array,[,Array,[,Boolean,,,283,],,,790,],,,07,],;,$_,(,),{,},},Class,_1,:,_,{,Val,_,:,Array,[,Float,,,010,],;,},Class,h,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3581(self):
        self.assertTrue(
            TestLexer.test(
                '''Class C{}Class _:p{Destructor (){} }Class _:V_{i(V:Array [Array [Array [Int ,801_5],0b1_10_1],02];b0,__995:_I){} }''',
                '''Class,C,{,},Class,_,:,p,{,Destructor,(,),{,},},Class,_,:,V_,{,i,(,V,:,Array,[,Array,[,Array,[,Int,,,8015,],,,0b1101,],,,02,],;,b0,,,__995,:,_I,),{,},},<EOF>''',
                101
            )
        )

    def test_3582(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:ig7_{Var $cY:_;}Class Y{Constructor (O:Boolean ){Var E,Ph,__00:Float ;Continue ;{}Continue ;Continue ;} }Class _:k766{}''',
                '''Class,_,:,ig7_,{,Var,$cY,:,_,;,},Class,Y,{,Constructor,(,O,:,Boolean,),{,Var,E,,,Ph,,,__00,:,Float,;,Continue,;,{,},Continue,;,Continue,;,},},Class,_,:,k766,{,},<EOF>''',
                101
            )
        )

    def test_3583(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{Val __,_,$So,$_W:Array [String ,0xA];Val Q_,_6,_5,Tjg:Array [Array [String ,0X3],0x5];}Class _{Val Z,$_:Array [Array [Int ,0x25],7];}''',
                '''Class,t,{,Val,__,,,_,,,$So,,,$_W,:,Array,[,String,,,0xA,],;,Val,Q_,,,_6,,,_5,,,Tjg,:,Array,[,Array,[,String,,,0X3,],,,0x5,],;,},Class,_,{,Val,Z,,,$_,:,Array,[,Array,[,Int,,,0x25,],,,7,],;,},<EOF>''',
                101
            )
        )

    def test_3584(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:OD{}Class _:l{Destructor (){} }Class __{Var JE5:i;Val Iw:String ;}Class j_:Bq_Yq{}Class c__rV_{Destructor (){}Var _,$0BG_:Array [Array [Array [Array [Array [Array [Int ,0B1],0B101001],6],03],0X4F],43];}''',
                '''Class,r,:,OD,{,},Class,_,:,l,{,Destructor,(,),{,},},Class,__,{,Var,JE5,:,i,;,Val,Iw,:,String,;,},Class,j_,:,Bq_Yq,{,},Class,c__rV_,{,Destructor,(,),{,},Var,_,,,$0BG_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B101001,],,,6,],,,03,],,,0X4F,],,,43,],;,},<EOF>''',
                101
            )
        )

    def test_3585(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Constructor (_:Float ;O:Int ;p,_:Array [String ,0x9];Z07,M5,y4n__4:C;n2_86,_,pp,_:String ;B:_h;_l:Array [Array [Int ,0b1011111],0X2D]){} }''',
                '''Class,__,{,Constructor,(,_,:,Float,;,O,:,Int,;,p,,,_,:,Array,[,String,,,0x9,],;,Z07,,,M5,,,y4n__4,:,C,;,n2_86,,,_,,,pp,,,_,:,String,;,B,:,_h,;,_l,:,Array,[,Array,[,Int,,,0b1011111,],,,0X2D,],),{,},},<EOF>''',
                101
            )
        )

    def test_3586(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _Q9:D_Y{Var _ZK:Float ;Destructor (){}Val U9,X:f_;Val $Y2:Array [Array [Float ,0B10_000],01];}Class n4w:s_{}Class S33H_:_{Constructor (){__5::$x_M.__H7();}Var $P,g,Wy,Z:Array [Int ,04];}Class g{}''',
                '''Class,_Q9,:,D_Y,{,Var,_ZK,:,Float,;,Destructor,(,),{,},Val,U9,,,X,:,f_,;,Val,$Y2,:,Array,[,Array,[,Float,,,0B10000,],,,01,],;,},Class,n4w,:,s_,{,},Class,S33H_,:,_,{,Constructor,(,),{,__5,::,$x_M,.,__H7,(,),;,},Var,$P,,,g,,,Wy,,,Z,:,Array,[,Int,,,04,],;,},Class,g,{,},<EOF>''',
                101
            )
        )

    def test_3587(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__l{}Class W0:_1{$_8__(x,p71:Boolean ;e61,uv2:b2;__:Array [Array [String ,037],0X7];__,K_,XC:yHL___;t:Float ){PX61::$8h();} }''',
                '''Class,_,:,__l,{,},Class,W0,:,_1,{,$_8__,(,x,,,p71,:,Boolean,;,e61,,,uv2,:,b2,;,__,:,Array,[,Array,[,String,,,037,],,,0X7,],;,__,,,K_,,,XC,:,yHL___,;,t,:,Float,),{,PX61,::,$8h,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3588(self):
        self.assertTrue(
            TestLexer.test(
                '''Class KV:_{Val ___M:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0B11001],0xA],0B11001],075],6_1],075],1_7],1_0];}Class k:_{}''',
                '''Class,KV,:,_,{,Val,___M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11001,],,,0xA,],,,0B11001,],,,075,],,,61,],,,075,],,,17,],,,10,],;,},Class,k,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3589(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _J{}Class _{}Class _:_n_H_{_(tH6E:Array [Array [Array [Int ,0x2],18_1],0b100];__,_R,a,e_Q,Z,_A,____2,c:Int ){Continue ;}Val $_0:Array [Array [Float ,0X5F],0X5F];}''',
                '''Class,_J,{,},Class,_,{,},Class,_,:,_n_H_,{,_,(,tH6E,:,Array,[,Array,[,Array,[,Int,,,0x2,],,,181,],,,0b100,],;,__,,,_R,,,a,,,e_Q,,,Z,,,_A,,,____2,,,c,:,Int,),{,Continue,;,},Val,$_0,:,Array,[,Array,[,Float,,,0X5F,],,,0X5F,],;,},<EOF>''',
                101
            )
        )

    def test_3590(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z:_{}Class mE3_2:___{}Class t:b{}Class y24P{Constructor (){}e(w,m,_,K3:Int ){} }Class WXBD78y:dWj{$J48_69(_:x_;__7J,m6b:Array [String ,040]){} }''',
                '''Class,z,:,_,{,},Class,mE3_2,:,___,{,},Class,t,:,b,{,},Class,y24P,{,Constructor,(,),{,},e,(,w,,,m,,,_,,,K3,:,Int,),{,},},Class,WXBD78y,:,dWj,{,$J48_69,(,_,:,x_,;,__7J,,,m6b,:,Array,[,String,,,040,],),{,},},<EOF>''',
                101
            )
        )

    def test_3591(self):
        self.assertTrue(
            TestLexer.test(
                '''Class SN{Constructor (z,x,uU_S_,j,_0:String ;g_R:Array [Array [Array [Float ,0b110],0111],013]){t::$09._._.v();Break ;} }Class _{Var $_2,$K,AM:_;}''',
                '''Class,SN,{,Constructor,(,z,,,x,,,uU_S_,,,j,,,_0,:,String,;,g_R,:,Array,[,Array,[,Array,[,Float,,,0b110,],,,0111,],,,013,],),{,t,::,$09,.,_,.,_,.,v,(,),;,Break,;,},},Class,_,{,Var,$_2,,,$K,,,AM,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3592(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{Var __:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0X21],0b111],99],046],99],99],0b111],0XA];Var $_,$_v1,_3,$5v:__;}Class _J:__3_{Var lq,$7,V_,__:Float ;}''',
                '''Class,o,{,Var,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X21,],,,0b111,],,,99,],,,046,],,,99,],,,99,],,,0b111,],,,0XA,],;,Var,$_,,,$_v1,,,_3,,,$5v,:,__,;,},Class,_J,:,__3_,{,Var,lq,,,$7,,,V_,,,__,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3593(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_3{}Class d8{}Class T{}Class R{}Class VlT_:Y{Var $X86,$_,$6__V,cq:Float ;}Class j{Var Pq:Array [Array [String ,0x3B],034];}''',
                '''Class,_,:,_3,{,},Class,d8,{,},Class,T,{,},Class,R,{,},Class,VlT_,:,Y,{,Var,$X86,,,$_,,,$6__V,,,cq,:,Float,;,},Class,j,{,Var,Pq,:,Array,[,Array,[,String,,,0x3B,],,,034,],;,},<EOF>''',
                101
            )
        )

    def test_3594(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __h{Destructor (){}Var $_5:Array [Array [Array [Array [Array [Array [Boolean ,0b111],0X32],0x27],0b111],0B10010],3_2804_5_848];}Class H{Destructor (){}_(A_,_:_;_,u87c:u2G2ky_;S0wB0,Ou2B,nl_b,H:Array [String ,724]){} }Class _{Var $F4b_6:Array [String ,074];}''',
                '''Class,__h,{,Destructor,(,),{,},Var,$_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111,],,,0X32,],,,0x27,],,,0b111,],,,0B10010,],,,328045848,],;,},Class,H,{,Destructor,(,),{,},_,(,A_,,,_,:,_,;,_,,,u87c,:,u2G2ky_,;,S0wB0,,,Ou2B,,,nl_b,,,H,:,Array,[,String,,,724,],),{,},},Class,_,{,Var,$F4b_6,:,Array,[,String,,,074,],;,},<EOF>''',
                101
            )
        )

    def test_3595(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Im{Destructor (){}Val _,__532:__;Constructor (){} }Class R:S{Val $6:Float ;Destructor (){}Constructor (__:_;_Z:BNj_){} }Class __1_{}''',
                '''Class,Im,{,Destructor,(,),{,},Val,_,,,__532,:,__,;,Constructor,(,),{,},},Class,R,:,S,{,Val,$6,:,Float,;,Destructor,(,),{,},Constructor,(,__,:,_,;,_Z,:,BNj_,),{,},},Class,__1_,{,},<EOF>''',
                101
            )
        )

    def test_3596(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var z8,$9,$5___3a:Int ;Constructor (_n_5:Array [Int ,024];M,_,A0:h;__:Array [Array [Array [Int ,024],024],024]){}$9_0b_88(a,_:Array [Array [Boolean ,0x29],0x3_76];_9J,F:Float ){}$6(){} }Class u3_:_{}Class L:W90Fd2l_D{}Class u:p{}Class _{}Class Xo:V7{}''',
                '''Class,_,{,Var,z8,,,$9,,,$5___3a,:,Int,;,Constructor,(,_n_5,:,Array,[,Int,,,024,],;,M,,,_,,,A0,:,h,;,__,:,Array,[,Array,[,Array,[,Int,,,024,],,,024,],,,024,],),{,},$9_0b_88,(,a,,,_,:,Array,[,Array,[,Boolean,,,0x29,],,,0x376,],;,_9J,,,F,:,Float,),{,},$6,(,),{,},},Class,u3_,:,_,{,},Class,L,:,W90Fd2l_D,{,},Class,u,:,p,{,},Class,_,{,},Class,Xo,:,V7,{,},<EOF>''',
                101
            )
        )

    def test_3597(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:_88600{Constructor (_:Array [Array [Array [Array [Array [Boolean ,0441],05_7_13],0XDA],0B111100],0B111100]){Return ;} }''',
                '''Class,K,:,_88600,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0441,],,,05713,],,,0XDA,],,,0B111100,],,,0B111100,],),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3598(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Jd{}Class ___:_{Constructor (__Y,Z,__xw4_T,Ut8:Array [Boolean ,93];C,GY,T,F:Float ;X4P:Array [Array [Array [Array [Array [Array [Float ,1],0b100],8],0xE9_6_74_0],5_57],0XA];j,v4L:jz_Fpy;UG9:q_t_;_,_2:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,71],7_5_5_0_2],23_2],0B1],02_2],0b1_0],0B1],077],0X39],077],030]){} }Class _{}''',
                '''Class,Jd,{,},Class,___,:,_,{,Constructor,(,__Y,,,Z,,,__xw4_T,,,Ut8,:,Array,[,Boolean,,,93,],;,C,,,GY,,,T,,,F,:,Float,;,X4P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,1,],,,0b100,],,,8,],,,0xE96740,],,,557,],,,0XA,],;,j,,,v4L,:,jz_Fpy,;,UG9,:,q_t_,;,_,,,_2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,71,],,,75502,],,,232,],,,0B1,],,,022,],,,0b10,],,,0B1,],,,077,],,,0X39,],,,077,],,,030,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3599(self):
        self.assertTrue(
            TestLexer.test(
                '''Class U:V8{Val $iI8,O:Int ;Constructor (__8_:q;H_,D,P8R,_,v___,_9o_,y:Int ;L,_:Array [Array [Float ,03],0b111110];g_:Array [String ,0b1]){Return ;}Constructor (a0LU4B,S:Int ){} }''',
                '''Class,U,:,V8,{,Val,$iI8,,,O,:,Int,;,Constructor,(,__8_,:,q,;,H_,,,D,,,P8R,,,_,,,v___,,,_9o_,,,y,:,Int,;,L,,,_,:,Array,[,Array,[,Float,,,03,],,,0b111110,],;,g_,:,Array,[,String,,,0b1,],),{,Return,;,},Constructor,(,a0LU4B,,,S,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3600(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:_u{Var $s,Jl:Array [Array [Array [Array [String ,0B101],0B10],01],0B10];Var Y2:Array [Array [Int ,0x9_C65],0X27];}Class _{l_f(){} }''',
                '''Class,v,:,_u,{,Var,$s,,,Jl,:,Array,[,Array,[,Array,[,Array,[,String,,,0B101,],,,0B10,],,,01,],,,0B10,],;,Var,Y2,:,Array,[,Array,[,Int,,,0x9C65,],,,0X27,],;,},Class,_,{,l_f,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3601(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w5:a{Val $b_n_:Array [Array [String ,0B1],31];____(_5,c78_9,_,MU2,_:Array [Array [Array [Array [Array [Boolean ,01],0xA],1_1],0b11_1],0b10_1]){} }''',
                '''Class,w5,:,a,{,Val,$b_n_,:,Array,[,Array,[,String,,,0B1,],,,31,],;,____,(,_5,,,c78_9,,,_,,,MU2,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,0xA,],,,11,],,,0b111,],,,0b101,],),{,},},<EOF>''',
                101
            )
        )

    def test_3602(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Z{Constructor (r,r_l4,J,YR,f,E,_,_U3i8,N,i,t,_TK__:Float ;H0,_3,_:Boolean ){Continue ;}Constructor (U_77,A07:__;I,dz,_,j:Array [Float ,0b1_0];Z,_v,c,P__,_,_1,_:d){}Destructor (){}_(_2,_:Int ;j67Rb:Boolean ;__t1,T_Y:Array [Int ,0x2C];_,_F_:U){} }''',
                '''Class,Z,{,Constructor,(,r,,,r_l4,,,J,,,YR,,,f,,,E,,,_,,,_U3i8,,,N,,,i,,,t,,,_TK__,:,Float,;,H0,,,_3,,,_,:,Boolean,),{,Continue,;,},Constructor,(,U_77,,,A07,:,__,;,I,,,dz,,,_,,,j,:,Array,[,Float,,,0b10,],;,Z,,,_v,,,c,,,P__,,,_,,,_1,,,_,:,d,),{,},Destructor,(,),{,},_,(,_2,,,_,:,Int,;,j67Rb,:,Boolean,;,__t1,,,T_Y,:,Array,[,Int,,,0x2C,],;,_,,,_F_,:,U,),{,},},<EOF>''',
                101
            )
        )

    def test_3603(self):
        self.assertTrue(
            TestLexer.test(
                '''Class jiSW5{Constructor (_:__;B,_:Array [String ,02];M,J,K,_,I,R,n_5io:Boolean ;_,_8q05q3_:J;Q3_,_:String ;_:P80O;__:Array [Array [Array [Array [Int ,075],45],0x40],0b101];I,S,_S8:Array [Array [String ,0643_5_4],7]){} }Class l:_6{_(){} }''',
                '''Class,jiSW5,{,Constructor,(,_,:,__,;,B,,,_,:,Array,[,String,,,02,],;,M,,,J,,,K,,,_,,,I,,,R,,,n_5io,:,Boolean,;,_,,,_8q05q3_,:,J,;,Q3_,,,_,:,String,;,_,:,P80O,;,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,075,],,,45,],,,0x40,],,,0b101,],;,I,,,S,,,_S8,:,Array,[,Array,[,String,,,064354,],,,7,],),{,},},Class,l,:,_6,{,_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3604(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v{Var _ip:Array [Array [Boolean ,0b10],0b1_00];Var $_:y;T(_8__,V:Array [Array [Boolean ,0x2A],0b10]){Return ;Continue ;} }Class n_m:D{}''',
                '''Class,v,{,Var,_ip,:,Array,[,Array,[,Boolean,,,0b10,],,,0b100,],;,Var,$_,:,y,;,T,(,_8__,,,V,:,Array,[,Array,[,Boolean,,,0x2A,],,,0b10,],),{,Return,;,Continue,;,},},Class,n_m,:,D,{,},<EOF>''',
                101
            )
        )

    def test_3605(self):
        self.assertTrue(
            TestLexer.test(
                '''Class z{}Class o____{}Class _{}Class _36:_{Val __S:l;Val _,X59:Array [Boolean ,0B1_1_0];Val _:S;Destructor (){} }''',
                '''Class,z,{,},Class,o____,{,},Class,_,{,},Class,_36,:,_,{,Val,__S,:,l,;,Val,_,,,X59,:,Array,[,Boolean,,,0B110,],;,Val,_,:,S,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3606(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R{}Class _:c{$_(){ {} }Constructor (c,_,_R8eSA,qw3:Array [Float ,0B11];y_7:Array [Array [Int ,6_9],02];_K_2x_,_:Int ){Break ;} }''',
                '''Class,R,{,},Class,_,:,c,{,$_,(,),{,{,},},Constructor,(,c,,,_,,,_R8eSA,,,qw3,:,Array,[,Float,,,0B11,],;,y_7,:,Array,[,Array,[,Int,,,69,],,,02,],;,_K_2x_,,,_,:,Int,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3607(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M4:_i{}Class u30_z{T(_m884_3q_,_:Array [Array [Array [String ,0141],65],0B111110];b:Array [Int ,6]){}Var $2,c_:_;}Class y:____{}''',
                '''Class,_M4,:,_i,{,},Class,u30_z,{,T,(,_m884_3q_,,,_,:,Array,[,Array,[,Array,[,String,,,0141,],,,65,],,,0B111110,],;,b,:,Array,[,Int,,,6,],),{,},Var,$2,,,c_,:,_,;,},Class,y,:,____,{,},<EOF>''',
                101
            )
        )

    def test_3608(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{Constructor (XO2o7,b_6,D,_:Array [Array [Array [Float ,8],35],0x4_D]){} }Class g{Constructor (V,_1:gY){Break ;}Var $__4,_w6:Float ;}''',
                '''Class,m,{,Constructor,(,XO2o7,,,b_6,,,D,,,_,:,Array,[,Array,[,Array,[,Float,,,8,],,,35,],,,0x4D,],),{,},},Class,g,{,Constructor,(,V,,,_1,:,gY,),{,Break,;,},Var,$__4,,,_w6,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3609(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H{Constructor (_qdI:uO){}Val _4,_5n5_9_:Array [String ,0X32];Var g:Array [Int ,0X95_88];}Class e:_7T{}Class __:T{}Class P:i6w{Constructor (){} }''',
                '''Class,H,{,Constructor,(,_qdI,:,uO,),{,},Val,_4,,,_5n5_9_,:,Array,[,String,,,0X32,],;,Var,g,:,Array,[,Int,,,0X9588,],;,},Class,e,:,_7T,{,},Class,__,:,T,{,},Class,P,:,i6w,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3610(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u_{Destructor (){}$_(x_g:Array [String ,0B1];_:Boolean ;S:Array [Float ,90];Z:Array [Array [Float ,0b1010101],14];r_M:_){}$3(){Continue ;Break ;} }Class __9:_{}''',
                '''Class,u_,{,Destructor,(,),{,},$_,(,x_g,:,Array,[,String,,,0B1,],;,_,:,Boolean,;,S,:,Array,[,Float,,,90,],;,Z,:,Array,[,Array,[,Float,,,0b1010101,],,,14,],;,r_M,:,_,),{,},$3,(,),{,Continue,;,Break,;,},},Class,__9,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3611(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f:a8{Constructor (N__,___0p,_7,Z:lf0d;s:Array [Array [Array [Float ,042],0b1010010],0X22];r,_,_5,Z,x:j){}Var $Q,_,$dl8:W7;}''',
                '''Class,f,:,a8,{,Constructor,(,N__,,,___0p,,,_7,,,Z,:,lf0d,;,s,:,Array,[,Array,[,Array,[,Float,,,042,],,,0b1010010,],,,0X22,],;,r,,,_,,,_5,,,Z,,,x,:,j,),{,},Var,$Q,,,_,,,$dl8,:,W7,;,},<EOF>''',
                101
            )
        )

    def test_3612(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val ___f_:_E3;Destructor (){}$G(){Continue ;}Val _:Array [Float ,0b111011];}Class _3:_{$A(t6oD,_M,__T_,_0,_4_,g,_:Array [Array [Float ,0B1_0],2]){} }''',
                '''Class,_,{,Val,___f_,:,_E3,;,Destructor,(,),{,},$G,(,),{,Continue,;,},Val,_,:,Array,[,Float,,,0b111011,],;,},Class,_3,:,_,{,$A,(,t6oD,,,_M,,,__T_,,,_0,,,_4_,,,g,,,_,:,Array,[,Array,[,Float,,,0B10,],,,2,],),{,},},<EOF>''',
                101
            )
        )

    def test_3613(self):
        self.assertTrue(
            TestLexer.test(
                '''Class vq4:_9{}Class p{Val $_:Array [Array [Array [Int ,57],0x48],5];}Class A{}Class __{Val L_94,_d,$W46m:_1;$2(){} }''',
                '''Class,vq4,:,_9,{,},Class,p,{,Val,$_,:,Array,[,Array,[,Array,[,Int,,,57,],,,0x48,],,,5,],;,},Class,A,{,},Class,__,{,Val,L_94,,,_d,,,$W46m,:,_1,;,$2,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3614(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){Var _1:Array [Array [Float ,05],0b1];Break ;} }Class __9N4:zh{Var $MT,$_O,_:X;}Class __:_{}''',
                '''Class,_,{,Destructor,(,),{,Var,_1,:,Array,[,Array,[,Float,,,05,],,,0b1,],;,Break,;,},},Class,__9N4,:,zh,{,Var,$MT,,,$_O,,,_,:,X,;,},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3615(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:s{Var $_6z,$i5:_4;Constructor (){} }Class UR8yK4_8:_{}Class bBc4{Destructor (){Var yee_,_1R,_,_:Array [Array [String ,7_6],83];} }''',
                '''Class,_,:,s,{,Var,$_6z,,,$i5,:,_4,;,Constructor,(,),{,},},Class,UR8yK4_8,:,_,{,},Class,bBc4,{,Destructor,(,),{,Var,yee_,,,_1R,,,_,,,_,:,Array,[,Array,[,String,,,76,],,,83,],;,},},<EOF>''',
                101
            )
        )

    def test_3616(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O9:_3{}Class ___:_{Var $xi:String ;$Z(E:__2;F__,_:P;_,Y49:Array [Array [Boolean ,0B11],0b1]){}Var A:_0;}''',
                '''Class,O9,:,_3,{,},Class,___,:,_,{,Var,$xi,:,String,;,$Z,(,E,:,__2,;,F__,,,_,:,P,;,_,,,Y49,:,Array,[,Array,[,Boolean,,,0B11,],,,0b1,],),{,},Var,A,:,_0,;,},<EOF>''',
                101
            )
        )

    def test_3617(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T_{}Class _4:d_{}Class H:_4{Constructor (_4,YT_:XW0__;l42_:Array [Array [Array [Array [Array [Boolean ,0B1],051],01_374],4],0b11];U_,Ct,F:Int ){Continue ;Break ;_83O::$_a9K.S5();} }Class __:D{$w(L,_:Array [Array [Float ,0B1001000],0X56]){Continue ;} }Class l:_{}''',
                '''Class,T_,{,},Class,_4,:,d_,{,},Class,H,:,_4,{,Constructor,(,_4,,,YT_,:,XW0__,;,l42_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,051,],,,01374,],,,4,],,,0b11,],;,U_,,,Ct,,,F,:,Int,),{,Continue,;,Break,;,_83O,::,$_a9K,.,S5,(,),;,},},Class,__,:,D,{,$w,(,L,,,_,:,Array,[,Array,[,Float,,,0B1001000,],,,0X56,],),{,Continue,;,},},Class,l,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3618(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Destructor (){}Constructor (K,__,RU,_,_:_;_:Array [Array [Float ,47],0B1010111]){}Constructor (Ba,X:__;D1_,___,_,W334,_,_,lF:Array [Float ,07];z:Array [Array [Float ,0x5E],0B1010111];_8:Int ;_:cr;_L_,j,H8_3t_1:_4GRh){} }Class O:D{}Class _:_{}Class _1:c_{Val $n:Boolean ;}Class w3{Destructor (){} }Class _S1:__{}''',
                '''Class,_,:,_,{,Destructor,(,),{,},Constructor,(,K,,,__,,,RU,,,_,,,_,:,_,;,_,:,Array,[,Array,[,Float,,,47,],,,0B1010111,],),{,},Constructor,(,Ba,,,X,:,__,;,D1_,,,___,,,_,,,W334,,,_,,,_,,,lF,:,Array,[,Float,,,07,],;,z,:,Array,[,Array,[,Float,,,0x5E,],,,0B1010111,],;,_8,:,Int,;,_,:,cr,;,_L_,,,j,,,H8_3t_1,:,_4GRh,),{,},},Class,O,:,D,{,},Class,_,:,_,{,},Class,_1,:,c_,{,Val,$n,:,Boolean,;,},Class,w3,{,Destructor,(,),{,},},Class,_S1,:,__,{,},<EOF>''',
                101
            )
        )

    def test_3619(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _,U:Array [Int ,6_8];Val _6s:Boolean ;Constructor (Y:Array [Array [String ,6],02]){}Destructor (){}Val Y:_;Var __,$_:_Y;Val $1:zn;}Class _:w{Var R:String ;Destructor (){ {} }}Class r:J8{}Class B_b_p:H{}''',
                '''Class,_,{,Val,_,,,U,:,Array,[,Int,,,68,],;,Val,_6s,:,Boolean,;,Constructor,(,Y,:,Array,[,Array,[,String,,,6,],,,02,],),{,},Destructor,(,),{,},Val,Y,:,_,;,Var,__,,,$_,:,_Y,;,Val,$1,:,zn,;,},Class,_,:,w,{,Var,R,:,String,;,Destructor,(,),{,{,},},},Class,r,:,J8,{,},Class,B_b_p,:,H,{,},<EOF>''',
                101
            )
        )

    def test_3620(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _c:f{Destructor (){}Var $0g_,$ba,$9XVU_,$K,$4b:_;Var $J,Q2:Array [Array [Array [Boolean ,0X35],0X2_0_A],78];}Class v1_:m5{}Class _:C{}''',
                '''Class,_c,:,f,{,Destructor,(,),{,},Var,$0g_,,,$ba,,,$9XVU_,,,$K,,,$4b,:,_,;,Var,$J,,,Q2,:,Array,[,Array,[,Array,[,Boolean,,,0X35,],,,0X20A,],,,78,],;,},Class,v1_,:,m5,{,},Class,_,:,C,{,},<EOF>''',
                101
            )
        )

    def test_3621(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_:Array [Array [Array [Int ,53],0b11110],0x2A];x:Array [String ,043];_S6:_7_1;_,__:PO0_;z:Int ;f:_;S,_466,f,_18_G:P){} }''',
                '''Class,_,:,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,53,],,,0b11110,],,,0x2A,],;,x,:,Array,[,String,,,043,],;,_S6,:,_7_1,;,_,,,__,:,PO0_,;,z,:,Int,;,f,:,_,;,S,,,_466,,,f,,,_18_G,:,P,),{,},},<EOF>''',
                101
            )
        )

    def test_3622(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b_{Val $K7,_4,_5,$f2:Array [Array [Array [Int ,03],0x4E],29];}Class Y:j{$5(DU,j:Array [Boolean ,29];_:__1;_,jS_,P,h,_,_:_rf;J:Array [Array [Array [Boolean ,7_0_9],0B1000110],04];_,mSw_1_A_:Array [Array [Int ,0x83],0X58]){Break ;Break ;} }''',
                '''Class,b_,{,Val,$K7,,,_4,,,_5,,,$f2,:,Array,[,Array,[,Array,[,Int,,,03,],,,0x4E,],,,29,],;,},Class,Y,:,j,{,$5,(,DU,,,j,:,Array,[,Boolean,,,29,],;,_,:,__1,;,_,,,jS_,,,P,,,h,,,_,,,_,:,_rf,;,J,:,Array,[,Array,[,Array,[,Boolean,,,709,],,,0B1000110,],,,04,],;,_,,,mSw_1_A_,:,Array,[,Array,[,Int,,,0x83,],,,0X58,],),{,Break,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3623(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3:_{}Class Ai:q7{Val _:g;b(){Return ;}Constructor (C1:Boolean ;__k:E;Y:Int ;dE,L84_:Boolean ;m:d;F8_:Boolean ;i:Array [Int ,0B101111];A:_){} }''',
                '''Class,_3,:,_,{,},Class,Ai,:,q7,{,Val,_,:,g,;,b,(,),{,Return,;,},Constructor,(,C1,:,Boolean,;,__k,:,E,;,Y,:,Int,;,dE,,,L84_,:,Boolean,;,m,:,d,;,F8_,:,Boolean,;,i,:,Array,[,Int,,,0B101111,],;,A,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3624(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:D3I2___{}Class U:_{}Class s:e_{_(_U:Array [Array [Float ,8],0b1];_2:Array [Array [Array [Array [Int ,0b100011],0B1_11100],0b100011],0706036];_y:Array [Array [Array [Int ,0b100011],07_42_2_5],94];_:Boolean ){}Var $3,$KJ5,H,$74:Float ;}Class _{}Class B{}''',
                '''Class,_,:,D3I2___,{,},Class,U,:,_,{,},Class,s,:,e_,{,_,(,_U,:,Array,[,Array,[,Float,,,8,],,,0b1,],;,_2,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b100011,],,,0B111100,],,,0b100011,],,,0706036,],;,_y,:,Array,[,Array,[,Array,[,Int,,,0b100011,],,,074225,],,,94,],;,_,:,Boolean,),{,},Var,$3,,,$KJ5,,,H,,,$74,:,Float,;,},Class,_,{,},Class,B,{,},<EOF>''',
                101
            )
        )

    def test_3625(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y_:_{}Class _93:_1P5{}Class _7{Val _5,$4_50,e,$_:Array [Array [Int ,0X1C],0x19];Var _:Boolean ;Var $_:L;Destructor (){}Val K,$_,__,$5,$5,$24o:Array [Array [Array [Array [Array [Array [Float ,0B11100],0X1],0B10],0B11100],0x19],94];}''',
                '''Class,y_,:,_,{,},Class,_93,:,_1P5,{,},Class,_7,{,Val,_5,,,$4_50,,,e,,,$_,:,Array,[,Array,[,Int,,,0X1C,],,,0x19,],;,Var,_,:,Boolean,;,Var,$_,:,L,;,Destructor,(,),{,},Val,K,,,$_,,,__,,,$5,,,$5,,,$24o,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B11100,],,,0X1,],,,0B10,],,,0B11100,],,,0x19,],,,94,],;,},<EOF>''',
                101
            )
        )

    def test_3626(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K5819_G:_5{}Class v{}Class ___:K{Constructor (re,M:Array [Array [Array [Array [String ,0B101110],96],0x4],96];x:G;____:G){} }Class D:M{Val $_:Array [String ,0X34];}''',
                '''Class,K5819_G,:,_5,{,},Class,v,{,},Class,___,:,K,{,Constructor,(,re,,,M,:,Array,[,Array,[,Array,[,Array,[,String,,,0B101110,],,,96,],,,0x4,],,,96,],;,x,:,G,;,____,:,G,),{,},},Class,D,:,M,{,Val,$_,:,Array,[,String,,,0X34,],;,},<EOF>''',
                101
            )
        )

    def test_3627(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c_:_1_B{$_Vc(__:Float ){Continue ;}Var __,$U1:Array [Array [Boolean ,0X8_B0],0x6_7];Val $k,_W,$7,_,$T:Array [String ,03];Var Jm__:V;}Class _{}Class K{}''',
                '''Class,c_,:,_1_B,{,$_Vc,(,__,:,Float,),{,Continue,;,},Var,__,,,$U1,:,Array,[,Array,[,Boolean,,,0X8B0,],,,0x67,],;,Val,$k,,,_W,,,$7,,,_,,,$T,:,Array,[,String,,,03,],;,Var,Jm__,:,V,;,},Class,_,{,},Class,K,{,},<EOF>''',
                101
            )
        )

    def test_3628(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Dc_1{Constructor (_4_,__:Array [Boolean ,0X5]){} }Class _:_5{Var $2_,h,Z18:Array [Array [Array [Float ,0b1],0xE],03_5];}''',
                '''Class,_,:,Dc_1,{,Constructor,(,_4_,,,__,:,Array,[,Boolean,,,0X5,],),{,},},Class,_,:,_5,{,Var,$2_,,,h,,,Z18,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,0xE,],,,035,],;,},<EOF>''',
                101
            )
        )

    def test_3629(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G8P:X22588{}Class _{}Class _:Dm{Val _:Float ;}Class ___{}Class D:_{Destructor (){Var _B:Array [Int ,05];} }Class _:_{}''',
                '''Class,G8P,:,X22588,{,},Class,_,{,},Class,_,:,Dm,{,Val,_,:,Float,;,},Class,___,{,},Class,D,:,_,{,Destructor,(,),{,Var,_B,:,Array,[,Int,,,05,],;,},},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3630(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J5y:B{Constructor (__,J:Array [Array [Array [Array [Array [Boolean ,01],037],0x30],6_6_555],0X3C];r:Y_iM_z){}Var __5_6_0cE,B:Float ;}Class _{}''',
                '''Class,J5y,:,B,{,Constructor,(,__,,,J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,037,],,,0x30,],,,66555,],,,0X3C,],;,r,:,Y_iM_z,),{,},Var,__5_6_0cE,,,B,:,Float,;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3631(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:_D_{Val $19:Array [Array [Array [Array [Array [String ,0xE1],0132],0xB],0X54],0xB];}Class C{Var ob,T,r:Int ;}Class _31:_M{}''',
                '''Class,K,:,_D_,{,Val,$19,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xE1,],,,0132,],,,0xB,],,,0X54,],,,0xB,],;,},Class,C,{,Var,ob,,,T,,,r,:,Int,;,},Class,_31,:,_M,{,},<EOF>''',
                101
            )
        )

    def test_3632(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __c{}Class __:J_{}Class _{Destructor (){}Val $_32,$_9A,$__,$2__,$_:Array [String ,0b1];Var $a_73_5,kQ0:Boolean ;}''',
                '''Class,__c,{,},Class,__,:,J_,{,},Class,_,{,Destructor,(,),{,},Val,$_32,,,$_9A,,,$__,,,$2__,,,$_,:,Array,[,String,,,0b1,],;,Var,$a_73_5,,,kQ0,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3633(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W__3_P6_p8:_4{}Class r1:E{Var $4l_,$__,k,$_:Float ;Constructor (J:Array [Boolean ,95]){Continue ;Continue ;} }''',
                '''Class,_W__3_P6_p8,:,_4,{,},Class,r1,:,E,{,Var,$4l_,,,$__,,,k,,,$_,:,Float,;,Constructor,(,J,:,Array,[,Boolean,,,95,],),{,Continue,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3634(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(_,j:Array [String ,0X95A_6]){}Var $X,$_:Array [Array [Array [Array [String ,0110],0B1_11],0xA_C],0110];}''',
                '''Class,_,{,_,(,_,,,j,:,Array,[,String,,,0X95A6,],),{,},Var,$X,,,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0110,],,,0B111,],,,0xAC,],,,0110,],;,},<EOF>''',
                101
            )
        )

    def test_3635(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Qzr:_{V(){}Constructor (_,_W91:Boolean ;_T,_,z:Array [Array [Array [Array [Float ,98],0137],0b1],07];_Gy,m_,_61_:Float ){} }Class q:_{}''',
                '''Class,Qzr,:,_,{,V,(,),{,},Constructor,(,_,,,_W91,:,Boolean,;,_T,,,_,,,z,:,Array,[,Array,[,Array,[,Array,[,Float,,,98,],,,0137,],,,0b1,],,,07,],;,_Gy,,,m_,,,_61_,:,Float,),{,},},Class,q,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3636(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w{}Class U_{Val _:Array [Int ,0X10];M84(){} }Class P_W{Val yc_:Array [Array [Array [Array [Array [Int ,0B1],58],0XB],58],58];Val $c:_;Val _6:z;}Class l_n:t2{}''',
                '''Class,w,{,},Class,U_,{,Val,_,:,Array,[,Int,,,0X10,],;,M84,(,),{,},},Class,P_W,{,Val,yc_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,58,],,,0XB,],,,58,],,,58,],;,Val,$c,:,_,;,Val,_6,:,z,;,},Class,l_n,:,t2,{,},<EOF>''',
                101
            )
        )

    def test_3637(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u:m{Constructor (_619:Array [Int ,66];_:Array [Float ,66]){} }Class h4{Var Z_,i9,$2:S4P_7;Constructor (_:Array [Array [Array [Float ,0B10_1],66],0xF];D_:_){} }''',
                '''Class,u,:,m,{,Constructor,(,_619,:,Array,[,Int,,,66,],;,_,:,Array,[,Float,,,66,],),{,},},Class,h4,{,Var,Z_,,,i9,,,$2,:,S4P_7,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Float,,,0B101,],,,66,],,,0xF,],;,D_,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3638(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R_{$497(){}Var _R8wm:G;Val _,_:Array [Float ,0b1011];_(){}Var $3_,_:_;}Class ____{}Class B{}Class X{}Class b{$D(){} }''',
                '''Class,R_,{,$497,(,),{,},Var,_R8wm,:,G,;,Val,_,,,_,:,Array,[,Float,,,0b1011,],;,_,(,),{,},Var,$3_,,,_,:,_,;,},Class,____,{,},Class,B,{,},Class,X,{,},Class,b,{,$D,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3639(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_{}Class F8_tu_18:__1{Val $e:Array [String ,0x21];Constructor (_:Array [Array [Array [Boolean ,0B1],0xC],0b1011101]){} }''',
                '''Class,_0_,{,},Class,F8_tu_18,:,__1,{,Val,$e,:,Array,[,String,,,0x21,],;,Constructor,(,_,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0xC,],,,0b1011101,],),{,},},<EOF>''',
                101
            )
        )

    def test_3640(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J0W{Vl(Ai,_:Array [Array [Array [Array [Array [Array [Int ,0X4],054],0xB],9958],0x1B],0x1B];_3__,p:Array [Float ,7_8]){Val _8:Int ;}Destructor (){} }''',
                '''Class,J0W,{,Vl,(,Ai,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X4,],,,054,],,,0xB,],,,9958,],,,0x1B,],,,0x1B,],;,_3__,,,p,:,Array,[,Float,,,78,],),{,Val,_8,:,Int,;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3641(self):
        self.assertTrue(
            TestLexer.test(
                '''Class h_:I{}Class d275{Destructor (){}Var $_,_,_J,_:Float ;}Class _7:t{Constructor (_,s,_,_,S,_,O,t,_:Array [Float ,8];__g,__8:Array [Array [Boolean ,0b111001],0b111001]){} }''',
                '''Class,h_,:,I,{,},Class,d275,{,Destructor,(,),{,},Var,$_,,,_,,,_J,,,_,:,Float,;,},Class,_7,:,t,{,Constructor,(,_,,,s,,,_,,,_,,,S,,,_,,,O,,,t,,,_,:,Array,[,Float,,,8,],;,__g,,,__8,:,Array,[,Array,[,Boolean,,,0b111001,],,,0b111001,],),{,},},<EOF>''',
                101
            )
        )

    def test_3642(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F{L_(){}_(j,_,_:Float ;G,_,c,MOZ:Array [Array [Int ,0x2],0x6_1];a,z,_34H:Array [Float ,0B11011];y,d_:_;_3__,F_,c:Array [String ,0b1011101]){}Destructor (){}Constructor (){Continue ;} }''',
                '''Class,F,{,L_,(,),{,},_,(,j,,,_,,,_,:,Float,;,G,,,_,,,c,,,MOZ,:,Array,[,Array,[,Int,,,0x2,],,,0x61,],;,a,,,z,,,_34H,:,Array,[,Float,,,0B11011,],;,y,,,d_,:,_,;,_3__,,,F_,,,c,:,Array,[,String,,,0b1011101,],),{,},Destructor,(,),{,},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3643(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9{Val _,$k,$5,$_:Float ;$_r(){}$m(_:Boolean ;ep153,_585:Y){}Destructor (){}Constructor (_,_2,c:Array [Array [Array [Boolean ,0xB],0253_3],0b1000101]){} }''',
                '''Class,_9,{,Val,_,,,$k,,,$5,,,$_,:,Float,;,$_r,(,),{,},$m,(,_,:,Boolean,;,ep153,,,_585,:,Y,),{,},Destructor,(,),{,},Constructor,(,_,,,_2,,,c,:,Array,[,Array,[,Array,[,Boolean,,,0xB,],,,02533,],,,0b1000101,],),{,},},<EOF>''',
                101
            )
        )

    def test_3644(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class c36:R{Destructor (){} }Class _7:__{}Class _:_{Constructor (){Return ;}Constructor (){Break ;}Constructor (X:_;G:String ;_,K:Array [Array [Array [Boolean ,0B10],4],0b1_1_1];_5_,_56uu:Boolean ;_,__:Float ){} }''',
                '''Class,_,{,},Class,c36,:,R,{,Destructor,(,),{,},},Class,_7,:,__,{,},Class,_,:,_,{,Constructor,(,),{,Return,;,},Constructor,(,),{,Break,;,},Constructor,(,X,:,_,;,G,:,String,;,_,,,K,:,Array,[,Array,[,Array,[,Boolean,,,0B10,],,,4,],,,0b111,],;,_5_,,,_56uu,:,Boolean,;,_,,,__,:,Float,),{,},},<EOF>''',
                101
            )
        )

    def test_3645(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (I,_,_Zu,_:_){} }Class _:_11{Constructor (__e,_L__:Array [Array [Float ,02],0xC_E8_10];l:__3xB){Break ;}svA5_(){} }''',
                '''Class,_,{,Constructor,(,I,,,_,,,_Zu,,,_,:,_,),{,},},Class,_,:,_11,{,Constructor,(,__e,,,_L__,:,Array,[,Array,[,Float,,,02,],,,0xCE810,],;,l,:,__3xB,),{,Break,;,},svA5_,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3646(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w_VwV___9p{_(){_::$68._6l().l.___V1_();}X(){Break ;}Var $Me:String ;}Class Xu{Destructor (){} }Class k:_{}''',
                '''Class,_w_VwV___9p,{,_,(,),{,_,::,$68,.,_6l,(,),.,l,.,___V1_,(,),;,},X,(,),{,Break,;,},Var,$Me,:,String,;,},Class,Xu,{,Destructor,(,),{,},},Class,k,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3647(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (__:Array [Int ,01];_01,b_29_3,cj,_1:Array [Int ,0b1_0];r_:HKI;G_T:Float ){ {} }}Class _{}Class b__:D_{Val G,V_:Array [Array [Array [Array [String ,0X59],0x4C],0132],0b1];}''',
                '''Class,_,{,Constructor,(,__,:,Array,[,Int,,,01,],;,_01,,,b_29_3,,,cj,,,_1,:,Array,[,Int,,,0b10,],;,r_,:,HKI,;,G_T,:,Float,),{,{,},},},Class,_,{,},Class,b__,:,D_,{,Val,G,,,V_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X59,],,,0x4C,],,,0132,],,,0b1,],;,},<EOF>''',
                101
            )
        )

    def test_3648(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var xI,$R_:_;Val _J:Array [Float ,0b10_1];$d(){} }Class da{}Class _:_{Val ibv:String ;Constructor (T,Bx:Array [Array [Boolean ,0x3E],6_85];T:d2;_BVD:Float ){} }Class agw{}''',
                '''Class,_,{,Var,xI,,,$R_,:,_,;,Val,_J,:,Array,[,Float,,,0b101,],;,$d,(,),{,},},Class,da,{,},Class,_,:,_,{,Val,ibv,:,String,;,Constructor,(,T,,,Bx,:,Array,[,Array,[,Boolean,,,0x3E,],,,685,],;,T,:,d2,;,_BVD,:,Float,),{,},},Class,agw,{,},<EOF>''',
                101
            )
        )

    def test_3649(self):
        self.assertTrue(
            TestLexer.test(
                '''Class xA49{Destructor (){} }Class Q:_{Constructor (Kj9Qbwbk,__,_:Array [Array [Array [String ,0B10],0B1],0XE]){} }Class h_{}''',
                '''Class,xA49,{,Destructor,(,),{,},},Class,Q,:,_,{,Constructor,(,Kj9Qbwbk,,,__,,,_,:,Array,[,Array,[,Array,[,String,,,0B10,],,,0B1,],,,0XE,],),{,},},Class,h_,{,},<EOF>''',
                101
            )
        )

    def test_3650(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w:i{$_7M447(x,NL:__8B6;L9,_:Float ;_1:_1){} }Class _O{Var _,$W_5__,__:Array [Array [Array [Boolean ,9],0B111100],0b1];Val E0,X,$_w3j,$78_:String ;}''',
                '''Class,w,:,i,{,$_7M447,(,x,,,NL,:,__8B6,;,L9,,,_,:,Float,;,_1,:,_1,),{,},},Class,_O,{,Var,_,,,$W_5__,,,__,:,Array,[,Array,[,Array,[,Boolean,,,9,],,,0B111100,],,,0b1,],;,Val,E0,,,X,,,$_w3j,,,$78_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3651(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _m{Constructor (u:SO_e8;_,b:Boolean ){} }Class e_:_0_{}Class KM{}Class _{$____85(__x:Array [Array [Array [Array [Boolean ,8],33],0X5_84_9_69F_A],0x4];L:Int ;s,J714:Boolean ){Val c,P,_b281:_5N7V;} }Class R{Var $2,s:Array [Boolean ,7];}''',
                '''Class,_m,{,Constructor,(,u,:,SO_e8,;,_,,,b,:,Boolean,),{,},},Class,e_,:,_0_,{,},Class,KM,{,},Class,_,{,$____85,(,__x,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,33,],,,0X584969FA,],,,0x4,],;,L,:,Int,;,s,,,J714,:,Boolean,),{,Val,c,,,P,,,_b281,:,_5N7V,;,},},Class,R,{,Var,$2,,,s,:,Array,[,Boolean,,,7,],;,},<EOF>''',
                101
            )
        )

    def test_3652(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F_B:kW_{Constructor (_10N_7_9:Boolean ;_:_){} }Class v4:_H_N{Val $_8,$a,$_J7500kq,XO_v,$9:Int ;Constructor (V,w:Float ;z4_O,j,_W_,T,j:Array [Int ,0x2A];v97:_r1;B:Array [Array [String ,42],0x3_F_1_FC]){} }''',
                '''Class,F_B,:,kW_,{,Constructor,(,_10N_7_9,:,Boolean,;,_,:,_,),{,},},Class,v4,:,_H_N,{,Val,$_8,,,$a,,,$_J7500kq,,,XO_v,,,$9,:,Int,;,Constructor,(,V,,,w,:,Float,;,z4_O,,,j,,,_W_,,,T,,,j,:,Array,[,Int,,,0x2A,],;,v97,:,_r1,;,B,:,Array,[,Array,[,String,,,42,],,,0x3F1FC,],),{,},},<EOF>''',
                101
            )
        )

    def test_3653(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class m_Y8_:_Xe0_1{Constructor (_:Array [Array [Int ,0x1C],0x1_D_9_8_1_9];_:_){} }Class Fk{}Class N:m{}Class C__:_3{}''',
                '''Class,_,{,},Class,m_Y8_,:,_Xe0_1,{,Constructor,(,_,:,Array,[,Array,[,Int,,,0x1C,],,,0x1D9819,],;,_,:,_,),{,},},Class,Fk,{,},Class,N,:,m,{,},Class,C__,:,_3,{,},<EOF>''',
                101
            )
        )

    def test_3654(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _w{}Class _:_{}Class k74p{}Class __72{}Class G0h_p{}Class _:_2X{Var $__,$__,_:Array [Array [Float ,1],03];Destructor (){Continue ;} }''',
                '''Class,_w,{,},Class,_,:,_,{,},Class,k74p,{,},Class,__72,{,},Class,G0h_p,{,},Class,_,:,_2X,{,Var,$__,,,$__,,,_,:,Array,[,Array,[,Float,,,1,],,,03,],;,Destructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3655(self):
        self.assertTrue(
            TestLexer.test(
                '''Class QL_gzQ6:___{Destructor (){} }Class _O2:c_4{Destructor (){} }Class _:_____Q{Constructor (){Var tW:Int ;} }Class _HX3_{Constructor (){Break ;Continue ;} }''',
                '''Class,QL_gzQ6,:,___,{,Destructor,(,),{,},},Class,_O2,:,c_4,{,Destructor,(,),{,},},Class,_,:,_____Q,{,Constructor,(,),{,Var,tW,:,Int,;,},},Class,_HX3_,{,Constructor,(,),{,Break,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3656(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1Q:W{Constructor (R:_;_:Array [Int ,17];_:Boolean ;_:d;L,k:_8_h_XyB){} }Class N4{}Class _z_:_71{}Class Zm:a_2{}''',
                '''Class,_1Q,:,W,{,Constructor,(,R,:,_,;,_,:,Array,[,Int,,,17,],;,_,:,Boolean,;,_,:,d,;,L,,,k,:,_8_h_XyB,),{,},},Class,N4,{,},Class,_z_,:,_71,{,},Class,Zm,:,a_2,{,},<EOF>''',
                101
            )
        )

    def test_3657(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2y___9{}Class _:_9_{Destructor (){}Var $_8_y3,_:H_k;Constructor (_,n,d9:_){}Var $7:Array [Float ,3_5];Var Uz2,$BI,_,$5_929:Array [Array [Boolean ,94],0XFD];}''',
                '''Class,_2y___9,{,},Class,_,:,_9_,{,Destructor,(,),{,},Var,$_8_y3,,,_,:,H_k,;,Constructor,(,_,,,n,,,d9,:,_,),{,},Var,$7,:,Array,[,Float,,,35,],;,Var,Uz2,,,$BI,,,_,,,$5_929,:,Array,[,Array,[,Boolean,,,94,],,,0XFD,],;,},<EOF>''',
                101
            )
        )

    def test_3658(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __B:d3m{}Class l90:Ve_0{Val $3,$_,$4,z3:Array [Array [Array [Array [Int ,0b1_10],0B101100],0xC],0135];Val $_:_;}''',
                '''Class,__B,:,d3m,{,},Class,l90,:,Ve_0,{,Val,$3,,,$_,,,$4,,,z3,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b110,],,,0B101100,],,,0xC,],,,0135,],;,Val,$_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3659(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l8{Val _,H,N,_,$w,$_6:Boolean ;_(_,_Q,V:y;_:Int ){Break ;}Constructor (__,_Z_,d,B1:Array [Array [Int ,02],6_3_9]){} }''',
                '''Class,l8,{,Val,_,,,H,,,N,,,_,,,$w,,,$_6,:,Boolean,;,_,(,_,,,_Q,,,V,:,y,;,_,:,Int,),{,Break,;,},Constructor,(,__,,,_Z_,,,d,,,B1,:,Array,[,Array,[,Int,,,02,],,,639,],),{,},},<EOF>''',
                101
            )
        )

    def test_3660(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{}Class _:_{}Class a3:i{}Class _6{Constructor (M8tA,TED,m,_,_:M_){Break ;}Destructor (){}$z(){Break ;} }''',
                '''Class,k,{,},Class,_,:,_,{,},Class,a3,:,i,{,},Class,_6,{,Constructor,(,M8tA,,,TED,,,m,,,_,,,_,:,M_,),{,Break,;,},Destructor,(,),{,},$z,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3661(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o_p{Var $_,j4:Array [String ,0b111100];}Class QK:_{Constructor (){} }Class _{Val k2:__pA;Val $VD__:Z_;Var $0I:String ;_0(_:W;X,_,_9,__:Boolean ){Break ;} }''',
                '''Class,o_p,{,Var,$_,,,j4,:,Array,[,String,,,0b111100,],;,},Class,QK,:,_,{,Constructor,(,),{,},},Class,_,{,Val,k2,:,__pA,;,Val,$VD__,:,Z_,;,Var,$0I,:,String,;,_0,(,_,:,W,;,X,,,_,,,_9,,,__,:,Boolean,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3662(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{Var _1Y:w;Var $__:Array [Array [Array [String ,0b1],0105],0b1];Destructor (){}Val G:Array [Int ,0x3_F];Destructor (){}Constructor (){Continue ;} }Class Z_:_{}Class A:C6__{}''',
                '''Class,M,{,Var,_1Y,:,w,;,Var,$__,:,Array,[,Array,[,Array,[,String,,,0b1,],,,0105,],,,0b1,],;,Destructor,(,),{,},Val,G,:,Array,[,Int,,,0x3F,],;,Destructor,(,),{,},Constructor,(,),{,Continue,;,},},Class,Z_,:,_,{,},Class,A,:,C6__,{,},<EOF>''',
                101
            )
        )

    def test_3663(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{__7(){}Val _,$t_,$7qb:i_0;}Class e:t{Constructor (){} }Class _74_7M__:Z0{Constructor (T:___xj_){Var Js0,_83:Int ;Return __V::$e().r;}Constructor (_:Float ;___:Z;V_7:Array [Array [Boolean ,0b1],06]){} }''',
                '''Class,i,{,__7,(,),{,},Val,_,,,$t_,,,$7qb,:,i_0,;,},Class,e,:,t,{,Constructor,(,),{,},},Class,_74_7M__,:,Z0,{,Constructor,(,T,:,___xj_,),{,Var,Js0,,,_83,:,Int,;,Return,__V,::,$e,(,),.,r,;,},Constructor,(,_,:,Float,;,___,:,Z,;,V_7,:,Array,[,Array,[,Boolean,,,0b1,],,,06,],),{,},},<EOF>''',
                101
            )
        )

    def test_3664(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P:_{Var _3,$67,_:String ;_4(m3:Int ){ {Continue ;} }Destructor (){}Constructor (H,e,_:_0;f,G83,X:Array [Array [Array [Boolean ,1_3_5],04_64_547],0b1];_7o,_:Int ;__E,zd,_:Array [Int ,0x6]){} }Class _:__Ir5rD6{}Class _4A6p{}''',
                '''Class,P,:,_,{,Var,_3,,,$67,,,_,:,String,;,_4,(,m3,:,Int,),{,{,Continue,;,},},Destructor,(,),{,},Constructor,(,H,,,e,,,_,:,_0,;,f,,,G83,,,X,:,Array,[,Array,[,Array,[,Boolean,,,135,],,,0464547,],,,0b1,],;,_7o,,,_,:,Int,;,__E,,,zd,,,_,:,Array,[,Int,,,0x6,],),{,},},Class,_,:,__Ir5rD6,{,},Class,_4A6p,{,},<EOF>''',
                101
            )
        )

    def test_3665(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Vm:_a{}Class W_:__{Constructor (___6:Float ;_1GIU:_;_:Float ){}Constructor (R:Array [Boolean ,7_96];__9i:String ){} }Class _{}''',
                '''Class,Vm,:,_a,{,},Class,W_,:,__,{,Constructor,(,___6,:,Float,;,_1GIU,:,_,;,_,:,Float,),{,},Constructor,(,R,:,Array,[,Boolean,,,796,],;,__9i,:,String,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3666(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_9_5j,_e,__G:Boolean ;_,Z:Float ;t,__K8_3Nq_3:Array [Array [String ,5],057];_:Array [Array [Array [Array [Float ,0X54],013],0X38],0b1011]){Break ;} }''',
                '''Class,_,{,Constructor,(,_9_5j,,,_e,,,__G,:,Boolean,;,_,,,Z,:,Float,;,t,,,__K8_3Nq_3,:,Array,[,Array,[,String,,,5,],,,057,],;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X54,],,,013,],,,0X38,],,,0b1011,],),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3667(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:aH{}Class _81:S{Val $7c,V,$hm0:_B;}Class N5_960{_(){} }Class Xo:_{}Class _:b{}Class m:_8{}Class ___:S{}''',
                '''Class,B,:,aH,{,},Class,_81,:,S,{,Val,$7c,,,V,,,$hm0,:,_B,;,},Class,N5_960,{,_,(,),{,},},Class,Xo,:,_,{,},Class,_,:,b,{,},Class,m,:,_8,{,},Class,___,:,S,{,},<EOF>''',
                101
            )
        )

    def test_3668(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{}Class __{Val __:Array [Array [Array [Array [String ,0X8],072_43],0B1],27];Var w,$v:String ;Constructor (_2,nj05:_1;Tddr__,_:Int ){} }''',
                '''Class,Q,{,},Class,__,{,Val,__,:,Array,[,Array,[,Array,[,Array,[,String,,,0X8,],,,07243,],,,0B1,],,,27,],;,Var,w,,,$v,:,String,;,Constructor,(,_2,,,nj05,:,_1,;,Tddr__,,,_,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3669(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _95Z:mn___o_{$25IZ(_6:Array [Array [Array [Int ,0b1_1_0_0_1],03_1],0b11110];__:Array [Float ,0135];_T_M:f){} }''',
                '''Class,_95Z,:,mn___o_,{,$25IZ,(,_6,:,Array,[,Array,[,Array,[,Int,,,0b11001,],,,031,],,,0b11110,],;,__,:,Array,[,Float,,,0135,],;,_T_M,:,f,),{,},},<EOF>''',
                101
            )
        )

    def test_3670(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){} }Class T691{}Class Dy:o6s{$_o(S378:Array [Array [Boolean ,0b11],0B1];_,l_,_43K,y,C_a:w;_,_V82,_,_:Boolean ;x1g43,kb:_){} }''',
                '''Class,_,{,Constructor,(,),{,},},Class,T691,{,},Class,Dy,:,o6s,{,$_o,(,S378,:,Array,[,Array,[,Boolean,,,0b11,],,,0B1,],;,_,,,l_,,,_43K,,,y,,,C_a,:,w,;,_,,,_V82,,,_,,,_,:,Boolean,;,x1g43,,,kb,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3671(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Wo7{}Class BU7U:B6p{Constructor (){} }Class _:_{Var H:Array [Array [Array [Array [Int ,0x24],0B11100],0125],0125];_(_:z){}Constructor (){} }''',
                '''Class,Wo7,{,},Class,BU7U,:,B6p,{,Constructor,(,),{,},},Class,_,:,_,{,Var,H,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x24,],,,0B11100,],,,0125,],,,0125,],;,_,(,_,:,z,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3672(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:n2_9{}Class _:_{}Class _1{}Class j75_:dgi{Val $4,_5,_,$3:Array [Array [Boolean ,05],7];}Class _:M{}Class T:E{}''',
                '''Class,N,:,n2_9,{,},Class,_,:,_,{,},Class,_1,{,},Class,j75_,:,dgi,{,Val,$4,,,_5,,,_,,,$3,:,Array,[,Array,[,Boolean,,,05,],,,7,],;,},Class,_,:,M,{,},Class,T,:,E,{,},<EOF>''',
                101
            )
        )

    def test_3673(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class __Tg{Var u:String ;Constructor (_g,l9m0,J8:Array [Array [Float ,0X4F],47];_2:Boolean ){}Constructor (){Return ;} }''',
                '''Class,_,:,_,{,},Class,__Tg,{,Var,u,:,String,;,Constructor,(,_g,,,l9m0,,,J8,:,Array,[,Array,[,Float,,,0X4F,],,,47,],;,_2,:,Boolean,),{,},Constructor,(,),{,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3674(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_I,_,L_R,_:Array [Array [Array [Array [Array [Array [Array [Int ,0b10],8],0B1_0],04],99],6],0xB_3];__E_:Int ;r,K,Q7d:Array [Float ,0B1_01]){}Constructor (_gB,B,_,_L_r:Float ;_6j_,k_h1h:Boolean ;I:_){Val i,WlHs,_:_1;} }Class D{}''',
                '''Class,_,{,Constructor,(,_I,,,_,,,L_R,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10,],,,8,],,,0B10,],,,04,],,,99,],,,6,],,,0xB3,],;,__E_,:,Int,;,r,,,K,,,Q7d,:,Array,[,Float,,,0B101,],),{,},Constructor,(,_gB,,,B,,,_,,,_L_r,:,Float,;,_6j_,,,k_h1h,:,Boolean,;,I,:,_,),{,Val,i,,,WlHs,,,_,:,_1,;,},},Class,D,{,},<EOF>''',
                101
            )
        )

    def test_3675(self):
        self.assertTrue(
            TestLexer.test(
                '''Class H:__C{Constructor (_:_;__,Fe,W:Boolean ;_,bQ_:Array [Float ,0b1_0];_u:Float ;Uu:Array [String ,07]){T68_Yc::$s()._83();} }''',
                '''Class,H,:,__C,{,Constructor,(,_,:,_,;,__,,,Fe,,,W,:,Boolean,;,_,,,bQ_,:,Array,[,Float,,,0b10,],;,_u,:,Float,;,Uu,:,Array,[,String,,,07,],),{,T68_Yc,::,$s,(,),.,_83,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3676(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Val _,$_e,_,kR_,_:Array [Array [Array [Array [Array [Int ,1],016],0b1],0B100000],8];Destructor (){} }Class xl:Li_8E5_{}Class _B_6{}''',
                '''Class,_,:,_,{,Val,_,,,$_e,,,_,,,kR_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,1,],,,016,],,,0b1,],,,0B100000,],,,8,],;,Destructor,(,),{,},},Class,xl,:,Li_8E5_,{,},Class,_B_6,{,},<EOF>''',
                101
            )
        )

    def test_3677(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s85_tF:_{Val iw2K:Array [Array [Array [Array [Array [Array [String ,0B1000110],045],0XF],0B1],7],7];Destructor (){} }''',
                '''Class,s85_tF,:,_,{,Val,iw2K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1000110,],,,045,],,,0XF,],,,0B1,],,,7,],,,7,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3678(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __7__5_:_72_d_3_{}Class o:R{}Class _O_{}Class _{Val UH2DL:Int ;Val $z:Array [Float ,59];Val _,N,M,N,_8,mc,$7,$_2,$D09:Array [Array [Boolean ,0b1011100],59];}''',
                '''Class,__7__5_,:,_72_d_3_,{,},Class,o,:,R,{,},Class,_O_,{,},Class,_,{,Val,UH2DL,:,Int,;,Val,$z,:,Array,[,Float,,,59,],;,Val,_,,,N,,,M,,,N,,,_8,,,mc,,,$7,,,$_2,,,$D09,:,Array,[,Array,[,Boolean,,,0b1011100,],,,59,],;,},<EOF>''',
                101
            )
        )

    def test_3679(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){}Constructor (W,_57,_:Array [String ,0B110100];A_Od:__){} }Class _:J8{Val _,$_2:Float ;$__(){} }Class _I:igm{}Class w_SI:j1{}''',
                '''Class,_,{,Destructor,(,),{,},Constructor,(,W,,,_57,,,_,:,Array,[,String,,,0B110100,],;,A_Od,:,__,),{,},},Class,_,:,J8,{,Val,_,,,$_2,:,Float,;,$__,(,),{,},},Class,_I,:,igm,{,},Class,w_SI,:,j1,{,},<EOF>''',
                101
            )
        )

    def test_3680(self):
        self.assertTrue(
            TestLexer.test(
                '''Class b{Destructor (){}Constructor (_P,q:Array [Array [Array [Array [Float ,21],0x55],0B11],0114];_64,_,n,b,a,c_:String ;dK:_){}Var $_2,WJ:Array [Array [Array [Float ,0b1011010],0B11],5_8];}''',
                '''Class,b,{,Destructor,(,),{,},Constructor,(,_P,,,q,:,Array,[,Array,[,Array,[,Array,[,Float,,,21,],,,0x55,],,,0B11,],,,0114,],;,_64,,,_,,,n,,,b,,,a,,,c_,:,String,;,dK,:,_,),{,},Var,$_2,,,WJ,:,Array,[,Array,[,Array,[,Float,,,0b1011010,],,,0B11,],,,58,],;,},<EOF>''',
                101
            )
        )

    def test_3681(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X:__{}Class W:_Q{}Class v:T4_a_6r0__i{Constructor (_,__,_qE,_Jl_:Boolean ;I:Array [Float ,04]){} }Class I75:_8{Var $Y,$_:Array [Array [Int ,0x16],0b111111];KN(){}Var _os2,$W_,p_:Int ;Constructor (){} }''',
                '''Class,X,:,__,{,},Class,W,:,_Q,{,},Class,v,:,T4_a_6r0__i,{,Constructor,(,_,,,__,,,_qE,,,_Jl_,:,Boolean,;,I,:,Array,[,Float,,,04,],),{,},},Class,I75,:,_8,{,Var,$Y,,,$_,:,Array,[,Array,[,Int,,,0x16,],,,0b111111,],;,KN,(,),{,},Var,_os2,,,$W_,,,p_,:,Int,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3682(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _{Constructor (__J:Array [Array [String ,027],0B1];f,I,O5:Array [Array [Array [Int ,0XEF],0b11001],04_01_5_13_24]){} }Class _{}Class k001t3_:_68{Constructor (_,_1,m_,t,_:String ;_,j:Array [String ,05]){} }''',
                '''Class,_,:,_,{,},Class,_,{,Constructor,(,__J,:,Array,[,Array,[,String,,,027,],,,0B1,],;,f,,,I,,,O5,:,Array,[,Array,[,Array,[,Int,,,0XEF,],,,0b11001,],,,040151324,],),{,},},Class,_,{,},Class,k001t3_,:,_68,{,Constructor,(,_,,,_1,,,m_,,,t,,,_,:,String,;,_,,,j,:,Array,[,String,,,05,],),{,},},<EOF>''',
                101
            )
        )

    def test_3683(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i{}Class j{$m5(_,_866,z_,_:Float ){}V(_,f,__:Array [Array [Array [Int ,0111],04],48]){} }Class _{$2_(){} }Class __d:_{Destructor (){} }''',
                '''Class,i,{,},Class,j,{,$m5,(,_,,,_866,,,z_,,,_,:,Float,),{,},V,(,_,,,f,,,__,:,Array,[,Array,[,Array,[,Int,,,0111,],,,04,],,,48,],),{,},},Class,_,{,$2_,(,),{,},},Class,__d,:,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3684(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_Q{$_(){} }Class _{}Class _:g_{_l_(Xd:Array [Array [Array [String ,0122],26],0B10111];_:String ;h,I,L5I_S0:Int ;__,o3bM29i:Array [Array [Int ,26],0X2B]){}Constructor (_5,_Qo:Array [Array [Array [Array [Array [Array [Array [Float ,06],067],01],0122],0XE_EC_0],0b100100],0B10111];JO84:Array [Array [Array [Array [Array [Array [String ,26],0X2B],03],26],013],0X2B];_:Array [Float ,0xD]){}Constructor (){} }''',
                '''Class,N,:,_Q,{,$_,(,),{,},},Class,_,{,},Class,_,:,g_,{,_l_,(,Xd,:,Array,[,Array,[,Array,[,String,,,0122,],,,26,],,,0B10111,],;,_,:,String,;,h,,,I,,,L5I_S0,:,Int,;,__,,,o3bM29i,:,Array,[,Array,[,Int,,,26,],,,0X2B,],),{,},Constructor,(,_5,,,_Qo,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,06,],,,067,],,,01,],,,0122,],,,0XEEC0,],,,0b100100,],,,0B10111,],;,JO84,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,26,],,,0X2B,],,,03,],,,26,],,,013,],,,0X2B,],;,_,:,Array,[,Float,,,0xD,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3685(self):
        self.assertTrue(
            TestLexer.test(
                '''Class T{Constructor (_,gr:Array [String ,0x1_07_5_B_46];P5:_6;V:s_2_Z;__,_:S8;_M:_){}Destructor (){Continue ;Break ;} }''',
                '''Class,T,{,Constructor,(,_,,,gr,:,Array,[,String,,,0x1075B46,],;,P5,:,_6,;,V,:,s_2_Z,;,__,,,_,:,S8,;,_M,:,_,),{,},Destructor,(,),{,Continue,;,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3686(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Jd:T_{Constructor (H:Array [Int ,71];H:Array [Array [Array [String ,71],71],5_4_31_9880];K2_:Array [Array [Array [String ,0x60],0b1011110],07];z_,h_Z_6B_7_:Array [Array [Array [Array [Boolean ,0B1],0b1011110],0117],0b1011110];A,Af:String ;____5:_){} }''',
                '''Class,Jd,:,T_,{,Constructor,(,H,:,Array,[,Int,,,71,],;,H,:,Array,[,Array,[,Array,[,String,,,71,],,,71,],,,54319880,],;,K2_,:,Array,[,Array,[,Array,[,String,,,0x60,],,,0b1011110,],,,07,],;,z_,,,h_Z_6B_7_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0b1011110,],,,0117,],,,0b1011110,],;,A,,,Af,:,String,;,____5,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3687(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:r2{Val M:_;_(_1:lWC06;__Q3:Array [Float ,0b1];k5_:_){Continue ;Continue ;{} }}Class ce:n02{}Class EG438:_{}Class J8c_5:D{}Class K:a_{}''',
                '''Class,I,:,r2,{,Val,M,:,_,;,_,(,_1,:,lWC06,;,__Q3,:,Array,[,Float,,,0b1,],;,k5_,:,_,),{,Continue,;,Continue,;,{,},},},Class,ce,:,n02,{,},Class,EG438,:,_,{,},Class,J8c_5,:,D,{,},Class,K,:,a_,{,},<EOF>''',
                101
            )
        )

    def test_3688(self):
        self.assertTrue(
            TestLexer.test(
                '''Class V{Constructor (m522,_,_83l3J4z_5__:Array [Array [Array [Array [Array [Float ,0X5B],0b11001],0b1_0_1],4],0127];_:V;_,u07,_:D35){ {} }}Class Z{}''',
                '''Class,V,{,Constructor,(,m522,,,_,,,_83l3J4z_5__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X5B,],,,0b11001,],,,0b101,],,,4,],,,0127,],;,_,:,V,;,_,,,u07,,,_,:,D35,),{,{,},},},Class,Z,{,},<EOF>''',
                101
            )
        )

    def test_3689(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:sV{Val $1,$1:String ;}Class R_3_{Var $d,$_0:s4g;Val __y,$U,aU:Boolean ;}Class V_p_G:av0s{Destructor (){} }''',
                '''Class,_,:,sV,{,Val,$1,,,$1,:,String,;,},Class,R_3_,{,Var,$d,,,$_0,:,s4g,;,Val,__y,,,$U,,,aU,:,Boolean,;,},Class,V_p_G,:,av0s,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3690(self):
        self.assertTrue(
            TestLexer.test(
                '''Class f_t9:_6__{Var __0NLZE:Array [Array [Boolean ,04],0126];Var hP,_7_,_L3_O,$0,$4:Float ;Constructor (_,_:_;w,M__6:Array [Array [Boolean ,0B1100000],4];__,_:_){} }Class __:_{}''',
                '''Class,f_t9,:,_6__,{,Var,__0NLZE,:,Array,[,Array,[,Boolean,,,04,],,,0126,],;,Var,hP,,,_7_,,,_L3_O,,,$0,,,$4,:,Float,;,Constructor,(,_,,,_,:,_,;,w,,,M__6,:,Array,[,Array,[,Boolean,,,0B1100000,],,,4,],;,__,,,_,:,_,),{,},},Class,__,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3691(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y3:_S{$B(x,_,T:_;_,o,z,VO3J_,j:Array [Array [Array [Boolean ,05],03],0x14_5]){}_(E_06J:Array [String ,94]){} }Class _L_:_{Constructor (u:_s){} }''',
                '''Class,y3,:,_S,{,$B,(,x,,,_,,,T,:,_,;,_,,,o,,,z,,,VO3J_,,,j,:,Array,[,Array,[,Array,[,Boolean,,,05,],,,03,],,,0x145,],),{,},_,(,E_06J,:,Array,[,String,,,94,],),{,},},Class,_L_,:,_,{,Constructor,(,u,:,_s,),{,},},<EOF>''',
                101
            )
        )

    def test_3692(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class _{Destructor (){Break ;} }Class VU:__58_wk8____{Constructor (_,_1_,w,z,p,i,L,_,__B:_W;j:Boolean ){Break ;}Val $3_:Array [Array [Float ,42],0134];}Class _{}''',
                '''Class,_,{,Destructor,(,),{,},},Class,_,{,Destructor,(,),{,Break,;,},},Class,VU,:,__58_wk8____,{,Constructor,(,_,,,_1_,,,w,,,z,,,p,,,i,,,L,,,_,,,__B,:,_W,;,j,:,Boolean,),{,Break,;,},Val,$3_,:,Array,[,Array,[,Float,,,42,],,,0134,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3693(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:f6G{}Class _____5:F38{$_(h,L,j:Array [Boolean ,94]){}Destructor (){}Var $2:Array [Array [Array [Int ,0xA_3],94],036];Destructor (){} }''',
                '''Class,_,:,f6G,{,},Class,_____5,:,F38,{,$_,(,h,,,L,,,j,:,Array,[,Boolean,,,94,],),{,},Destructor,(,),{,},Var,$2,:,Array,[,Array,[,Array,[,Int,,,0xA3,],,,94,],,,036,],;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3694(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I{Var $0_o_,$58:Array [Array [Float ,03_56_7460],0x5A];}Class _H{}Class _0:n{}Class __:_H{Constructor (_,A:d2;_B:Array [Boolean ,7]){}d(){Return ;_J::$_O90._M();}Destructor (){} }Class m5:Z{}Class _58_:_6S{}''',
                '''Class,_,:,I,{,Var,$0_o_,,,$58,:,Array,[,Array,[,Float,,,03567460,],,,0x5A,],;,},Class,_H,{,},Class,_0,:,n,{,},Class,__,:,_H,{,Constructor,(,_,,,A,:,d2,;,_B,:,Array,[,Boolean,,,7,],),{,},d,(,),{,Return,;,_J,::,$_O90,.,_M,(,),;,},Destructor,(,),{,},},Class,m5,:,Z,{,},Class,_58_,:,_6S,{,},<EOF>''',
                101
            )
        )

    def test_3695(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{_(){} }Class B_RW:M{}Class pr:l{Val w:Boolean ;}Class _{$61_(){} }Class _L_g:_o{Var _,i__03,$w,$T,_J3:Array [Array [String ,01_0],0B111110];}''',
                '''Class,_,{,_,(,),{,},},Class,B_RW,:,M,{,},Class,pr,:,l,{,Val,w,:,Boolean,;,},Class,_,{,$61_,(,),{,},},Class,_L_g,:,_o,{,Var,_,,,i__03,,,$w,,,$T,,,_J3,:,Array,[,Array,[,String,,,010,],,,0B111110,],;,},<EOF>''',
                101
            )
        )

    def test_3696(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_Y{$ft_(_,_1,e_:Array [Array [Array [Array [Array [Int ,0XD],0x1E],060_14160],0xA],0b1_1];c:Array [Array [Array [Array [Array [Boolean ,035],0B1],01],1_69_0_7],57]){} }''',
                '''Class,_,:,_Y,{,$ft_,(,_,,,_1,,,e_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XD,],,,0x1E,],,,06014160,],,,0xA,],,,0b11,],;,c,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,035,],,,0B1,],,,01,],,,16907,],,,57,],),{,},},<EOF>''',
                101
            )
        )

    def test_3697(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var __:Array [Array [Array [Boolean ,0134],01],85];Destructor (){} }Class _g:F{}Class __:wk{Destructor (){Break ;}Var $2s9,_:Array [String ,0XE];}Class _H_{Var $__e_,$6,_,$E,$F:String ;}''',
                '''Class,_,{,Var,__,:,Array,[,Array,[,Array,[,Boolean,,,0134,],,,01,],,,85,],;,Destructor,(,),{,},},Class,_g,:,F,{,},Class,__,:,wk,{,Destructor,(,),{,Break,;,},Var,$2s9,,,_,:,Array,[,String,,,0XE,],;,},Class,_H_,{,Var,$__e_,,,$6,,,_,,,$E,,,$F,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3698(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t_{}Class _:r{Var _,$0z,_:Array [Array [Array [Array [Int ,67],0b111111],0X1],0B10];Destructor (){} }Class m5__O:ak0_{}''',
                '''Class,t_,{,},Class,_,:,r,{,Var,_,,,$0z,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,67,],,,0b111111,],,,0X1,],,,0B10,],;,Destructor,(,),{,},},Class,m5__O,:,ak0_,{,},<EOF>''',
                101
            )
        )

    def test_3699(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Wr_f:_uA{Var $T1,b1:Float ;}Class G7{Destructor (){} }Class _:_J{Destructor (){}Constructor (z7_:Array [String ,0X8]){} }Class y0f5{Destructor (){} }''',
                '''Class,Wr_f,:,_uA,{,Var,$T1,,,b1,:,Float,;,},Class,G7,{,Destructor,(,),{,},},Class,_,:,_J,{,Destructor,(,),{,},Constructor,(,z7_,:,Array,[,String,,,0X8,],),{,},},Class,y0f5,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3700(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class jsZ_{Val _i69,O,_,$6:lm;_(lDZf2d3mH4,q_:Array [Array [Array [Float ,04],0B100101],74];_4_95,l:_6){} }''',
                '''Class,_,{,},Class,jsZ_,{,Val,_i69,,,O,,,_,,,$6,:,lm,;,_,(,lDZf2d3mH4,,,q_,:,Array,[,Array,[,Array,[,Float,,,04,],,,0B100101,],,,74,],;,_4_95,,,l,:,_6,),{,},},<EOF>''',
                101
            )
        )

    def test_3701(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q1:zEiT_{_3_j(_:Array [Int ,1];G:Array [Int ,0b1];tUj,L_P,__4__5_,M_l_k,_F_,__35:Array [Array [Array [Int ,65],96],017];__:Array [Array [Int ,0x34],05_2]){} }Class _{}''',
                '''Class,Q1,:,zEiT_,{,_3_j,(,_,:,Array,[,Int,,,1,],;,G,:,Array,[,Int,,,0b1,],;,tUj,,,L_P,,,__4__5_,,,M_l_k,,,_F_,,,__35,:,Array,[,Array,[,Array,[,Int,,,65,],,,96,],,,017,],;,__,:,Array,[,Array,[,Int,,,0x34,],,,052,],),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3702(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{Destructor (){} }Class Zv{}Class c{Destructor (){Continue ;} }Class H:g7_{Val $mTC6u:Float ;}Class S:__iS{}Class J5{}''',
                '''Class,r,{,Destructor,(,),{,},},Class,Zv,{,},Class,c,{,Destructor,(,),{,Continue,;,},},Class,H,:,g7_,{,Val,$mTC6u,:,Float,;,},Class,S,:,__iS,{,},Class,J5,{,},<EOF>''',
                101
            )
        )

    def test_3703(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:_t{$d(t,_S,_7s,_:Array [Array [Int ,59],051];n6__,J_8d_d:W){} }Class u:p{C(_,U7:Array [Boolean ,051];_M_,_k_:Array [Float ,0B110100];I,_2A_P_:Array [Boolean ,0B1];_K,xl,J:H2;_8_U:Float ;__9W:Boolean ){} }''',
                '''Class,k,:,_t,{,$d,(,t,,,_S,,,_7s,,,_,:,Array,[,Array,[,Int,,,59,],,,051,],;,n6__,,,J_8d_d,:,W,),{,},},Class,u,:,p,{,C,(,_,,,U7,:,Array,[,Boolean,,,051,],;,_M_,,,_k_,:,Array,[,Float,,,0B110100,],;,I,,,_2A_P_,:,Array,[,Boolean,,,0B1,],;,_K,,,xl,,,J,:,H2,;,_8_U,:,Float,;,__9W,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3704(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Y{}Class _v:_86_{_4Oi(_T,o,_u6:Float ){}Constructor (K:Array [Float ,06];_:String ;Q,o2_:_){} }Class _P{Constructor (){Break ;_::$4();}Destructor (){} }''',
                '''Class,_,:,Y,{,},Class,_v,:,_86_,{,_4Oi,(,_T,,,o,,,_u6,:,Float,),{,},Constructor,(,K,:,Array,[,Float,,,06,],;,_,:,String,;,Q,,,o2_,:,_,),{,},},Class,_P,{,Constructor,(,),{,Break,;,_,::,$4,(,),;,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3705(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $90,qe:Int ;Val $7_,_Jb1j_,N,e:_Q;_(G201V_,p,_:Array [Array [Array [Array [Float ,932],05],0X3F],85];B,O,__,__,_E,A,__N4,_:Int ){Val r_u_:W3;} }''',
                '''Class,_,{,Var,$90,,,qe,:,Int,;,Val,$7_,,,_Jb1j_,,,N,,,e,:,_Q,;,_,(,G201V_,,,p,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,932,],,,05,],,,0X3F,],,,85,],;,B,,,O,,,__,,,__,,,_E,,,A,,,__N4,,,_,:,Int,),{,Val,r_u_,:,W3,;,},},<EOF>''',
                101
            )
        )

    def test_3706(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $_6,$F8,$_:fJ;}Class Ew{}Class _3:i0{Constructor (j,_0:Array [Array [Boolean ,0b1000001],0X1C];E:Boolean ){}Var _:Array [Int ,0B1];Val __G,$Ip_4_0,M8:e;Val k_2V_3:j;}''',
                '''Class,_,{,Var,$_6,,,$F8,,,$_,:,fJ,;,},Class,Ew,{,},Class,_3,:,i0,{,Constructor,(,j,,,_0,:,Array,[,Array,[,Boolean,,,0b1000001,],,,0X1C,],;,E,:,Boolean,),{,},Var,_,:,Array,[,Int,,,0B1,],;,Val,__G,,,$Ip_4_0,,,M8,:,e,;,Val,k_2V_3,:,j,;,},<EOF>''',
                101
            )
        )

    def test_3707(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _A:b{}Class T:_{}Class ___:h{Constructor (_,_5X_,_,m:Array [Array [Array [Int ,0B111000],0B111000],1_5_07]){} }Class _cW{}''',
                '''Class,_A,:,b,{,},Class,T,:,_,{,},Class,___,:,h,{,Constructor,(,_,,,_5X_,,,_,,,m,:,Array,[,Array,[,Array,[,Int,,,0B111000,],,,0B111000,],,,1507,],),{,},},Class,_cW,{,},<EOF>''',
                101
            )
        )

    def test_3708(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u98{$09__4_Vd(q:String ;_1:Array [Array [Array [Array [String ,6_74],83],06],0b10];_6pjtG_,_m_2:_b){}Constructor (){} }''',
                '''Class,u98,{,$09__4_Vd,(,q,:,String,;,_1,:,Array,[,Array,[,Array,[,Array,[,String,,,674,],,,83,],,,06,],,,0b10,],;,_6pjtG_,,,_m_2,:,_b,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3709(self):
        self.assertTrue(
            TestLexer.test(
                '''Class dt6:X_{Val $__T:Array [Float ,07];}Class _N3R_33RX{Val _2A6_n,_,w_7,$_7E_l_,$_,H78_:Array [Array [Array [Array [Int ,0106],0x1C],0B1011],49];}''',
                '''Class,dt6,:,X_,{,Val,$__T,:,Array,[,Float,,,07,],;,},Class,_N3R_33RX,{,Val,_2A6_n,,,_,,,w_7,,,$_7E_l_,,,$_,,,H78_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0106,],,,0x1C,],,,0B1011,],,,49,],;,},<EOF>''',
                101
            )
        )

    def test_3710(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I{Var $N:_0;}Class m{Constructor (_:Array [Array [Boolean ,0B1001111],0XC_3]){u::$Z();Continue ;}Constructor (B_7_7g,___7,PH,_:Array [Array [Array [Array [Array [Array [Int ,0X34],62],0114],0x4_5],19],2];C_,_:Array [Boolean ,0X34];V,L2_B44,C,_6q,T:Boolean ;n_,P_,__:Array [String ,0X39];bZ,_:String ){} }Class _{}Class N{Constructor (){} }Class _:_{Val _:Array [String ,0XC];}Class f:C{}''',
                '''Class,I,{,Var,$N,:,_0,;,},Class,m,{,Constructor,(,_,:,Array,[,Array,[,Boolean,,,0B1001111,],,,0XC3,],),{,u,::,$Z,(,),;,Continue,;,},Constructor,(,B_7_7g,,,___7,,,PH,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X34,],,,62,],,,0114,],,,0x45,],,,19,],,,2,],;,C_,,,_,:,Array,[,Boolean,,,0X34,],;,V,,,L2_B44,,,C,,,_6q,,,T,:,Boolean,;,n_,,,P_,,,__,:,Array,[,String,,,0X39,],;,bZ,,,_,:,String,),{,},},Class,_,{,},Class,N,{,Constructor,(,),{,},},Class,_,:,_,{,Val,_,:,Array,[,String,,,0XC,],;,},Class,f,:,C,{,},<EOF>''',
                101
            )
        )

    def test_3711(self):
        self.assertTrue(
            TestLexer.test(
                '''Class x_{Constructor (a,U_,J:Array [Int ,0b1_1];__,h:Array [Array [Array [Int ,0X4_9],0B1_1],0b101011]){}Var $a8,_s8,$_:_;}Class K_{}''',
                '''Class,x_,{,Constructor,(,a,,,U_,,,J,:,Array,[,Int,,,0b11,],;,__,,,h,:,Array,[,Array,[,Array,[,Int,,,0X49,],,,0B11,],,,0b101011,],),{,},Var,$a8,,,_s8,,,$_,:,_,;,},Class,K_,{,},<EOF>''',
                101
            )
        )

    def test_3712(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class Tq:b{Var $4:Array [Array [Boolean ,0X4B],07_6];}Class r{}Class _:z_46{Constructor (__:Boolean ){Break ;} }''',
                '''Class,_,{,},Class,Tq,:,b,{,Var,$4,:,Array,[,Array,[,Boolean,,,0X4B,],,,076,],;,},Class,r,{,},Class,_,:,z_46,{,Constructor,(,__,:,Boolean,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3713(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N_i{}Class _n{}Class z:L{Var $__:Array [Array [Array [Boolean ,071],0B10_1],03_0];Constructor (){Continue ;} }Class _:_2j9{Var $5:Array [Float ,0X27];}''',
                '''Class,_,:,N_i,{,},Class,_n,{,},Class,z,:,L,{,Var,$__,:,Array,[,Array,[,Array,[,Boolean,,,071,],,,0B101,],,,030,],;,Constructor,(,),{,Continue,;,},},Class,_,:,_2j9,{,Var,$5,:,Array,[,Float,,,0X27,],;,},<EOF>''',
                101
            )
        )

    def test_3714(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _69{Val __,_,_a:Array [Float ,1_75];Val $_:Int ;}Class n{Constructor (f_6:Array [String ,63];T,_,_NW:__){} }Class _:Hw{}''',
                '''Class,_69,{,Val,__,,,_,,,_a,:,Array,[,Float,,,175,],;,Val,$_,:,Int,;,},Class,n,{,Constructor,(,f_6,:,Array,[,String,,,63,],;,T,,,_,,,_NW,:,__,),{,},},Class,_,:,Hw,{,},<EOF>''',
                101
            )
        )

    def test_3715(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _6:_{}Class _8:V{$7B(K_,_:Array [Boolean ,60];_9_98,Y6_:bt;gd,M,_:Boolean ;_:_;_:a4;BB:Int ){}Val _06,$99,_R6_,$6:_76;}Class G22{}''',
                '''Class,_6,:,_,{,},Class,_8,:,V,{,$7B,(,K_,,,_,:,Array,[,Boolean,,,60,],;,_9_98,,,Y6_,:,bt,;,gd,,,M,,,_,:,Boolean,;,_,:,_,;,_,:,a4,;,BB,:,Int,),{,},Val,_06,,,$99,,,_R6_,,,$6,:,_76,;,},Class,G22,{,},<EOF>''',
                101
            )
        )

    def test_3716(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s9R:Oy{Var $6_0,_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,073],2],0X16],0B1_1],073],01_3],0X60],057];}''',
                '''Class,s9R,:,Oy,{,Var,$6_0,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,073,],,,2,],,,0X16,],,,0B11,],,,073,],,,013,],,,0X60,],,,057,],;,},<EOF>''',
                101
            )
        )

    def test_3717(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:d{Var $U,lSs:Xn;}Class e9_:_8{Var s:String ;}Class _:_j{Var $1i_,_:N;Constructor (_i:String ){Break ;} }Class _a__{Val _30,$_,$_,$o:String ;}''',
                '''Class,_,:,d,{,Var,$U,,,lSs,:,Xn,;,},Class,e9_,:,_8,{,Var,s,:,String,;,},Class,_,:,_j,{,Var,$1i_,,,_,:,N,;,Constructor,(,_i,:,String,),{,Break,;,},},Class,_a__,{,Val,_30,,,$_,,,$_,,,$o,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3718(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_6d2Sa73{Constructor (_,_,b,_O,i:String ;H:Boolean ;_,O5,S:Array [String ,0XC_7]){}Constructor (_,F3j:Array [Array [Boolean ,01_36_70],0X9];__:J6;_Y,i,m,r6,x__,El_,_,K_2,_,KM,_6,__,_W,_,g,_5:Float ){} }Class v{}''',
                '''Class,_,:,_6d2Sa73,{,Constructor,(,_,,,_,,,b,,,_O,,,i,:,String,;,H,:,Boolean,;,_,,,O5,,,S,:,Array,[,String,,,0XC7,],),{,},Constructor,(,_,,,F3j,:,Array,[,Array,[,Boolean,,,013670,],,,0X9,],;,__,:,J6,;,_Y,,,i,,,m,,,r6,,,x__,,,El_,,,_,,,K_2,,,_,,,KM,,,_6,,,__,,,_W,,,_,,,g,,,_5,:,Float,),{,},},Class,v,{,},<EOF>''',
                101
            )
        )

    def test_3719(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _3t60{Destructor (){} }Class _:WZ_{$4A(__n:n_;Y_,_J,WD08_,R_unk,RI:String ){} }Class ___{Var $2p_:_;}Class H{}''',
                '''Class,_3t60,{,Destructor,(,),{,},},Class,_,:,WZ_,{,$4A,(,__n,:,n_,;,Y_,,,_J,,,WD08_,,,R_unk,,,RI,:,String,),{,},},Class,___,{,Var,$2p_,:,_,;,},Class,H,{,},<EOF>''',
                101
            )
        )

    def test_3720(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k:_wT3{Constructor (W,_:Array [Array [Array [Array [Int ,0X6D1],0xF78_1_D0],0x2],85];l:Int ;__:Array [Array [Array [String ,0126],0b11],042_4]){}Val $N:String ;}Class _{Constructor (_,_,V8,x,T,_,Cm:_){}Constructor (_:_Gi){} }''',
                '''Class,k,:,_wT3,{,Constructor,(,W,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X6D1,],,,0xF781D0,],,,0x2,],,,85,],;,l,:,Int,;,__,:,Array,[,Array,[,Array,[,String,,,0126,],,,0b11,],,,0424,],),{,},Val,$N,:,String,;,},Class,_,{,Constructor,(,_,,,_,,,V8,,,x,,,T,,,_,,,Cm,:,_,),{,},Constructor,(,_,:,_Gi,),{,},},<EOF>''',
                101
            )
        )

    def test_3721(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M{}Class _{}Class G_75_{Val B,$4,$d546_0:Array [Boolean ,013];$f(){Break ;}Constructor (){}Destructor (){} }''',
                '''Class,_M,{,},Class,_,{,},Class,G_75_,{,Val,B,,,$4,,,$d546_0,:,Array,[,Boolean,,,013,],;,$f,(,),{,Break,;,},Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3722(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:x_{Var $g,_,$1:Float ;_4(){}Val $0y_56,$6S,$3:Array [Array [Array [Boolean ,0120],0120],0b100010];}Class a:_{}''',
                '''Class,_,{,},Class,_,:,x_,{,Var,$g,,,_,,,$1,:,Float,;,_4,(,),{,},Val,$0y_56,,,$6S,,,$3,:,Array,[,Array,[,Array,[,Boolean,,,0120,],,,0120,],,,0b100010,],;,},Class,a,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3723(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o{}Class _7_:_L_o{}Class T{}Class m9_:b{$_(B76,Q,o:Float ;_2,UC,_:Float ;_:b){} }Class _{Var _:Array [String ,0X51];Val f:_;Destructor (){} }''',
                '''Class,o,{,},Class,_7_,:,_L_o,{,},Class,T,{,},Class,m9_,:,b,{,$_,(,B76,,,Q,,,o,:,Float,;,_2,,,UC,,,_,:,Float,;,_,:,b,),{,},},Class,_,{,Var,_,:,Array,[,String,,,0X51,],;,Val,f,:,_,;,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3724(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var $3:Boolean ;Destructor (){} }Class _i52:_{_(_:String ){}Var _C,_,S:Array [Array [Array [Array [Array [Boolean ,07],77],066],02],0B1];}Class t:_{}Class G_{}''',
                '''Class,__,{,Var,$3,:,Boolean,;,Destructor,(,),{,},},Class,_i52,:,_,{,_,(,_,:,String,),{,},Var,_C,,,_,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,07,],,,77,],,,066,],,,02,],,,0B1,],;,},Class,t,:,_,{,},Class,G_,{,},<EOF>''',
                101
            )
        )

    def test_3725(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:cS0_D{}Class __U{Destructor (){} }Class _Rl3_6:_A{Var $99:Array [Array [Array [Array [Array [Array [Array [Int ,01],8],0B10010_0_1],5],0b1],0xA0],3];}Class N{}Class _:f0{}''',
                '''Class,__,:,cS0_D,{,},Class,__U,{,Destructor,(,),{,},},Class,_Rl3_6,:,_A,{,Var,$99,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,8,],,,0B1001001,],,,5,],,,0b1,],,,0xA0,],,,3,],;,},Class,N,{,},Class,_,:,f0,{,},<EOF>''',
                101
            )
        )

    def test_3726(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (F_,_9,L_:String ;_:e;_:i_;c:Array [String ,0B1];_,_,_,z14:d){}Var $_Y:String ;}Class _3i8{}''',
                '''Class,_,{,Constructor,(,F_,,,_9,,,L_,:,String,;,_,:,e,;,_,:,i_,;,c,:,Array,[,String,,,0B1,],;,_,,,_,,,_,,,z14,:,d,),{,},Var,$_Y,:,String,;,},Class,_3i8,{,},<EOF>''',
                101
            )
        )

    def test_3727(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class qE{Destructor (){}Var _3,$1,_,m_2_7_3:Int ;}Class pk{}Class _m8H_:_a{Var $5:Array [Int ,0B101];}Class j{$Y37_Dn6sm_8(){} }''',
                '''Class,_,{,},Class,qE,{,Destructor,(,),{,},Var,_3,,,$1,,,_,,,m_2_7_3,:,Int,;,},Class,pk,{,},Class,_m8H_,:,_a,{,Var,$5,:,Array,[,Int,,,0B101,],;,},Class,j,{,$Y37_Dn6sm_8,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3728(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _N8:_{Constructor (___Z82:Float ;A,_8:lC;_,A:Array [Boolean ,0X8E_B_B_1];_:_){} }Class m_1:A{}Class _v{}''',
                '''Class,_N8,:,_,{,Constructor,(,___Z82,:,Float,;,A,,,_8,:,lC,;,_,,,A,:,Array,[,Boolean,,,0X8EBB1,],;,_,:,_,),{,},},Class,m_1,:,A,{,},Class,_v,{,},<EOF>''',
                101
            )
        )

    def test_3729(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _5:n0_6{Val $2_bJ9:_;}Class n:_7{}Class _:__{}Class V__{}Class h{}Class O_:_{}Class l{}Class _:S{}''',
                '''Class,_,{,},Class,_5,:,n0_6,{,Val,$2_bJ9,:,_,;,},Class,n,:,_7,{,},Class,_,:,__,{,},Class,V__,{,},Class,h,{,},Class,O_,:,_,{,},Class,l,{,},Class,_,:,S,{,},<EOF>''',
                101
            )
        )

    def test_3730(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __w_25{}Class __:hk{}Class R{Constructor (_,Fz4:Array [Boolean ,0x7];X,_,lYY7:Array [Boolean ,0b1_11]){} }Class _TV:I{Constructor (){} }Class _{}''',
                '''Class,__w_25,{,},Class,__,:,hk,{,},Class,R,{,Constructor,(,_,,,Fz4,:,Array,[,Boolean,,,0x7,],;,X,,,_,,,lYY7,:,Array,[,Boolean,,,0b111,],),{,},},Class,_TV,:,I,{,Constructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3731(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l{}Class H{}Class __:A{Destructor (){}Constructor (_Z39:Array [Array [Array [Float ,795_51_3],0B1],0b1_1_1]){} }''',
                '''Class,l,{,},Class,H,{,},Class,__,:,A,{,Destructor,(,),{,},Constructor,(,_Z39,:,Array,[,Array,[,Array,[,Float,,,795513,],,,0B1,],,,0b111,],),{,},},<EOF>''',
                101
            )
        )

    def test_3732(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{$_r_(){} }Class _{}Class _{Constructor (_r:Array [Int ,0XAB];ny_,ya:qr6_7;_b:Array [Array [Array [Int ,0B110],35_2],0x4]){}Var __:Int ;}Class li{Var h,E0:_;}Class g{}''',
                '''Class,a,{,$_r_,(,),{,},},Class,_,{,},Class,_,{,Constructor,(,_r,:,Array,[,Int,,,0XAB,],;,ny_,,,ya,:,qr6_7,;,_b,:,Array,[,Array,[,Array,[,Int,,,0B110,],,,352,],,,0x4,],),{,},Var,__,:,Int,;,},Class,li,{,Var,h,,,E0,:,_,;,},Class,g,{,},<EOF>''',
                101
            )
        )

    def test_3733(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o_{$4W(_ud,_,Y:_78){}Constructor (_2,__:Float ;_P:Array [String ,02];x9_,_825h_,_W14,_:Boolean ;f:Array [Array [Int ,0X30],012]){ {} }}''',
                '''Class,o_,{,$4W,(,_ud,,,_,,,Y,:,_78,),{,},Constructor,(,_2,,,__,:,Float,;,_P,:,Array,[,String,,,02,],;,x9_,,,_825h_,,,_W14,,,_,:,Boolean,;,f,:,Array,[,Array,[,Int,,,0X30,],,,012,],),{,{,},},},<EOF>''',
                101
            )
        )

    def test_3734(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2:jU{}Class I{$X(M,__7:c3;__:Array [Array [String ,033],0xA];_,U_5:Array [Boolean ,05];l__:_6;w3,_C,___3Pl__lnG:o){}Constructor (_,P:String ){} }''',
                '''Class,_2,:,jU,{,},Class,I,{,$X,(,M,,,__7,:,c3,;,__,:,Array,[,Array,[,String,,,033,],,,0xA,],;,_,,,U_5,:,Array,[,Boolean,,,05,],;,l__,:,_6,;,w3,,,_C,,,___3Pl__lnG,:,o,),{,},Constructor,(,_,,,P,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3735(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _W:PA7_9{_(){}Val $4,_,jU_2_:Int ;N0(C_H:Array [Array [String ,0X20],05_00]){}Destructor (){}Destructor (){} }''',
                '''Class,_W,:,PA7_9,{,_,(,),{,},Val,$4,,,_,,,jU_2_,:,Int,;,N0,(,C_H,:,Array,[,Array,[,String,,,0X20,],,,0500,],),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3736(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I:_{$___(r:q_g_;F:x;n:Array [Boolean ,03];a_1,_,V,_,a_d7,_:Array [Array [Array [String ,0672160],03],1];__,B4,Q,_:Array [Array [Array [String ,077],86],0B10]){} }''',
                '''Class,I,:,_,{,$___,(,r,:,q_g_,;,F,:,x,;,n,:,Array,[,Boolean,,,03,],;,a_1,,,_,,,V,,,_,,,a_d7,,,_,:,Array,[,Array,[,Array,[,String,,,0672160,],,,03,],,,1,],;,__,,,B4,,,Q,,,_,:,Array,[,Array,[,Array,[,String,,,077,],,,86,],,,0B10,],),{,},},<EOF>''',
                101
            )
        )

    def test_3737(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{}Class __3{Constructor (_7,_:Boolean ){}Var QN,_7:Array [Array [Array [Int ,06_34],0XB5F],0x59];}Class _{}Class Rb{Val $_,$_0:_;}''',
                '''Class,a,{,},Class,__3,{,Constructor,(,_7,,,_,:,Boolean,),{,},Var,QN,,,_7,:,Array,[,Array,[,Array,[,Int,,,0634,],,,0XB5F,],,,0x59,],;,},Class,_,{,},Class,Rb,{,Val,$_,,,$_0,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3738(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class S:BCB7{Constructor (p,j3:Array [Array [Float ,29],0b1_110];W,_5:String ;___7_7Y_:Array [Boolean ,0x5_2]){Continue ;} }Class W{}Class _{}''',
                '''Class,_,{,},Class,S,:,BCB7,{,Constructor,(,p,,,j3,:,Array,[,Array,[,Float,,,29,],,,0b1110,],;,W,,,_5,:,String,;,___7_7Y_,:,Array,[,Boolean,,,0x52,],),{,Continue,;,},},Class,W,{,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3739(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $L,$_I:Float ;Destructor (){}Var s,$y:Array [Array [Array [Array [Array [Boolean ,0X6_E],0b111010],041],9],041];}Class _Q7{}Class ___15___{}Class _jf_1:A{}Class t:R{}''',
                '''Class,_,{,Var,$L,,,$_I,:,Float,;,Destructor,(,),{,},Var,s,,,$y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X6E,],,,0b111010,],,,041,],,,9,],,,041,],;,},Class,_Q7,{,},Class,___15___,{,},Class,_jf_1,:,A,{,},Class,t,:,R,{,},<EOF>''',
                101
            )
        )

    def test_3740(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B4{}Class _:qy{Constructor (_,zH3,P_l95:Array [Array [Array [Boolean ,0B1],0b1],4];_:Array [Array [Array [Boolean ,75],0x92],0X51];_:Boolean ;v,_23,_51,_:Array [Array [Int ,0X51],0B11_0_0];P,__:Q;T2:Array [Array [Int ,0b10_0],0B1_1];_,O,ET_,_,o:Array [Array [Array [Array [Array [Int ,50],0X51],0B1000010],75],074];__,cV1:_;S,p:Array [Array [Array [Array [Array [Array [Boolean ,0b1],05],0b1011111],1_97],0B1000010],0b1]){} }''',
                '''Class,B4,{,},Class,_,:,qy,{,Constructor,(,_,,,zH3,,,P_l95,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0b1,],,,4,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,75,],,,0x92,],,,0X51,],;,_,:,Boolean,;,v,,,_23,,,_51,,,_,:,Array,[,Array,[,Int,,,0X51,],,,0B1100,],;,P,,,__,:,Q,;,T2,:,Array,[,Array,[,Int,,,0b100,],,,0B11,],;,_,,,O,,,ET_,,,_,,,o,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,50,],,,0X51,],,,0B1000010,],,,75,],,,074,],;,__,,,cV1,:,_,;,S,,,p,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,05,],,,0b1011111,],,,197,],,,0B1000010,],,,0b1,],),{,},},<EOF>''',
                101
            )
        )

    def test_3741(self):
        self.assertTrue(
            TestLexer.test(
                '''Class c_{Var $v4,C85:Array [Array [Array [Boolean ,073_5],1],149_6];Val $h_7g_w,b_:Array [Int ,0x1F];Destructor (){} }Class L_3H8{}Class _{Destructor (){} }''',
                '''Class,c_,{,Var,$v4,,,C85,:,Array,[,Array,[,Array,[,Boolean,,,0735,],,,1,],,,1496,],;,Val,$h_7g_w,,,b_,:,Array,[,Int,,,0x1F,],;,Destructor,(,),{,},},Class,L_3H8,{,},Class,_,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3742(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:z{}Class _:cX{Constructor (_5:E1;V,t:Array [Int ,6]){} }Class _3J:z4O{}Class _p3{}Class T:_{Val v:Float ;}''',
                '''Class,r,:,z,{,},Class,_,:,cX,{,Constructor,(,_5,:,E1,;,V,,,t,:,Array,[,Int,,,6,],),{,},},Class,_3J,:,z4O,{,},Class,_p3,{,},Class,T,:,_,{,Val,v,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3743(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a__{Constructor (GU_,_,_V,D:Array [Array [Int ,30],0x3F];B:Array [Array [Float ,0xE_46_B],0135];_,m_U_A_7:Array [Array [Array [Array [Boolean ,0X9A_4_3],0135],0b111],06]){} }Class a:_{}''',
                '''Class,a__,{,Constructor,(,GU_,,,_,,,_V,,,D,:,Array,[,Array,[,Int,,,30,],,,0x3F,],;,B,:,Array,[,Array,[,Float,,,0xE46B,],,,0135,],;,_,,,m_U_A_7,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X9A43,],,,0135,],,,0b111,],,,06,],),{,},},Class,a,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3744(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{M(rVV8:Boolean ){}$Z(){}Destructor (){}Constructor (O_,V3:Array [Int ,0x7_A];_P_:Int ;__,h:Boolean ;_,_w,___v3:_){}Constructor (_:Array [Array [Array [Array [String ,0B1],0B1_010],0xC],25];_9,_,c8z_Y,_:ub;G:Int ;I:_;_1_5:Array [String ,03_2_0]){} }''',
                '''Class,_,{,M,(,rVV8,:,Boolean,),{,},$Z,(,),{,},Destructor,(,),{,},Constructor,(,O_,,,V3,:,Array,[,Int,,,0x7A,],;,_P_,:,Int,;,__,,,h,:,Boolean,;,_,,,_w,,,___v3,:,_,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0B1010,],,,0xC,],,,25,],;,_9,,,_,,,c8z_Y,,,_,:,ub,;,G,:,Int,;,I,:,_,;,_1_5,:,Array,[,String,,,0320,],),{,},},<EOF>''',
                101
            )
        )

    def test_3745(self):
        self.assertTrue(
            TestLexer.test(
                '''Class v:m__m1{$g(_H,L,_64,K3:Array [Array [Array [Array [String ,07],04_250],0126],021]){Return ;} }Class _:N{Destructor (){} }''',
                '''Class,v,:,m__m1,{,$g,(,_H,,,L,,,_64,,,K3,:,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,04250,],,,0126,],,,021,],),{,Return,;,},},Class,_,:,N,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3746(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_7{$Fh__92(_F15:_){Continue ;} }Class _{}Class eO_c{$e(_:xd_W){} }Class p:W9{}Class T{Destructor (){} }''',
                '''Class,_,:,_7,{,$Fh__92,(,_F15,:,_,),{,Continue,;,},},Class,_,{,},Class,eO_c,{,$e,(,_,:,xd_W,),{,},},Class,p,:,W9,{,},Class,T,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3747(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var k:_I__q;Var B,$0_:Array [Array [Array [Array [String ,0b101101],04],0B11],06];}Class t:_{}Class _A_:_8{}''',
                '''Class,_,{,Var,k,:,_I__q,;,Var,B,,,$0_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b101101,],,,04,],,,0B11,],,,06,],;,},Class,t,:,_,{,},Class,_A_,:,_8,{,},<EOF>''',
                101
            )
        )

    def test_3748(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F:_{Var $_,_:Array [Array [Array [Boolean ,054],0630],0B1];}Class _:N_{B(){}Destructor (){}Constructor (){} }''',
                '''Class,F,:,_,{,Var,$_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,054,],,,0630,],,,0B1,],;,},Class,_,:,N_,{,B,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3749(self):
        self.assertTrue(
            TestLexer.test(
                '''Class S:_{}Class K_{Constructor (_,_,_:_;_:u4;z:Array [Array [Array [Boolean ,0X2D],0x39],0x39]){__w::$_();}Destructor (){}Destructor (){Break ;Break ;}Constructor (R:o;__5_z,ya,_,_A,X_,I_8G:Boolean ;_x,CAw,_7J:Array [Array [Array [Boolean ,054],55],0b1];_,H:Array [Boolean ,0X2D];T,i19:Array [Int ,55]){} }''',
                '''Class,S,:,_,{,},Class,K_,{,Constructor,(,_,,,_,,,_,:,_,;,_,:,u4,;,z,:,Array,[,Array,[,Array,[,Boolean,,,0X2D,],,,0x39,],,,0x39,],),{,__w,::,$_,(,),;,},Destructor,(,),{,},Destructor,(,),{,Break,;,Break,;,},Constructor,(,R,:,o,;,__5_z,,,ya,,,_,,,_A,,,X_,,,I_8G,:,Boolean,;,_x,,,CAw,,,_7J,:,Array,[,Array,[,Array,[,Boolean,,,054,],,,55,],,,0b1,],;,_,,,H,:,Array,[,Boolean,,,0X2D,],;,T,,,i19,:,Array,[,Int,,,55,],),{,},},<EOF>''',
                101
            )
        )

    def test_3750(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __9{}Class T_wDZ:Q_4{$s(_i:String ;b,z8:U;A9__5,V:Boolean ){} }Class _C_{Val _1:Array [Array [Float ,0X22],022];}''',
                '''Class,__9,{,},Class,T_wDZ,:,Q_4,{,$s,(,_i,:,String,;,b,,,z8,:,U,;,A9__5,,,V,:,Boolean,),{,},},Class,_C_,{,Val,_1,:,Array,[,Array,[,Float,,,0X22,],,,022,],;,},<EOF>''',
                101
            )
        )

    def test_3751(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4:_rux_5{$9t(zf_h:Array [String ,0B1001101];_:_;G,_:Array [Array [Array [Array [String ,06],0B1001101],0x2A],12]){} }Class Q{}''',
                '''Class,_4,:,_rux_5,{,$9t,(,zf_h,:,Array,[,String,,,0B1001101,],;,_,:,_,;,G,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,06,],,,0B1001101,],,,0x2A,],,,12,],),{,},},Class,Q,{,},<EOF>''',
                101
            )
        )

    def test_3752(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7{}Class _{Val $u_n,_68__:Array [Int ,0xB_B];Destructor (){}Var _j:Array [Float ,0B1100000];}Class _n{}Class _{}Class _1:n_{}''',
                '''Class,_7,{,},Class,_,{,Val,$u_n,,,_68__,:,Array,[,Int,,,0xBB,],;,Destructor,(,),{,},Var,_j,:,Array,[,Float,,,0B1100000,],;,},Class,_n,{,},Class,_,{,},Class,_1,:,n_,{,},<EOF>''',
                101
            )
        )

    def test_3753(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N2o{Var $5:E;}Class A:_{H_(V_,__,_8:Array [Float ,30_4];_,kn:Float ;Z_,N:String ){} }Class V{Constructor (){} }''',
                '''Class,N2o,{,Var,$5,:,E,;,},Class,A,:,_,{,H_,(,V_,,,__,,,_8,:,Array,[,Float,,,304,],;,_,,,kn,:,Float,;,Z_,,,N,:,String,),{,},},Class,V,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3754(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Qq__{Var $1_n,$9:Float ;Constructor (_,_,k_8,_9,__,_P1,u:_;_z:Int ;_,_:Array [String ,055];_:S){} }Class _:__8J{}''',
                '''Class,Qq__,{,Var,$1_n,,,$9,:,Float,;,Constructor,(,_,,,_,,,k_8,,,_9,,,__,,,_P1,,,u,:,_,;,_z,:,Int,;,_,,,_,:,Array,[,String,,,055,],;,_,:,S,),{,},},Class,_,:,__8J,{,},<EOF>''',
                101
            )
        )

    def test_3755(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Sev:e__1{Var $t,Y_u,$_:Int ;Val $_4__,$9:Array [Array [Array [Int ,0x5],04425],0b1011111];}Class rZ{Destructor (){Return ;Continue ;} }''',
                '''Class,Sev,:,e__1,{,Var,$t,,,Y_u,,,$_,:,Int,;,Val,$_4__,,,$9,:,Array,[,Array,[,Array,[,Int,,,0x5,],,,04425,],,,0b1011111,],;,},Class,rZ,{,Destructor,(,),{,Return,;,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3756(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Var ___,_,$1E_:Array [Array [Array [Array [Array [Array [Boolean ,0X4A5_DD],024],0X30],9],024],0B1];}Class _lW:Nq{}Class T5o:_{}''',
                '''Class,__,{,Var,___,,,_,,,$1E_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X4A5DD,],,,024,],,,0X30,],,,9,],,,024,],,,0B1,],;,},Class,_lW,:,Nq,{,},Class,T5o,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3757(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:I{Constructor (Xo:D;F:P_){Continue ;Break ;}B(Z,iL,_b5_:_8;RE,_b,_2a95_y_t,rUD5:Array [Array [Array [String ,0X25],014],014];k:Array [Boolean ,0B1];M,q,q:String ;_:String ;k__,uu9,j:gGE;yF,pL_2,_S7,___,T7:vg;_52_K,_8_,Z,M1K5:String ){} }''',
                '''Class,_,:,I,{,Constructor,(,Xo,:,D,;,F,:,P_,),{,Continue,;,Break,;,},B,(,Z,,,iL,,,_b5_,:,_8,;,RE,,,_b,,,_2a95_y_t,,,rUD5,:,Array,[,Array,[,Array,[,String,,,0X25,],,,014,],,,014,],;,k,:,Array,[,Boolean,,,0B1,],;,M,,,q,,,q,:,String,;,_,:,String,;,k__,,,uu9,,,j,:,gGE,;,yF,,,pL_2,,,_S7,,,___,,,T7,:,vg,;,_52_K,,,_8_,,,Z,,,M1K5,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3758(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y_:_{Destructor (){}Constructor (_:Array [Array [Array [Array [String ,2],0b1000010],0B10],06];_F:Array [Boolean ,035];_,_A8,w_9Q_,_A5,_5_:qR;J:Array [Float ,035]){} }''',
                '''Class,Y_,:,_,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,2,],,,0b1000010,],,,0B10,],,,06,],;,_F,:,Array,[,Boolean,,,035,],;,_,,,_A8,,,w_9Q_,,,_A5,,,_5_,:,qR,;,J,:,Array,[,Float,,,035,],),{,},},<EOF>''',
                101
            )
        )

    def test_3759(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r:Qv{Uc(){}$__H_u3(F_9,z_:_){ {} }Z2_(___:P){}Var $4__:Array [Array [Int ,0X4A],0B1010001];Var _,w:Boolean ;}Class sZj{}''',
                '''Class,r,:,Qv,{,Uc,(,),{,},$__H_u3,(,F_9,,,z_,:,_,),{,{,},},Z2_,(,___,:,P,),{,},Var,$4__,:,Array,[,Array,[,Int,,,0X4A,],,,0B1010001,],;,Var,_,,,w,:,Boolean,;,},Class,sZj,{,},<EOF>''',
                101
            )
        )

    def test_3760(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W2Fr:_{}Class _k__:m{Val $p2O,$_M4V,$VJx,$v_,__6579_,$Y,$rU:Boolean ;Val $d3i,_,$__:___T2;}Class _:_{}''',
                '''Class,W2Fr,:,_,{,},Class,_k__,:,m,{,Val,$p2O,,,$_M4V,,,$VJx,,,$v_,,,__6579_,,,$Y,,,$rU,:,Boolean,;,Val,$d3i,,,_,,,$__,:,___T2,;,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3761(self):
        self.assertTrue(
            TestLexer.test(
                '''Class VS{}Class b_M:V{}Class _{Var $91:Array [Array [Array [Array [Array [Array [Array [String ,73],6],0x46],06],0X2D],0x46],73];Constructor (){} }''',
                '''Class,VS,{,},Class,b_M,:,V,{,},Class,_,{,Var,$91,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,73,],,,6,],,,0x46,],,,06,],,,0X2D,],,,0x46,],,,73,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3762(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8H:g_{Var $_,_F,_l:Array [Array [Array [Array [Array [Array [Array [String ,0XC2],86],0B11],78],04_13_7],032],0B1000110];}Class _:k{}''',
                '''Class,_8H,:,g_,{,Var,$_,,,_F,,,_l,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XC2,],,,86,],,,0B11,],,,78,],,,04137,],,,032,],,,0B1000110,],;,},Class,_,:,k,{,},<EOF>''',
                101
            )
        )

    def test_3763(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Zi_5j8{_(__c,zn9:Array [Array [Array [Boolean ,27],0x5_D],1];_,w:Int ;b:String ;_:String ;_5:_k9_){} }Class G:g{}''',
                '''Class,Zi_5j8,{,_,(,__c,,,zn9,:,Array,[,Array,[,Array,[,Boolean,,,27,],,,0x5D,],,,1,],;,_,,,w,:,Int,;,b,:,String,;,_,:,String,;,_5,:,_k9_,),{,},},Class,G,:,g,{,},<EOF>''',
                101
            )
        )

    def test_3764(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m_V:__47_D{Constructor (_,L9y8,H:Array [Int ,07];_54OW:t_08;t,_0:Array [Array [Array [Int ,05_4],21],0X8];_7e,m_:i72_;__:Int ;_:Float ;R573,E_A,_,_:Float ){Continue ;}Val $_2,_:Array [Int ,07_7_1];Val $c__L:_1__739_m0E_w;Val $Q:z;}Class a_0{UQ(){} }''',
                '''Class,m_V,:,__47_D,{,Constructor,(,_,,,L9y8,,,H,:,Array,[,Int,,,07,],;,_54OW,:,t_08,;,t,,,_0,:,Array,[,Array,[,Array,[,Int,,,054,],,,21,],,,0X8,],;,_7e,,,m_,:,i72_,;,__,:,Int,;,_,:,Float,;,R573,,,E_A,,,_,,,_,:,Float,),{,Continue,;,},Val,$_2,,,_,:,Array,[,Int,,,0771,],;,Val,$c__L,:,_1__739_m0E_w,;,Val,$Q,:,z,;,},Class,a_0,{,UQ,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3765(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _P{}Class qv:_{Val $2:Z_;Constructor (_,h_:_42QoY_;_:Int ;d,w,e4Z_,__,E4:Array [Array [Boolean ,0B11_1],0b1010011];_6_7o:Int ){Break ;} }Class _B_{}Class __E_s6__{}''',
                '''Class,_P,{,},Class,qv,:,_,{,Val,$2,:,Z_,;,Constructor,(,_,,,h_,:,_42QoY_,;,_,:,Int,;,d,,,w,,,e4Z_,,,__,,,E4,:,Array,[,Array,[,Boolean,,,0B111,],,,0b1010011,],;,_6_7o,:,Int,),{,Break,;,},},Class,_B_,{,},Class,__E_s6__,{,},<EOF>''',
                101
            )
        )

    def test_3766(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __w2u{}Class k:Rq{Val $1:String ;$BU(){Var _:Boolean ;} }Class _{F(){}Constructor (_f2G2_g,Z:Array [Array [Array [Array [Boolean ,076],0X53],076],0x5A]){} }''',
                '''Class,__w2u,{,},Class,k,:,Rq,{,Val,$1,:,String,;,$BU,(,),{,Var,_,:,Boolean,;,},},Class,_,{,F,(,),{,},Constructor,(,_f2G2_g,,,Z,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,076,],,,0X53,],,,076,],,,0x5A,],),{,},},<EOF>''',
                101
            )
        )

    def test_3767(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Var $_,d4,$t_:L;Var $oR:Array [Int ,1_6];}Class _{Var $0_:_4_;Constructor (_,C_,f,_:S;y,A9,dwr:String ;_v:Boolean ;k9,N__U:Float ;_:u;k7,_5_,K,zD:Array [Array [Array [Boolean ,28],0x54],0x54]){} }Class __{}''',
                '''Class,a,{,Var,$_,,,d4,,,$t_,:,L,;,Var,$oR,:,Array,[,Int,,,16,],;,},Class,_,{,Var,$0_,:,_4_,;,Constructor,(,_,,,C_,,,f,,,_,:,S,;,y,,,A9,,,dwr,:,String,;,_v,:,Boolean,;,k9,,,N__U,:,Float,;,_,:,u,;,k7,,,_5_,,,K,,,zD,:,Array,[,Array,[,Array,[,Boolean,,,28,],,,0x54,],,,0x54,],),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_3768(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F_N_d:R{Var J,$U,$7:Array [Float ,010];Constructor (a:e){} }Class __Y84:w{Destructor (){}Destructor (){}Constructor (){}Constructor (){}_(_W7,e___,I:Array [Array [Int ,0b10101],0b10101]){}Var $y:Array [Array [String ,03_1_0],55];}Class __9_{}''',
                '''Class,F_N_d,:,R,{,Var,J,,,$U,,,$7,:,Array,[,Float,,,010,],;,Constructor,(,a,:,e,),{,},},Class,__Y84,:,w,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},Constructor,(,),{,},_,(,_W7,,,e___,,,I,:,Array,[,Array,[,Int,,,0b10101,],,,0b10101,],),{,},Var,$y,:,Array,[,Array,[,String,,,0310,],,,55,],;,},Class,__9_,{,},<EOF>''',
                101
            )
        )

    def test_3769(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:__k_{Val _:Array [Array [String ,0X14],027];}Class H__:f{Val $Qt947y,$__:Float ;Var _,$t:l3;}Class _:f_{}''',
                '''Class,_,:,__k_,{,Val,_,:,Array,[,Array,[,String,,,0X14,],,,027,],;,},Class,H__,:,f,{,Val,$Qt947y,,,$__,:,Float,;,Var,_,,,$t,:,l3,;,},Class,_,:,f_,{,},<EOF>''',
                101
            )
        )

    def test_3770(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9_c5_681:w{}Class YB:E{Constructor (){} }Class d_G:_{}Class V:m{}Class Z1{}Class _{Constructor (O_:_h6_;p,_,_:a;__:Array [Array [Array [Array [Array [Float ,2],0b1],3],03],04_2];m:m;_N,_:Float ;MB_,__3,Q1Q___:Array [Boolean ,14]){} }''',
                '''Class,_9_c5_681,:,w,{,},Class,YB,:,E,{,Constructor,(,),{,},},Class,d_G,:,_,{,},Class,V,:,m,{,},Class,Z1,{,},Class,_,{,Constructor,(,O_,:,_h6_,;,p,,,_,,,_,:,a,;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,2,],,,0b1,],,,3,],,,03,],,,042,],;,m,:,m,;,_N,,,_,:,Float,;,MB_,,,__3,,,Q1Q___,:,Array,[,Boolean,,,14,],),{,},},<EOF>''',
                101
            )
        )

    def test_3771(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $1,$W,$s,$T,$OaZ_2,$4___,$R:___R;Destructor (){Break ;} }Class l{Var y_,xen_0zV:Array [Int ,0XF_8];}''',
                '''Class,_,{,Var,$1,,,$W,,,$s,,,$T,,,$OaZ_2,,,$4___,,,$R,:,___R,;,Destructor,(,),{,Break,;,},},Class,l,{,Var,y_,,,xen_0zV,:,Array,[,Int,,,0XF8,],;,},<EOF>''',
                101
            )
        )

    def test_3772(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _4_:_{$h(q__:Array [Array [Boolean ,0xF],22];_,_:_;l:Float ;j86,_,_:__s_){}Constructor (_78:__){}Val $t8Z,$_:Oj_;$_(){}Val I,$_4:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,056],0b1110],0x9],22],0B111001],0B111001],03],056],0b1_0];}Class A:p{Destructor (){} }''',
                '''Class,_4_,:,_,{,$h,(,q__,:,Array,[,Array,[,Boolean,,,0xF,],,,22,],;,_,,,_,:,_,;,l,:,Float,;,j86,,,_,,,_,:,__s_,),{,},Constructor,(,_78,:,__,),{,},Val,$t8Z,,,$_,:,Oj_,;,$_,(,),{,},Val,I,,,$_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,056,],,,0b1110,],,,0x9,],,,22,],,,0B111001,],,,0B111001,],,,03,],,,056,],,,0b10,],;,},Class,A,:,p,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3773(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:_{Val $4:Boolean ;}Class _{}Class _14_Z{Constructor (){Continue ;}Val __:Array [Array [Array [Array [Array [Boolean ,0x2D],0xA_DF9],0X63],0b10_0],3];Constructor (){} }''',
                '''Class,s,:,_,{,Val,$4,:,Boolean,;,},Class,_,{,},Class,_14_Z,{,Constructor,(,),{,Continue,;,},Val,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x2D,],,,0xADF9,],,,0X63,],,,0b100,],,,3,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3774(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Constructor (M,_9:Array [Array [String ,50],0b1];__1:Array [Int ,0b1011000];S,N9,T_,U,k:_;V_,_:Array [Array [Array [Array [Float ,0B1_01010_1],0b10],0105],0b1011000];_:w_;_,N269,P_x:Float ;__:Array [Array [Array [Array [Array [Array [Boolean ,01_7],0b1],0X4_B],0x46],0x46],0B1];e9o_,_:e){} }''',
                '''Class,Q,{,Constructor,(,M,,,_9,:,Array,[,Array,[,String,,,50,],,,0b1,],;,__1,:,Array,[,Int,,,0b1011000,],;,S,,,N9,,,T_,,,U,,,k,:,_,;,V_,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1010101,],,,0b10,],,,0105,],,,0b1011000,],;,_,:,w_,;,_,,,N269,,,P_x,:,Float,;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,017,],,,0b1,],,,0X4B,],,,0x46,],,,0x46,],,,0B1,],;,e9o_,,,_,:,e,),{,},},<EOF>''',
                101
            )
        )

    def test_3775(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2_{Constructor (jza,__2,D:Array [Float ,05];__:Array [Array [Float ,0xC_E],7];R_8_,_,q9:_xf;I:Array [Array [Array [Float ,050_174],0X4E],0b11110]){} }''',
                '''Class,_2_,{,Constructor,(,jza,,,__2,,,D,:,Array,[,Float,,,05,],;,__,:,Array,[,Array,[,Float,,,0xCE,],,,7,],;,R_8_,,,_,,,q9,:,_xf,;,I,:,Array,[,Array,[,Array,[,Float,,,050174,],,,0X4E,],,,0b11110,],),{,},},<EOF>''',
                101
            )
        )

    def test_3776(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __j:_r_K_1{Val $_0,_I_8,$b1,$S66h,$5_,$e:String ;}Class Z_:_{Destructor (){ {Break ;} }$Mp(_g_,A7,_:String ;d_:Float ;q,_:Int ;_7,_:Array [Array [Int ,0131],26];_n4:h){}Val _,$__3w0:Array [Int ,15];}''',
                '''Class,__j,:,_r_K_1,{,Val,$_0,,,_I_8,,,$b1,,,$S66h,,,$5_,,,$e,:,String,;,},Class,Z_,:,_,{,Destructor,(,),{,{,Break,;,},},$Mp,(,_g_,,,A7,,,_,:,String,;,d_,:,Float,;,q,,,_,:,Int,;,_7,,,_,:,Array,[,Array,[,Int,,,0131,],,,26,],;,_n4,:,h,),{,},Val,_,,,$__3w0,:,Array,[,Int,,,15,],;,},<EOF>''',
                101
            )
        )

    def test_3777(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:ln4{Var _86I92,$_:Boolean ;Constructor (VSL1ah_:Float ){} }Class J_:F_{__(){}Var $G,_5Rj,$C,TX,d,$Nk1:_Q;Destructor (){}Destructor (){}Destructor (){} }''',
                '''Class,_,:,ln4,{,Var,_86I92,,,$_,:,Boolean,;,Constructor,(,VSL1ah_,:,Float,),{,},},Class,J_,:,F_,{,__,(,),{,},Var,$G,,,_5Rj,,,$C,,,TX,,,d,,,$Nk1,:,_Q,;,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3778(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D_:zc{Destructor (){}Destructor (){} }Class _:__1{$3_(V,dET_,n:Float ;_,_5_,U3c_,____d__,_,j:Float ;_:String ;s2W7Z:__80;_:x){Continue ;} }Class _{}''',
                '''Class,D_,:,zc,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_,:,__1,{,$3_,(,V,,,dET_,,,n,:,Float,;,_,,,_5_,,,U3c_,,,____d__,,,_,,,j,:,Float,;,_,:,String,;,s2W7Z,:,__80,;,_,:,x,),{,Continue,;,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3779(self):
        self.assertTrue(
            TestLexer.test(
                '''Class s:__0{$2P1(){Return ;Val Y9_8,__R,__,n,o_r:T;} }Class L5{Val J,pv:Array [Array [Array [Array [String ,0X42],0B1001],28],2];}Class E:_{}''',
                '''Class,s,:,__0,{,$2P1,(,),{,Return,;,Val,Y9_8,,,__R,,,__,,,n,,,o_r,:,T,;,},},Class,L5,{,Val,J,,,pv,:,Array,[,Array,[,Array,[,Array,[,String,,,0X42,],,,0B1001,],,,28,],,,2,],;,},Class,E,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3780(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N{$5(_,l:String ){}Constructor (_f:String ){} }Class a{}Class h{Destructor (){Continue ;} }Class T{Var _J96_,$7:a;}Class __:e__{}''',
                '''Class,N,{,$5,(,_,,,l,:,String,),{,},Constructor,(,_f,:,String,),{,},},Class,a,{,},Class,h,{,Destructor,(,),{,Continue,;,},},Class,T,{,Var,_J96_,,,$7,:,a,;,},Class,__,:,e__,{,},<EOF>''',
                101
            )
        )

    def test_3781(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:y{}Class __:_{Var $P__1,$__L,_3,$F:Array [Array [Array [Int ,0b1],5_446],0b1];}Class _9K:_{Val m1,_,$d_:Boolean ;}''',
                '''Class,t,:,y,{,},Class,__,:,_,{,Var,$P__1,,,$__L,,,_3,,,$F,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,5446,],,,0b1,],;,},Class,_9K,:,_,{,Val,m1,,,_,,,$d_,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3782(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N:_{Destructor (){Continue ;}Val $05:Array [Float ,065];$58(){}Val $__4,$d:Array [Int ,0X29];Destructor (){uG::$_c3();{} }}''',
                '''Class,N,:,_,{,Destructor,(,),{,Continue,;,},Val,$05,:,Array,[,Float,,,065,],;,$58,(,),{,},Val,$__4,,,$d,:,Array,[,Int,,,0X29,],;,Destructor,(,),{,uG,::,$_c3,(,),;,{,},},},<EOF>''',
                101
            )
        )

    def test_3783(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u:_{Var $78z,S__:Float ;Val $Q,_8,q:Array [Array [Array [Array [Array [Array [Float ,79],0b1011001],0B11],0xC],0X2B],0B1];}Class l:_2_{}''',
                '''Class,u,:,_,{,Var,$78z,,,S__,:,Float,;,Val,$Q,,,_8,,,q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,79,],,,0b1011001,],,,0B11,],,,0xC,],,,0X2B,],,,0B1,],;,},Class,l,:,_2_,{,},<EOF>''',
                101
            )
        )

    def test_3784(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e5{}Class Q_{Constructor (_:_;M,_T,X_,_:_;N01_RC11_:F;B,R_g7F2_4_0,____:Array [Array [String ,0x8_3],03]){} }Class _0_:___h{}''',
                '''Class,e5,{,},Class,Q_,{,Constructor,(,_,:,_,;,M,,,_T,,,X_,,,_,:,_,;,N01_RC11_,:,F,;,B,,,R_g7F2_4_0,,,____,:,Array,[,Array,[,String,,,0x83,],,,03,],),{,},},Class,_0_,:,___h,{,},<EOF>''',
                101
            )
        )

    def test_3785(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i_z0a:_{}Class ___:g9{Var $52:b7o;_(){}_O(){Return ;}v(_,_5,UUz3_,__86:Array [Array [String ,0x4],36]){} }''',
                '''Class,i_z0a,:,_,{,},Class,___,:,g9,{,Var,$52,:,b7o,;,_,(,),{,},_O,(,),{,Return,;,},v,(,_,,,_5,,,UUz3_,,,__86,:,Array,[,Array,[,String,,,0x4,],,,36,],),{,},},<EOF>''',
                101
            )
        )

    def test_3786(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N876:_{Destructor (){} }Class GL:R0{Constructor (f_,_,Z,_p_S,_,P,G1,__v:_0){} }Class q2____:__{Destructor (){} }''',
                '''Class,N876,:,_,{,Destructor,(,),{,},},Class,GL,:,R0,{,Constructor,(,f_,,,_,,,Z,,,_p_S,,,_,,,P,,,G1,,,__v,:,_0,),{,},},Class,q2____,:,__,{,Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3787(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _34HV{Var _5:Array [Array [String ,26],0B1];Val $_,$3:Array [Array [Array [String ,0b1000110],05],0x14];Constructor (C__,m,m_:Array [Array [Array [String ,26],03_3],0121]){} }Class _6_1:t{}Class m_F{}''',
                '''Class,_34HV,{,Var,_5,:,Array,[,Array,[,String,,,26,],,,0B1,],;,Val,$_,,,$3,:,Array,[,Array,[,Array,[,String,,,0b1000110,],,,05,],,,0x14,],;,Constructor,(,C__,,,m,,,m_,:,Array,[,Array,[,Array,[,String,,,26,],,,033,],,,0121,],),{,},},Class,_6_1,:,t,{,},Class,m_F,{,},<EOF>''',
                101
            )
        )

    def test_3788(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Zt{Destructor (){}Var $9_:Boolean ;}Class o{Val _90:Array [Int ,0111];}Class s{Constructor (ub8:___3;_3hg,R_4,d,V,Wn:Array [Array [Int ,03],92]){} }Class _:Tf_{}Class y:y{Constructor (_:Array [Array [Array [Array [Float ,0x30],92],92],0X49];_:Float ;_:Array [Boolean ,0b10_0_1];m:Int ){} }Class n:r_{}''',
                '''Class,Zt,{,Destructor,(,),{,},Var,$9_,:,Boolean,;,},Class,o,{,Val,_90,:,Array,[,Int,,,0111,],;,},Class,s,{,Constructor,(,ub8,:,___3,;,_3hg,,,R_4,,,d,,,V,,,Wn,:,Array,[,Array,[,Int,,,03,],,,92,],),{,},},Class,_,:,Tf_,{,},Class,y,:,y,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x30,],,,92,],,,92,],,,0X49,],;,_,:,Float,;,_,:,Array,[,Boolean,,,0b1001,],;,m,:,Int,),{,},},Class,n,:,r_,{,},<EOF>''',
                101
            )
        )

    def test_3789(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{$_(_:Array [Array [Int ,1],0b111010];G,kn7,bM3fV,n:Array [Array [Array [Boolean ,0b111010],0B1],0B10000]){} }Class _4:hj5{Var $8C,c:String ;}''',
                '''Class,_8,{,$_,(,_,:,Array,[,Array,[,Int,,,1,],,,0b111010,],;,G,,,kn7,,,bM3fV,,,n,:,Array,[,Array,[,Array,[,Boolean,,,0b111010,],,,0B1,],,,0B10000,],),{,},},Class,_4,:,hj5,{,Var,$8C,,,c,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3790(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _L{$4_0(__,_:Array [String ,0x6]){Break ;} }Class _:d{Var $__:Array [Int ,0b110];Val __OB7,_g,p:Float ;$cg(A,_4:Int ){} }''',
                '''Class,_L,{,$4_0,(,__,,,_,:,Array,[,String,,,0x6,],),{,Break,;,},},Class,_,:,d,{,Var,$__,:,Array,[,Int,,,0b110,],;,Val,__OB7,,,_g,,,p,:,Float,;,$cg,(,A,,,_4,:,Int,),{,},},<EOF>''',
                101
            )
        )

    def test_3791(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:o{$_7v232(_:Int ;_hC,D6X_,__N7,_,F:Array [Array [Array [String ,0b1100_0_100],01_7],0X50];_J,T_:Hu){}a(_,KV,a:__;X:_6FDMI){}Destructor (){}Val _7,W8,$1:_;}Class b_{$7(){} }''',
                '''Class,__,:,o,{,$_7v232,(,_,:,Int,;,_hC,,,D6X_,,,__N7,,,_,,,F,:,Array,[,Array,[,Array,[,String,,,0b11000100,],,,017,],,,0X50,],;,_J,,,T_,:,Hu,),{,},a,(,_,,,KV,,,a,:,__,;,X,:,_6FDMI,),{,},Destructor,(,),{,},Val,_7,,,W8,,,$1,:,_,;,},Class,b_,{,$7,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3792(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:L{}Class __{}Class _A4_{Val h:Float ;}Class _:ZK_{Constructor (_:Int ){Return ;} }Class _3:_{}Class A:_{}Class _1{}''',
                '''Class,d,:,L,{,},Class,__,{,},Class,_A4_,{,Val,h,:,Float,;,},Class,_,:,ZK_,{,Constructor,(,_,:,Int,),{,Return,;,},},Class,_3,:,_,{,},Class,A,:,_,{,},Class,_1,{,},<EOF>''',
                101
            )
        )

    def test_3793(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class l:l{Val $1,_46,_4:String ;Var __,$_:Array [Array [Int ,0x86_8_66],7_24_75];Var $40_:String ;}Class c:J7_e{}''',
                '''Class,_,{,},Class,l,:,l,{,Val,$1,,,_46,,,_4,:,String,;,Var,__,,,$_,:,Array,[,Array,[,Int,,,0x86866,],,,72475,],;,Var,$40_,:,String,;,},Class,c,:,J7_e,{,},<EOF>''',
                101
            )
        )

    def test_3794(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t:R_j8f1B4{Var $N2,m_Z,y_I,_W9,_R,k,f3F:Array [Array [Float ,3_39_3_5],0b100100];}Class y{}Class _j7_4:C5{Val _:_;}Class tB:P{}''',
                '''Class,t,:,R_j8f1B4,{,Var,$N2,,,m_Z,,,y_I,,,_W9,,,_R,,,k,,,f3F,:,Array,[,Array,[,Float,,,33935,],,,0b100100,],;,},Class,y,{,},Class,_j7_4,:,C5,{,Val,_,:,_,;,},Class,tB,:,P,{,},<EOF>''',
                101
            )
        )

    def test_3795(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q37FUj{Constructor (U_,_,_6,n:Array [String ,29];H,_:Array [Array [Array [Float ,0114],0b1_1],0B1_1];__0H2:Int ){}Constructor (_b:_ee;_t,_4_3__Z,_,j,G:i7){} }Class _{}''',
                '''Class,q37FUj,{,Constructor,(,U_,,,_,,,_6,,,n,:,Array,[,String,,,29,],;,H,,,_,:,Array,[,Array,[,Array,[,Float,,,0114,],,,0b11,],,,0B11,],;,__0H2,:,Int,),{,},Constructor,(,_b,:,_ee,;,_t,,,_4_3__Z,,,_,,,j,,,G,:,i7,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3796(self):
        self.assertTrue(
            TestLexer.test(
                '''Class hR{a(){Return ;}Constructor (_8,M,___,i,B0:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0b110110],0X8],99],0B1_1],40],0X8],0B1],0xE_5],0b1],1],04];_:Float ;_,z_:Boolean ){} }Class _:I{}Class K{}Class __{Constructor (){} }''',
                '''Class,hR,{,a,(,),{,Return,;,},Constructor,(,_8,,,M,,,___,,,i,,,B0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b110110,],,,0X8,],,,99,],,,0B11,],,,40,],,,0X8,],,,0B1,],,,0xE5,],,,0b1,],,,1,],,,04,],;,_,:,Float,;,_,,,z_,:,Boolean,),{,},},Class,_,:,I,{,},Class,K,{,},Class,__,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3797(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val l,$Z4,$_5,$nZ17:Y;Val $__2,z,$_,_,$6:Array [Array [String ,05_1],04];}Class k_B{Constructor (){} }''',
                '''Class,_,{,Val,l,,,$Z4,,,$_5,,,$nZ17,:,Y,;,Val,$__2,,,z,,,$_,,,_,,,$6,:,Array,[,Array,[,String,,,051,],,,04,],;,},Class,k_B,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3798(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Constructor (v:Array [Array [String ,0b1],0X2D];_7,_,A,_x_:Array [Array [Array [String ,07],0x8],0xE_4]){Continue ;Return ;Break ;}Constructor (h:_;_:_R2D;c:String ;y:Lj_G_;_9,_:Array [Array [Array [Array [Boolean ,07_3_37],1_4],0B10100],23];w,z:Boolean ){} }''',
                '''Class,_,{,Constructor,(,),{,},Constructor,(,v,:,Array,[,Array,[,String,,,0b1,],,,0X2D,],;,_7,,,_,,,A,,,_x_,:,Array,[,Array,[,Array,[,String,,,07,],,,0x8,],,,0xE4,],),{,Continue,;,Return,;,Break,;,},Constructor,(,h,:,_,;,_,:,_R2D,;,c,:,String,;,y,:,Lj_G_,;,_9,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,07337,],,,14,],,,0B10100,],,,23,],;,w,,,z,:,Boolean,),{,},},<EOF>''',
                101
            )
        )

    def test_3799(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{}Class _{Constructor (_,_,__,d,y_3:w_7_NK;M:Array [Array [Int ,2_1_37_4_24],0b1]){Break ;} }Class _:_{$8(_17:iH){} }''',
                '''Class,e,{,},Class,_,{,Constructor,(,_,,,_,,,__,,,d,,,y_3,:,w_7_NK,;,M,:,Array,[,Array,[,Int,,,2137424,],,,0b1,],),{,Break,;,},},Class,_,:,_,{,$8,(,_17,:,iH,),{,},},<EOF>''',
                101
            )
        )

    def test_3800(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d:v{Var $8,_,i5_,_u:Array [Array [Array [Boolean ,80],0b1],067_07_1];Val F,$9,$2:Array [Array [Array [Float ,0275_5],10_0],077];}Class _u3:aSh{}''',
                '''Class,d,:,v,{,Var,$8,,,_,,,i5_,,,_u,:,Array,[,Array,[,Array,[,Boolean,,,80,],,,0b1,],,,067071,],;,Val,F,,,$9,,,$2,:,Array,[,Array,[,Array,[,Float,,,02755,],,,100,],,,077,],;,},Class,_u3,:,aSh,{,},<EOF>''',
                101
            )
        )

    def test_3801(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ZW2_{Val $3:String ;}Class _Fg:_{Val D_x1_2_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0x1F],0x4],82],0X56],26],0b1],0b111111],9_7_2_7],0X56];_(){} }Class _{}''',
                '''Class,ZW2_,{,Val,$3,:,String,;,},Class,_Fg,:,_,{,Val,D_x1_2_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x1F,],,,0x4,],,,82,],,,0X56,],,,26,],,,0b1,],,,0b111111,],,,9727,],,,0X56,],;,_,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3802(self):
        self.assertTrue(
            TestLexer.test(
                '''Class o____5:p{}Class P:_3{Var $___j:Array [String ,0x5_77];Constructor (){} }Class d{Val _3,$k3__,$95,Y:Array [Array [Boolean ,8_2],8];}Class B_W:W{}''',
                '''Class,o____5,:,p,{,},Class,P,:,_3,{,Var,$___j,:,Array,[,String,,,0x577,],;,Constructor,(,),{,},},Class,d,{,Val,_3,,,$k3__,,,$95,,,Y,:,Array,[,Array,[,Boolean,,,82,],,,8,],;,},Class,B_W,:,W,{,},<EOF>''',
                101
            )
        )

    def test_3803(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{$2(V:String ;V:String ;_:Float ){}Val k_R8P:Array [Array [Array [Array [Array [Boolean ,0116],0b1],0x6],06],0x8D];Val _:r;}Class __7{}''',
                '''Class,_,{,$2,(,V,:,String,;,V,:,String,;,_,:,Float,),{,},Val,k_R8P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0116,],,,0b1,],,,0x6,],,,06,],,,0x8D,],;,Val,_,:,r,;,},Class,__7,{,},<EOF>''',
                101
            )
        )

    def test_3804(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _od{}Class _R6:__7{Val _:Float ;}Class E4:G{$M7_(o:Float ;_b,_e:C){Break ;} }Class _{Constructor (){}Var $__,rk:Boolean ;}''',
                '''Class,_od,{,},Class,_R6,:,__7,{,Val,_,:,Float,;,},Class,E4,:,G,{,$M7_,(,o,:,Float,;,_b,,,_e,:,C,),{,Break,;,},},Class,_,{,Constructor,(,),{,},Var,$__,,,rk,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3805(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val B5:Array [Array [Array [Float ,0X63],34],07];Constructor (m,m1_Tq,__:Array [Array [Array [Array [Boolean ,34],0B100],0B10_0_0],1_8];L5:Int ){Continue ;} }Class _{$_(J308_,_4q,g:String ){Var n:__SQ;Val W,B____:Int ;}Val PY_:Float ;}''',
                '''Class,_,{,Val,B5,:,Array,[,Array,[,Array,[,Float,,,0X63,],,,34,],,,07,],;,Constructor,(,m,,,m1_Tq,,,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,34,],,,0B100,],,,0B1000,],,,18,],;,L5,:,Int,),{,Continue,;,},},Class,_,{,$_,(,J308_,,,_4q,,,g,:,String,),{,Var,n,:,__SQ,;,Val,W,,,B____,:,Int,;,},Val,PY_,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3806(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _50{Constructor (_q:Boolean ;F_7W3:_){}Val AC:String ;Constructor (W,_,_8O:_){_O::$_()._();{} }Val $0:_;$__92(gb:Array [String ,0111];L:_2){} }Class f__:a{Constructor (){Break ;Break ;Val r__,l_:Array [Array [Float ,73],0111];} }''',
                '''Class,_50,{,Constructor,(,_q,:,Boolean,;,F_7W3,:,_,),{,},Val,AC,:,String,;,Constructor,(,W,,,_,,,_8O,:,_,),{,_O,::,$_,(,),.,_,(,),;,{,},},Val,$0,:,_,;,$__92,(,gb,:,Array,[,String,,,0111,],;,L,:,_2,),{,},},Class,f__,:,a,{,Constructor,(,),{,Break,;,Break,;,Val,r__,,,l_,:,Array,[,Array,[,Float,,,73,],,,0111,],;,},},<EOF>''',
                101
            )
        )

    def test_3807(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val _:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,034],0X2E],034],0b1_1_0],034],0b101011],0B1_0],97];}''',
                '''Class,_,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,034,],,,0X2E,],,,034,],,,0b110,],,,034,],,,0b101011,],,,0B10,],,,97,],;,},<EOF>''',
                101
            )
        )

    def test_3808(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __jyw58{}Class e:E4L{Val Rp,v:_;}Class _1J{Constructor (_6_,_3,U,_,_e__VW:Array [Boolean ,0b100110];__:Array [Int ,0B1];v_:Array [Array [Float ,0135],1_6_8]){} }Class __R45:Q{}Class iw:cMu3u_{}''',
                '''Class,__jyw58,{,},Class,e,:,E4L,{,Val,Rp,,,v,:,_,;,},Class,_1J,{,Constructor,(,_6_,,,_3,,,U,,,_,,,_e__VW,:,Array,[,Boolean,,,0b100110,],;,__,:,Array,[,Int,,,0B1,],;,v_,:,Array,[,Array,[,Float,,,0135,],,,168,],),{,},},Class,__R45,:,Q,{,},Class,iw,:,cMu3u_,{,},<EOF>''',
                101
            )
        )

    def test_3809(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l__{}Class K_:__C{}Class p_{Constructor (__:Array [Array [Array [Array [Float ,11],0b1100],0B1_000],0B1011000]){}Var O,$_I_,$_:z;Val $viL,l:Boolean ;}''',
                '''Class,l__,{,},Class,K_,:,__C,{,},Class,p_,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,11,],,,0b1100,],,,0B1000,],,,0B1011000,],),{,},Var,O,,,$_I_,,,$_,:,z,;,Val,$viL,,,l,:,Boolean,;,},<EOF>''',
                101
            )
        )

    def test_3810(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _5_:_{W1I211(V,_u:Array [Array [Array [Array [Int ,0X3],99],0b1],7_0_0950]){Continue ;}$_(){Return ;Continue ;}Destructor (){} }Class _zP8_X9:h_{}''',
                '''Class,_5_,:,_,{,W1I211,(,V,,,_u,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X3,],,,99,],,,0b1,],,,700950,],),{,Continue,;,},$_,(,),{,Return,;,Continue,;,},Destructor,(,),{,},},Class,_zP8_X9,:,h_,{,},<EOF>''',
                101
            )
        )

    def test_3811(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Y(){Break ;} }Class Z:____{}Class b:O_{Val $1gfa37:Array [Array [Float ,0X1],044];Val $c,$3:Array [Array [Array [Int ,0x4_9],02],0XC_BE_D];}''',
                '''Class,_,{,Y,(,),{,Break,;,},},Class,Z,:,____,{,},Class,b,:,O_,{,Val,$1gfa37,:,Array,[,Array,[,Float,,,0X1,],,,044,],;,Val,$c,,,$3,:,Array,[,Array,[,Array,[,Int,,,0x49,],,,02,],,,0XCBED,],;,},<EOF>''',
                101
            )
        )

    def test_3812(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{}Class ke7y:Tm{}Class _9:H99{}Class S:s_{Constructor (q__,WX6,tR:M557_X){Return ;Break ;} }Class _28:_8G_Lu{}Class _Z:_{}''',
                '''Class,__,:,_,{,},Class,ke7y,:,Tm,{,},Class,_9,:,H99,{,},Class,S,:,s_,{,Constructor,(,q__,,,WX6,,,tR,:,M557_X,),{,Return,;,Break,;,},},Class,_28,:,_8G_Lu,{,},Class,_Z,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3813(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class WJ__7{Destructor (){_::$_p_();}Constructor (c:O){Break ;} }Class _:__657{Val $c_:Array [Array [Boolean ,0x6_6_3_E],0X36];}Class _a{Val $__T:Array [Array [Array [Float ,02],0x4_8B],070];}''',
                '''Class,_,{,},Class,WJ__7,{,Destructor,(,),{,_,::,$_p_,(,),;,},Constructor,(,c,:,O,),{,Break,;,},},Class,_,:,__657,{,Val,$c_,:,Array,[,Array,[,Boolean,,,0x663E,],,,0X36,],;,},Class,_a,{,Val,$__T,:,Array,[,Array,[,Array,[,Float,,,02,],,,0x48B,],,,070,],;,},<EOF>''',
                101
            )
        )

    def test_3814(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I{Val $55,$N_,JC:_;Val T:Array [Int ,0x54];Constructor (i2:__2_4;E:Array [Array [Float ,0b1000110],0XB];_d,_1,p,D:_;_v69_p6:Array [Int ,1];KvM,x,u,x6,K,_:uT1){_::$6();} }''',
                '''Class,I,{,Val,$55,,,$N_,,,JC,:,_,;,Val,T,:,Array,[,Int,,,0x54,],;,Constructor,(,i2,:,__2_4,;,E,:,Array,[,Array,[,Float,,,0b1000110,],,,0XB,],;,_d,,,_1,,,p,,,D,:,_,;,_v69_p6,:,Array,[,Int,,,1,],;,KvM,,,x,,,u,,,x6,,,K,,,_,:,uT1,),{,_,::,$6,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3815(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _20:K{$1(a,_Q,f0,_38___,_,__j,Y_:Array [Array [Int ,0XF],056];_,Y_5_,_,_F:Boolean ){Continue ;}Val $u75k,$f:String ;}''',
                '''Class,_20,:,K,{,$1,(,a,,,_Q,,,f0,,,_38___,,,_,,,__j,,,Y_,:,Array,[,Array,[,Int,,,0XF,],,,056,],;,_,,,Y_5_,,,_,,,_F,:,Boolean,),{,Continue,;,},Val,$u75k,,,$f,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3816(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:X{Constructor (_:Array [Array [Int ,07],0xF];_7:_X1){Return ;}Constructor (Z,A,_X1:o;c:Float ;T1,B_Y,_,R_:Array [Int ,0X21]){} }''',
                '''Class,_,:,X,{,Constructor,(,_,:,Array,[,Array,[,Int,,,07,],,,0xF,],;,_7,:,_X1,),{,Return,;,},Constructor,(,Z,,,A,,,_X1,:,o,;,c,:,Float,;,T1,,,B_Y,,,_,,,R_,:,Array,[,Int,,,0X21,],),{,},},<EOF>''',
                101
            )
        )

    def test_3817(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __t:_{}Class LG:__{Var $J_,$9X_:Array [Array [Array [Array [Boolean ,21],0X19],03],0b1000110];Constructor (ua,_:Array [String ,378];_:_;S:Int ){}Constructor (){}Destructor (){}Var $_99q_:Int ;}''',
                '''Class,__t,:,_,{,},Class,LG,:,__,{,Var,$J_,,,$9X_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,21,],,,0X19,],,,03,],,,0b1000110,],;,Constructor,(,ua,,,_,:,Array,[,String,,,378,],;,_,:,_,;,S,:,Int,),{,},Constructor,(,),{,},Destructor,(,),{,},Var,$_99q_,:,Int,;,},<EOF>''',
                101
            )
        )

    def test_3818(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _e:p{Val $9,$5,_:_;}Class __q6:____{Destructor (){Continue ;}Val d6:Array [Array [Array [Array [Array [Array [Float ,034],0B10001],034],0XE_E],0X5D],63];}Class _4Q:s{Constructor (_:String ){} }''',
                '''Class,_e,:,p,{,Val,$9,,,$5,,,_,:,_,;,},Class,__q6,:,____,{,Destructor,(,),{,Continue,;,},Val,d6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,034,],,,0B10001,],,,034,],,,0XEE,],,,0X5D,],,,63,],;,},Class,_4Q,:,s,{,Constructor,(,_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3819(self):
        self.assertTrue(
            TestLexer.test(
                '''Class QF:inH26{$_(_,i:Array [Float ,0b10110];_5l_:Boolean ;n4Y,t3:Boolean ){}Val L,$_6EVw,_,$17,_:Int ;}Class _:_{}''',
                '''Class,QF,:,inH26,{,$_,(,_,,,i,:,Array,[,Float,,,0b10110,],;,_5l_,:,Boolean,;,n4Y,,,t3,:,Boolean,),{,},Val,L,,,$_6EVw,,,_,,,$17,,,_,:,Int,;,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3820(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{Destructor (){Var h81:Array [Array [Int ,0b1_1],0b1];}_i_1_2_u(q:String ;i:Array [Float ,043]){} }Class Dn_:Cl{Constructor (){} }''',
                '''Class,K,{,Destructor,(,),{,Var,h81,:,Array,[,Array,[,Int,,,0b11,],,,0b1,],;,},_i_1_2_u,(,q,:,String,;,i,:,Array,[,Float,,,043,],),{,},},Class,Dn_,:,Cl,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3821(self):
        self.assertTrue(
            TestLexer.test(
                '''Class L:e8{Constructor (j,__4k_9a,E_,d:Array [Array [Array [Array [Array [Float ,49],4],0xF],0XED],0B111101];k:__){ {} }}''',
                '''Class,L,:,e8,{,Constructor,(,j,,,__4k_9a,,,E_,,,d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,49,],,,4,],,,0xF,],,,0XED,],,,0B111101,],;,k,:,__,),{,{,},},},<EOF>''',
                101
            )
        )

    def test_3822(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:___i{}Class H:O_{}Class _:DL90iq{}Class __0:oO{Var cZ2,$_87wE__,l,v_4:Array [Float ,0b1000000];Constructor (_9_,j0:Int ;P:String ){} }''',
                '''Class,_,:,___i,{,},Class,H,:,O_,{,},Class,_,:,DL90iq,{,},Class,__0,:,oO,{,Var,cZ2,,,$_87wE__,,,l,,,v_4,:,Array,[,Float,,,0b1000000,],;,Constructor,(,_9_,,,j0,:,Int,;,P,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3823(self):
        self.assertTrue(
            TestLexer.test(
                '''Class F7{Destructor (){}Constructor (_,I,H_,_:Array [Int ,0b101101];__8j_,Y5,P_,x,T,w:o__E){} }Class _{}Class c:_{$BT(O87,zB__7D:u;q4_,U,J,_6,rA__:Boolean ;i:Array [Boolean ,060];u,_U_,zU6:x3){} }''',
                '''Class,F7,{,Destructor,(,),{,},Constructor,(,_,,,I,,,H_,,,_,:,Array,[,Int,,,0b101101,],;,__8j_,,,Y5,,,P_,,,x,,,T,,,w,:,o__E,),{,},},Class,_,{,},Class,c,:,_,{,$BT,(,O87,,,zB__7D,:,u,;,q4_,,,U,,,J,,,_6,,,rA__,:,Boolean,;,i,:,Array,[,Boolean,,,060,],;,u,,,_U_,,,zU6,:,x3,),{,},},<EOF>''',
                101
            )
        )

    def test_3824(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _x2x_49{Destructor (){}Val $5,_8_,S:Array [Int ,0x6];Constructor (T66,_5:Array [Boolean ,017];v5_7:String ){} }Class _{}''',
                '''Class,_x2x_49,{,Destructor,(,),{,},Val,$5,,,_8_,,,S,:,Array,[,Int,,,0x6,],;,Constructor,(,T66,,,_5,:,Array,[,Boolean,,,017,],;,v5_7,:,String,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3825(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:w{Var $_1:Int ;}Class _:M{}Class ___{Constructor (){}Val to,uW_,___,_,$IOYT:Array [Array [Array [Array [Float ,0141],0X46],01],0b1001011];}''',
                '''Class,_,:,w,{,Var,$_1,:,Int,;,},Class,_,:,M,{,},Class,___,{,Constructor,(,),{,},Val,to,,,uW_,,,___,,,_,,,$IOYT,:,Array,[,Array,[,Array,[,Array,[,Float,,,0141,],,,0X46,],,,01,],,,0b1001011,],;,},<EOF>''',
                101
            )
        )

    def test_3826(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r_1A7{Val _0:Array [Array [Array [Boolean ,0X8_2],0x3],0b1100011];}Class _1r{Constructor (){} }Class __:Q_{Constructor (){} }Class q{}''',
                '''Class,r_1A7,{,Val,_0,:,Array,[,Array,[,Array,[,Boolean,,,0X82,],,,0x3,],,,0b1100011,],;,},Class,_1r,{,Constructor,(,),{,},},Class,__,:,Q_,{,Constructor,(,),{,},},Class,q,{,},<EOF>''',
                101
            )
        )

    def test_3827(self):
        self.assertTrue(
            TestLexer.test(
                '''Class G_8:_{Val X,$5:Array [Array [Array [Array [Array [Int ,0b1_01_00],8_937],5],0124],5];}Class _{Constructor (HR:_;_,q,_L:_){}Val E__,$_,$_Z0_,$p:Array [Array [Array [Boolean ,1],0b1],07];}''',
                '''Class,G_8,:,_,{,Val,X,,,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10100,],,,8937,],,,5,],,,0124,],,,5,],;,},Class,_,{,Constructor,(,HR,:,_,;,_,,,q,,,_L,:,_,),{,},Val,E__,,,$_,,,$_Z0_,,,$p,:,Array,[,Array,[,Array,[,Boolean,,,1,],,,0b1,],,,07,],;,},<EOF>''',
                101
            )
        )

    def test_3828(self):
        self.assertTrue(
            TestLexer.test(
                '''Class W{Var $K:Float ;}Class ___6:_oB{$_2M_(_6_9Z6n:String ){} }Class X__0{Var $7_,_D:Int ;Val _8_:M_;Destructor (){} }Class iGIg__:___{}''',
                '''Class,W,{,Var,$K,:,Float,;,},Class,___6,:,_oB,{,$_2M_,(,_6_9Z6n,:,String,),{,},},Class,X__0,{,Var,$7_,,,_D,:,Int,;,Val,_8_,:,M_,;,Destructor,(,),{,},},Class,iGIg__,:,___,{,},<EOF>''',
                101
            )
        )

    def test_3829(self):
        self.assertTrue(
            TestLexer.test(
                '''Class q{Constructor (_,_:Array [Int ,0XB2];_BY,___:String ;o7:__a;W,__:Array [Array [Array [String ,37],0B100],0x59]){} }''',
                '''Class,q,{,Constructor,(,_,,,_,:,Array,[,Int,,,0XB2,],;,_BY,,,___,:,String,;,o7,:,__a,;,W,,,__,:,Array,[,Array,[,Array,[,String,,,37,],,,0B100,],,,0x59,],),{,},},<EOF>''',
                101
            )
        )

    def test_3830(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w{$i1(G,G:Boolean ){}Constructor (__9:_;_N6pG_q,E,__D_,_:Array [String ,0X1];__,_5,x:Array [Float ,30];I_,_:Boolean ){Continue ;} }Class c_:p{}''',
                '''Class,w,{,$i1,(,G,,,G,:,Boolean,),{,},Constructor,(,__9,:,_,;,_N6pG_q,,,E,,,__D_,,,_,:,Array,[,String,,,0X1,],;,__,,,_5,,,x,:,Array,[,Float,,,30,],;,I_,,,_,:,Boolean,),{,Continue,;,},},Class,c_,:,p,{,},<EOF>''',
                101
            )
        )

    def test_3831(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q_:TM{}Class v:_1{Destructor (){}Constructor (a,vM,u_V:Array [Int ,0b111100]){} }Class G4:_{Var LG,$Q:Array [Array [String ,04],28];}''',
                '''Class,Q_,:,TM,{,},Class,v,:,_1,{,Destructor,(,),{,},Constructor,(,a,,,vM,,,u_V,:,Array,[,Int,,,0b111100,],),{,},},Class,G4,:,_,{,Var,LG,,,$Q,:,Array,[,Array,[,String,,,04,],,,28,],;,},<EOF>''',
                101
            )
        )

    def test_3832(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J3{Val x,_:Array [Int ,0xDA];Val $_,_:String ;}Class _{}Class _:__{}Class _:L{Val __,d68:Int ;$_(X,RM,U:Float ){} }Class DWg:_{Val $_:Boolean ;Constructor (_:Boolean ){} }Class _{}Class _:_{}''',
                '''Class,J3,{,Val,x,,,_,:,Array,[,Int,,,0xDA,],;,Val,$_,,,_,:,String,;,},Class,_,{,},Class,_,:,__,{,},Class,_,:,L,{,Val,__,,,d68,:,Int,;,$_,(,X,,,RM,,,U,:,Float,),{,},},Class,DWg,:,_,{,Val,$_,:,Boolean,;,Constructor,(,_,:,Boolean,),{,},},Class,_,{,},Class,_,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3833(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:G3_8{}Class r:t_{}Class _{}Class _{}Class _:_{}Class a:_{}Class _:E{Var C,_:Hg;}Class o:_{}Class C_1I:_{}''',
                '''Class,__,:,G3_8,{,},Class,r,:,t_,{,},Class,_,{,},Class,_,{,},Class,_,:,_,{,},Class,a,:,_,{,},Class,_,:,E,{,Var,C,,,_,:,Hg,;,},Class,o,:,_,{,},Class,C_1I,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3834(self):
        self.assertTrue(
            TestLexer.test(
                '''Class D{Destructor (){} }Class __{Constructor (_,s:Array [Array [String ,0x9],0127]){} }Class P1:A{}Class S:_6{}Class F{Destructor (){} }Class _p{}Class Ze{}''',
                '''Class,D,{,Destructor,(,),{,},},Class,__,{,Constructor,(,_,,,s,:,Array,[,Array,[,String,,,0x9,],,,0127,],),{,},},Class,P1,:,A,{,},Class,S,:,_6,{,},Class,F,{,Destructor,(,),{,},},Class,_p,{,},Class,Ze,{,},<EOF>''',
                101
            )
        )

    def test_3835(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (){}Val $9a,$09,$__N1Su_:Array [Float ,0B1];}Class _:__{$7(l0:Array [Boolean ,0B110001]){}Constructor (){} }''',
                '''Class,_,{,Constructor,(,),{,},Val,$9a,,,$09,,,$__N1Su_,:,Array,[,Float,,,0B1,],;,},Class,_,:,__,{,$7,(,l0,:,Array,[,Boolean,,,0B110001,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3836(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $_:Boolean ;}Class JqQ:_{Var $P,_2:Array [Int ,0b1];}Class g{}Class r{Val $_:Array [Float ,0x5C];}Class _K__:R{}''',
                '''Class,_,{,Var,$_,:,Boolean,;,},Class,JqQ,:,_,{,Var,$P,,,_2,:,Array,[,Int,,,0b1,],;,},Class,g,{,},Class,r,{,Val,$_,:,Array,[,Float,,,0x5C,],;,},Class,_K__,:,R,{,},<EOF>''',
                101
            )
        )

    def test_3837(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class __{Constructor (wC:_){Continue ;{} }Var MWo,_:Array [Array [Array [Int ,0XD_0],0x5_B_C2_8],0B101010];}''',
                '''Class,_,{,},Class,__,{,Constructor,(,wC,:,_,),{,Continue,;,{,},},Var,MWo,,,_,:,Array,[,Array,[,Array,[,Int,,,0XD0,],,,0x5BC28,],,,0B101010,],;,},<EOF>''',
                101
            )
        )

    def test_3838(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m{}Class __2:L{}Class SR{Var z:Array [Array [Float ,0XB7_3],2_52];Constructor (h,_00G,B,_,__1_:_){} }Class _AR_Q{}Class n_7_{}Class P{}''',
                '''Class,m,{,},Class,__2,:,L,{,},Class,SR,{,Var,z,:,Array,[,Array,[,Float,,,0XB73,],,,252,],;,Constructor,(,h,,,_00G,,,B,,,_,,,__1_,:,_,),{,},},Class,_AR_Q,{,},Class,n_7_,{,},Class,P,{,},<EOF>''',
                101
            )
        )

    def test_3839(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1{Constructor (_L6,_N27_,_,y,D,__:V2X;_:__;pA4_,y,_:k;h,h:Int ;wZ___H:Array [Float ,0XF_6];_,Dk,_3x8F,B:Array [Boolean ,0X1];_,T:Array [Array [Array [Array [Array [Float ,0b1],0b1],06],0x41],047]){} }Class _:_{Constructor (){Continue ;} }''',
                '''Class,_1,{,Constructor,(,_L6,,,_N27_,,,_,,,y,,,D,,,__,:,V2X,;,_,:,__,;,pA4_,,,y,,,_,:,k,;,h,,,h,:,Int,;,wZ___H,:,Array,[,Float,,,0XF6,],;,_,,,Dk,,,_3x8F,,,B,:,Array,[,Boolean,,,0X1,],;,_,,,T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0b1,],,,06,],,,0x41,],,,047,],),{,},},Class,_,:,_,{,Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3840(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Destructor (){} }Class N:_6{}Class _P:j9{Var _9I,$wl:Array [Array [Float ,69],0x55];Val $_,$_:U_;}Class __8:_{Var $_:String ;}''',
                '''Class,_,{,Destructor,(,),{,},},Class,N,:,_6,{,},Class,_P,:,j9,{,Var,_9I,,,$wl,:,Array,[,Array,[,Float,,,69,],,,0x55,],;,Val,$_,,,$_,:,U_,;,},Class,__8,:,_,{,Var,$_,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3841(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:b{$54(){Val b:_Q;}Val $1n:Array [Array [Array [Array [String ,0b1],0x31],0B1_0],74];}Class _:____0y{}Class F:m___{}''',
                '''Class,_,:,b,{,$54,(,),{,Val,b,:,_Q,;,},Val,$1n,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0x31,],,,0B10,],,,74,],;,},Class,_,:,____0y,{,},Class,F,:,m___,{,},<EOF>''',
                101
            )
        )

    def test_3842(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __{Val X:j8o;Constructor (J1:Int ;B_5,__,_:Boolean ;_:Float ;L:Array [Array [String ,32],03];v,_:Z;_,_:_){}Var L:Array [Array [Array [Array [Float ,0x12],0x7],0xA5],2_3_24_87_3];}Class _e013_{}''',
                '''Class,__,{,Val,X,:,j8o,;,Constructor,(,J1,:,Int,;,B_5,,,__,,,_,:,Boolean,;,_,:,Float,;,L,:,Array,[,Array,[,String,,,32,],,,03,],;,v,,,_,:,Z,;,_,,,_,:,_,),{,},Var,L,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x12,],,,0x7,],,,0xA5,],,,2324873,],;,},Class,_e013_,{,},<EOF>''',
                101
            )
        )

    def test_3843(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class _:__5_{Var _76:w;Var u_:_;}Class kG:nZ{__(Q:_;_1,u6,G,e_r,_4h,__O,__,_i,N,_:Array [Array [Boolean ,0X41],25];_1_f_,__:a_367){} }''',
                '''Class,_,{,},Class,_,:,__5_,{,Var,_76,:,w,;,Var,u_,:,_,;,},Class,kG,:,nZ,{,__,(,Q,:,_,;,_1,,,u6,,,G,,,e_r,,,_4h,,,__O,,,__,,,_i,,,N,,,_,:,Array,[,Array,[,Boolean,,,0X41,],,,25,],;,_1_f_,,,__,:,a_367,),{,},},<EOF>''',
                101
            )
        )

    def test_3844(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _V4:I{}Class EPr:O{}Class _{}Class E{}Class j{}Class _W{Val $7_:Array [Array [Array [Int ,0B1],0B1000011],06];Constructor (){} }''',
                '''Class,_V4,:,I,{,},Class,EPr,:,O,{,},Class,_,{,},Class,E,{,},Class,j,{,},Class,_W,{,Val,$7_,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B1000011,],,,06,],;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3845(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_:H;_:Float ;E:s7_){Continue ;} }Class _t:M5{}Class r:_{_(){} }Class i{Constructor (){} }Class _{}''',
                '''Class,_,:,_,{,Constructor,(,_,:,H,;,_,:,Float,;,E,:,s7_,),{,Continue,;,},},Class,_t,:,M5,{,},Class,r,:,_,{,_,(,),{,},},Class,i,{,Constructor,(,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3846(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_3o9{}Class N{}Class _{$_(d:Array [String ,060];_,_,_:Array [Array [Float ,0b1],060];_:Float ;GZ3:y){} }Class _{Var W2_Y,x,_37_:Array [Array [Int ,0B1],9_5_2];}''',
                '''Class,_,:,_3o9,{,},Class,N,{,},Class,_,{,$_,(,d,:,Array,[,String,,,060,],;,_,,,_,,,_,:,Array,[,Array,[,Float,,,0b1,],,,060,],;,_,:,Float,;,GZ3,:,y,),{,},},Class,_,{,Var,W2_Y,,,x,,,_37_,:,Array,[,Array,[,Int,,,0B1,],,,952,],;,},<EOF>''',
                101
            )
        )

    def test_3847(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:P{Constructor (_I4,o,_9:Array [Array [Array [Array [Int ,043],03_145],100],4];__055_:__;f52V,P3,_,_O,h3:Array [Array [Float ,0xD],043]){}Val $6:Array [Array [Array [Array [String ,043],5_0_6],0X37],0b1011100];}''',
                '''Class,__,:,P,{,Constructor,(,_I4,,,o,,,_9,:,Array,[,Array,[,Array,[,Array,[,Int,,,043,],,,03145,],,,100,],,,4,],;,__055_,:,__,;,f52V,,,P3,,,_,,,_O,,,h3,:,Array,[,Array,[,Float,,,0xD,],,,043,],),{,},Val,$6,:,Array,[,Array,[,Array,[,Array,[,String,,,043,],,,506,],,,0X37,],,,0b1011100,],;,},<EOF>''',
                101
            )
        )

    def test_3848(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:l{H(_D:Float ;n:Array [Array [Float ,0X3_C],0XE];_,C,f,_,_,z:rt1_;n:Array [Boolean ,0X68_4]){}Constructor (){} }''',
                '''Class,_,:,l,{,H,(,_D,:,Float,;,n,:,Array,[,Array,[,Float,,,0X3C,],,,0XE,],;,_,,,C,,,f,,,_,,,_,,,z,:,rt1_,;,n,:,Array,[,Boolean,,,0X684,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3849(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _u5__2:__{Var _3P4:Float ;Val $_:Array [Array [Array [Array [Array [Array [Array [String ,0B1000011],5_0],87],100],06],06],01];}''',
                '''Class,_u5__2,:,__,{,Var,_3P4,:,Float,;,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1000011,],,,50,],,,87,],,,100,],,,06,],,,06,],,,01,],;,},<EOF>''',
                101
            )
        )

    def test_3850(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{$s_(){}_(g,B_2,tv,_,i:_;_,qi_,R:Array [Array [Array [Float ,0X6],05],0B11];G,X8,H_,d:Float ){Continue ;}Val _,_,$_,_:Array [Array [Array [Boolean ,01],0b10101],0b1_0];}Class o39{}''',
                '''Class,Q,{,$s_,(,),{,},_,(,g,,,B_2,,,tv,,,_,,,i,:,_,;,_,,,qi_,,,R,:,Array,[,Array,[,Array,[,Float,,,0X6,],,,05,],,,0B11,],;,G,,,X8,,,H_,,,d,:,Float,),{,Continue,;,},Val,_,,,_,,,$_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,0b10101,],,,0b10,],;,},Class,o39,{,},<EOF>''',
                101
            )
        )

    def test_3851(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _2_{}Class __Hh:_vy__{Val $_:Array [Array [Array [Array [Int ,0b1],054],12],12];}Class __b:Y__{Var r60:Float ;}''',
                '''Class,_2_,{,},Class,__Hh,:,_vy__,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,054,],,,12,],,,12,],;,},Class,__b,:,Y__,{,Var,r60,:,Float,;,},<EOF>''',
                101
            )
        )

    def test_3852(self):
        self.assertTrue(
            TestLexer.test(
                '''Class t{}Class m_14{$_(_:Array [Array [Array [Array [String ,56],03],0b1],0b1];_:Array [Array [Float ,4],0xE8_648]){} }''',
                '''Class,t,{,},Class,m_14,{,$_,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,56,],,,03,],,,0b1,],,,0b1,],;,_,:,Array,[,Array,[,Float,,,4,],,,0xE8648,],),{,},},<EOF>''',
                101
            )
        )

    def test_3853(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:v{Constructor (d:h;_43:Array [Array [Array [Boolean ,6_77_9],5_0],0x58];x:j){}_(_:_r_){Return ;} }Class _:H6g{}''',
                '''Class,Y,:,v,{,Constructor,(,d,:,h,;,_43,:,Array,[,Array,[,Array,[,Boolean,,,6779,],,,50,],,,0x58,],;,x,:,j,),{,},_,(,_,:,_r_,),{,Return,;,},},Class,_,:,H6g,{,},<EOF>''',
                101
            )
        )

    def test_3854(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __:_{Val $1:String ;Constructor (H_,e,p_4_l:Array [Array [Int ,7_95],48]){} }Class F_b_:_{Val $___QN:String ;}''',
                '''Class,__,:,_,{,Val,$1,:,String,;,Constructor,(,H_,,,e,,,p_4_l,:,Array,[,Array,[,Int,,,795,],,,48,],),{,},},Class,F_b_,:,_,{,Val,$___QN,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3855(self):
        self.assertTrue(
            TestLexer.test(
                '''Class O:H{$0(_:_;q,_,eJ:_;Q_b4P,V0:Array [Array [Array [String ,4_10_0],022],3];_:Array [Array [Int ,0b100100],022]){} }''',
                '''Class,O,:,H,{,$0,(,_,:,_,;,q,,,_,,,eJ,:,_,;,Q_b4P,,,V0,:,Array,[,Array,[,Array,[,String,,,4100,],,,022,],,,3,],;,_,:,Array,[,Array,[,Int,,,0b100100,],,,022,],),{,},},<EOF>''',
                101
            )
        )

    def test_3856(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K{Constructor (_4,z,j_:Array [Array [Float ,0B1_1_0],0X69];p:Array [Array [Array [Boolean ,0b1010],98],0B101010]){} }Class rn{T6(){} }Class XF{Var b_3Qn:String ;}''',
                '''Class,K,{,Constructor,(,_4,,,z,,,j_,:,Array,[,Array,[,Float,,,0B110,],,,0X69,],;,p,:,Array,[,Array,[,Array,[,Boolean,,,0b1010,],,,98,],,,0B101010,],),{,},},Class,rn,{,T6,(,),{,},},Class,XF,{,Var,b_3Qn,:,String,;,},<EOF>''',
                101
            )
        )

    def test_3857(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J_{ov(zu,_:Array [Boolean ,0X43];_,j2,XU6,k,__:Int ;Z:Array [Float ,050];W:String ){} }Class _h_{Var $Bk:String ;Constructor (){} }''',
                '''Class,J_,{,ov,(,zu,,,_,:,Array,[,Boolean,,,0X43,],;,_,,,j2,,,XU6,,,k,,,__,:,Int,;,Z,:,Array,[,Float,,,050,],;,W,:,String,),{,},},Class,_h_,{,Var,$Bk,:,String,;,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3858(self):
        self.assertTrue(
            TestLexer.test(
                '''Class B:__{Val __Q,$__,$4Q_:Array [Boolean ,0b1101];}Class p:K{}Class _7__:_{Destructor (){Continue ;}Var $__gT:Array [String ,0B10010];}Class j5{}''',
                '''Class,B,:,__,{,Val,__Q,,,$__,,,$4Q_,:,Array,[,Boolean,,,0b1101,],;,},Class,p,:,K,{,},Class,_7__,:,_,{,Destructor,(,),{,Continue,;,},Var,$__gT,:,Array,[,String,,,0B10010,],;,},Class,j5,{,},<EOF>''',
                101
            )
        )

    def test_3859(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _9CU{Val $_,_,$_P,$_6:Array [Array [Array [String ,90],90],01_26];Val $0WKo5,$0_,$6_:Array [Array [String ,0B1],0B110110];Val n_,u_:O;Val _6_,__2:Array [Float ,03_7];}''',
                '''Class,_9CU,{,Val,$_,,,_,,,$_P,,,$_6,:,Array,[,Array,[,Array,[,String,,,90,],,,90,],,,0126,],;,Val,$0WKo5,,,$0_,,,$6_,:,Array,[,Array,[,String,,,0B1,],,,0B110110,],;,Val,n_,,,u_,:,O,;,Val,_6_,,,__2,:,Array,[,Float,,,037,],;,},<EOF>''',
                101
            )
        )

    def test_3860(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __083{TU(f,_j,T:Array [Array [Int ,0111],19];_R,_I:Int ;PK,_:Array [Array [Array [String ,46],06_2],2_2]){} }''',
                '''Class,__083,{,TU,(,f,,,_j,,,T,:,Array,[,Array,[,Int,,,0111,],,,19,],;,_R,,,_I,:,Int,;,PK,,,_,:,Array,[,Array,[,Array,[,String,,,46,],,,062,],,,22,],),{,},},<EOF>''',
                101
            )
        )

    def test_3861(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __5{Destructor (){} }Class _e:_{}Class S:_{}Class um:y{}Class _T:_8{Constructor (sk_:P_2;R,_:h;t,_iXW_H80,__:Boolean ){} }Class _c:_{Destructor (){} }Class L:_u_{}''',
                '''Class,__5,{,Destructor,(,),{,},},Class,_e,:,_,{,},Class,S,:,_,{,},Class,um,:,y,{,},Class,_T,:,_8,{,Constructor,(,sk_,:,P_2,;,R,,,_,:,h,;,t,,,_iXW_H80,,,__,:,Boolean,),{,},},Class,_c,:,_,{,Destructor,(,),{,},},Class,L,:,_u_,{,},<EOF>''',
                101
            )
        )

    def test_3862(self):
        self.assertTrue(
            TestLexer.test(
                '''Class u_1{w(Z:String ;_:Float ;a:_;N:Array [String ,0B11010];_N_____F:Boolean ;o_5_V_,_h,Bv:Int ){Continue ;_3_::$t();} }''',
                '''Class,u_1,{,w,(,Z,:,String,;,_,:,Float,;,a,:,_,;,N,:,Array,[,String,,,0B11010,],;,_N_____F,:,Boolean,;,o_5_V_,,,_h,,,Bv,:,Int,),{,Continue,;,_3_,::,$t,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3863(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _b0{}Class h0{Val $6H,$__5,$_1r:Float ;}Class c4{Var $_,$94,$0:f;Var $w,$4__Dv,_yk_,j,$4:Int ;}Class A:Y{Var $____2E,os,$B,_9q,$_:_;}''',
                '''Class,_b0,{,},Class,h0,{,Val,$6H,,,$__5,,,$_1r,:,Float,;,},Class,c4,{,Var,$_,,,$94,,,$0,:,f,;,Var,$w,,,$4__Dv,,,_yk_,,,j,,,$4,:,Int,;,},Class,A,:,Y,{,Var,$____2E,,,os,,,$B,,,_9q,,,$_,:,_,;,},<EOF>''',
                101
            )
        )

    def test_3864(self):
        self.assertTrue(
            TestLexer.test(
                '''Class j{Constructor (_,gl,__6__,s,_u,_7_,c_6_NlW:_;_,v,j6:_){}Constructor (c,K,g:String ;_:Int ;Pt,T_,pj,_:Array [Int ,04];__2:Array [String ,0B1111]){}Constructor (){} }''',
                '''Class,j,{,Constructor,(,_,,,gl,,,__6__,,,s,,,_u,,,_7_,,,c_6_NlW,:,_,;,_,,,v,,,j6,:,_,),{,},Constructor,(,c,,,K,,,g,:,String,;,_,:,Int,;,Pt,,,T_,,,pj,,,_,:,Array,[,Int,,,04,],;,__2,:,Array,[,String,,,0B1111,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3865(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:N_1958{}Class t{Val $8bQ:Array [Array [Array [Array [Int ,0xB_6FC_F_5_7],0b100110],80],0x2];}Class tA{$0(){}Var U:Array [Float ,80];}''',
                '''Class,_,:,N_1958,{,},Class,t,{,Val,$8bQ,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xB6FCF57,],,,0b100110,],,,80,],,,0x2,],;,},Class,tA,{,$0,(,),{,},Var,U,:,Array,[,Float,,,80,],;,},<EOF>''',
                101
            )
        )

    def test_3866(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ts_{Constructor (Bw_M,_4X,_:Array [Boolean ,0b1_1]){}Var f,$5:J9_;}Class _25s{}Class _a_:_{Constructor (){} }''',
                '''Class,ts_,{,Constructor,(,Bw_M,,,_4X,,,_,:,Array,[,Boolean,,,0b11,],),{,},Var,f,,,$5,:,J9_,;,},Class,_25s,{,},Class,_a_,:,_,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3867(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (_c4__,_,b3_8,__,q,_8__:n;_,_h:_;o_,P_,_R3:Array [Int ,3_56]){Null .H()._();Continue ;}Var _B__:_;__0_55(d,g,K___E___1__2:Boolean ;__,__3_:Array [Array [Int ,0B1_1_110],19];U,_O,b:Array [Boolean ,0x5C]){} }Class f7:_{}''',
                '''Class,_,{,Constructor,(,_c4__,,,_,,,b3_8,,,__,,,q,,,_8__,:,n,;,_,,,_h,:,_,;,o_,,,P_,,,_R3,:,Array,[,Int,,,356,],),{,Null,.,H,(,),.,_,(,),;,Continue,;,},Var,_B__,:,_,;,__0_55,(,d,,,g,,,K___E___1__2,:,Boolean,;,__,,,__3_,:,Array,[,Array,[,Int,,,0B11110,],,,19,],;,U,,,_O,,,b,:,Array,[,Boolean,,,0x5C,],),{,},},Class,f7,:,_,{,},<EOF>''',
                101
            )
        )

    def test_3868(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _0_:l{Val $Ih:Array [Array [Boolean ,0XB],0XEF];}Class e{Destructor (){}Destructor (){Continue ;} }Class u34:q0_{}''',
                '''Class,_0_,:,l,{,Val,$Ih,:,Array,[,Array,[,Boolean,,,0XB,],,,0XEF,],;,},Class,e,{,Destructor,(,),{,},Destructor,(,),{,Continue,;,},},Class,u34,:,q0_,{,},<EOF>''',
                101
            )
        )

    def test_3869(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{B(_3_,_,O__,W:_;X:Float ;z,_,P,___S:Array [Array [Array [Array [Float ,034],0b1011001],0b1011001],5_7]){}Destructor (){} }''',
                '''Class,_,{,B,(,_3_,,,_,,,O__,,,W,:,_,;,X,:,Float,;,z,,,_,,,P,,,___S,:,Array,[,Array,[,Array,[,Array,[,Float,,,034,],,,0b1011001,],,,0b1011001,],,,57,],),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3870(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e5v:H{Val P__T_:X__;_3__(_:_X_;S,R,_w_,y5:Int ){}_(Z_T:Array [Array [String ,1],045];L7:Float ){} }Class m7:_Y{}Class P_{Destructor (){Break ;Break ;} }Class _:o0d__{}''',
                '''Class,e5v,:,H,{,Val,P__T_,:,X__,;,_3__,(,_,:,_X_,;,S,,,R,,,_w_,,,y5,:,Int,),{,},_,(,Z_T,:,Array,[,Array,[,String,,,1,],,,045,],;,L7,:,Float,),{,},},Class,m7,:,_Y,{,},Class,P_,{,Destructor,(,),{,Break,;,Break,;,},},Class,_,:,o0d__,{,},<EOF>''',
                101
            )
        )

    def test_3871(self):
        self.assertTrue(
            TestLexer.test(
                '''Class d0__K_{}Class c:_{Constructor (o,V,D:Array [Array [Array [Float ,0B1_0],01],91574];H4,q:Array [Int ,044];H705O,T:Array [Array [String ,0X6_F],100]){} }''',
                '''Class,d0__K_,{,},Class,c,:,_,{,Constructor,(,o,,,V,,,D,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,01,],,,91574,],;,H4,,,q,:,Array,[,Int,,,044,],;,H705O,,,T,:,Array,[,Array,[,String,,,0X6F,],,,100,],),{,},},<EOF>''',
                101
            )
        )

    def test_3872(self):
        self.assertTrue(
            TestLexer.test(
                '''Class N1_3:_Q7q{_(K__Gb:_N9;M,_,q4:Array [String ,0b1];_p_,v:j_;__:Array [String ,0x8];__Y40,Xg,I:yk){} }Class Dd{W7(X,h5,_:_;jd:_;HY__t_a_,q,_,r:_){} }''',
                '''Class,N1_3,:,_Q7q,{,_,(,K__Gb,:,_N9,;,M,,,_,,,q4,:,Array,[,String,,,0b1,],;,_p_,,,v,:,j_,;,__,:,Array,[,String,,,0x8,],;,__Y40,,,Xg,,,I,:,yk,),{,},},Class,Dd,{,W7,(,X,,,h5,,,_,:,_,;,jd,:,_,;,HY__t_a_,,,q,,,_,,,r,:,_,),{,},},<EOF>''',
                101
            )
        )

    def test_3873(self):
        self.assertTrue(
            TestLexer.test(
                '''Class I5_{Destructor (){}$_2(_:Float ;C,D,_d,A_7E,_,u5:Array [Array [Array [Boolean ,0X7_02],3],0X3]){}Destructor (){} }Class z_8{}''',
                '''Class,I5_,{,Destructor,(,),{,},$_2,(,_,:,Float,;,C,,,D,,,_d,,,A_7E,,,_,,,u5,:,Array,[,Array,[,Array,[,Boolean,,,0X702,],,,3,],,,0X3,],),{,},Destructor,(,),{,},},Class,z_8,{,},<EOF>''',
                101
            )
        )

    def test_3874(self):
        self.assertTrue(
            TestLexer.test(
                '''Class A:__{Constructor (__,_,Wd:Array [Float ,0b1]){} }Class _7_:_{}Class _:_{}Class e:Jj7{Destructor (){}Var $H:Array [Float ,7];H(_,_7,e5TO_pV,YZ:__4mA){}Constructor (__:Array [Boolean ,0XF2_5]){} }''',
                '''Class,A,:,__,{,Constructor,(,__,,,_,,,Wd,:,Array,[,Float,,,0b1,],),{,},},Class,_7_,:,_,{,},Class,_,:,_,{,},Class,e,:,Jj7,{,Destructor,(,),{,},Var,$H,:,Array,[,Float,,,7,],;,H,(,_,,,_7,,,e5TO_pV,,,YZ,:,__4mA,),{,},Constructor,(,__,:,Array,[,Boolean,,,0XF25,],),{,},},<EOF>''',
                101
            )
        )

    def test_3875(self):
        self.assertTrue(
            TestLexer.test(
                '''Class l4:RY{Val $_,_,$___1__31,_,__6_:_;}Class _:_tM{Constructor (_1,OP:Array [Array [Boolean ,97],0x4A]){Val v:Array [String ,4];}Var $4W:U;Constructor (_:_;d,_,_,_:Array [Boolean ,0X2D]){}Var $Lv74_:Array [Array [Array [Boolean ,0X2D],0140],67_5];}''',
                '''Class,l4,:,RY,{,Val,$_,,,_,,,$___1__31,,,_,,,__6_,:,_,;,},Class,_,:,_tM,{,Constructor,(,_1,,,OP,:,Array,[,Array,[,Boolean,,,97,],,,0x4A,],),{,Val,v,:,Array,[,String,,,4,],;,},Var,$4W,:,U,;,Constructor,(,_,:,_,;,d,,,_,,,_,,,_,:,Array,[,Boolean,,,0X2D,],),{,},Var,$Lv74_,:,Array,[,Array,[,Array,[,Boolean,,,0X2D,],,,0140,],,,675,],;,},<EOF>''',
                101
            )
        )

    def test_3876(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _s{$99_8(gg3:Array [Int ,33];Ol:Array [Array [Boolean ,240],0x1E];Lx,H,G,__,_P,I,j:Array [Boolean ,0X1B];_:String ;_:B;J13:Array [String ,0B1]){Continue ;}Destructor (){}Destructor (){} }''',
                '''Class,_s,{,$99_8,(,gg3,:,Array,[,Int,,,33,],;,Ol,:,Array,[,Array,[,Boolean,,,240,],,,0x1E,],;,Lx,,,H,,,G,,,__,,,_P,,,I,,,j,:,Array,[,Boolean,,,0X1B,],;,_,:,String,;,_,:,B,;,J13,:,Array,[,String,,,0B1,],),{,Continue,;,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3877(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:ty_{Constructor (_9_x:Float ;_3__1,v,sZ:Float ;_,_,_6,_:Array [Boolean ,0XB_9]){}Val _3:Float ;Var $6:Array [Array [Boolean ,07],96];}Class _:_Y_{}''',
                '''Class,y,:,ty_,{,Constructor,(,_9_x,:,Float,;,_3__1,,,v,,,sZ,:,Float,;,_,,,_,,,_6,,,_,:,Array,[,Boolean,,,0XB9,],),{,},Val,_3,:,Float,;,Var,$6,:,Array,[,Array,[,Boolean,,,07,],,,96,],;,},Class,_,:,_Y_,{,},<EOF>''',
                101
            )
        )

    def test_3878(self):
        self.assertTrue(
            TestLexer.test(
                '''Class w73_:N{}Class _U_e{}Class Vmwl:g{Destructor (){}$7(Pb,e,_,_:Array [Array [Array [Int ,0x96],0b11001],074];Da4,_,_6,_V:Array [Array [Array [Float ,07],074],0X1A];_Q,__,_,M_w,_,i_C_:Array [Array [Array [Boolean ,60_6],06_1],63]){Continue ;} }''',
                '''Class,w73_,:,N,{,},Class,_U_e,{,},Class,Vmwl,:,g,{,Destructor,(,),{,},$7,(,Pb,,,e,,,_,,,_,:,Array,[,Array,[,Array,[,Int,,,0x96,],,,0b11001,],,,074,],;,Da4,,,_,,,_6,,,_V,:,Array,[,Array,[,Array,[,Float,,,07,],,,074,],,,0X1A,],;,_Q,,,__,,,_,,,M_w,,,_,,,i_C_,:,Array,[,Array,[,Array,[,Boolean,,,606,],,,061,],,,63,],),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3879(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:Rl3_13{yW_(){}Destructor (){} }Class _{Destructor (){}Var c382,$_:Array [Float ,0x4_F68_8_8_7_0_E9_C_A_A_D_7];_7(){Continue ;} }Class _4y__:I_{}''',
                '''Class,_,:,Rl3_13,{,yW_,(,),{,},Destructor,(,),{,},},Class,_,{,Destructor,(,),{,},Var,c382,,,$_,:,Array,[,Float,,,0x4F688870E9CAAD7,],;,_7,(,),{,Continue,;,},},Class,_4y__,:,I_,{,},<EOF>''',
                101
            )
        )

    def test_3880(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{}Class dY_:_{Constructor (Ov4E,b_,__W4_:Array [Float ,06]){} }Class _:vH{$_(){}Destructor (){}Var $1,$7_,$45N,$52_:String ;Constructor (__,_B:d){}n(_S228,_,_o:Boolean ;__:Z){} }''',
                '''Class,_,{,},Class,dY_,:,_,{,Constructor,(,Ov4E,,,b_,,,__W4_,:,Array,[,Float,,,06,],),{,},},Class,_,:,vH,{,$_,(,),{,},Destructor,(,),{,},Var,$1,,,$7_,,,$45N,,,$52_,:,String,;,Constructor,(,__,,,_B,:,d,),{,},n,(,_S228,,,_,,,_o,:,Boolean,;,__,:,Z,),{,},},<EOF>''',
                101
            )
        )

    def test_3881(self):
        self.assertTrue(
            TestLexer.test(
                '''Class yT{}Class _:_{Destructor (){ {}{}Break ;} }Class _7:_{Destructor (){}Constructor (m,_:_){} }Class a:_{a(){} }''',
                '''Class,yT,{,},Class,_,:,_,{,Destructor,(,),{,{,},{,},Break,;,},},Class,_7,:,_,{,Destructor,(,),{,},Constructor,(,m,,,_,:,_,),{,},},Class,a,:,_,{,a,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3882(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{Constructor (gJmX,W_:Array [Array [Array [Array [String ,07_2],0b100000],0b100000],50];cd:_6){}Constructor (y,f:Int ){New _3()._();} }''',
                '''Class,X,{,Constructor,(,gJmX,,,W_,:,Array,[,Array,[,Array,[,Array,[,String,,,072,],,,0b100000,],,,0b100000,],,,50,],;,cd,:,_6,),{,},Constructor,(,y,,,f,:,Int,),{,New,_3,(,),.,_,(,),;,},},<EOF>''',
                101
            )
        )

    def test_3883(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_HpI_0{Val $1_V_4,j:Array [Array [Array [Array [Array [String ,0B101001],0XE9C],0x3_E],03],0X11];}Class __:_{Destructor (){} }Class __{}''',
                '''Class,_,:,_HpI_0,{,Val,$1_V_4,,,j,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B101001,],,,0XE9C,],,,0x3E,],,,03,],,,0X11,],;,},Class,__,:,_,{,Destructor,(,),{,},},Class,__,{,},<EOF>''',
                101
            )
        )

    def test_3884(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _M:Z{Var $1:Array [Array [String ,18],5_1_1_1_68_0];Var $j:Array [Array [Array [Array [Boolean ,0B10],0B1_011],0x37],0b100100];}''',
                '''Class,_M,:,Z,{,Var,$1,:,Array,[,Array,[,String,,,18,],,,5111680,],;,Var,$j,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10,],,,0B1011,],,,0x37,],,,0b100100,],;,},<EOF>''',
                101
            )
        )

    def test_3885(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Var $_,a,_,$7o:Array [String ,0B11];}Class xn5_:__t8K{}Class _1_a3I{Destructor (){} }Class Z:W{}Class _57{}Class i0p{}Class P_5m{}Class C2{}''',
                '''Class,_,{,Var,$_,,,a,,,_,,,$7o,:,Array,[,String,,,0B11,],;,},Class,xn5_,:,__t8K,{,},Class,_1_a3I,{,Destructor,(,),{,},},Class,Z,:,W,{,},Class,_57,{,},Class,i0p,{,},Class,P_5m,{,},Class,C2,{,},<EOF>''',
                101
            )
        )

    def test_3886(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Val $q,j:Float ;}Class T{Val $z13__,$1:_B;}Class _:g{}Class v_R83{}Class s:_T{}Class m0_:O4_{}Class H:_{Var _X:Array [Boolean ,01];Constructor (_:Array [Int ,045];b,_,_,_p:y_){Break ;}Destructor (){Break ;} }''',
                '''Class,_,{,Val,$q,,,j,:,Float,;,},Class,T,{,Val,$z13__,,,$1,:,_B,;,},Class,_,:,g,{,},Class,v_R83,{,},Class,s,:,_T,{,},Class,m0_,:,O4_,{,},Class,H,:,_,{,Var,_X,:,Array,[,Boolean,,,01,],;,Constructor,(,_,:,Array,[,Int,,,045,],;,b,,,_,,,_,,,_p,:,y_,),{,Break,;,},Destructor,(,),{,Break,;,},},<EOF>''',
                101
            )
        )

    def test_3887(self):
        self.assertTrue(
            TestLexer.test(
                '''Class ___{Val $13_,$naJ5:Array [Array [Array [Array [Int ,0xA_7_9B],02],01_7_5_3_2],0b1];Val $x,$_3:g;}Class o_{}''',
                '''Class,___,{,Val,$13_,,,$naJ5,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xA79B,],,,02,],,,017532,],,,0b1,],;,Val,$x,,,$_3,:,g,;,},Class,o_,{,},<EOF>''',
                101
            )
        )

    def test_3888(self):
        self.assertTrue(
            TestLexer.test(
                '''Class e{Val $2:_;Constructor (){} }Class _5g_{Destructor (){}Var $O,$9d:Boolean ;}Class ZAC:_{}Class N_:_{}Class p6{}''',
                '''Class,e,{,Val,$2,:,_,;,Constructor,(,),{,},},Class,_5g_,{,Destructor,(,),{,},Var,$O,,,$9d,:,Boolean,;,},Class,ZAC,:,_,{,},Class,N_,:,_,{,},Class,p6,{,},<EOF>''',
                101
            )
        )

    def test_3889(self):
        self.assertTrue(
            TestLexer.test(
                '''Class X{Destructor (){Val _,d,TNM88_:Int ;} }Class IL:It{}Class Qgia{$C(){} }Class _:_A{}Class _:K{}Class l5_S:v_{}''',
                '''Class,X,{,Destructor,(,),{,Val,_,,,d,,,TNM88_,:,Int,;,},},Class,IL,:,It,{,},Class,Qgia,{,$C,(,),{,},},Class,_,:,_A,{,},Class,_,:,K,{,},Class,l5_S,:,v_,{,},<EOF>''',
                101
            )
        )

    def test_3890(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _{Constructor (Q,P,_,O,E,__:Array [Int ,0x86];B62:Array [String ,04];__:Array [Array [Array [Boolean ,0x33],0B1_1_1],066]){} }''',
                '''Class,_,{,Constructor,(,Q,,,P,,,_,,,O,,,E,,,__,:,Array,[,Int,,,0x86,],;,B62,:,Array,[,String,,,04,],;,__,:,Array,[,Array,[,Array,[,Boolean,,,0x33,],,,0B111,],,,066,],),{,},},<EOF>''',
                101
            )
        )

    def test_3891(self):
        self.assertTrue(
            TestLexer.test(
                '''Class r{Var $VB,_2,i:__6;Var L_:Array [Array [Array [Float ,0B1001011],0B1001011],02_31];Constructor (_:_9R;j,_,X9,M_4,_:Float ;kk9,m_929_lS_:Float ){}Constructor (___,_:Float ){} }Class _{}''',
                '''Class,r,{,Var,$VB,,,_2,,,i,:,__6,;,Var,L_,:,Array,[,Array,[,Array,[,Float,,,0B1001011,],,,0B1001011,],,,0231,],;,Constructor,(,_,:,_9R,;,j,,,_,,,X9,,,M_4,,,_,:,Float,;,kk9,,,m_929_lS_,:,Float,),{,},Constructor,(,___,,,_,:,Float,),{,},},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3892(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_a{Var _f,_u_1,$9,$5:Array [Array [Array [Array [Array [Float ,0B110],7_050],0X2],0XD],03];}Class Z_qjC{}Class b43:_0_Z{}Class X:Kjb1JA0O7{}Class e_6:l{}''',
                '''Class,_,:,_a,{,Var,_f,,,_u_1,,,$9,,,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B110,],,,7050,],,,0X2,],,,0XD,],,,03,],;,},Class,Z_qjC,{,},Class,b43,:,_0_Z,{,},Class,X,:,Kjb1JA0O7,{,},Class,e_6,:,l,{,},<EOF>''',
                101
            )
        )

    def test_3893(self):
        self.assertTrue(
            TestLexer.test(
                '''Class k{Constructor (_0s_5,_5_:Array [Array [String ,0B101110],31_8];fi9:Array [Array [Array [Array [Array [String ,82],032],0x54],032],0X3];D_,H:_;_:String ;Bt,_:Array [Array [String ,032],0b11100]){} }Class qU{}Class _2{}''',
                '''Class,k,{,Constructor,(,_0s_5,,,_5_,:,Array,[,Array,[,String,,,0B101110,],,,318,],;,fi9,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,82,],,,032,],,,0x54,],,,032,],,,0X3,],;,D_,,,H,:,_,;,_,:,String,;,Bt,,,_,:,Array,[,Array,[,String,,,032,],,,0b11100,],),{,},},Class,qU,{,},Class,_2,{,},<EOF>''',
                101
            )
        )

    def test_3894(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y:N{Var $6,$yb:_;}Class B_1{Var d,n,_:Boolean ;}Class Y9:__D{Val $c:String ;Destructor (){}Destructor (){} }''',
                '''Class,y,:,N,{,Var,$6,,,$yb,:,_,;,},Class,B_1,{,Var,d,,,n,,,_,:,Boolean,;,},Class,Y9,:,__D,{,Val,$c,:,String,;,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3895(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _8{}Class __j{Var $2_:Array [Array [Array [Int ,3],024],0b111101];Var $_s82:Z5;Constructor (){__1::$_e();Break ;Val F,_,s8,V,_:Float ;}Var $q_:String ;Constructor (X,T:U){} }Class _{}Class C_{}''',
                '''Class,_8,{,},Class,__j,{,Var,$2_,:,Array,[,Array,[,Array,[,Int,,,3,],,,024,],,,0b111101,],;,Var,$_s82,:,Z5,;,Constructor,(,),{,__1,::,$_e,(,),;,Break,;,Val,F,,,_,,,s8,,,V,,,_,:,Float,;,},Var,$q_,:,String,;,Constructor,(,X,,,T,:,U,),{,},},Class,_,{,},Class,C_,{,},<EOF>''',
                101
            )
        )

    def test_3896(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{Constructor (_:r;B:Array [Array [Array [Float ,011],05],011];yR,_,m_:Array [Int ,6];I:_;_Z6,_:_3;u7076f,w1l,__S:_){ {} }Destructor (){}M(){}Val I:q;Val $_QZ_:Array [Array [Array [String ,0B1],0X24],3];}Class _{}''',
                '''Class,_,:,_,{,Constructor,(,_,:,r,;,B,:,Array,[,Array,[,Array,[,Float,,,011,],,,05,],,,011,],;,yR,,,_,,,m_,:,Array,[,Int,,,6,],;,I,:,_,;,_Z6,,,_,:,_3,;,u7076f,,,w1l,,,__S,:,_,),{,{,},},Destructor,(,),{,},M,(,),{,},Val,I,:,q,;,Val,$_QZ_,:,Array,[,Array,[,Array,[,String,,,0B1,],,,0X24,],,,3,],;,},Class,_,{,},<EOF>''',
                101
            )
        )

    def test_3897(self):
        self.assertTrue(
            TestLexer.test(
                '''Class E:yYHMF__6{Destructor (){}Var G,$_2,$_:Int ;Var _,G,_,V:Array [String ,0x59];Var $hC854_x:Array [Float ,17];}''',
                '''Class,E,:,yYHMF__6,{,Destructor,(,),{,},Var,G,,,$_2,,,$_,:,Int,;,Var,_,,,G,,,_,,,V,:,Array,[,String,,,0x59,],;,Var,$hC854_x,:,Array,[,Float,,,17,],;,},<EOF>''',
                101
            )
        )

    def test_3898(self):
        self.assertTrue(
            TestLexer.test(
                '''Class M{H(Y,_,H0D,kZ__,f_:Int ;to_5:Float ;u,_0,oo,_8:Boolean ){Val I,HG:Array [Array [Array [Array [Boolean ,2_1],0X73],0b1],59];} }Class _a__{}''',
                '''Class,M,{,H,(,Y,,,_,,,H0D,,,kZ__,,,f_,:,Int,;,to_5,:,Float,;,u,,,_0,,,oo,,,_8,:,Boolean,),{,Val,I,,,HG,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,21,],,,0X73,],,,0b1,],,,59,],;,},},Class,_a__,{,},<EOF>''',
                101
            )
        )

    def test_3899(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a:G{Val __82,$_6__:___tv;Constructor (_,_,_,B:Array [String ,96];_,I31,_:Array [Array [Array [Array [Int ,0XA],0b1_1],0X45],0X45];bs_,cQ3_:Array [Array [Float ,05],3_4_32]){}Constructor (){} }''',
                '''Class,a,:,G,{,Val,__82,,,$_6__,:,___tv,;,Constructor,(,_,,,_,,,_,,,B,:,Array,[,String,,,96,],;,_,,,I31,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XA,],,,0b11,],,,0X45,],,,0X45,],;,bs_,,,cQ3_,:,Array,[,Array,[,Float,,,05,],,,3432,],),{,},Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3900(self):
        self.assertTrue(
            TestLexer.test(
                '''Class __7:_U{Destructor (){} }Class R{Val _,$_,a,$G8GtP_9U_,_:j5___h;}Class K0:a{Constructor (S,__1:_E8z){}_(_,H,l:m;_,_D__8_:String ){} }''',
                '''Class,__7,:,_U,{,Destructor,(,),{,},},Class,R,{,Val,_,,,$_,,,a,,,$G8GtP_9U_,,,_,:,j5___h,;,},Class,K0,:,a,{,Constructor,(,S,,,__1,:,_E8z,),{,},_,(,_,,,H,,,l,:,m,;,_,,,_D__8_,:,String,),{,},},<EOF>''',
                101
            )
        )

    def test_3901(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:k{Val $5:Float ;__(_,D,_T_:Float ;_,d_5F_x,_,L_N809__9,g,_:_G;_3,L_:String ;l__:_3;_:k5;D,_:E;o0,B2_1_,T:V){} }''',
                '''Class,_,:,k,{,Val,$5,:,Float,;,__,(,_,,,D,,,_T_,:,Float,;,_,,,d_5F_x,,,_,,,L_N809__9,,,g,,,_,:,_G,;,_3,,,L_,:,String,;,l__,:,_3,;,_,:,k5,;,D,,,_,:,E,;,o0,,,B2_1_,,,T,:,V,),{,},},<EOF>''',
                101
            )
        )

    def test_3902(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _1:o_4{Constructor (lb,_9,C,D9:Int ){}Val $_,_ff0,$g:Int ;Destructor (){} }Class cG0{_(){Break ;Break ;} }Class B_G4:_5{}''',
                '''Class,_1,:,o_4,{,Constructor,(,lb,,,_9,,,C,,,D9,:,Int,),{,},Val,$_,,,_ff0,,,$g,:,Int,;,Destructor,(,),{,},},Class,cG0,{,_,(,),{,Break,;,Break,;,},},Class,B_G4,:,_5,{,},<EOF>''',
                101
            )
        )

    def test_3903(self):
        self.assertTrue(
            TestLexer.test(
                '''Class bP:Z__{}Class g{Var _A:j_3;}Class W:i{Constructor (){Val _o,p9:Array [Array [Array [Array [Array [Boolean ,05_1],017],03],0b1010010],3_2_230];}Val $2:Array [Array [Array [Array [String ,0XD],017],02],0B11];}Class k{Constructor (){} }''',
                '''Class,bP,:,Z__,{,},Class,g,{,Var,_A,:,j_3,;,},Class,W,:,i,{,Constructor,(,),{,Val,_o,,,p9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,051,],,,017,],,,03,],,,0b1010010,],,,32230,],;,},Val,$2,:,Array,[,Array,[,Array,[,Array,[,String,,,0XD,],,,017,],,,02,],,,0B11,],;,},Class,k,{,Constructor,(,),{,},},<EOF>''',
                101
            )
        )

    def test_3904(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Q{Constructor (b,s3,j:String ;_1V_QS_:Array [Array [Boolean ,056],04]){}Val $C0:Array [Boolean ,0B11_1];}''',
                '''Class,Q,{,Constructor,(,b,,,s3,,,j,:,String,;,_1V_QS_,:,Array,[,Array,[,Boolean,,,056,],,,04,],),{,},Val,$C0,:,Array,[,Boolean,,,0B111,],;,},<EOF>''',
                101
            )
        )

    def test_3905(self):
        self.assertTrue(
            TestLexer.test(
                '''Class y{Var $K:Array [Float ,41];}Class _{Var $2___:_;p(__,H5vA,v,_:String ){Continue ;}Val __:Boolean ;$y(_:Array [Boolean ,0X56]){} }''',
                '''Class,y,{,Var,$K,:,Array,[,Float,,,41,],;,},Class,_,{,Var,$2___,:,_,;,p,(,__,,,H5vA,,,v,,,_,:,String,),{,Continue,;,},Val,__,:,Boolean,;,$y,(,_,:,Array,[,Boolean,,,0X56,],),{,},},<EOF>''',
                101
            )
        )

    def test_3906(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _{_(_y_,S:Array [Array [Array [Array [Int ,0x3B],33],0B1_0_1],6_64_82_4]){YgIt::$_e_();Return ;} }''',
                '''Class,_,:,_,{,},Class,_,{,_,(,_y_,,,S,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x3B,],,,33,],,,0B101,],,,664824,],),{,YgIt,::,$_e_,(,),;,Return,;,},},<EOF>''',
                101
            )
        )

    def test_3907(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _:_{}Class _:_85{$_v_(_,__:Array [Float ,0B1011]){Break ;} }Class x{}Class _:iO{Var $_l4J_:Array [Float ,0X4];}''',
                '''Class,_,:,_,{,},Class,_,:,_85,{,$_v_,(,_,,,__,:,Array,[,Float,,,0B1011,],),{,Break,;,},},Class,x,{,},Class,_,:,iO,{,Var,$_l4J_,:,Array,[,Float,,,0X4,],;,},<EOF>''',
                101
            )
        )

    def test_3908(self):
        self.assertTrue(
            TestLexer.test(
                '''Class _7A{}Class F_:_{}Class N2{}Class d{$5T8(){} }Class C:_{Val __5__U0:_;Constructor (_,_:Array [Array [Float ,0x6C],06_3];_,p:String ;V:Float ;_,_,_5W7Br:Array [Array [Array [Array [Boolean ,35],0X2B],35],35];_:Array [Array [Int ,292_2],0X5]){}Var $hW____u:Array [Float ,0X45];$0(zSn,_:Array [Int ,0B1_10]){}Constructor (){Continue ;} }''',
                '''Class,_7A,{,},Class,F_,:,_,{,},Class,N2,{,},Class,d,{,$5T8,(,),{,},},Class,C,:,_,{,Val,__5__U0,:,_,;,Constructor,(,_,,,_,:,Array,[,Array,[,Float,,,0x6C,],,,063,],;,_,,,p,:,String,;,V,:,Float,;,_,,,_,,,_5W7Br,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,35,],,,0X2B,],,,35,],,,35,],;,_,:,Array,[,Array,[,Int,,,2922,],,,0X5,],),{,},Var,$hW____u,:,Array,[,Float,,,0X45,],;,$0,(,zSn,,,_,:,Array,[,Int,,,0B110,],),{,},Constructor,(,),{,Continue,;,},},<EOF>''',
                101
            )
        )

    def test_3909(self):
        self.assertTrue(
            TestLexer.test(
                '''Class a{Destructor (){}Constructor (_8_0,K:v_;__Y82h,v:c;__83vs,Z5,__9:Int ;__,N9,__,A,S:__IB){} }Class Et0{}''',
                '''Class,a,{,Destructor,(,),{,},Constructor,(,_8_0,,,K,:,v_,;,__Y82h,,,v,:,c,;,__83vs,,,Z5,,,__9,:,Int,;,__,,,N9,,,__,,,A,,,S,:,__IB,),{,},},Class,Et0,{,},<EOF>''',
                101
            )
        )

    def test_3910(self):
        self.assertTrue(
            TestLexer.test(
                '''Class K:J{$4(IO1u_,_,_:String ;__,_:Boolean ;_,__cw:n){}Var $__,_M9:Array [Float ,05];}Class u8{$9(_j6:Array [Array [Array [Array [Array [String ,0x8],31],0xD],0b111001],31]){} }''',
                '''Class,K,:,J,{,$4,(,IO1u_,,,_,,,_,:,String,;,__,,,_,:,Boolean,;,_,,,__cw,:,n,),{,},Var,$__,,,_M9,:,Array,[,Float,,,05,],;,},Class,u8,{,$9,(,_j6,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x8,],,,31,],,,0xD,],,,0b111001,],,,31,],),{,},},<EOF>''',
                101
            )
        )

    def test_3911(self):
        self.assertTrue(
            TestLexer.test(
                '''Class R__:iw2_{$_2(I,__:K7;H:Array [Array [Int ,0b1010011],0b10]){} }Class JF:_5rw0J{Constructor (_,U4:Boolean ){} }Class _:z{}''',
                '''Class,R__,:,iw2_,{,$_2,(,I,,,__,:,K7,;,H,:,Array,[,Array,[,Int,,,0b1010011,],,,0b10,],),{,},},Class,JF,:,_5rw0J,{,Constructor,(,_,,,U4,:,Boolean,),{,},},Class,_,:,z,{,},<EOF>''',
                101
            )
        )

    def test_3912(self):
        self.assertTrue(
            TestLexer.test(
                '''Class Y:_{Constructor (){}$5(_,r2P:Boolean ;_EU,n:Int ){}Constructor (){}Constructor (_:String ;_9_:Int ;u,_,mC:Boolean ;UV2,__4:_4_m){Break ;_Fg5::$__();}Val $xP:Int ;}Class t:__4129_a{}Class D_{}''',
                '''Class,Y,:,_,{,Constructor,(,),{,},$5,(,_,,,r2P,:,Boolean,;,_EU,,,n,:,Int,),{,},Constructor,(,),{,},Constructor,(,_,:,String,;,_9_,:,Int,;,u,,,_,,,mC,:,Boolean,;,UV2,,,__4,:,_4_m,),{,Break,;,_Fg5,::,$__,(,),;,},Val,$xP,:,Int,;,},Class,t,:,__4129_a,{,},Class,D_,{,},<EOF>''',
                101
            )
        )

    def test_3913(self):
        self.assertTrue(
            TestLexer.test(
                '''Class J62:Q__{Constructor (y_2,___C_,X:Int ;j_:C___a8;N_,_1_:Array [Array [Int ,0110],0b1_1_010]){}Var $_,v:_U;}Class I{}''',
                '''Class,J62,:,Q__,{,Constructor,(,y_2,,,___C_,,,X,:,Int,;,j_,:,C___a8,;,N_,,,_1_,:,Array,[,Array,[,Int,,,0110,],,,0b11010,],),{,},Var,$_,,,v,:,_U,;,},Class,I,{,},<EOF>''',
                101
            )
        )

    def test_3914(self):
        self.assertTrue(
            TestLexer.test(
                '''Class m:J{Constructor (_,G_i_,s,_,I24M,_,_:Boolean ;_:String ){}$3V60F_(){}Var $1_t_8n:_3;}Class YE:E_{}Class t_m:_6{p(){Continue ;} }Class _9{}''',
                '''Class,m,:,J,{,Constructor,(,_,,,G_i_,,,s,,,_,,,I24M,,,_,,,_,:,Boolean,;,_,:,String,),{,},$3V60F_,(,),{,},Var,$1_t_8n,:,_3,;,},Class,YE,:,E_,{,},Class,t_m,:,_6,{,p,(,),{,Continue,;,},},Class,_9,{,},<EOF>''',
                101
            )
        )

    def test_3915(self):
        self.assertTrue(
            TestLexer.test(
                '''Class P_S{}Class Q:CM{Val _:String ;}Class s{}Class AF_{Constructor (_,r6Y,_1L3:P;_:z3_;_:Array [Float ,025];Dy,j,Tx,_,pG,_:String ;__:Array [Float ,9];l:_1){} }''',
                '''Class,P_S,{,},Class,Q,:,CM,{,Val,_,:,String,;,},Class,s,{,},Class,AF_,{,Constructor,(,_,,,r6Y,,,_1L3,:,P,;,_,:,z3_,;,_,:,Array,[,Float,,,025,],;,Dy,,,j,,,Tx,,,_,,,pG,,,_,:,String,;,__,:,Array,[,Float,,,9,],;,l,:,_1,),{,},},<EOF>''',
                101
            )
        )

    def test_3916(self):
        self.assertTrue(
            TestLexer.test(
                '''Class i__z:__0{}Class _{Constructor (_:String ;_,c__,_2:String ){} }Class _:_{}Class _:____5{Var Jz_f,s,$W7_q,wo2,$t,$z_:__;}Class ___:R{}''',
                '''Class,i__z,:,__0,{,},Class,_,{,Constructor,(,_,:,String,;,_,,,c__,,,_2,:,String,),{,},},Class,_,:,_,{,},Class,_,:,____5,{,Var,Jz_f,,,s,,,$W7_q,,,wo2,,,$t,,,$z_,:,__,;,},Class,___,:,R,{,},<EOF>''',
                101
            )
        )
